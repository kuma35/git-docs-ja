# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 04:37+0900\n"
"PO-Revision-Date: 2022-04-10 11:32+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-rm.txt:2
#, no-wrap
msgid "git-rm(1)"
msgstr "git-rm(1)"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:7
msgid "git-rm - Remove files from the working tree and from the index"
msgstr "git-rm - 作業ツリーとインデックスからファイルを削除します"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:14
#, no-wrap
msgid ""
"'git rm' [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch]\n"
"\t  [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"
msgstr ""
"'git rm' [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch]\n"
"\t  [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:29
msgid ""
"Remove files matching pathspec from the index, or from the working tree and "
"the index. `git rm` will not remove a file from just your working directory. "
"(There is no option to remove a file only from the working tree and yet keep "
"it in the index; use `/bin/rm` if you want to do that.) The files being "
"removed have to be identical to the tip of the branch, and no updates to "
"their contents can be staged in the index, though that default behavior can "
"be overridden with the `-f` option.  When `--cached` is given, the staged "
"content has to match either the tip of the branch or the file on disk, "
"allowing the file to be removed from just the index. When sparse-checkouts "
"are in use (see linkgit:git-sparse-checkout[1]), `git rm` will only remove "
"paths within the sparse-checkout patterns."
msgstr "pathspecに一致するファイルをインデックスから、または作業ツリーとインデックスから削除します。 `git rm` は、作業ディレクトリだけからファイルを削除することはありません。 (作業ツリーからのみファイルを削除し、それをインデックスに保持するオプションはありません。必要に応じて、 `/bin/rm` を使用してください。) 削除されるファイルはブランチの先端と同一である必要があり、その内容の更新をインデックスにステージングすることはできませんが、そのデフォルトの動作は `-f` オプションでオーバーライドできます。 `--cached` が指定されている場合、ステージングされたコンテンツはブランチの先端またはディスク上のファイルのいずれかに一致する必要があり、ファイルをインデックスからのみ削除できます。 スパースチェックアウトが使用されている場合(linkgit:git-sparse-checkout[1] を参照)、 `git rm` はスパースチェックアウトパターン内のパスのみを削除します。"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:32
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:33
#, no-wrap
msgid "<pathspec>..."
msgstr "<pathspec>..."

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:38
msgid ""
"Files to remove.  A leading directory name (e.g. `dir` to remove `dir/file1` "
"and `dir/file2`) can be given to remove all files in the directory, and "
"recursively all sub-directories, but this requires the `-r` option to be "
"explicitly given."
msgstr "削除するファイル。先頭のディレクトリ名(たとえば、削除する `dir/file1` や `dir/file2` の `dir`)を指定して、ディレクトリ内のすべてのファイル削除でき、そして、 `-r` オプションを明示的に指定する必要がありますが、再帰的にすべてのサブディレクトリを削除できます。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:40
msgid "The command removes only the paths that are known to Git."
msgstr "このコマンドは、Gitに認識されているパスのみを削除します。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:45
msgid ""
"File globbing matches across directory boundaries.  Thus, given two "
"directories `d` and `d2`, there is a difference between using `git rm 'd*'` "
"and `git rm 'd/*'`, as the former will also remove all of directory `d2`."
msgstr "ファイルグロブはディレクトリの境界を越えて一致します。 したがって、2つのディレクトリ `d` と `d2` が与えられた場合、 `git rm 'd*'` と `git rm 'd/*'` は異なります。前者はディレクトリ `d2` もすべて削除するからです。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:47
msgid "For more details, see the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr "詳細については、 linkgit:gitglossary[7] の「pathspec」エントリを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:48
#, no-wrap
msgid "`-f`"
msgstr "`-f`"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:49
#, no-wrap
msgid "`--force`"
msgstr "`--force`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:51
msgid "Override the up-to-date check."
msgstr "更新チェックをオーバーライドします。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:52
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:53
#, no-wrap
msgid "`--dry-run`"
msgstr "`--dry-run`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:57
msgid ""
"Don't actually remove any file(s).  Instead, just show if they exist in the "
"index and would otherwise be removed by the command."
msgstr "実際にファイルを削除することはありません。代わりに、インデックスに存在するか、でなければコマンドによって削除されるかを示すだけです。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:58
#, no-wrap
msgid "`-r`"
msgstr "`-r`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:61
msgid "Allow recursive removal when a leading directory name is given."
msgstr "先頭のディレクトリ名が指定されている場合は、再帰的な削除を許可します。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:62
#, no-wrap
msgid "\\--"
msgstr "`--`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:66
msgid ""
"This option can be used to separate command-line options from the list of "
"files, (useful when filenames might be mistaken for command-line options)."
msgstr "このオプションは、コマンドラインオプションをファイルのリストから分離するために使用できます(ファイル名がコマンドラインオプションと間違えられる可能性がある場合に便利です)。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:67
#, no-wrap
msgid "`--cached`"
msgstr "`--cached`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:71
msgid ""
"Use this option to unstage and remove paths only from the index.  Working "
"tree files, whether modified or not, will be left alone."
msgstr "このオプションを使用して、インデックス分のみパスをステージング解除して削除します。作業ツリーファイルは、変更されているかどうかに関係なく、そのまま残されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:72
#, no-wrap
msgid "`--ignore-unmatch`"
msgstr "`--ignore-unmatch`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:74
msgid "Exit with a zero status even if no files matched."
msgstr "一致するファイルがない場合にも、ステータスがゼロで終了(exit)します。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:75
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:76
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:79
msgid ""
"`git rm` normally outputs one line (in the form of an `rm` command)  for "
"each file removed. This option suppresses that output."
msgstr "`git rm` は通常、削除されたファイルごとに1行(`rm` コマンドの形式で)を出力します。 このオプションは、その出力を抑制します。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:80
#, no-wrap
msgid "`--pathspec-from-file=<file>`"
msgstr "`--pathspec-from-file=<file>`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:87
msgid ""
"Pathspec is passed in `<file>` instead of commandline args. If `<file>` is "
"exactly `-` then standard input is used. Pathspec elements are separated by "
"LF or CR/LF. Pathspec elements can be quoted as explained for the "
"configuration variable `core.quotePath` (see linkgit:git-config[1]). See "
"also `--pathspec-file-nul` and global `--literal-pathspecs`."
msgstr "パススペックは、コマンドライン引数の代わりに <file> で渡されます。 <file> が正確に `-` の場合、標準入力が使用されます。 パススペック要素は、LFまたはCR/LFで区切られます。 パススペック要素は、構成変数 `core.quotePath` で説明されているようにクォートできます(linkgit:git-config[1]を参照)。 `--pathspec-file-nul` および グローバルの `--literal-pathspecs` も参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:88
#, no-wrap
msgid "`--pathspec-file-nul`"
msgstr "`--pathspec-file-nul`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:92
msgid ""
"Only meaningful with `--pathspec-from-file`. Pathspec elements are separated "
"with NUL character and all other characters are taken literally (including "
"newlines and quotes)."
msgstr "`--pathspec-from-file` でのみ意味があります。 パススペック要素はNUL文字で区切られ、他のすべての文字は文字通りに解釈されます(改行と引用符を含む)。"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:95
#, no-wrap
msgid "REMOVING FILES THAT HAVE DISAPPEARED FROM THE FILESYSTEM"
msgstr "ファイルシステムから消えたファイルの削除"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:100
msgid ""
"There is no option for `git rm` to remove from the index only the paths that "
"have disappeared from the filesystem. However, depending on the use case, "
"there are several ways that can be done."
msgstr "`git rm` には、ファイルシステムから消えたパスのみをインデックスから削除するオプションはありません。 ただし、ユースケースに応じて、実行できる方法がいくつかあります。"

#. type: Title ~
#: ../Documentation-sedout/git-rm.txt:102
#, no-wrap
msgid "Using ``git commit -a''"
msgstr "`git commit -a` の使用"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:109
msgid ""
"If you intend that your next commit should record all modifications of "
"tracked files in the working tree and record all removals of files that have "
"been removed from the working tree with `rm` (as opposed to `git rm`), use "
"`git commit -a`, as it will automatically notice and record all removals.  "
"You can also have a similar effect without committing by using `git add -u`."
msgstr "次回のコミットで、作業ツリー内の追跡対象ファイルのすべての変更を記録し、作業ツリーから削除されたファイルのすべての削除を(`git rm` ではなく、) `rm` で記録する場合は、すべての削除を自動的に通知して記録するため、 `git commit -a` を使用します。 `git add -u` を使用してコミットせずに同様の効果を得ることもできます。"

#. type: Title ~
#: ../Documentation-sedout/git-rm.txt:111
#, no-wrap
msgid "Using ``git add -A''"
msgstr "`git add -A` の使用"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:115
msgid ""
"When accepting a new code drop for a vendor branch, you probably want to "
"record both the removal of paths and additions of new paths as well as "
"modifications of existing paths."
msgstr "ベンダーブランチの新しいコードドロップを受け入れる場合は、パスの削除と新しいパスの追加、および既存のパスの変更の両方を記録する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:118
msgid ""
"Typically you would first remove all tracked files from the working tree "
"using this command:"
msgstr "通常、最初に以下のコマンドを使用して、追跡中のすべてのファイルを作業ツリーから削除します:"

#. type: delimited block -
#: ../Documentation-sedout/git-rm.txt:121
#, no-wrap
msgid "git ls-files -z | xargs -0 rm -f\n"
msgstr "git ls-files -z | xargs -0 rm -f\n"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:125
msgid ""
"and then untar the new code in the working tree. Alternately you could "
"'rsync' the changes into the working tree."
msgstr "次に、作業ツリーで新しいコードを解凍(untar)します。または、変更を作業ツリーに「rsync」することもできます。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:128
msgid ""
"After that, the easiest way to record all removals, additions, and "
"modifications in the working tree is:"
msgstr "その後、作業ツリーのすべての削除、追加、および変更を記録する最も簡単な方法は以下のとおりです:"

#. type: delimited block -
#: ../Documentation-sedout/git-rm.txt:131
#, no-wrap
msgid "git add -A\n"
msgstr "git add -A\n"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:134
msgid "See linkgit:git-add[1]."
msgstr "linkgit:git-add[1] 参照。"

#. type: Title ~
#: ../Documentation-sedout/git-rm.txt:136
#, no-wrap
msgid "Other ways"
msgstr "Other ways"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:141
msgid ""
"If all you really want to do is to remove from the index the files that are "
"no longer present in the working tree (perhaps because your working tree is "
"dirty so that you cannot use `git commit -a`), use the following command:"
msgstr "あなたが本当にやりたいのは作業ツリーに存在しなくなったファイルをインデックスから削除することだけである場合(おそらく、作業ツリーが汚れているために `git commit -a` を使用できない)、以下のコマンドを使用します:"

#. type: delimited block -
#: ../Documentation-sedout/git-rm.txt:144
#, no-wrap
msgid "git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached\n"
msgstr "git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached\n"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:147
#, no-wrap
msgid "SUBMODULES"
msgstr "SUBMODULES"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:157
msgid ""
"Only submodules using a gitfile (which means they were cloned with a Git "
"version 1.7.8 or newer) will be removed from the work tree, as their "
"repository lives inside the .git directory of the superproject. If a "
"submodule (or one of those nested inside it)  still uses a .git directory, "
"`git rm` will move the submodules git directory into the superprojects git "
"directory to protect the submodule's history. If it exists the submodule."
"<name> section in the linkgit:gitmodules[5] file will also be removed and "
"that file will be staged (unless --cached or -n are used)."
msgstr "リポジトリはスーパープロジェクトの `.git` ディレクトリ内にあるため、gitfileを使用するサブモジュール(つまり、Gitバージョン1.7.8以降で複製されたもの)のみが作業ツリーから削除されます。 サブモジュール(またはその中にネストされているものの1つ)がまだ `.git` ディレクトリを使用している場合、 `git rm` はサブモジュールの履歴を保護するためにサブモジュールのgitディレクトリをスーパープロジェクトのgitディレクトリに移動します。 存在する場合は、 linkgit:gitmodules[5] ファイルの submodule.<name> セクションも削除され、そのファイルがステージングされます(`--cached` または `-n` が使用されている場合を除く)。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:163
msgid ""
"A submodule is considered up to date when the HEAD is the same as recorded "
"in the index, no tracked files are modified and no untracked files that "
"aren't ignored are present in the submodules work tree.  Ignored files are "
"deemed expendable and won't stop a submodule's work tree from being removed."
msgstr "HEADがインデックスに記録されているものと同じであり、追跡中のファイルが変更されておらず、無視されない追跡中でないファイルがサブモジュールの作業ツリーに存在しない場合、サブモジュールは最新であると見なされます。 無視されたファイルは消耗品と見なされ、サブモジュールの作業ツリーの削除を停止しません。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:167
msgid ""
"If you only want to remove the local checkout of a submodule from your work "
"tree without committing the removal, use linkgit:git-submodule[1] `deinit` "
"instead. Also see linkgit:gitsubmodules[7] for details on submodule removal."
msgstr "あなたが削除をコミットせずにサブモジュールのローカルチェックアウトのみを作業ツリーから削除する場合は、代わりに linkgit:git-submodule[1] の `deinit` を使用してください。 サブモジュールの削除の詳細については、 linkgit:gitsubmodules[7] も参照してください。"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:169
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:170
#, no-wrap
msgid "`git rm Documentation/\\*.txt`"
msgstr "`git rm Documentation/\\*.txt`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:173
msgid ""
"Removes all `*.txt` files from the index that are under the `Documentation` "
"directory and any of its subdirectories."
msgstr "`Documentation` ディレクトリとそのサブディレクトリの下にあるすべての `*.txt` ファイルをインデックスから削除します。"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:177
msgid ""
"Note that the asterisk `*` is quoted from the shell in this example; this "
"lets Git, and not the shell, expand the pathnames of files and "
"subdirectories under the `Documentation/` directory."
msgstr "注意: この例では、アスタリスク(`*`)がシェルからクォートされていることに注意してください。これにより、シェルではなくGitが、`Documentation/` ディレクトリの下にあるファイルとサブディレクトリのパス名を展開できるようになります。"

#. type: Labeled list
#: ../Documentation-sedout/git-rm.txt:178
#, no-wrap
msgid "`git rm -f git-*.sh`"
msgstr "`git rm -f git-*.sh`"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:182
msgid ""
"Because this example lets the shell expand the asterisk (i.e. you are "
"listing the files explicitly), it does not remove `subdir/git-foo.sh`."
msgstr "この例では、シェルでアスタリスクを展開できるため(つまり、あなたはファイルを明示的にリストしているため)、 `subdir/git-foo.sh` は削除されません。"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:184
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:191
msgid ""
"Each time a superproject update removes a populated submodule (e.g. when "
"switching between commits before and after the removal) a stale submodule "
"checkout will remain in the old location. Removing the old directory is only "
"safe when it uses a gitfile, as otherwise the history of the submodule will "
"be deleted too. This step will be obsolete when recursive submodule update "
"has been implemented."
msgstr "スーパープロジェクトの更新により、入力されたサブモジュールが削除されるたびに(たとえば、削除の前後でコミットを切り替える場合)、古いサブモジュールのチェックアウトは古い場所に残ります。古いディレクトリの削除は、gitfileを使用している場合にのみ安全です。そうしないと、サブモジュールの履歴も削除されます。 この手順は、サブモジュールの再帰的な更新が実装されている場合は廃止されます。"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:193
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:195
msgid "linkgit:git-add[1]"
msgstr "linkgit:git-add[1]"

#. type: Title -
#: ../Documentation-sedout/git-rm.txt:197
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-rm.txt:198
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
