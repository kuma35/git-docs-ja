# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/gitmodules.txt:2
#, no-wrap
msgid "gitmodules(5)"
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:7
msgid "gitmodules - Defining submodule properties"
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:11
msgid "$GIT_WORK_TREE/.gitmodules"
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:19
msgid ""
"The `.gitmodules` file, located in the top-level directory of a Git working "
"tree, is a text file with a syntax matching the requirements of "
"linkgit:git-config[1]."
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:25
msgid ""
"The file contains one subsection per submodule, and the subsection value is "
"the name of the submodule. The name is set to the path where the submodule "
"has been added unless it was customized with the `--name` option of 'git "
"submodule add'. Each submodule section also contains the following required "
"keys:"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:26
#, no-wrap
msgid "submodule.<name>.path"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:31
msgid ""
"Defines the path, relative to the top-level directory of the Git working "
"tree, where the submodule is expected to be checked out.  The path name must "
"not end with a `/`. All submodule paths must be unique within the "
"`.gitmodules` file."
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:32
#, no-wrap
msgid "submodule.<name>.url"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:37
msgid ""
"Defines a URL from which the submodule repository can be cloned.  This may "
"be either an absolute URL ready to be passed to linkgit:git-clone[1] or (if "
"it begins with `./` or `../`) a location relative to the superproject's "
"origin repository."
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:39
msgid "In addition, there are a number of optional keys:"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:40
#, no-wrap
msgid "submodule.<name>.update"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:49
msgid ""
"Defines the default update procedure for the named submodule, i.e. how the "
"submodule is updated by the `git submodule update` command in the "
"superproject. This is only used by `git submodule init` to initialize the "
"configuration variable of the same name. Allowed values here are 'checkout', "
"'rebase', 'merge' or 'none'. See description of 'update' command in "
"linkgit:git-submodule[1] for their meaning. For security reasons, the "
"'!command' form is not accepted here."
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:50
#, no-wrap
msgid "submodule.<name>.branch"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:57
msgid ""
"A remote branch name for tracking updates in the upstream submodule.  If the "
"option is not specified, it defaults to the remote `HEAD`.  A special value "
"of `.` is used to indicate that the name of the branch in the submodule "
"should be the same name as the current branch in the current repository.  "
"See the `--remote` documentation in linkgit:git-submodule[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:58
#, no-wrap
msgid "submodule.<name>.fetchRecurseSubmodules"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:65
msgid ""
"This option can be used to control recursive fetching of this submodule. If "
"this option is also present in the submodule's entry in `.git/config` of the "
"superproject, the setting there will override the one found in "
"`.gitmodules`.  Both settings can be overridden on the command line by using "
"the `--[no-]recurse-submodules` option to `git fetch` and `git pull`."
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:66
#, no-wrap
msgid "submodule.<name>.ignore"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:69
msgid ""
"Defines under what circumstances `git status` and the diff family show a "
"submodule as modified. The following values are supported:"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:71
#, no-wrap
msgid "all"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:72
msgid "The submodule will never be considered modified (but will"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:74
#, no-wrap
msgid ""
"nonetheless show up in the output of status and commit when it has\n"
"been staged).\n"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:75
#, no-wrap
msgid "dirty"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:76
msgid "All changes to the submodule's work tree will be ignored, only"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:78
#, no-wrap
msgid ""
"committed differences between the `HEAD` of the submodule and its\n"
"recorded state in the superproject are taken into account.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:79
#, no-wrap
msgid "untracked"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:80
msgid "Only untracked files in submodules will be ignored."
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:82
#, no-wrap
msgid ""
"Committed differences and modifications to tracked files will show\n"
"up.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:83
#, no-wrap
msgid "none"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:84
msgid "No modifications to submodules are ignored, all of committed"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:86
#, no-wrap
msgid ""
"differences, and modifications to tracked and untracked files are\n"
"shown. This is the default option.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:90
msgid ""
"If this option is also present in the submodule's entry in `.git/config` of "
"the superproject, the setting there will override the one found in "
"`.gitmodules`."
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:94
msgid ""
"Both settings can be overridden on the command line by using the "
"`--ignore-submodules` option. The `git submodule` commands are not affected "
"by this setting."
msgstr ""

#. type: Labeled list
#: ../Documentation/gitmodules.txt:96
#, no-wrap
msgid "submodule.<name>.shallow"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:100
msgid ""
"When set to true, a clone of this submodule will be performed as a shallow "
"clone (with a history depth of 1) unless the user explicitly asks for a "
"non-shallow clone."
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:102
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:109
msgid ""
"Git does not allow the `.gitmodules` file within a working tree to be a "
"symbolic link, and will refuse to check out such a tree entry. This keeps "
"behavior consistent when the file is accessed from the index or a tree "
"versus from the filesystem, and helps Git reliably enforce security checks "
"of the file contents."
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:111
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:114
msgid "Consider the following `.gitmodules` file:"
msgstr ""

#. type: delimited block -
#: ../Documentation/gitmodules.txt:119
#, no-wrap
msgid ""
"[submodule \"libfoo\"]\n"
"\tpath = include/foo\n"
"\turl = git://foo.com/git/lib.git\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/gitmodules.txt:123
#, no-wrap
msgid ""
"[submodule \"libbar\"]\n"
"\tpath = include/bar\n"
"\turl = git://bar.com/git/lib.git\n"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:128
msgid ""
"This defines two submodules, `libfoo` and `libbar`. These are expected to be "
"checked out in the paths `include/foo` and `include/bar`, and for both "
"submodules a URL is specified which can be used for cloning the submodules."
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:130
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:132
msgid "linkgit:git-submodule[1], linkgit:gitsubmodules[7], linkgit:git-config[1]"
msgstr ""

#. type: Title -
#: ../Documentation/gitmodules.txt:134
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/gitmodules.txt:135
msgid "Part of the linkgit:git[1] suite"
msgstr ""
