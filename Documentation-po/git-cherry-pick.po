# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-cherry-pick.txt:2
#, no-wrap
msgid "git-cherry-pick(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:7
msgid "git-cherry-pick - Apply the changes introduced by some existing commits"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:14
#, no-wrap
msgid ""
"'git cherry-pick' [--edit] [-n] [-m parent-number] [-s] [-x] [--ff]\n"
"\t\t  [-S[<keyid>]] <commit>...\n"
"'git cherry-pick' (--continue | --skip | --abort | --quit)\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:21
msgid ""
"Given one or more existing commits, apply the change each one introduces, "
"recording a new commit for each.  This requires your working tree to be "
"clean (no modifications from the HEAD commit)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:24
msgid "When it is not obvious how to apply a change, the following happens:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:27
msgid ""
"The current branch and `HEAD` pointer stay at the last commit successfully "
"made."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:29
msgid ""
"The `CHERRY_PICK_HEAD` ref is set to point at the commit that introduced the "
"change that is difficult to apply."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:31
msgid ""
"Paths in which the change applied cleanly are updated both in the index file "
"and in your working tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:36
msgid ""
"For conflicting paths, the index file records up to three versions, as "
"described in the \"TRUE MERGE\" section of linkgit:git-merge[1].  The "
"working tree files will include a description of the conflict bracketed by "
"the usual conflict markers `<<<<<<<` and `>>>>>>>`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:37
msgid "No other modifications are made."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:40
msgid "See linkgit:git-merge[1] for some hints on resolving such conflicts."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:42
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:43
#, no-wrap
msgid "<commit>..."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:52
msgid ""
"Commits to cherry-pick.  For a more complete list of ways to spell commits, "
"see linkgit:gitrevisions[7].  Sets of commits can be passed but no traversal "
"is done by default, as if the `--no-walk` option was specified, see linkgit:"
"git-rev-list[1]. Note that specifying a range will feed all <commit>... "
"arguments to a single revision walk (see a later example that uses 'maint "
"master..next')."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:53
#, no-wrap
msgid "`-e`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:54
#, no-wrap
msgid "`--edit`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:57
msgid ""
"With this option, 'git cherry-pick' will let you edit the commit message "
"prior to committing."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:58
#, no-wrap
msgid "`--cleanup=<mode>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:64
msgid ""
"This option determines how the commit message will be cleaned up before "
"being passed on to the commit machinery. See linkgit:git-commit[1] for more "
"details. In particular, if the '<mode>' is given a value of `scissors`, "
"scissors will be appended to `MERGE_MSG` before being passed on in the case "
"of a conflict."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:65
#, no-wrap
msgid "`-x`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:78
msgid ""
"When recording the commit, append a line that says \"(cherry picked from "
"commit ...)\" to the original commit message in order to indicate which "
"commit this change was cherry-picked from.  This is done only for cherry "
"picks without conflicts.  Do not use this option if you are cherry-picking "
"from your private branch because the information is useless to the "
"recipient.  If on the other hand you are cherry-picking between two publicly "
"visible branches (e.g. backporting a fix to a maintenance branch for an "
"older release from a development branch), adding this information can be "
"useful."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:79
#, no-wrap
msgid "`-r`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:83
msgid ""
"It used to be that the command defaulted to do `-x` described above, and `-"
"r` was to disable it.  Now the default is not to do `-x` so this option is a "
"no-op."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:84
#, no-wrap
msgid "`-m parent-number`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:85
#, no-wrap
msgid "`--mainline parent-number`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:91
msgid ""
"Usually you cannot cherry-pick a merge because you do not know which side of "
"the merge should be considered the mainline.  This option specifies the "
"parent number (starting from 1) of the mainline and allows cherry-pick to "
"replay the change relative to the specified parent."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:92
#, no-wrap
msgid "`-n`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:93
#, no-wrap
msgid "`--no-commit`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:101
msgid ""
"Usually the command automatically creates a sequence of commits.  This flag "
"applies the changes necessary to cherry-pick each named commit to your "
"working tree and the index, without making any commit.  In addition, when "
"this option is used, your index does not have to match the HEAD commit.  The "
"cherry-pick is done against the beginning state of your index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:104
msgid ""
"This is useful when cherry-picking more than one commits' effect to your "
"index in a row."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:105
#, no-wrap
msgid "`-s`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:106
#, no-wrap
msgid "`--signoff`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:109
msgid ""
"Add a `Signed-off-by` trailer at the end of the commit message.  See the "
"signoff option in linkgit:git-commit[1] for more information."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:110
#, no-wrap
msgid "`-S[<keyid>]`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:111
#, no-wrap
msgid "`--gpg-sign[=<keyid>]`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:112
#, no-wrap
msgid "`--no-gpg-sign`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:118
msgid ""
"GPG-sign commits. The `keyid` argument is optional and defaults to the "
"committer identity; if specified, it must be stuck to the option without a "
"space. `--no-gpg-sign` is useful to countermand both `commit.gpgSign` "
"configuration variable, and earlier `--gpg-sign`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:119
#, no-wrap
msgid "`--ff`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:123
msgid ""
"If the current HEAD is the same as the parent of the cherry-pick'ed commit, "
"then a fast forward to this commit will be performed."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:124
#, no-wrap
msgid "`--allow-empty`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:136
msgid ""
"By default, cherry-picking an empty commit will fail, indicating that an "
"explicit invocation of `git commit --allow-empty` is required. This option "
"overrides that behavior, allowing empty commits to be preserved "
"automatically in a cherry-pick. Note that when \"--ff\" is in effect, empty "
"commits that meet the \"fast-forward\" requirement will be kept even without "
"this option.  Note also, that use of this option only keeps commits that "
"were initially empty (i.e. the commit recorded the same tree as its "
"parent).  Commits which are made empty due to a previous commit are "
"dropped.  To force the inclusion of those commits use `--keep-redundant-"
"commits`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:137
#, no-wrap
msgid "`--allow-empty-message`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:141
msgid ""
"By default, cherry-picking a commit with an empty message will fail.  This "
"option overrides that behavior, allowing commits with empty messages to be "
"cherry picked."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:142
#, no-wrap
msgid "`--keep-redundant-commits`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:148
msgid ""
"If a commit being cherry picked duplicates a commit already in the current "
"history, it will become empty.  By default these redundant commits cause "
"`cherry-pick` to stop so the user can examine the commit. This option "
"overrides that behavior and creates an empty commit object.  Implies `--"
"allow-empty`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:149
#, no-wrap
msgid "`--strategy=<strategy>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:153
msgid ""
"Use the given merge strategy.  Should only be used once.  See the MERGE "
"STRATEGIES section in linkgit:git-merge[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:154
#, no-wrap
msgid "`-X<option>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:155
#, no-wrap
msgid "`--strategy-option=<option>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:158
msgid ""
"Pass the merge strategy-specific option through to the merge strategy.  See "
"linkgit:git-merge[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:159
#, no-wrap
msgid "`--rerere-autoupdate`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:160
#, no-wrap
msgid "`--no-rerere-autoupdate`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:163
msgid ""
"Allow the rerere mechanism to update the index with the result of auto-"
"conflict resolution if possible."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:165
#, no-wrap
msgid "SEQUENCER SUBCOMMANDS"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:169
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:170
#, no-wrap
msgid "`git cherry-pick master`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:174
msgid ""
"Apply the change introduced by the commit at the tip of the master branch "
"and create a new commit with this change."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:175
#, no-wrap
msgid "`git cherry-pick ..master`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:176
#, no-wrap
msgid "`git cherry-pick ^HEAD master`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:180
msgid ""
"Apply the changes introduced by all commits that are ancestors of master but "
"not of HEAD to produce new commits."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:181
#, no-wrap
msgid "`git cherry-pick maint next ^master`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:182
#, no-wrap
msgid "`git cherry-pick maint master..next`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:189
msgid ""
"Apply the changes introduced by all commits that are ancestors of maint or "
"next, but not master or any of its ancestors.  Note that the latter does not "
"mean `maint` and everything between `master` and `next`; specifically, "
"`maint` will not be used if it is included in `master`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:190
#, no-wrap
msgid "`git cherry-pick master~4 master~2`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:195
msgid ""
"Apply the changes introduced by the fifth and third last commits pointed to "
"by master and create 2 new commits with these changes."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:196
#, no-wrap
msgid "`git cherry-pick -n master~1 next`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:202
msgid ""
"Apply to the working tree and the index the changes introduced by the second "
"last commit pointed to by master and by the last commit pointed to by next, "
"but do not create any commit with these changes."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:203
#, no-wrap
msgid "`git cherry-pick --ff ..next`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:210
msgid ""
"If history is linear and HEAD is an ancestor of next, update the working "
"tree and advance the HEAD pointer to match next.  Otherwise, apply the "
"changes introduced by those commits that are in next but not HEAD to the "
"current branch, creating a new commit for each new change."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cherry-pick.txt:211
#, no-wrap
msgid "`git rev-list --reverse master -- README | git cherry-pick -n --stdin`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:217
msgid ""
"Apply the changes introduced by all commits on the master branch that "
"touched README to the working tree and index, so the result can be inspected "
"and made into a single new commit if suitable."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:221
msgid ""
"The following sequence attempts to backport a patch, bails out because the "
"code the patch applies to has changed too much, and then tries again, this "
"time exercising more care about matching up context lines."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-cherry-pick.txt:227
#, no-wrap
msgid ""
"$ git cherry-pick topic^             <1>\n"
"$ git diff                           <2>\n"
"$ git reset --merge ORIG_HEAD        <3>\n"
"$ git cherry-pick -Xpatience topic^  <4>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:232
msgid ""
"apply the change that would be shown by `git show topic^`.  In this example, "
"the patch does not apply cleanly, so information about the conflict is "
"written to the index and working tree and no new commit results."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:233
msgid "summarize changes to be reconciled"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:236
msgid ""
"cancel the cherry-pick.  In other words, return to the pre-cherry-pick "
"state, preserving any local modifications you had in the working tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:239
msgid ""
"try to apply the change introduced by `topic^` again, spending extra time to "
"avoid mistakes based on incorrectly matching context lines."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:241
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:243
msgid "linkgit:git-revert[1]"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cherry-pick.txt:245
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cherry-pick.txt:246
msgid "Part of the linkgit:git[1] suite"
msgstr ""
