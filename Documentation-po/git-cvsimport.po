# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-cvsimport.txt:2
#, no-wrap
msgid "git-cvsimport(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:7
msgid ""
"git-cvsimport - Salvage your data out of another SCM people love to hate"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:17
#, no-wrap
msgid ""
"'git cvsimport' [-o <branch-for-HEAD>] [-h] [-v] [-d <CVSROOT>]\n"
"\t      [-A <author-conv-file>] [-p <options-for-cvsps>] [-P <file>]\n"
"\t      [-C <git_repository>] [-z <fuzz>] [-i] [-k] [-u] [-s <subst>]\n"
"\t      [-a] [-m] [-M <regex>] [-S <regex>] [-L <commitlimit>]\n"
"\t      [-r <remote>] [-R] [<CVS_module>]\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:20
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:26
#, no-wrap
msgid ""
"*WARNING:* `git cvsimport` uses cvsps version 2, which is considered\n"
"deprecated; it does not work with cvsps version 3 and later.  If you are\n"
"performing a one-shot import of a CVS repository consider using\n"
"http://cvs2svn.tigris.org/cvs2git.html[cvs2git] or\n"
"http://www.catb.org/esr/cvs-fast-export/[cvs-fast-export].\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:29
msgid ""
"Imports a CVS repository into Git. It will either create a new repository, "
"or incrementally import into an existing one."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:32
msgid ""
"Splitting the CVS log into patch sets is done by 'cvsps'.  At least version "
"2.1 is required."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:35
#, no-wrap
msgid ""
"*WARNING:* for certain situations the import leads to incorrect results.\n"
"Please see the section <<issues,ISSUES>> for further reference.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:42
msgid ""
"You should *never* do any work of your own on the branches that are created "
"by 'git cvsimport'.  By default initial import will create and populate a "
"\"master\" branch from the CVS repository's main branch which you're free to "
"work with; after that, you need to 'git merge' incremental imports, or any "
"CVS branches, yourself.  It is advisable to specify a named remote via -r to "
"separate and protect the incoming branches."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:48
msgid ""
"If you intend to set up a shared public repository that all developers can "
"read/write, or if you want to use linkgit:git-cvsserver[1], then you "
"probably want to make a bare clone of the imported repository, and use the "
"clone as the shared repository.  See linkgit:gitcvs-migration[7]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:51
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:52
#, no-wrap
msgid "`-v`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:54
msgid "Verbosity: let 'cvsimport' report what it is doing."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:55
#, no-wrap
msgid "`-d <CVSROOT>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:61
msgid ""
"The root of the CVS archive. May be local (a simple path) or remote; "
"currently, only the :local:, :ext: and :pserver: access methods are "
"supported. If not given, 'git cvsimport' will try to read it from `CVS/"
"Root`. If no such file exists, it checks for the `CVSROOT` environment "
"variable."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:62
#, no-wrap
msgid "<CVS_module>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:66
msgid ""
"The CVS module you want to import. Relative to <CVSROOT>.  If not given, "
"'git cvsimport' tries to read it from `CVS/Repository`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:67
#, no-wrap
msgid "`-C <target-dir>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:69
msgid "The Git repository to import to.  If the directory doesn't"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:70
#, no-wrap
msgid "exist, it will be created.  Default is the current directory.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:71
#, no-wrap
msgid "`-r <remote>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:75
msgid ""
"The Git remote to import this CVS repository into.  Moves all CVS branches "
"into remotes/<remote>/<branch> akin to the way 'git clone' uses 'origin' by "
"default."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:76
#, no-wrap
msgid "`-o <branch-for-HEAD>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:84
msgid ""
"When no remote is specified (via -r) the `HEAD` branch from CVS is imported "
"to the 'origin' branch within the Git repository, as `HEAD` already has a "
"special meaning for Git.  When a remote is specified the `HEAD` branch is "
"named remotes/<remote>/master mirroring 'git clone' behaviour.  Use this "
"option if you want to import into a different branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:87
msgid ""
"Use '-o master' for continuing an import that was initially done by the old "
"cvs2git tool."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:88
#, no-wrap
msgid "`-i`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:92
msgid ""
"Import-only: don't perform a checkout after importing.  This option ensures "
"the working directory and index remain untouched and will not create them if "
"they do not exist."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:93
#, no-wrap
msgid "`-k`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:97
msgid ""
"Kill keywords: will extract files with '-kk' from the CVS archive to avoid "
"noisy changesets. Highly recommended, but off by default to preserve "
"compatibility with early imported trees."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:98
#, no-wrap
msgid "`-u`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:100
msgid "Convert underscores in tag and branch names to dots."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:101
#, no-wrap
msgid "`-s <subst>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:103
msgid "Substitute the character \"/\" in branch names with <subst>"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:104
#, no-wrap
msgid "`-p <options-for-cvsps>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:107
msgid ""
"Additional options for cvsps.  The options `-u` and '-A' are implicit and "
"should not be used here."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:109
msgid "If you need to pass multiple options, separate them with a comma."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:110
#, no-wrap
msgid "`-z <fuzz>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:113
msgid ""
"Pass the timestamp fuzz factor to cvsps, in seconds. If unset, cvsps "
"defaults to 300s."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:114
#, no-wrap
msgid "`-P <cvsps-output-file>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:117
msgid ""
"Instead of calling cvsps, read the provided cvsps output file. Useful for "
"debugging or when cvsps is being handled outside cvsimport."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:118
#, no-wrap
msgid "`-m`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:122
msgid ""
"Attempt to detect merges based on the commit message. This option will "
"enable default regexes that try to capture the source branch name from the "
"commit message."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:123
#, no-wrap
msgid "`-M <regex>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:127
msgid ""
"Attempt to detect merges based on the commit message with a custom regex. It "
"can be used with `-m` to enable the default regexes as well. You must escape "
"forward slashes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:129
msgid "The regex must capture the source branch name in $1."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:131
msgid ""
"This option can be used several times to provide several detection regexes."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:132
#, no-wrap
msgid "`-S <regex>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:134
msgid "Skip paths matching the regex."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:135
#, no-wrap
msgid "`-a`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:138
msgid ""
"Import all commits, including recent ones. cvsimport by default skips "
"commits that have a timestamp less than 10 minutes ago."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:139
#, no-wrap
msgid "`-L <limit>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:142
msgid ""
"Limit the number of commits imported. Workaround for cases where cvsimport "
"leaks memory."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:143
#, no-wrap
msgid "`-A <author-conv-file>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:148
msgid ""
"CVS by default uses the Unix username when writing its commit logs. Using "
"this option and an author-conv-file maps the name recorded in CVS to author "
"name, e-mail and optional time zone:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-cvsimport.txt:152
#, no-wrap
msgid ""
"\texon=Andreas Ericsson <ae@op5.se>\n"
"\tspawn=Simon Pawn <spawn@frog-pond.org> America/Chicago\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:159
msgid ""
"'git cvsimport' will make it appear as those authors had their "
"GIT_AUTHOR_NAME and GIT_AUTHOR_EMAIL set properly all along.  If a time zone "
"is specified, GIT_AUTHOR_DATE will have the corresponding offset applied."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:163
msgid ""
"For convenience, this data is saved to `$GIT_DIR/cvs-authors` each time the "
"'-A' option is provided and read from that same file each time 'git "
"cvsimport' is run."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:167
msgid ""
"It is not recommended to use this feature if you intend to export changes "
"back to CVS again later with 'git cvsexportcommit'."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:168
#, no-wrap
msgid "`-R`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:173
msgid ""
"Generate a `$GIT_DIR/cvs-revisions` file containing a mapping from CVS "
"revision numbers to newly-created Git commit IDs.  The generated file will "
"contain one line for each (filename, revision) pair imported; each line will "
"look like"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-cvsimport.txt:176
#, no-wrap
msgid "src/widget.c 1.1 1d862f173cdc7325b6fa6d2ae1cfd61fd1b512b7\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:180
msgid ""
"The revision data is appended to the file if it already exists, for use when "
"doing incremental imports."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:183
msgid ""
"This option may be useful if you have CVS revision numbers stored in commit "
"messages, bug-tracking systems, email archives, and the like."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-cvsimport.txt:184
#, no-wrap
msgid "`-h`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:186
msgid "Print a short usage message and exit."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:188
#, no-wrap
msgid "OUTPUT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:190
msgid "If `-v` is specified, the script reports what it is doing."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:193
msgid ""
"Otherwise, success is indicated the Unix way, i.e. by simply exiting with a "
"zero exit status."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:196
#, no-wrap
msgid "ISSUES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:198
msgid "Problems related to timestamps:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:202
msgid ""
"If timestamps of commits in the CVS repository are not stable enough to be "
"used for ordering commits changes may show up in the wrong order."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:204
msgid ""
"If any files were ever \"cvs import\"ed more than once (e.g., import of more "
"than one vendor release) the HEAD contains the wrong content."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:207
msgid ""
"If the timestamp order of different files cross the revision order within "
"the commit matching time window the order of commits may be wrong."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:209
msgid "Problems related to branches:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:211
msgid "Branches on which no commits have been made are not imported."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:213
msgid ""
"All files from the branching point are added to a branch even if never added "
"in CVS."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:216
msgid ""
"This applies to files added to the source branch *after* a daughter branch "
"was created: if previously no commit was made on the daughter branch they "
"will erroneously be added to the daughter branch in git."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:218
msgid "Problems related to tags:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:220
msgid "Multiple tags on the same revision are not imported."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:223
msgid ""
"If you suspect that any of these issues may apply to the repository you want "
"to import, consider using cvs2git:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:225
msgid "cvs2git (part of cvs2svn), `http://subversion.apache.org/`"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-cvsimport.txt:227
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-cvsimport.txt:228
msgid "Part of the linkgit:git[1] suite"
msgstr ""
