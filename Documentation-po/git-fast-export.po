# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2023-10-12 08:48+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-fast-export.txt:2
#, no-wrap
msgid "git-fast-export(1)"
msgstr "git-fast-export(1)"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:7
msgid "git-fast-export - Git data exporter"
msgstr "git-fast-export - Gitデータエクスポーター"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:13
#, no-wrap
msgid "'git fast-export' [<options>] | 'git fast-import'\n"
msgstr "'git fast-export' [<options>] | 'git fast-import'\n"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:18
msgid ""
"This program dumps the given revisions in a form suitable to be piped into "
"'git fast-import'."
msgstr ""
"このプログラムは、指定されたリビジョンを `git fast-import` にパイプするのに適"
"した形式でダンプします。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:23
msgid ""
"You can use it as a human-readable bundle replacement (see linkgit:git-"
"bundle[1]), or as a format that can be edited before being fed to 'git fast-"
"import' in order to do history rewrites (an ability relied on by tools like "
"'git filter-repo')."
msgstr ""
"人間が読める形式のバンドル置換として(linkgit：git-bundle[1] 参照)、または履歴"
"の書き換えを行うために `git fast-import` にフィードする前に編集できる形式とし"
"て使用できます(`git filter-repo` などのツールの能力に依存します)。"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:25
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:26
#, no-wrap
msgid "`--progress=<n>`"
msgstr "`--progress=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:29
msgid ""
"Insert 'progress' statements every <n> objects, to be shown by 'git fast-"
"import' during import."
msgstr ""
"インポート中に `git fast-import` で表示されるように、<n>オブジェクトごとに "
"`progress` ステートメントを挿入します。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:30
#, no-wrap
msgid "`--signed-tags=(verbatim|warn|warn-strip|strip|abort)`"
msgstr "`--signed-tags=(verbatim|warn|warn-strip|strip|abort)`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:34
msgid ""
"Specify how to handle signed tags.  Since any transformation after the "
"export can change the tag names (which can also happen when excluding "
"revisions) the signatures will not match."
msgstr ""
"署名付きタグの処理方法を指定します。 エクスポート後の変換によってタグ名が変更"
"される可能性があるため(リビジョンを除外する場合にも発生する可能性がありま"
"す)、署名は一致しません。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:41
msgid ""
"When asking to 'abort' (which is the default), this program will die when "
"encountering a signed tag.  With 'strip', the tags will silently be made "
"unsigned, with 'warn-strip' they will be made unsigned but a warning will be "
"displayed, with 'verbatim', they will be silently exported and with 'warn', "
"they will be exported, but you will see a warning."
msgstr ""
"`abort` (デフォルト)を要求すると、このプログラムは署名されたタグに遭遇すると"
"停止します。  `strip` を使用すると、タグは黙って署名なしになり、 `warn-"
"strip` を使用すると、タグは署名なしになりますが、警告が表示されます。 "
"`verbatim` を使用すると、タグは黙ってにエクスポートされ、 `warn` を使用する"
"と、 エクスポートされますが、警告が表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:42
#, no-wrap
msgid "`--tag-of-filtered-object=(abort|drop|rewrite)`"
msgstr "`--tag-of-filtered-object=(abort|drop|rewrite)`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:46
msgid ""
"Specify how to handle tags whose tagged object is filtered out.  Since "
"revisions and files to export can be limited by path, tagged objects may be "
"filtered completely."
msgstr ""
"タグ付けされたオブジェクトが除外される、タグの処理方法を指定します。 エクス"
"ポートするリビジョンとファイルはパスによって制限される可能性があるため、タグ"
"付けされたオブジェクトは完全にフィルタリングされる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:52
msgid ""
"When asking to 'abort' (which is the default), this program will die when "
"encountering such a tag.  With 'drop' it will omit such tags from the "
"output.  With 'rewrite', if the tagged object is a commit, it will rewrite "
"the tag to tag an ancestor commit (via parent rewriting; see linkgit:git-rev-"
"list[1])"
msgstr ""
"`abort` (デフォルト)を要求すると、このプログラムはそのようなタグに遭遇すると"
"停止します。 `drop` を使用すると、そのようなタグが出力から省略されます。 "
"`rewrite` を使用すると、タグ付けされたオブジェクトがコミットの場合、タグを書"
"き換えて祖先のコミットにタグを付けます(親の書き換えを介して、 linkgit:git-"
"rev-list[1] 参照)"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:53
#, no-wrap
msgid "`-M`"
msgstr "`-M`"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:54
#, no-wrap
msgid "`-C`"
msgstr "`-C`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:58
msgid ""
"Perform move and/or copy detection, as described in the linkgit:git-diff[1] "
"manual page, and use it to generate rename and copy commands in the output "
"dump."
msgstr ""
"linkgit:git-diff[1] のマニュアルページで説明されているように、移動 および/ま"
"たは コピーの検出を実行し、それを使用して、出力ダンプに rename および copy コ"
"マンドを生成します。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:61
msgid ""
"Note that earlier versions of this command did not complain and produced "
"incorrect results if you gave these options."
msgstr ""
"注意: これらのオプションを指定した場合、このコマンドの以前のバージョンは警告"
"を出さずに誤った結果を生成することに注意してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:62
#, no-wrap
msgid "`--export-marks=<file>`"
msgstr "`--export-marks=<file>`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:73
msgid ""
"Dumps the internal marks table to <file> when complete.  Marks are written "
"one per line as `:markid SHA-1`. Only marks for revisions are dumped; marks "
"for blobs are ignored.  Backends can use this file to validate imports after "
"they have been completed, or to save the marks table across incremental "
"runs.  As <file> is only opened and truncated at completion, the same path "
"can also be safely given to --import-marks.  The file will not be written if "
"no new object has been marked/exported."
msgstr ""
"完了すると、内部マークテーブルを<file>にダンプします。 マークは1行に1つずつ "
"`:markid SHA-1` として書き込まれます。 リビジョンのマークのみがダンプされま"
"す。 ブロブのマークは無視されます。 バックエンドはこのファイルを使用して、イ"
"ンポートが完了した後にインポートを検証したり、増分実行(incremental runs)全体"
"でマークテーブルを保存したりできます。 <file>は完了時にのみ開かれ、切り捨てら"
"れるため、同じパスを `--import-marks` に安全に指定することもできます。 新しい"
"オブジェクトが マーク/エクスポート されていない場合、ファイルは書き込まれませ"
"ん。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:74
#, no-wrap
msgid "`--import-marks=<file>`"
msgstr "`--import-marks=<file>`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:78
msgid ""
"Before processing any input, load the marks specified in <file>.  The input "
"file must exist, must be readable, and must use the same format as produced "
"by --export-marks."
msgstr ""
"入力を処理する前に、<file>で指定されたマークをロードします。 入力ファイルは存"
"在し、読み取り可能であり、 `--export-marks` によって生成されたものと同じ形式"
"を使用する必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:79
#, no-wrap
msgid "`--mark-tags`"
msgstr "`--mark-tags`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:87
msgid ""
"In addition to labelling blobs and commits with mark ids, also label tags.  "
"This is useful in conjunction with `--export-marks` and `--import-marks`, "
"and is also useful (and necessary) for exporting of nested tags.  It does "
"not hurt other cases and would be the default, but many fast-import "
"frontends are not prepared to accept tags with mark identifiers."
msgstr ""
"マークIDでブロブとコミットにラベルを付けることに加えて、タグにもラベルを付け"
"ます。 これは、 `--export-marks` および `--import-marks` と組み合わせて使用す"
"ると便利です。また、ネストされたタグのエクスポートにも役立ちます(そして必要で"
"す)。 それは他のケースを損なうことはなく、デフォルトになりえますが、多くの"
"fast-importフロントエンドは、マーク識別子を持つタグを受け入れる準備ができてい"
"ません。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:92
msgid ""
"Any commits (or tags) that have already been marked will not be exported "
"again.  If the backend uses a similar --import-marks file, this allows for "
"incremental bidirectional exporting of the repository by keeping the marks "
"the same across runs."
msgstr ""
"すでにマークされているコミット(またはタグ)は、再度エクスポートされません。 "
"バックエンドが同様の `--import-marks` ファイルを使用する場合、これにより、複"
"数実行に渡ってマークを同一に保つことにより、リポジトリの増分双方向エクスポー"
"トが可能になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:93
#, no-wrap
msgid "`--fake-missing-tagger`"
msgstr "`--fake-missing-tagger`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:98
msgid ""
"Some old repositories have tags without a tagger.  The fast-import protocol "
"was pretty strict about that, and did not allow that.  So fake a tagger to "
"be able to fast-import the output."
msgstr ""
"一部の古いリポジトリには、taggerのないタグがあります。 fast-importプロトコル"
"はそれについてかなり厳格であり、それを許可しません。 したがって、出力を高速に"
"インポートできるように、taggerを偽造します。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:99
#, no-wrap
msgid "`--use-done-feature`"
msgstr "`--use-done-feature`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:102
msgid ""
"Start the stream with a 'feature done' stanza, and terminate it with a "
"'done' command."
msgstr ""
"`feature done` 句(stanza)でストリームを開始し、 `done` コマンドで終了します。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:103
#, no-wrap
msgid "`--no-data`"
msgstr "`--no-data`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:110
msgid ""
"Skip output of blob objects and instead refer to blobs via their original "
"SHA-1 hash.  This is useful when rewriting the directory structure or "
"history of a repository without touching the contents of individual files.  "
"Note that the resulting stream can only be used by a repository which "
"already contains the necessary objects."
msgstr ""
"ブロブオブジェクトの出力をスキップし、代わりに元のSHA-1ハッシュを介してブロブ"
"を参照します。 これは、個々のファイルの内容に触れることなく、リポジトリのディ"
"レクトリ構造または履歴を書き換える場合に役立ちます。 結果のストリームは、必要"
"なオブジェクトがすでに含まれているリポジトリでのみ使用できることに注意してく"
"ださい。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:111
#, no-wrap
msgid "`--full-tree`"
msgstr "`--full-tree`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:116
msgid ""
"This option will cause fast-export to issue a \"deleteall\" directive for "
"each commit followed by a full list of all files in the commit (as opposed "
"to just listing the files which are different from the commit's first "
"parent)."
msgstr ""
"このオプションにより、fast-exportは、コミットごとに `deleteall` ディレクティ"
"ブを発行し、その後にコミット内のすべてのファイルの完全なリストを発行します(コ"
"ミットの最初の親とは異なるファイルをリストするだけではありません)。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:117
#, no-wrap
msgid "`--anonymize`"
msgstr "`--anonymize`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:121
msgid ""
"Anonymize the contents of the repository while still retaining the shape of "
"the history and stored tree.  See the section on `ANONYMIZING` below."
msgstr ""
"履歴と保存されたツリーの形を維持しながら、リポジトリのコンテンツを匿名化"
"(anonymize)します。 以下の「ANONYMIZING」のセクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:122
#, no-wrap
msgid "`--anonymize-map=<from>[:<to>]`"
msgstr "`--anonymize-map=<from>[:<to>]`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:126
msgid ""
"Convert token `<from>` to `<to>` in the anonymized output. If `<to>` is "
"omitted, map `<from>` to itself (i.e., do not anonymize it). See the section "
"on `ANONYMIZING` below."
msgstr ""
"匿名化(anonymized)された出力でトークン `<from>` を `<to>` に変換します。 "
"`<to>`を省略した場合は、 `<from>` をそれ自体にマップします(つまり、匿名化しま"
"せん)。 以下の「ANONYMIZING」セクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:127
#, no-wrap
msgid "`--reference-excluded-parents`"
msgstr "`--reference-excluded-parents`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:138
msgid ""
"By default, running a command such as `git fast-export master~5..master` "
"will not include the commit master{tilde}5 and will make master{tilde}4 no "
"longer have master{tilde}5 as a parent (though both the old master{tilde}4 "
"and new master{tilde}4 will have all the same files).  Use --reference-"
"excluded-parents to instead have the stream refer to commits in the excluded "
"range of history by their sha1sum.  Note that the resulting stream can only "
"be used by a repository which already contains the necessary parent commits."
msgstr ""
"デフォルトでは、 `git fast-export master~5..master` などのコマンドを実行する"
"と、コミット master{tilde}5 が含まれなくなり、master{tilde}4 の親として "
"master{tilde}5 がなくなります( ただし、古い master{tilde}4 と 新しい "
"master{tilde}4 の両方に同じファイルがあります)。 `--reference-excluded-"
"parents` を使用して、代わりに、sha1sum によって除外された履歴範囲内のコミット"
"をストリームに参照させます。 結果のストリームは、必要な親コミットがすでに含ま"
"れているリポジトリでのみ使用できることに注意してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:139
#, no-wrap
msgid "`--show-original-ids`"
msgstr "`--show-original-ids`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:145
msgid ""
"Add an extra directive to the output for commits and blobs, `original-oid "
"<SHA1SUM>`.  While such directives will likely be ignored by importers such "
"as git-fast-import, it may be useful for intermediary filters (e.g. for "
"rewriting commit messages which refer to older commits, or for stripping "
"blobs by id)."
msgstr ""
"コミットとブロブの出力に追加のディレクティブ `original-oid <SHA1SUM>` を追加"
"します。 このようなディレクティブは git-fast-import などのインポーターによっ"
"て無視される可能性がありますが、中間フィルター(たとえば、古いコミットを参照す"
"るコミットメッセージの書き換え、またはIDによるブロブの削除)に役立つ場合があり"
"ます。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:146
#, no-wrap
msgid "`--reencode=(yes|no|abort)`"
msgstr "`--reencode=(yes|no|abort)`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:152
msgid ""
"Specify how to handle `encoding` header in commit objects.  When asking to "
"'abort' (which is the default), this program will die when encountering such "
"a commit object.  With 'yes', the commit message will be re-encoded into "
"UTF-8.  With 'no', the original encoding will be preserved."
msgstr ""
"コミットオブジェクトで `encoding` ヘッダーを処理する方法を指定します。 "
"`abort` (デフォルト)を要求すると、このプログラムはそのようなコミットオブジェ"
"クトに遭遇すると停止します。 `yes` を使用すると、コミットメッセージがUTF-8に"
"再エンコードされます。 `no` を使用すると、元のエンコーディングが保持されま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:153
#, no-wrap
msgid "`--refspec`"
msgstr "`--refspec`"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:156
msgid ""
"Apply the specified refspec to each ref exported. Multiple of them can be "
"specified."
msgstr ""
"指定されたrefspecをエクスポートされた各refに適用します。複数指定することがで"
"きます。"

#. type: Labeled list
#: ../Documentation-sedout/git-fast-export.txt:157
#, no-wrap
msgid "[<git-rev-list-args>...]"
msgstr "[<git-rev-list-args>...]"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:165
msgid ""
"A list of arguments, acceptable to 'git rev-parse' and 'git rev-list', that "
"specifies the specific objects and references to export.  For example, "
"`master~10..master` causes the current master reference to be exported along "
"with all objects added since its 10th ancestor commit and (unless the --"
"reference-excluded-parents option is specified) all files common to "
"master{tilde}9 and master{tilde}10."
msgstr ""
"エクスポートする特定のオブジェクトと参照を指定する、 `git rev-parse` および "
"`git rev-list` に受け入れられる引数のリスト。 たとえば、 `master~10..master` "
"を使用すると、現在のmaster参照が、10番目の祖先のコミット以降に追加されたすべ"
"てのオブジェクト、および (--reference-excluded-parentsオプションが指定されて"
"いない場合、) master{tilde}9 と master{tilde}10 に共通のすべてのファイルとと"
"もにエクスポートされます。"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:167
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:171
#, no-wrap
msgid "$ git fast-export --all | (cd /empty/repository && git fast-import)\n"
msgstr "$ git fast-export --all | (cd /empty/repository && git fast-import)\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:176
msgid ""
"This will export the whole repository and import it into the existing empty "
"repository.  Except for reencoding commits that are not in UTF-8, it would "
"be a one-to-one mirror."
msgstr ""
"これにより、リポジトリ全体がエクスポートされ、既存の空のリポジトリにインポー"
"トされます。 UTF-8でないコミットの再エンコードを除いて、1対1のミラーになりま"
"す。"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:181
#, no-wrap
msgid ""
"$ git fast-export master~5..master |\n"
"\tsed \"s|refs/heads/master|refs/heads/other|\" |\n"
"\tgit fast-import\n"
msgstr ""
"$ git fast-export master~5..master |\n"
"\tsed \"s|refs/heads/master|refs/heads/other|\" |\n"
"\tgit fast-import\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:185
msgid ""
"This makes a new branch called 'other' from 'master~5..master' (i.e. if "
"'master' has linear history, it will take the last 5 commits)."
msgstr ""
"これにより、 `master~5..master` から `other` という新しいブランチが作成されま"
"す(つまり、 `master` に線形履歴がある場合は、最後の5回のコミットが必要になり"
"ます)。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:189
msgid ""
"Note that this assumes that none of the blobs and commit messages referenced "
"by that revision range contains the string 'refs/heads/master'."
msgstr ""
"注意: これは、そのリビジョン範囲によって参照されるブロブとコミットメッセージ"
"のいずれにも文字列 `refs/heads/master` が含まれていないことを前提としているこ"
"とに注意してください。"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:192
#, no-wrap
msgid "ANONYMIZING"
msgstr "ANONYMIZING(匿名化)"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:200
msgid ""
"If the `--anonymize` option is given, git will attempt to remove all "
"identifying information from the repository while still retaining enough of "
"the original tree and history patterns to reproduce some bugs. The goal is "
"that a git bug which is found on a private repository will persist in the "
"anonymized repository, and the latter can be shared with git developers to "
"help solve the bug."
msgstr ""
"`--anonymize` オプションが指定されている場合、gitは、いくつかのバグを再現する"
"のに十分な元のツリーと履歴パターンを保持しながら、リポジトリからすべての識別"
"情報(identifying information)を削除しようとします。 その目標は、プライベート"
"リポジトリで見つかったgitバグが匿名化されたリポジトリに残り、匿名化されたリポ"
"ジトリをgit開発者と共有してバグの解決に役立てることです。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:212
msgid ""
"With this option, git will replace all refnames, paths, blob contents, "
"commit and tag messages, names, and email addresses in the output with "
"anonymized data.  Two instances of the same string will be replaced "
"equivalently (e.g., two commits with the same author will have the same "
"anonymized author in the output, but bear no resemblance to the original "
"author string). The relationship between commits, branches, and tags is "
"retained, as well as the commit timestamps (but the commit messages and "
"refnames bear no resemblance to the originals). The relative makeup of the "
"tree is retained (e.g., if you have a root tree with 10 files and 3 trees, "
"so will the output), but their names and the contents of the files will be "
"replaced."
msgstr ""
"このオプションを使用すると、gitは、出力内のすべての refname、パス、ブロブコン"
"テンツ、コミットメッセージ、タグメッセージ、名前、電子メールアドレス を匿名化"
"されたデータに置き換えます。 同じ文字列の2つのインスタンスは同等に置き換えら"
"れます(たとえば、同じ作者による2つのコミットは、出力に同じ匿名の作者が含まれ"
"ますが、元の作者文字列とは類似していません)。 コミット、ブランチ、タグの関"
"係、コミット のタイムスタンプは保持されます(ただし、コミットメッセージと"
"refnameは元のメッセージとは似ていません)。 ツリーの相対的な構成は保持されます"
"が(たとえば、10個のファイルと3個のツリーを持つルートツリーがある場合、出力も"
"保持されます)、それらの名前とファイルの内容は置き換えられます。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:215
msgid ""
"If you think you have found a git bug, you can start by exporting an "
"anonymized stream of the whole repository:"
msgstr ""
"あなたがgitのバグを見つけたと思う場合は、リポジトリ全体の匿名化されたストリー"
"ムをエクスポートすることから始めることができます:"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:218
#, no-wrap
msgid "$ git fast-export --anonymize --all >anon-stream\n"
msgstr "$ git fast-export --anonymize --all >anon-stream\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:223
msgid ""
"Then confirm that the bug persists in a repository created from that stream "
"(many bugs will not, as they really do depend on the exact repository "
"contents):"
msgstr ""
"次に、そのストリームから作成されたリポジトリでバグが持続することを確認します"
"(多くのバグは、リポジトリの正確な内容に依存しているため、持続しません):"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:229
#, no-wrap
msgid ""
"$ git init anon-repo\n"
"$ cd anon-repo\n"
"$ git fast-import <../anon-stream\n"
"$ ... test your bug ...\n"
msgstr ""
"$ git init anon-repo\n"
"$ cd anon-repo\n"
"$ git fast-import <../anon-stream\n"
"$ ... test your bug ...\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:236
msgid ""
"If the anonymized repository shows the bug, it may be worth sharing `anon-"
"stream` along with a regular bug report. Note that the anonymized stream "
"compresses very well, so gzipping it is encouraged. If you want to examine "
"the stream to see that it does not contain any private data, you can peruse "
"it directly before sending. You may also want to try:"
msgstr ""
"匿名化されたリポジトリにバグが表示されている場合は、通常のバグレポートと一緒"
"に `anon-stream` を共有する価値があるかもしれません。 匿名化されたストリーム"
"は非常によく圧縮されるため、gzipすることをお勧めします。ストリームを調べてプ"
"ライベートデータが含まれていないことを確認する場合は、送信する前にストリーム"
"を直接確認できます。 また、試してみることもできます:"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:239
#, no-wrap
msgid "$ perl -pe 's/\\d+/X/g' <anon-stream | sort -u | less\n"
msgstr "$ perl -pe 's/\\d+/X/g' <anon-stream | sort -u | less\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:245
msgid ""
"which shows all of the unique lines (with numbers converted to \"X\", to "
"collapse \"User 0\", \"User 1\", etc into \"User X\"). This produces a much "
"smaller output, and it is usually easy to quickly confirm that there is no "
"private data in the stream."
msgstr ""
"これは、すべての一意の行を表示します(\"User 0\"、 \"User 1\" などを \"User "
"X\" に折りたたむために、数字を \"X\" に変換します)。 これにより、出力がはるか"
"に小さくなり、通常、ストリームにプライベートデータがないことをすばやく確認す"
"るのは簡単です。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:251
msgid ""
"Reproducing some bugs may require referencing particular commits or paths, "
"which becomes challenging after refnames and paths have been anonymized. You "
"can ask for a particular token to be left as-is or mapped to a new value. "
"For example, if you have a bug which reproduces with `git rev-list sensitive "
"-- secret.c`, you can run:"
msgstr ""
"一部のバグを再現するには、特定のコミットまたはパスを参照する必要がある場合が"
"あります。これは、refnameおよびパスが匿名化された後に困難になります。 特定の"
"トークンをそのままにするか、新しい値にマップするように要求できます。 たとえ"
"ば、 `git rev-list sensitive -- secret.c` で再現されるバグがある場合は、以下"
"のコマンドを実行できます:"

#. type: delimited block -
#: ../Documentation-sedout/git-fast-export.txt:257
#, no-wrap
msgid ""
"$ git fast-export --anonymize --all \\\n"
"      --anonymize-map=sensitive:foo \\\n"
"      --anonymize-map=secret.c:bar.c \\\n"
"      >stream\n"
msgstr ""
"$ git fast-export --anonymize --all \\\n"
"      --anonymize-map=sensitive:foo \\\n"
"      --anonymize-map=secret.c:bar.c \\\n"
"      >stream\n"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:261
msgid ""
"After importing the stream, you can then run `git rev-list foo -- bar.c` in "
"the anonymized repository."
msgstr ""
"ストリームをインポートした後、匿名化されたリポジトリで `git rev-list foo -- "
"bar.c` を実行できます。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:266
msgid ""
"Note that paths and refnames are split into tokens at slash boundaries.  The "
"command above would anonymize `subdir/secret.c` as something like `path123/"
"bar.c`; you could then search for `bar.c` in the anonymized repository to "
"determine the final pathname."
msgstr ""
"注意: パスとrefnameは、スラッシュ(`/`)境界でトークンに分割されることに注意し"
"てください。 上記のコマンドは、 `subdir/secret.c` を `path123/bar.c` のような"
"ものとして匿名化します。 次に、あなたは匿名化されたリポジトリで `bar.c` を検"
"索して、最終的なパス名を決定できます。"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:270
msgid ""
"To make referencing the final pathname simpler, you can map each path "
"component; so if you also anonymize `subdir` to `publicdir`, then the final "
"pathname would be `publicdir/bar.c`."
msgstr ""
"最終パス名の参照を簡単にするために、各パスコンポーネントをマップできます。 し"
"たがって、`subdir` も `publicdir` に匿名化すると、最終的なパス名は "
"`publicdir/bar.c` になります。"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:272
#, no-wrap
msgid "LIMITATIONS"
msgstr "LIMITATIONS"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:277
msgid ""
"Since 'git fast-import' cannot tag trees, you will not be able to export the "
"linux.git repository completely, as it contains a tag referencing a tree "
"instead of a commit."
msgstr ""
"`git fast-import` はツリーにタグを付けることができないため、コミットではなく"
"ツリーを参照するタグが含まれている linux.git リポジトリを完全にエクスポートす"
"ることはできません。"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:279
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:281
msgid "linkgit:git-fast-import[1]"
msgstr "linkgit:git-fast-import[1]"

#. type: Title -
#: ../Documentation-sedout/git-fast-export.txt:283
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-fast-export.txt:284
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
