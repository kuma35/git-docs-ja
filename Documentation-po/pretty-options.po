# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation/pretty-options.txt:1
#, no-wrap
msgid "--pretty[=<format>]"
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:2
#, no-wrap
msgid "--format=<format>"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:10
msgid ""
"Pretty-print the contents of the commit logs in a given format, where "
"'<format>' can be one of 'oneline', 'short', 'medium', 'full', 'fuller', "
"'reference', 'email', 'raw', 'format:<string>' and 'tformat:<string>'.  When "
"'<format>' is none of the above, and has '%placeholder' in it, it acts as if "
"'--pretty=tformat:<format>' were given."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:13
msgid ""
"See the \"PRETTY FORMATS\" section for some additional details for each "
"format.  When '=<format>' part is omitted, it defaults to 'medium'."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:16
msgid ""
"Note: you can specify the default pretty format in the repository "
"configuration (see linkgit:git-config[1])."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:17
#, no-wrap
msgid "--abbrev-commit"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:22
msgid ""
"Instead of showing the full 40-byte hexadecimal commit object name, show a "
"prefix that names the object uniquely.  \"--abbrev=<n>\" (which also "
"modifies diff output, if it is displayed)  option can be used to specify the "
"minimum length of the prefix."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:25
msgid ""
"This should make \"--pretty=oneline\" a whole lot more readable for people "
"using 80-column terminals."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:26
#, no-wrap
msgid "--no-abbrev-commit"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:30
msgid ""
"Show the full 40-byte hexadecimal commit object name. This negates "
"`--abbrev-commit`, either explicit or implied by other options such as "
"\"--oneline\". It also overrides the `log.abbrevCommit` variable."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:31
#, no-wrap
msgid "--oneline"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:34
msgid "This is a shorthand for \"--pretty=oneline --abbrev-commit\" used together."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:35
#, no-wrap
msgid "--encoding=<encoding>"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:46
msgid ""
"Commit objects record the character encoding used for the log message in "
"their encoding header; this option can be used to tell the command to "
"re-code the commit log message in the encoding preferred by the user.  For "
"non plumbing commands this defaults to UTF-8. Note that if an object claims "
"to be encoded in `X` and we are outputting in `X`, we will output the object "
"verbatim; this means that invalid sequences in the original commit may be "
"copied to the output. Likewise, if iconv(3) fails to convert the commit, we "
"will output the original object verbatim, along with a warning."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:47
#, no-wrap
msgid "--expand-tabs=<n>"
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:48
#, no-wrap
msgid "--expand-tabs"
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:49
#, no-wrap
msgid "--no-expand-tabs"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:56
msgid ""
"Perform a tab expansion (replace each tab with enough spaces to fill to the "
"next display column that is multiple of '<n>')  in the log message before "
"showing it in the output.  `--expand-tabs` is a short-hand for "
"`--expand-tabs=8`, and `--no-expand-tabs` is a short-hand for "
"`--expand-tabs=0`, which disables tab expansion."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:60
msgid ""
"By default, tabs are expanded in pretty formats that indent the log message "
"by 4 spaces (i.e.  'medium', which is the default, 'full', and 'fuller')."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:62
#, no-wrap
msgid "--notes[=<ref>]"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:68
msgid ""
"Show the notes (see linkgit:git-notes[1]) that annotate the commit, when "
"showing the commit log message.  This is the default for `git log`, `git "
"show` and `git whatchanged` commands when there is no `--pretty`, "
"`--format`, or `--oneline` option given on the command line."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:72
msgid ""
"By default, the notes shown are from the notes refs listed in the "
"`core.notesRef` and `notes.displayRef` variables (or corresponding "
"environment overrides). See linkgit:git-config[1] for more details."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:77
msgid ""
"With an optional '<ref>' argument, use the ref to find the notes to "
"display.  The ref can specify the full refname when it begins with "
"`refs/notes/`; when it begins with `notes/`, `refs/` and otherwise "
"`refs/notes/` is prefixed to form a full name of the ref."
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:82
msgid ""
"Multiple --notes options can be combined to control which notes are being "
"displayed. Examples: \"--notes=foo\" will show only notes from "
"\"refs/notes/foo\"; \"--notes=foo --notes\" will show both notes from "
"\"refs/notes/foo\" and from the default notes ref(s)."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:83
#, no-wrap
msgid "--no-notes"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:89
msgid ""
"Do not show notes. This negates the above `--notes` option, by resetting the "
"list of notes refs from which notes are shown.  Options are parsed in the "
"order given on the command line, so e.g.  \"--notes --notes=foo --no-notes "
"--notes=bar\" will only show notes from \"refs/notes/bar\"."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:90
#, no-wrap
msgid "--show-notes[=<ref>]"
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:91
#, no-wrap
msgid "--[no-]standard-notes"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:94
msgid ""
"These options are deprecated. Use the above --notes/--no-notes options "
"instead."
msgstr ""

#. type: Labeled list
#: ../Documentation/pretty-options.txt:96
#, no-wrap
msgid "--show-signature"
msgstr ""

#. type: Plain text
#: ../Documentation/pretty-options.txt:98
msgid ""
"Check the validity of a signed commit object by passing the signature to "
"`gpg --verify` and show the output."
msgstr ""
