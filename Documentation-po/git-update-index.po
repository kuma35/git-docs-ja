# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-update-index.txt:2
#, no-wrap
msgid "git-update-index(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:7
msgid ""
"git-update-index - Register file contents in the working tree to the index"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:30
#, no-wrap
msgid ""
"'git update-index'\n"
"\t     [--add] [--remove | --force-remove] [--replace]\n"
"\t     [--refresh] [-q] [--unmerged] [--ignore-missing]\n"
"\t     [(--cacheinfo <mode>,<object>,<file>)...]\n"
"\t     [--chmod=(+|-)x]\n"
"\t     [--[no-]assume-unchanged]\n"
"\t     [--[no-]skip-worktree]\n"
"\t     [--[no-]ignore-skip-worktree-entries]\n"
"\t     [--[no-]fsmonitor-valid]\n"
"\t     [--ignore-submodules]\n"
"\t     [--[no-]split-index]\n"
"\t     [--[no-|test-|force-]untracked-cache]\n"
"\t     [--[no-]fsmonitor]\n"
"\t     [--really-refresh] [--unresolve] [--again | -g]\n"
"\t     [--info-only] [--index-info]\n"
"\t     [-z] [--stdin] [--index-version <n>]\n"
"\t     [--verbose]\n"
"\t     [--] [<file>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:32
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:35
msgid ""
"Modifies the index. Each file mentioned is updated into the index and any "
"'unmerged' or 'needs updating' state is cleared."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:38
msgid ""
"See also linkgit:git-add[1] for a more user-friendly way to do some of the "
"most common operations on the index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:41
msgid ""
"The way 'git update-index' handles files it is told about can be modified "
"using the various options:"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:43
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:44
#, no-wrap
msgid "`--add`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:48
msgid ""
"If a specified file isn't in the index already then it's added.  Default "
"behaviour is to ignore new files."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:49
#, no-wrap
msgid "`--remove`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:53
msgid ""
"If a specified file is in the index but is missing then it's removed.  "
"Default behavior is to ignore removed file."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:54
#, no-wrap
msgid "`--refresh`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:57
msgid ""
"Looks at the current index and checks to see if merges or updates are needed "
"by checking stat() information."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:58
#, no-wrap
msgid "`-q`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:61
msgid ""
"Quiet.  If --refresh finds that the index needs an update, the default "
"behavior is to error out.  This option makes"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:62
msgid "'git update-index' continue anyway."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:63
#, no-wrap
msgid "`--ignore-submodules`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:66
msgid ""
"Do not try to update submodules.  This option is only respected when passed "
"before --refresh."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:67
#, no-wrap
msgid "`--unmerged`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:69
msgid "If --refresh finds unmerged changes in the index, the default"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:70
msgid "behavior is to error out.  This option makes 'git update-index'"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:71
#, no-wrap
msgid "continue anyway.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:72
#, no-wrap
msgid "`--ignore-missing`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:74
msgid "Ignores missing files during a --refresh"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:75
#, no-wrap
msgid "`--cacheinfo <mode>,<object>,<path>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:76
#, no-wrap
msgid "`--cacheinfo <mode> <object> <path>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:81
msgid ""
"Directly insert the specified info into the index.  For backward "
"compatibility, you can also give these three arguments as three separate "
"parameters, but new users are encouraged to use a single-parameter form."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:82
#, no-wrap
msgid "`--index-info`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:84
msgid "Read index information from stdin."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:85
#, no-wrap
msgid "`--chmod=(+|-)x`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:87
msgid "Set the execute permissions on the updated files."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:88
#, no-wrap
msgid "`--[no-]assume-unchanged`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:100
msgid ""
"When this flag is specified, the object names recorded for the paths are not "
"updated.  Instead, this option sets/unsets the \"assume unchanged\" bit for "
"the paths.  When the \"assume unchanged\" bit is on, the user promises not "
"to change the file and allows Git to assume that the working tree file "
"matches what is recorded in the index.  If you want to change the working "
"tree file, you need to unset the bit to tell Git.  This is sometimes helpful "
"when working with a big project on a filesystem that has very slow lstat(2) "
"system call (e.g. cifs)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:105
msgid ""
"Git will fail (gracefully) in case it needs to modify this file in the index "
"e.g. when merging in a commit; thus, in case the assumed-untracked file is "
"changed upstream, you will need to handle the situation manually."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:106
#, no-wrap
msgid "`--really-refresh`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:109
msgid ""
"Like `--refresh`, but checks stat information unconditionally, without "
"regard to the \"assume unchanged\" setting."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:110
#, no-wrap
msgid "`--[no-]skip-worktree`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:115
msgid ""
"When one of these flags is specified, the object name recorded for the paths "
"are not updated. Instead, these options set and unset the \"skip-worktree\" "
"bit for the paths. See section \"Skip-worktree bit\" below for more "
"information."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:117
#, no-wrap
msgid "`--[no-]ignore-skip-worktree-entries`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:120
msgid ""
"Do not remove skip-worktree (AKA \"index-only\") entries even when the `--"
"remove` option was specified."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:121
#, no-wrap
msgid "`--[no-]fsmonitor-valid`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:126
msgid ""
"When one of these flags is specified, the object name recorded for the paths "
"are not updated. Instead, these options set and unset the \"fsmonitor valid"
"\" bit for the paths. See section \"File System Monitor\" below for more "
"information."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:127
#, no-wrap
msgid "`-g`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:128
#, no-wrap
msgid "`--again`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:131
msgid ""
"Runs 'git update-index' itself on the paths whose index entries are "
"different from those from the `HEAD` commit."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:132
#, no-wrap
msgid "`--unresolve`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:135
msgid ""
"Restores the 'unmerged' or 'needs updating' state of a file during a merge "
"if it was cleared by accident."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:136
#, no-wrap
msgid "`--info-only`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:140
msgid ""
"Do not create objects in the object database for all <file> arguments that "
"follow this flag; just insert their object IDs into the index."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:141
#, no-wrap
msgid "`--force-remove`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:144
msgid ""
"Remove the file from the index even when the working directory still has "
"such a file. (Implies --remove.)"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:145
#, no-wrap
msgid "`--replace`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:152
msgid ""
"By default, when a file `path` exists in the index, 'git update-index' "
"refuses an attempt to add `path/file`.  Similarly if a file `path/file` "
"exists, a file `path` cannot be added.  With --replace flag, existing "
"entries that conflict with the entry being added are automatically removed "
"with warning messages."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:153
#, no-wrap
msgid "`--stdin`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:157
msgid ""
"Instead of taking list of paths from the command line, read list of paths "
"from the standard input.  Paths are separated by LF (i.e. one path per line) "
"by default."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:158
#, no-wrap
msgid "`--verbose`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:160
msgid "Report what is being added and removed from index."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:161
#, no-wrap
msgid "`--index-version <n>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:166
msgid ""
"Write the resulting index out in the named on-disk format version.  "
"Supported versions are 2, 3 and 4. The current default version is 2 or 3, "
"depending on whether extra features are used, such as `git add -N`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:172
msgid ""
"Version 4 performs a simple pathname compression that reduces index size by "
"30%-50% on large repositories, which results in faster load time. Version 4 "
"is relatively young (first released in 1.8.0 in October 2012). Other Git "
"implementations such as JGit and libgit2 may not support it yet."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:173
#, no-wrap
msgid "`-z`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:176
msgid ""
"Only meaningful with `--stdin` or `--index-info`; paths are separated with "
"NUL character instead of LF."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:177
#, no-wrap
msgid "`--split-index`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:178
#, no-wrap
msgid "`--no-split-index`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:183
msgid ""
"Enable or disable split index mode. If split-index mode is already enabled "
"and `--split-index` is given again, all changes in $GIT_DIR/index are pushed "
"back to the shared index file."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:189
msgid ""
"These options take effect whatever the value of the `core.splitIndex` "
"configuration variable (see linkgit:git-config[1]). But a warning is emitted "
"when the change goes against the configured value, as the configured value "
"will take effect next time the index is read and this will remove the "
"intended effect of the option."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:190
#, no-wrap
msgid "`--untracked-cache`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:191
#, no-wrap
msgid "`--no-untracked-cache`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:194
msgid ""
"Enable or disable untracked cache feature. Please use `--test-untracked-"
"cache` before enabling it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:200
msgid ""
"These options take effect whatever the value of the `core.untrackedCache` "
"configuration variable (see linkgit:git-config[1]). But a warning is emitted "
"when the change goes against the configured value, as the configured value "
"will take effect next time the index is read and this will remove the "
"intended effect of the option."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:201
#, no-wrap
msgid "`--test-untracked-cache`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:210
msgid ""
"Only perform tests on the working directory to make sure untracked cache can "
"be used. You have to manually enable untracked cache using `--untracked-"
"cache` or `--force-untracked-cache` or the `core.untrackedCache` "
"configuration variable afterwards if you really want to use it. If a test "
"fails the exit code is 1 and a message explains what is not working as "
"needed, otherwise the exit code is 0 and OK is printed."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:211
#, no-wrap
msgid "`--force-untracked-cache`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:216
msgid ""
"Same as `--untracked-cache`. Provided for backwards compatibility with older "
"versions of Git where `--untracked-cache` used to imply `--test-untracked-"
"cache` but this option would enable the extension unconditionally."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:217
#, no-wrap
msgid "`--fsmonitor`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:218
#, no-wrap
msgid "`--no-fsmonitor`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:225
msgid ""
"Enable or disable files system monitor feature. These options take effect "
"whatever the value of the `core.fsmonitor` configuration variable (see "
"linkgit:git-config[1]). But a warning is emitted when the change goes "
"against the configured value, as the configured value will take effect next "
"time the index is read and this will remove the intended effect of the "
"option."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:226
#, no-wrap
msgid "\\--"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:228
msgid "Do not interpret any more arguments as options."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:229
#, no-wrap
msgid "<file>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:235
msgid ""
"Files to act on.  Note that files beginning with '.' are discarded. This "
"includes `./file` and `dir/./file`. If you don't want this, then use cleaner "
"names.  The same applies to directories ending '/' and paths with '//'"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:237
#, no-wrap
msgid "USING --REFRESH"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:243
msgid ""
"`--refresh` does not calculate a new sha1 file or bring the index up to date "
"for mode/content changes. But what it *does* do is to \"re-match\" the stat "
"information of a file with the index, so that you can refresh the index for "
"a file that hasn't been changed but where the stat entry is out of date."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:246
msgid ""
"For example, you'd want to do this after doing a 'git read-tree', to link up "
"the stat index details with the proper files."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:248
#, no-wrap
msgid "USING --CACHEINFO OR --INFO-ONLY"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:252
msgid ""
"`--cacheinfo` is used to register a file that is not in the current working "
"directory.  This is useful for minimum-checkout merging."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:254
msgid "To pretend you have a file at path with mode and sha1, say:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:257
#, no-wrap
msgid "$ git update-index --add --cacheinfo <mode>,<sha1>,<path>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:261
msgid ""
"`--info-only` is used to register files without placing them in the object "
"database.  This is useful for status-only repositories."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:267
msgid ""
"Both `--cacheinfo` and `--info-only` behave similarly: the index is updated "
"but the object database isn't.  `--cacheinfo` is useful when the object is "
"in the database but the file isn't available locally.  `--info-only` is "
"useful when the file is available, but you do not wish to update the object "
"database."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:270
#, no-wrap
msgid "USING --INDEX-INFO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:275
msgid ""
"`--index-info` is a more powerful mechanism that lets you feed multiple "
"entry definitions from the standard input, and designed specifically for "
"scripts.  It can take inputs of three formats:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:277
#, no-wrap
msgid "mode SP type SP sha1          TAB path\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:279
msgid "This format is to stuff `git ls-tree` output into the index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:281
#, no-wrap
msgid "mode         SP sha1 SP stage TAB path\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:284
msgid ""
"This format is to put higher order stages into the index file and matches "
"'git ls-files --stage' output."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:286
#, no-wrap
msgid "mode         SP sha1          TAB path\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:289
msgid ""
"This format is no longer produced by any Git command, but is and will "
"continue to be supported by `update-index --index-info`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:293
msgid ""
"To place a higher stage entry to the index, the path should first be removed "
"by feeding a mode=0 entry for the path, and then feeding necessary input "
"lines in the third format."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:295
msgid "For example, starting with this index:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:299
#, no-wrap
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0       frotz\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:302
msgid "you can feed the following input to `--index-info`:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:308
#, no-wrap
msgid ""
"$ git update-index --index-info\n"
"0 0000000000000000000000000000000000000000\tfrotz\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:314
msgid ""
"The first line of the input feeds 0 as the mode to remove the path; the "
"SHA-1 does not matter as long as it is well formatted.  Then the second and "
"third line feeds stage 1 and stage 2 entries for that path.  After the "
"above, we would end up with this:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:319
#, no-wrap
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:323
#, no-wrap
msgid "USING ``ASSUME UNCHANGED'' BIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:338
msgid ""
"Many operations in Git depend on your filesystem to have an efficient "
"`lstat(2)` implementation, so that `st_mtime` information for working tree "
"files can be cheaply checked to see if the file contents have changed from "
"the version recorded in the index file.  Unfortunately, some filesystems "
"have inefficient `lstat(2)`.  If your filesystem is one of them, you can set "
"\"assume unchanged\" bit to paths you have not changed to cause Git not to "
"do this check.  Note that setting this bit on a path does not mean Git will "
"check the contents of the file to see if it has changed -- it makes Git to "
"omit any checking and assume it has *not* changed.  When you make changes to "
"working tree files, you have to explicitly tell Git about it by dropping "
"\"assume unchanged\" bit, either before or after you modify them."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:343
msgid ""
"In order to set \"assume unchanged\" bit, use `--assume-unchanged` option.  "
"To unset, use `--no-assume-unchanged`. To see which files have the \"assume "
"unchanged\" bit set, use `git ls-files -v` (see linkgit:git-ls-files[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:353
msgid ""
"The command looks at `core.ignorestat` configuration variable.  When this is "
"true, paths updated with `git update-index paths...` and paths updated with "
"other Git commands that update both index and working tree (e.g. 'git apply "
"--index', 'git checkout-index -u', and 'git read-tree -u') are automatically "
"marked as \"assume unchanged\".  Note that \"assume unchanged\" bit is *not* "
"set if `git update-index --refresh` finds the working tree file matches the "
"index (use `git update-index --really-refresh` if you want to mark them as "
"\"assume unchanged\")."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:356
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:358
msgid "To update and refresh only the files already checked out:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:361
#, no-wrap
msgid "$ git checkout-index -n -f -a && git update-index --ignore-missing --refresh\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:363
#, no-wrap
msgid "On an inefficient filesystem with `core.ignorestat` set"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:379
#, no-wrap
msgid ""
"$ git update-index --really-refresh              <1>\n"
"$ git update-index --no-assume-unchanged foo.c   <2>\n"
"$ git diff --name-only                           <3>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <4>\n"
"M foo.c\n"
"$ git update-index foo.c                         <5>\n"
"$ git diff --name-only                           <6>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <7>\n"
"$ git update-index --no-assume-unchanged foo.c   <8>\n"
"$ git diff --name-only                           <9>\n"
"M foo.c\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:382
msgid ""
"forces lstat(2) to set \"assume unchanged\" bits for paths that match index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:383
msgid "mark the path to be edited."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:384
msgid "this does lstat(2) and finds index matches the path."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:385
msgid "this does lstat(2) and finds index does *not* match the path."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:386
msgid "registering the new version to index sets \"assume unchanged\" bit."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:387
msgid "and it is assumed unchanged."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:388
msgid "even after you edit it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:389
msgid "you can tell about the change after the fact."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:390
msgid "now it checks with lstat(2) and finds it has been changed."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:393
#, no-wrap
msgid "SKIP-WORKTREE BIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:399
msgid ""
"Skip-worktree bit can be defined in one (long) sentence: When reading an "
"entry, if it is marked as skip-worktree, then Git pretends its working "
"directory version is up to date and read the index version instead."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:407
msgid ""
"To elaborate, \"reading\" means checking for file existence, reading file "
"attributes or file content. The working directory version may be present or "
"absent. If present, its content may match against the index version or not. "
"Writing is not affected by this bit, content safety is still first priority. "
"Note that Git _can_ update working directory file, that is marked skip-"
"worktree, if it is safe to do so (i.e.  working directory version matches "
"index version)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:411
msgid ""
"Although this bit looks similar to assume-unchanged bit, its goal is "
"different from assume-unchanged bit's. Skip-worktree also takes precedence "
"over assume-unchanged bit when both are set."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:413
#, no-wrap
msgid "SPLIT INDEX"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:417
msgid ""
"This mode is designed for repositories with very large indexes, and aims at "
"reducing the time it takes to repeatedly write these indexes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:422
msgid ""
"In this mode, the index is split into two files, $GIT_DIR/index and $GIT_DIR/"
"sharedindex.<SHA-1>. Changes are accumulated in $GIT_DIR/index, the split "
"index, while the shared index file contains all index entries and stays "
"unchanged."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:427
msgid ""
"All changes in the split index are pushed back to the shared index file when "
"the number of entries in the split index reaches a level specified by the "
"splitIndex.maxPercentChange config variable (see linkgit:git-config[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:432
msgid ""
"Each time a new shared index file is created, the old shared index files are "
"deleted if their modification time is older than what is specified by the "
"splitIndex.sharedIndexExpire config variable (see linkgit:git-config[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:436
msgid ""
"To avoid deleting a shared index file that is still used, its modification "
"time is updated to the current time every time a new split index based on "
"the shared index file is either created or read from."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:438
#, no-wrap
msgid "UNTRACKED CACHE"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:442
msgid ""
"This cache is meant to speed up commands that involve determining untracked "
"files such as `git status`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:449
msgid ""
"This feature works by recording the mtime of the working tree directories "
"and then omitting reading directories and stat calls against files in those "
"directories whose mtime hasn't changed. For this to work the underlying "
"operating system and file system must change the `st_mtime` field of "
"directories if files in the directory are added, modified or deleted."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:454
msgid ""
"You can test whether the filesystem supports that with the `--test-untracked-"
"cache` option. The `--untracked-cache` option used to implicitly perform "
"that test in older versions of Git, but that's no longer the case."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:462
msgid ""
"If you want to enable (or disable) this feature, it is easier to use the "
"`core.untrackedCache` configuration variable (see linkgit:git-config[1]) "
"than using the `--untracked-cache` option to `git update-index` in each "
"repository, especially if you want to do so across all repositories you use, "
"because you can set the configuration variable to `true` (or `false`) in "
"your `$HOME/.gitconfig` just once and have it affect all repositories you "
"touch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:468
msgid ""
"When the `core.untrackedCache` configuration variable is changed, the "
"untracked cache is added to or removed from the index the next time a "
"command reads the index; while when `--[no-|force-]untracked-cache` are "
"used, the untracked cache is immediately added to or removed from the index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:475
msgid ""
"Before 2.17, the untracked cache had a bug where replacing a directory with "
"a symlink to another directory could cause it to incorrectly show files "
"tracked by git as untracked. See the \"status: add a failing test showing a "
"core.untrackedCache bug\" commit to git.git. A workaround for that is (and "
"this might work for other undiscovered bugs in the future):"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:478
#, no-wrap
msgid "$ git -c core.untrackedCache=false status\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:484
msgid ""
"This bug has also been shown to affect non-symlink cases of replacing a "
"directory with a file when it comes to the internal structures of the "
"untracked cache, but no case has been reported where this resulted in wrong "
"\"git status\" output."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:490
msgid ""
"There are also cases where existing indexes written by git versions before "
"2.17 will reference directories that don't exist anymore, potentially "
"causing many \"could not open directory\" warnings to be printed on \"git "
"status\". These are new warnings for existing issues that were previously "
"silently discarded."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:494
msgid ""
"As with the bug described above the solution is to one-off do a \"git status"
"\" run with `core.untrackedCache=false` to flush out the leftover bad data."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:496
#, no-wrap
msgid "FILE SYSTEM MONITOR"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:500
msgid ""
"This feature is intended to speed up git operations for repos that have "
"large working directories."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:505
msgid ""
"It enables git to work together with a file system monitor (see the "
"\"fsmonitor-watchman\" section of linkgit:githooks[5]) that can inform it as "
"to what files have been modified. This enables git to avoid having to "
"lstat() every file to find modified files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:509
msgid ""
"When used in conjunction with the untracked cache, it can further improve "
"performance by avoiding the cost of scanning the entire working directory "
"looking for new files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:517
msgid ""
"If you want to enable (or disable) this feature, it is easier to use the "
"`core.fsmonitor` configuration variable (see linkgit:git-config[1]) than "
"using the `--fsmonitor` option to `git update-index` in each repository, "
"especially if you want to do so across all repositories you use, because you "
"can set the configuration variable in your `$HOME/.gitconfig` just once and "
"have it affect all repositories you touch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:522
msgid ""
"When the `core.fsmonitor` configuration variable is changed, the file system "
"monitor is added to or removed from the index the next time a command reads "
"the index. When `--[no-]fsmonitor` are used, the file system monitor is "
"immediately added to or removed from the index."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:524
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:533
#, no-wrap
msgid ""
"The command honors `core.filemode` configuration variable.  If\n"
"your repository is on a filesystem whose executable bits are\n"
"unreliable, this should be set to 'false' (see linkgit:git-config[1]).\n"
"This causes the command to ignore differences in file modes recorded\n"
"in the index and the file mode on the filesystem if they differ only on\n"
"executable bit.   On such an unfortunate filesystem, you may\n"
"need to use 'git update-index --chmod='.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:538
msgid ""
"Quite similarly, if `core.symlinks` configuration variable is set to "
"'false' (see linkgit:git-config[1]), symbolic links are checked out as plain "
"files, and this command does not modify a recorded file mode from symbolic "
"link to regular file."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:541
msgid ""
"The command looks at `core.ignorestat` configuration variable.  See 'Using "
"\"assume unchanged\" bit' section above."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:546
msgid ""
"The command also looks at `core.trustctime` configuration variable.  It can "
"be useful when the inode change time is regularly modified by something "
"outside Git (file system crawlers and backup systems use ctime for marking "
"files processed) (see linkgit:git-config[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:550
msgid ""
"The untracked cache extension can be enabled by the `core.untrackedCache` "
"configuration variable (see linkgit:git-config[1])."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:552
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:560
msgid ""
"Users often try to use the assume-unchanged and skip-worktree bits to tell "
"Git to ignore changes to files that are tracked.  This does not work as "
"expected, since Git may still check working tree files against the index "
"when performing certain operations.  In general, Git does not provide a way "
"to ignore changes to tracked files, so alternate solutions are recommended."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:566
msgid ""
"For example, if the file you want to change is some sort of config file, the "
"repository can include a sample config file that can then be copied into the "
"ignored name and modified.  The repository can even include a script to "
"treat the sample file as a template, modifying and copying it automatically."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:568
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:572
msgid "linkgit:git-config[1], linkgit:git-add[1], linkgit:git-ls-files[1]"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:574
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:575
msgid "Part of the linkgit:git[1] suite"
msgstr ""
