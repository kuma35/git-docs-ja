# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-06-25 00:31+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-update-index.txt:2
#, no-wrap
msgid "git-update-index(1)"
msgstr "git-update-index(1)"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:7
msgid ""
"git-update-index - Register file contents in the working tree to the index"
msgstr ""
"git-update-index - 作業ツリーのファイルの内容をインデックスに登録します"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:30
#, no-wrap
msgid ""
"'git update-index'\n"
"\t     [--add] [--remove | --force-remove] [--replace]\n"
"\t     [--refresh] [-q] [--unmerged] [--ignore-missing]\n"
"\t     [(--cacheinfo <mode>,<object>,<file>)...]\n"
"\t     [--chmod=(+|-)x]\n"
"\t     [--[no-]assume-unchanged]\n"
"\t     [--[no-]skip-worktree]\n"
"\t     [--[no-]ignore-skip-worktree-entries]\n"
"\t     [--[no-]fsmonitor-valid]\n"
"\t     [--ignore-submodules]\n"
"\t     [--[no-]split-index]\n"
"\t     [--[no-|test-|force-]untracked-cache]\n"
"\t     [--[no-]fsmonitor]\n"
"\t     [--really-refresh] [--unresolve] [--again | -g]\n"
"\t     [--info-only] [--index-info]\n"
"\t     [-z] [--stdin] [--index-version <n>]\n"
"\t     [--verbose]\n"
"\t     [--] [<file>...]\n"
msgstr ""
"'git update-index'\n"
"\t     [--add] [--remove | --force-remove] [--replace]\n"
"\t     [--refresh] [-q] [--unmerged] [--ignore-missing]\n"
"\t     [(--cacheinfo <mode>,<object>,<file>)...]\n"
"\t     [--chmod=(+|-)x]\n"
"\t     [--[no-]assume-unchanged]\n"
"\t     [--[no-]skip-worktree]\n"
"\t     [--[no-]ignore-skip-worktree-entries]\n"
"\t     [--[no-]fsmonitor-valid]\n"
"\t     [--ignore-submodules]\n"
"\t     [--[no-]split-index]\n"
"\t     [--[no-|test-|force-]untracked-cache]\n"
"\t     [--[no-]fsmonitor]\n"
"\t     [--really-refresh] [--unresolve] [--again | -g]\n"
"\t     [--info-only] [--index-info]\n"
"\t     [-z] [--stdin] [--index-version <n>]\n"
"\t     [--verbose]\n"
"\t     [--] [<file>...]\n"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:32
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:35
msgid ""
"Modifies the index. Each file mentioned is updated into the index and any "
"'unmerged' or 'needs updating' state is cleared."
msgstr ""
"インデックスを変更します。 言及された各ファイルはインデックスに更新され、"
"「unmerged」(マージされていない)または「needs updating」(更新が必要)状態がク"
"リアされます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:38
msgid ""
"See also linkgit:git-add[1] for a more user-friendly way to do some of the "
"most common operations on the index."
msgstr ""
"インデックスで最も一般的な操作のいくつかを実行するためのよりユーザーフレンド"
"リーな方法については、 linkgit:git-add[1] も参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:41
msgid ""
"The way 'git update-index' handles files it is told about can be modified "
"using the various options:"
msgstr ""
"`git update-index` が通知されたファイルを処理する方法は、さまざまなオプション"
"を使用して変更できます:"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:43
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:44
#, no-wrap
msgid "`--add`"
msgstr "`--add`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:48
msgid ""
"If a specified file isn't in the index already then it's added.  Default "
"behaviour is to ignore new files."
msgstr ""
"指定のファイルがまだインデックスにない場合は、追加されます。 デフォルトの動作"
"では、新規ファイルは無視されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:49
#, no-wrap
msgid "`--remove`"
msgstr "`--remove`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:53
msgid ""
"If a specified file is in the index but is missing then it's removed.  "
"Default behavior is to ignore removed file."
msgstr ""
"指定のファイルがインデックスに含まれているが欠落している場合、そのファイルは"
"削除されます。 デフォルトの動作では、削除済のファイルは無視されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:54
#, no-wrap
msgid "`--refresh`"
msgstr "`--refresh`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:57
msgid ""
"Looks at the current index and checks to see if merges or updates are needed "
"by checking stat() information."
msgstr ""
"現在のインデックスを調べ、 stat() 情報をチェックして、マージまたは更新が必要"
"かどうかを確認します。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:58
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:62
msgid ""
"Quiet.  If --refresh finds that the index needs an update, the default "
"behavior is to error out.  This option makes 'git update-index' continue "
"anyway."
msgstr ""
"静かにします。 もし `--refresh` がインデックスの更新を必要としていると判断し"
"た場合、デフォルトの動作はエラーになります。 このオプションは、 'git update-"
"index' をとにかく継続させます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:63
#, no-wrap
msgid "`--ignore-submodules`"
msgstr "`--ignore-submodules`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:66
msgid ""
"Do not try to update submodules.  This option is only respected when passed "
"before --refresh."
msgstr ""
"サブモジュールを更新しようと試みない。このオプションは、`--refresh` より前に"
"渡された場合にのみ尊重されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:67
#, no-wrap
msgid "`--unmerged`"
msgstr "`--unmerged`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:71
msgid ""
"If --refresh finds unmerged changes in the index, the default behavior is to "
"error out.  This option makes 'git update-index' continue anyway."
msgstr ""
"`--refresh` がインデックス内のマージされていない変更を検出した場合、デフォル"
"トの動作はエラー終了です。 このオプションにより、「git update-index」はとにか"
"く続行されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:72
#, no-wrap
msgid "`--ignore-missing`"
msgstr "`--ignore-missing`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:74
msgid "Ignores missing files during a --refresh"
msgstr "`--refresh` の処理中に欠落しているファイルを無視します"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:75
#, no-wrap
msgid "`--cacheinfo <mode>,<object>,<path>`"
msgstr "`--cacheinfo <mode>,<object>,<path>`"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:76
#, no-wrap
msgid "`--cacheinfo <mode> <object> <path>`"
msgstr "`--cacheinfo <mode> <object> <path>`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:81
msgid ""
"Directly insert the specified info into the index.  For backward "
"compatibility, you can also give these three arguments as three separate "
"parameters, but new users are encouraged to use a single-parameter form."
msgstr ""
"指定の情報を直接インデックスに挿入します。 下位互換性のために、これらの3つの"
"引数を3つの別個のパラメーターとして指定することもできますが、新しいユーザーは"
"単一パラメーター形式を使用することをお勧めします。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:82
#, no-wrap
msgid "`--index-info`"
msgstr "`--index-info`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:84
msgid "Read index information from stdin."
msgstr "stdinからインデックス情報を読み取ります。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:85
#, no-wrap
msgid "`--chmod=(+|-)x`"
msgstr "`--chmod=(+|-)x`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:87
msgid "Set the execute permissions on the updated files."
msgstr "更新されたファイルに実行権限を設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:88
#, no-wrap
msgid "`--[no-]assume-unchanged`"
msgstr "`--[no-]assume-unchanged`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:100
msgid ""
"When this flag is specified, the object names recorded for the paths are not "
"updated.  Instead, this option sets/unsets the \"assume unchanged\" bit for "
"the paths.  When the \"assume unchanged\" bit is on, the user promises not "
"to change the file and allows Git to assume that the working tree file "
"matches what is recorded in the index.  If you want to change the working "
"tree file, you need to unset the bit to tell Git.  This is sometimes helpful "
"when working with a big project on a filesystem that has very slow lstat(2) "
"system call (e.g. cifs)."
msgstr ""
"このフラグを指定すると、パスに記録されているオブジェクト名は更新されません。 "
"代わりに、このオプションは、パスの「assume unchanged」(無変更仮定)ビットを 設"
"定(1)/設定解除(0) します。 「assume unchanged」ビットがオンの場合、ユーザーは"
"ファイルを変更しないことを約束し、作業ツリーファイルがインデックスに記録され"
"ているものと一致するとGitに想定させます。 作業ツリーファイルを変更する場合"
"は、Gitに通知するビットを設定解除する必要があります。 これは、 lstat(2) シス"
"テムコールが非常に遅いファイルシステム(cifsなど)で大きなプロジェクトを操作す"
"る場合に役立つことがあります。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:105
msgid ""
"Git will fail (gracefully) in case it needs to modify this file in the index "
"e.g. when merging in a commit; thus, in case the assumed-untracked file is "
"changed upstream, you will need to handle the situation manually."
msgstr ""
"インデックス内のこのファイルを変更する必要がある場合、例えばコミットにマージ"
"するとき、Gitは(正常に)失敗します。 したがって、追跡されていないと仮定される"
"ファイルがアップストリームで変更された場合、あなたは状況を手動で処理する必要"
"があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:106
#, no-wrap
msgid "`--really-refresh`"
msgstr "`--really-refresh`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:109
msgid ""
"Like `--refresh`, but checks stat information unconditionally, without "
"regard to the \"assume unchanged\" setting."
msgstr ""
"`--refresh` と同様ですが、「assume unchanged」設定に関係なく、統計情報を無条"
"件にチェックします。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:110
#, no-wrap
msgid "`--[no-]skip-worktree`"
msgstr "`--[no-]skip-worktree`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:115
msgid ""
"When one of these flags is specified, the object name recorded for the paths "
"are not updated. Instead, these options set and unset the \"skip-worktree\" "
"bit for the paths. See section \"Skip-worktree bit\" below for more "
"information."
msgstr ""
"これらのフラグのいずれかが指定されている場合、パスに記録されているオブジェク"
"ト名は更新されません。 代わりに、これらのオプションは、パスの「skip-"
"worktree」ビットを設定および設定解除します。 詳細については、下記「Skip-"
"worktree bit」のセクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:117
#, no-wrap
msgid "`--[no-]ignore-skip-worktree-entries`"
msgstr "`--[no-]ignore-skip-worktree-entries`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:120
msgid ""
"Do not remove skip-worktree (AKA \"index-only\") entries even when the `--"
"remove` option was specified."
msgstr ""
"`--remove` オプションが指定されている場合でも、 skip-worktree (別名「インデッ"
"クスのみ」) エントリを削除しないでください。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:121
#, no-wrap
msgid "`--[no-]fsmonitor-valid`"
msgstr "`--[no-]fsmonitor-valid`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:126
msgid ""
"When one of these flags is specified, the object name recorded for the paths "
"are not updated. Instead, these options set and unset the \"fsmonitor valid"
"\" bit for the paths. See section \"File System Monitor\" below for more "
"information."
msgstr ""
"これらのフラグのいずれかが指定されている場合、パスに記録されているオブジェク"
"ト名は更新されません。 代わりに、これらのオプションは、パスの「fsmonitor "
"valid」ビットを設定および設定解除します。 詳細については、下記「File System "
"Monitor」のセクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:127
#, no-wrap
msgid "`-g`"
msgstr "`-g`"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:128
#, no-wrap
msgid "`--again`"
msgstr "`--again`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:131
msgid ""
"Runs 'git update-index' itself on the paths whose index entries are "
"different from those from the `HEAD` commit."
msgstr ""
"インデックスエントリが `HEAD` コミットとは異なるパスで `git update-index` 自"
"体を実行します。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:132
#, no-wrap
msgid "`--unresolve`"
msgstr "`--unresolve`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:135
msgid ""
"Restores the 'unmerged' or 'needs updating' state of a file during a merge "
"if it was cleared by accident."
msgstr ""
"誤ってクリアされた場合、マージ処理中のファイルの「unmerged」(マージされていな"
"い)または「needs updating」(更新が必要)状態を復元します。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:136
#, no-wrap
msgid "`--info-only`"
msgstr "`--info-only`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:140
msgid ""
"Do not create objects in the object database for all <file> arguments that "
"follow this flag; just insert their object IDs into the index."
msgstr ""
"このフラグに続くすべての <file> 引数に対して、オブジェクトデータベースにオブ"
"ジェクトを作成しません。 オブジェクトIDをインデックスに挿入するだけです。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:141
#, no-wrap
msgid "`--force-remove`"
msgstr "`--force-remove`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:144
msgid ""
"Remove the file from the index even when the working directory still has "
"such a file. (Implies --remove.)"
msgstr ""
"作業ディレクトリにそのようなファイルがまだある場合でも、インデックスからファ"
"イルを削除します。 (`--remove` の指定を含んでいます。)"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:145
#, no-wrap
msgid "`--replace`"
msgstr "`--replace`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:152
msgid ""
"By default, when a file `path` exists in the index, 'git update-index' "
"refuses an attempt to add `path/file`.  Similarly if a file `path/file` "
"exists, a file `path` cannot be added.  With --replace flag, existing "
"entries that conflict with the entry being added are automatically removed "
"with warning messages."
msgstr ""
"デフォルトでは、ファイル `path` がインデックスに存在する場合、 `git update-"
"index` は `path/file` を追加する試みを拒否します。 同様に、ファイル `path/"
"file` が存在する場合、ファイル `path` を追加することはできません。 `--"
"replace` フラグを使用すると、競合する既存のエントリが警告メッセージとともに自"
"動的に削除されて、エントリが追加されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:153
#, no-wrap
msgid "`--stdin`"
msgstr "`--stdin`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:157
msgid ""
"Instead of taking list of paths from the command line, read list of paths "
"from the standard input.  Paths are separated by LF (i.e. one path per line) "
"by default."
msgstr ""
"コマンドラインからパスのリストを取得する代わりに、標準入力からパスのリストを"
"読み取ります。 デフォルトでは、パスはLFで区切られます(つまり、1行に1つのパ"
"ス)。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:158
#, no-wrap
msgid "`--verbose`"
msgstr "`--verbose`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:160
msgid "Report what is being added and removed from index."
msgstr "インデックスに 追加・削除 されているものを報告します。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:161
#, no-wrap
msgid "`--index-version <n>`"
msgstr "`--index-version <n>`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:166
msgid ""
"Write the resulting index out in the named on-disk format version.  "
"Supported versions are 2, 3 and 4. The current default version is 2 or 3, "
"depending on whether extra features are used, such as `git add -N`."
msgstr ""
"結果のインデックスを、指定のディスク上のフォーマットバージョン(on-disk "
"format version)で書き出します。 サポートされているバージョンは 2 と 3 と 4 で"
"す。現在のデフォルトバージョンは、 `git add -N` などの追加機能が使用されてい"
"るかどうかに応じて、 2 または 3 です。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:172
msgid ""
"Version 4 performs a simple pathname compression that reduces index size by "
"30%-50% on large repositories, which results in faster load time. Version 4 "
"is relatively young (first released in 1.8.0 in October 2012). Other Git "
"implementations such as JGit and libgit2 may not support it yet."
msgstr ""
"バージョン4は、単純なパス名圧縮を実行し、大規模なリポジトリでインデックスサイ"
"ズを30%〜50%削減します。これにより、読み込み時間が短縮されます。 バージョン4"
"は比較的若いです(2012年10月の1.8.0で最初にリリースされました)。 JGitやlibgit2"
"などの他のGit実装は、まだサポートしていない可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:173
#, no-wrap
msgid "`-z`"
msgstr "`-z`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:176
msgid ""
"Only meaningful with `--stdin` or `--index-info`; paths are separated with "
"NUL character instead of LF."
msgstr ""
"これは `--stdin` または `--index-info` でのみ意味があります。 パスは、LFでは"
"なくNUL文字で区切られます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:177
#, no-wrap
msgid "`--split-index`"
msgstr "`--split-index`"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:178
#, no-wrap
msgid "`--no-split-index`"
msgstr "`--no-split-index`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:183
msgid ""
"Enable or disable split index mode. If split-index mode is already enabled "
"and `--split-index` is given again, all changes in $GIT_DIR/index are pushed "
"back to the shared index file."
msgstr ""
"分割インデックスモードを有効または無効にします。 分割インデックスモードがすで"
"に有効になっていて、 `--split-index` が再度指定された場合、 $GIT_DIR/index の"
"すべての変更が共有インデックスファイルに押し返されます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:189
msgid ""
"These options take effect whatever the value of the `core.splitIndex` "
"configuration variable (see linkgit:git-config[1]). But a warning is emitted "
"when the change goes against the configured value, as the configured value "
"will take effect next time the index is read and this will remove the "
"intended effect of the option."
msgstr ""
"これらのオプションは、構成変数 `core.splitIndex` の値が何であれ有効になります"
"(linkgit:git-config[1] 参照)。 しかし、構成変数 `core.splitIndex` の設定値に"
"反する変更を行うと警告が表示されます。なぜなら、次回インデックスを読み込むと"
"きには構成変数 `core.splitIndex` の設定値が有効になり、オプションの意図した効"
"果がなくなってしまうからです。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:190
#, no-wrap
msgid "`--untracked-cache`"
msgstr "`--untracked-cache`"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:191
#, no-wrap
msgid "`--no-untracked-cache`"
msgstr "`--no-untracked-cache`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:194
msgid ""
"Enable or disable untracked cache feature. Please use `--test-untracked-"
"cache` before enabling it."
msgstr ""
"追跡されていないモノのキャッシュ機能を有効または無効にします。 有効にする前に"
"は `--test-untracked-cache` の使用をお願いします。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:200
msgid ""
"These options take effect whatever the value of the `core.untrackedCache` "
"configuration variable (see linkgit:git-config[1]). But a warning is emitted "
"when the change goes against the configured value, as the configured value "
"will take effect next time the index is read and this will remove the "
"intended effect of the option."
msgstr ""
"これらのオプションは、 `core.untrackedCache` 構成変数の値に関係なく有効になり"
"ます(linkgit:git-config[1] 参照)。 ただし、 `core.untrackedCache` 構成変数設"
"定値に反する変更を行うと警告が表示されます。これは、インデックスを次に読み込"
"むときには `core.untrackedCache` 構成変数設定値が有効になり、このオプションが"
"意図したとおりの効果を得られなくなってしまうからです。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:201
#, no-wrap
msgid "`--test-untracked-cache`"
msgstr "`--test-untracked-cache`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:210
msgid ""
"Only perform tests on the working directory to make sure untracked cache can "
"be used. You have to manually enable untracked cache using `--untracked-"
"cache` or `--force-untracked-cache` or the `core.untrackedCache` "
"configuration variable afterwards if you really want to use it. If a test "
"fails the exit code is 1 and a message explains what is not working as "
"needed, otherwise the exit code is 0 and OK is printed."
msgstr ""
"追跡されていないモノのキャッシュ(untracked cache)を使用できることを確認するた"
"めに、作業ディレクトリでのみテストを実行します。 本当に使用したい場合は、後"
"で `--untracked-cache` または `--force-untracked-cache` または `core."
"untrackedCache` 構成変数を使用して、追跡されていないモノのキャッシュ"
"(untracked cache)を手動で有効にする必要があります。 テストが失敗した場合、"
"exitコードは1であり、必要に応じて機能しないことを説明するメッセージが表示され"
"ます。それ以外の場合、exitコードは0であり、OKと出力されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:211
#, no-wrap
msgid "`--force-untracked-cache`"
msgstr "`--force-untracked-cache`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:216
msgid ""
"Same as `--untracked-cache`. Provided for backwards compatibility with older "
"versions of Git where `--untracked-cache` used to imply `--test-untracked-"
"cache` but this option would enable the extension unconditionally."
msgstr ""
"`--untracked-cache` と同一です。 `--untracked-cache` が `--test-untracked-"
"cache` を意味するために使用されていた古いバージョンのGitとの下位互換性のため"
"に提供されていますが、このオプションは無条件に拡張を有効にします。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:217
#, no-wrap
msgid "`--fsmonitor`"
msgstr "`--fsmonitor`"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:218
#, no-wrap
msgid "`--no-fsmonitor`"
msgstr "`--no-fsmonitor`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:225
msgid ""
"Enable or disable files system monitor feature. These options take effect "
"whatever the value of the `core.fsmonitor` configuration variable (see "
"linkgit:git-config[1]). But a warning is emitted when the change goes "
"against the configured value, as the configured value will take effect next "
"time the index is read and this will remove the intended effect of the "
"option."
msgstr ""
"ファイルシステムモニター機能を有効または無効にします。 これらのオプションは、"
"設定変数 `core.fsmonitor` の値が何であっても有効になります((linkgit:git-"
"config[1] 参照)。 しかし、設定変数 `core.fsmonitor` の設定値と異なる変更を行"
"うと警告が表示されます。インデックスを次に読み込む際には設定変数 `core."
"fsmonitor` の設定値が有効となり、オプションの意図した効果がなくなってしまうか"
"らです。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:226
#, no-wrap
msgid "\\--"
msgstr "`--`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:228
msgid "Do not interpret any more arguments as options."
msgstr "これ以降の引数をオプションとして解釈しないでください。"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:229
#, no-wrap
msgid "<file>"
msgstr "<file>"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:235
msgid ""
"Files to act on.  Note that files beginning with '.' are discarded. This "
"includes `./file` and `dir/./file`. If you don't want this, then use cleaner "
"names.  The same applies to directories ending '/' and paths with '//'"
msgstr ""
"作用するファイル。 注意: `.` で始まるファイルは破棄されます。 これには、 `./"
"file` と `dir/./file` が含まれます。 これがあなたの求めるものでない場合は、よ"
"りクリーンな名前を使用してください。 `/` で終わるディレクトリと `//` で終わる"
"パスにも同じことが当てはまります。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:237
#, no-wrap
msgid "USING --REFRESH"
msgstr "USING `--refresh`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:243
msgid ""
"`--refresh` does not calculate a new sha1 file or bring the index up to date "
"for mode/content changes. But what it *does* do is to \"re-match\" the stat "
"information of a file with the index, so that you can refresh the index for "
"a file that hasn't been changed but where the stat entry is out of date."
msgstr ""
"`--refresh` は、新しいsha1ファイルを計算したり、また、モード/コンテンツ の変"
"更についてインデックスを最新の状態にしたりしません。 ただし、ファイルの統計情"
"報をインデックスと「再照合」(re-match)することで、変更されていないが統計エン"
"トリが古くなっているファイルのインデックスを更新できます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:246
msgid ""
"For example, you'd want to do this after doing a 'git read-tree', to link up "
"the stat index details with the proper files."
msgstr ""
"たとえば、あなたが「git read-tree」を実行した後にこれを実行して、統計インデッ"
"クスの詳細を適切なファイルにリンクすることができます。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:248
#, no-wrap
msgid "USING --CACHEINFO OR --INFO-ONLY"
msgstr "USING `--cacheinfo` OR `--info-only`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:252
msgid ""
"`--cacheinfo` is used to register a file that is not in the current working "
"directory.  This is useful for minimum-checkout merging."
msgstr ""
"`--cacheinfo` は、現在の作業ディレクトリにないファイルを登録するために使用さ"
"れます。 これは、最小チェックアウト(minimum-checkout)のマージに役立ちます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:254
msgid "To pretend you have a file at path with mode and sha1, say:"
msgstr ""
"path に mode と sha1 を持つファイルがあるように見せかけるには、以下のようにし"
"ます:"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:257
#, no-wrap
msgid "$ git update-index --add --cacheinfo <mode>,<sha1>,<path>\n"
msgstr "$ git update-index --add --cacheinfo <mode>,<sha1>,<path>\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:261
msgid ""
"`--info-only` is used to register files without placing them in the object "
"database.  This is useful for status-only repositories."
msgstr ""
"`--info-only` は、ファイルをオブジェクトデータベースに配置せずに登録するため"
"に使用されます。 これは、ステータスのみ(status-only)のリポジトリに役立ちま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:267
msgid ""
"Both `--cacheinfo` and `--info-only` behave similarly: the index is updated "
"but the object database isn't.  `--cacheinfo` is useful when the object is "
"in the database but the file isn't available locally.  `--info-only` is "
"useful when the file is available, but you do not wish to update the object "
"database."
msgstr ""
"`--cacheinfo` と `--info-only` はどちらも同じように振る舞います。インデックス"
"は更新されますが、オブジェクトデータベースは更新されません。 `--cacheinfo` "
"は、オブジェクトがデータベースにあるが、ファイルがローカルで利用できない場合"
"に役立ちます。 `--info-only` は、ファイルが利用可能であるが、オブジェクトデー"
"タベースを更新したくない場合に役立ちます。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:270
#, no-wrap
msgid "USING --INDEX-INFO"
msgstr "USING `--index-info`"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:275
msgid ""
"`--index-info` is a more powerful mechanism that lets you feed multiple "
"entry definitions from the standard input, and designed specifically for "
"scripts.  It can take inputs of three formats:"
msgstr ""
"`--index-info` は、標準入力から複数のエントリ定義を供給できるより強力なメカニ"
"ズムであり、スクリプト用に特別に設計されています。 以下の3つの形式の入力を受"
"け取ることができます:"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:277
#, no-wrap
msgid "mode SP type SP sha1          TAB path\n"
msgstr "mode SP type SP sha1          TAB path\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:279
msgid "This format is to stuff `git ls-tree` output into the index."
msgstr ""
"この形式は、 `git ls-tree` 出力をインデックスに詰め込むためのものです。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:281
#, no-wrap
msgid "mode         SP sha1 SP stage TAB path\n"
msgstr "mode         SP sha1 SP stage TAB path\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:284
msgid ""
"This format is to put higher order stages into the index file and matches "
"'git ls-files --stage' output."
msgstr ""
"この形式は、より高次のステージをインデックスファイルに配置するためのものであ"
"り、 `git ls-files --stage` の出力と一致します。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:286
#, no-wrap
msgid "mode         SP sha1          TAB path\n"
msgstr "mode         SP sha1          TAB path\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:289
msgid ""
"This format is no longer produced by any Git command, but is and will "
"continue to be supported by `update-index --index-info`."
msgstr ""
"この形式はGitコマンドでは生成されなくなりましたが、 `update-index --index-"
"info` では引き続きサポートされます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:293
msgid ""
"To place a higher stage entry to the index, the path should first be removed "
"by feeding a mode=0 entry for the path, and then feeding necessary input "
"lines in the third format."
msgstr ""
"インデックスに上位ステージのエントリを配置するには、最初にパスに mode=0 エン"
"トリを入力してパスを削除し、次に必要な入力行を3番目の形式で入力する必要があり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:295
msgid "For example, starting with this index:"
msgstr "たとえば、以下のインデックスから始めます:"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:299
#, no-wrap
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0       frotz\n"
msgstr ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0       frotz\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:302
msgid "you can feed the following input to `--index-info`:"
msgstr "あなたは以下の入力を `--index-info` にフィードできます:"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:308
#, no-wrap
msgid ""
"$ git update-index --index-info\n"
"0 0000000000000000000000000000000000000000\tfrotz\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""
"$ git update-index --index-info\n"
"0 0000000000000000000000000000000000000000\tfrotz\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:314
msgid ""
"The first line of the input feeds 0 as the mode to remove the path; the "
"SHA-1 does not matter as long as it is well formatted.  Then the second and "
"third line feeds stage 1 and stage 2 entries for that path.  After the "
"above, we would end up with this:"
msgstr ""
"入力の最初の行は、パスを削除するモードとして0を供給します。 SHA-1は、適切に"
"フォーマットされている限り問題ありません。 次に、2行目と3行目は、そのパスのス"
"テージ1とステージ2のエントリに供給します。 上記の後は、以下のようになるでしょ"
"う:"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:319
#, no-wrap
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:323
#, no-wrap
msgid "USING ``ASSUME UNCHANGED'' BIT"
msgstr "「assume unchanged」(無変更と仮定する)ビットの使用"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:338
msgid ""
"Many operations in Git depend on your filesystem to have an efficient "
"`lstat(2)` implementation, so that `st_mtime` information for working tree "
"files can be cheaply checked to see if the file contents have changed from "
"the version recorded in the index file.  Unfortunately, some filesystems "
"have inefficient `lstat(2)`.  If your filesystem is one of them, you can set "
"\"assume unchanged\" bit to paths you have not changed to cause Git not to "
"do this check.  Note that setting this bit on a path does not mean Git will "
"check the contents of the file to see if it has changed -- it makes Git to "
"omit any checking and assume it has *not* changed.  When you make changes to "
"working tree files, you have to explicitly tell Git about it by dropping "
"\"assume unchanged\" bit, either before or after you modify them."
msgstr ""
"Gitの多くの操作は、効率的な `lstat(2)` 実装をファイルシステムに依存しているた"
"め、作業ツリーファイルの `st_mtime` 情報を低コストでチェックして、ファイルの"
"内容がインデックスファイルに記録されているバージョンから変更されているかどう"
"かを確認できます。 残念ながら、一部のファイルシステムには非効率的な "
"`lstat(2)` があります。 ファイルシステムがそれらの1つである場合は、変更してい"
"ないパスに「assume unchanged」(不変更仮定)ビットを設定して、Gitがこのチェック"
"を行わないようにすることができます。 パスにこのビットを設定しても、Gitがファ"
"イルの内容をチェックしてファイルが変更されているかどうかを確認するわけではあ"
"りません。Gitはチェックを省略し、変更されていないと見なします。 作業ツリー"
"ファイルに変更を加えるときは、変更する前または後に、「assume unchanged」ビッ"
"トを削除して、Gitに明示的に通知する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:343
msgid ""
"In order to set \"assume unchanged\" bit, use `--assume-unchanged` option.  "
"To unset, use `--no-assume-unchanged`. To see which files have the \"assume "
"unchanged\" bit set, use `git ls-files -v` (see linkgit:git-ls-files[1])."
msgstr ""
"「assume unchanged」(不変更仮定)ビットを設定するには、 `--assume-unchanged` "
"オプションを使用します。 設定を解除するには、 `--no-assume-unchanged` を使用"
"します。 「assume unchanged」ビットが設定されているファイルを確認するには、 "
"`git ls-files -v` を使用します(linkgit:git-ls-files[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:353
msgid ""
"The command looks at `core.ignorestat` configuration variable.  When this is "
"true, paths updated with `git update-index paths...` and paths updated with "
"other Git commands that update both index and working tree (e.g. 'git apply "
"--index', 'git checkout-index -u', and 'git read-tree -u') are automatically "
"marked as \"assume unchanged\".  Note that \"assume unchanged\" bit is *not* "
"set if `git update-index --refresh` finds the working tree file matches the "
"index (use `git update-index --really-refresh` if you want to mark them as "
"\"assume unchanged\")."
msgstr ""
"このコマンドは `core.ignorestat` 構成変数を調べます。 core.ignorestat` 構成変"
"数が true の場合、 `git update-index paths...` で更新されたパスと、インデック"
"スと作業ツリーの両方を更新する他のGitコマンド(例: `git apply --index` や "
"`git checkout-index -u` や `git read-tree -u`)で更新されたパスは、自動的に"
"「変更されていないと見なす」とマークされます。 注意: `git update-index --"
"refresh` が、作業ツリーファイルとインデックスが一致することを検出した場合、"
"「assume unchanged」ビットは設定されないことに注意してください(あなたがそれら"
"に「assume unchanged」マークを付けたい場合は、 `git update-index --really-"
"refresh` を使用してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:357
msgid ""
"Sometimes users confuse the assume-unchanged bit with the skip-worktree "
"bit.  See the final paragraph in the \"Skip-worktree bit\" section below for "
"an explanation of the differences."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:360
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:362
msgid "To update and refresh only the files already checked out:"
msgstr ""
"すでにチェックアウトされているファイルのみをupdateおよびrefreshするには:"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:365
#, no-wrap
msgid "$ git checkout-index -n -f -a && git update-index --ignore-missing --refresh\n"
msgstr "$ git checkout-index -n -f -a && git update-index --ignore-missing --refresh\n"

#. type: Labeled list
#: ../Documentation-sedout/git-update-index.txt:367
#, no-wrap
msgid "On an inefficient filesystem with `core.ignorestat` set"
msgstr "`core.ignorestat` が設定された非効率的なファイルシステム上で…"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:383
#, no-wrap
msgid ""
"$ git update-index --really-refresh              <1>\n"
"$ git update-index --no-assume-unchanged foo.c   <2>\n"
"$ git diff --name-only                           <3>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <4>\n"
"M foo.c\n"
"$ git update-index foo.c                         <5>\n"
"$ git diff --name-only                           <6>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <7>\n"
"$ git update-index --no-assume-unchanged foo.c   <8>\n"
"$ git diff --name-only                           <9>\n"
"M foo.c\n"
msgstr ""
"$ git update-index --really-refresh              <1>\n"
"$ git update-index --no-assume-unchanged foo.c   <2>\n"
"$ git diff --name-only                           <3>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <4>\n"
"M foo.c\n"
"$ git update-index foo.c                         <5>\n"
"$ git diff --name-only                           <6>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <7>\n"
"$ git update-index --no-assume-unchanged foo.c   <8>\n"
"$ git diff --name-only                           <9>\n"
"M foo.c\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:386
msgid ""
"forces lstat(2) to set \"assume unchanged\" bits for paths that match index."
msgstr ""
"lstat(2) に、インデックスに一致するパスに「assume unchanged」(無変更仮定)ビッ"
"トをセットするように強制します。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:387
msgid "mark the path to be edited."
msgstr "編集するパスをマークします。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:388
msgid "this does lstat(2) and finds index matches the path."
msgstr ""
"これは lstat(2) を実行し、インデックスがパスに一致することを検出します。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:389
msgid "this does lstat(2) and finds index does *not* match the path."
msgstr ""
"これは lstat(2) を実行し、インデックスがパスと「一致しない」ことを検出しま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:390
msgid "registering the new version to index sets \"assume unchanged\" bit."
msgstr ""
"新しいバージョンをインデックスに登録すると、「assume unchanged」(無変更仮定)"
"ビットがセットされます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:391
msgid "and it is assumed unchanged."
msgstr "そしてそれは無変更と仮定されています(assumed unchanged)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:392
msgid "even after you edit it."
msgstr "それを編集した後でもです。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:393
msgid "you can tell about the change after the fact."
msgstr "あなたは事後に、変更について伝える事ができます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:394
msgid "now it checks with lstat(2) and finds it has been changed."
msgstr "いまや、 lstat(2) をチェックして、変更されていることがわかります。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:397
#, no-wrap
msgid "SKIP-WORKTREE BIT"
msgstr "SKIP-WORKTREE BIT"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:403
#, fuzzy
#| msgid ""
#| "Skip-worktree bit can be defined in one (long) sentence: When reading an "
#| "entry, if it is marked as skip-worktree, then Git pretends its working "
#| "directory version is up to date and read the index version instead."
msgid ""
"Skip-worktree bit can be defined in one (long) sentence: Tell git to avoid "
"writing the file to the working directory when reasonably possible, and "
"treat the file as unchanged when it is not present in the working directory."
msgstr ""
"skip-worktreeビットは1つの(長い)文で定義できます。これはエントリを読み取ると"
"きに、skip-worktreeとしてマークされている場合、Gitは作業ディレクトリのバー"
"ジョンが最新であるかのように見せかけ、代わりにインデックスバージョンを読み取"
"ります。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:406
msgid ""
"Note that not all git commands will pay attention to this bit, and some only "
"partially support it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:415
msgid ""
"The update-index flags and the read-tree capabilities relating to the skip-"
"worktree bit predated the introduction of the linkgit:git-sparse-checkout[1] "
"command, which provides a much easier way to configure and handle the skip-"
"worktree bits.  If you want to reduce your working tree to only deal with a "
"subset of the files in the repository, we strongly encourage the use of "
"linkgit:git-sparse-checkout[1] in preference to the low-level update-index "
"and read-tree primitives."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:426
msgid ""
"The primary purpose of the skip-worktree bit is to enable sparse checkouts, "
"i.e. to have working directories with only a subset of paths present.  When "
"the skip-worktree bit is set, Git commands (such as `switch`, `pull`, "
"`merge`) will avoid writing these files.  However, these commands will "
"sometimes write these files anyway in important cases such as conflicts "
"during a merge or rebase.  Git commands will also avoid treating the lack of "
"such files as an intentional deletion; for example `git add -u` will not "
"stage a deletion for these files and `git commit -a` will not make a commit "
"deleting them either."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:440
msgid ""
"Although this bit looks similar to assume-unchanged bit, its goal is "
"different.  The assume-unchanged bit is for leaving the file in the working "
"tree but having Git omit checking it for changes and presuming that the file "
"has not been changed (though if it can determine without stat'ing the file "
"that it has changed, it is free to record the changes).  skip-worktree tells "
"Git to ignore the absence of the file, avoid updating it when possible with "
"commands that normally update much of the working directory (e.g. "
"`checkout`, `switch`, `pull`, etc.), and not have its absence be recorded in "
"commits.  Note that in sparse checkouts (setup by `git sparse-checkout` or "
"by configuring core.sparseCheckout to true), if a file is marked as skip-"
"worktree in the index but is found in the working tree, Git will clear the "
"skip-worktree bit for that file."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:442
#, no-wrap
msgid "SPLIT INDEX"
msgstr "SPLIT INDEX"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:446
msgid ""
"This mode is designed for repositories with very large indexes, and aims at "
"reducing the time it takes to repeatedly write these indexes."
msgstr ""
"このモードは、非常に大きなインデックスを持つリポジトリ用に設計されており、こ"
"れらのインデックスを繰り返し書き込むのにかかる時間を短縮することを目的として"
"います。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:451
msgid ""
"In this mode, the index is split into two files, $GIT_DIR/index and $GIT_DIR/"
"sharedindex.<SHA-1>. Changes are accumulated in $GIT_DIR/index, the split "
"index, while the shared index file contains all index entries and stays "
"unchanged."
msgstr ""
"このモードでは、インデックスは $GIT_DIR/index と $GIT_DIR/sharedindex."
"<SHA-1> の2つのファイルに分割されます。 変更は分割インデックスである "
"$GIT_DIR/index に蓄積されますが、共有インデックス(shared index)ファイルにはす"
"べてのインデックスエントリが含まれ、変更されません。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:456
msgid ""
"All changes in the split index are pushed back to the shared index file when "
"the number of entries in the split index reaches a level specified by the "
"splitIndex.maxPercentChange config variable (see linkgit:git-config[1])."
msgstr ""
"分割インデックスのエントリ数が splitIndex.maxPercentChange 構成変数で指定され"
"たレベルに達すると、分割インデックスのすべての変更が共有インデックスファイル"
"に押し戻されます(linkgit:git-config[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:461
msgid ""
"Each time a new shared index file is created, the old shared index files are "
"deleted if their modification time is older than what is specified by the "
"splitIndex.sharedIndexExpire config variable (see linkgit:git-config[1])."
msgstr ""
"新しい共有インデックスファイルが作成されるたびに、古い共有インデックスファイ"
"ルは、変更時間が splitIndex.sharedIndexExpire 構成変数で指定された時間よりも"
"古い場合に削除されます(linkgit:git-config[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:465
msgid ""
"To avoid deleting a shared index file that is still used, its modification "
"time is updated to the current time every time a new split index based on "
"the shared index file is either created or read from."
msgstr ""
"まだ使用されている共有インデックスファイルの削除を回避するために、共有イン"
"デックスファイルに基づく新しい分割インデックスが、作成または読み取られるたび"
"に、その変更時刻が現在の時刻に更新されます。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:467
#, no-wrap
msgid "UNTRACKED CACHE"
msgstr "UNTRACKED CACHE"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:471
msgid ""
"This cache is meant to speed up commands that involve determining untracked "
"files such as `git status`."
msgstr ""
"このキャッシュは、 `git status` などの追跡されていないファイルの判別を伴うコ"
"マンドを高速化することを目的としています。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:478
msgid ""
"This feature works by recording the mtime of the working tree directories "
"and then omitting reading directories and stat calls against files in those "
"directories whose mtime hasn't changed. For this to work the underlying "
"operating system and file system must change the `st_mtime` field of "
"directories if files in the directory are added, modified or deleted."
msgstr ""
"この機能は、作業ツリーディレクトリのmtimeを記録し、mtimeが変更されていない"
"ディレクトリ内のファイルに対するディレクトリの読み取りとstat呼び出しを省略す"
"ることで機能します。 これを機能させるには、ディレクトリ内のファイルが追加、変"
"更、または削除された場合に、基盤となるオペレーティングシステムとファイルシス"
"テムがディレクトリの `st_mtime` フィールドを変更する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:483
msgid ""
"You can test whether the filesystem supports that with the `--test-untracked-"
"cache` option. The `--untracked-cache` option used to implicitly perform "
"that test in older versions of Git, but that's no longer the case."
msgstr ""
"`--test-untracked-cache` オプションを使用して、ファイルシステムがそれをサポー"
"トしているかどうかをテストできます。 `--untracked-cache` オプションは、古い"
"バージョンのGitでこのテストを暗黙的に実行するために使用されていましたが、現在"
"はそうではありません。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:491
msgid ""
"If you want to enable (or disable) this feature, it is easier to use the "
"`core.untrackedCache` configuration variable (see linkgit:git-config[1]) "
"than using the `--untracked-cache` option to `git update-index` in each "
"repository, especially if you want to do so across all repositories you use, "
"because you can set the configuration variable to `true` (or `false`) in "
"your `$HOME/.gitconfig` just once and have it affect all repositories you "
"touch."
msgstr ""
"この機能を有効(または無効)にする場合は、 各リポジトリで `--untracked-cache` "
"オプションを `git update-index` に使用するよりも、 `core.untrackedCache` 構成"
"変数(linkgit:git-config[1] 参照)を使用する方が簡単です。 特に、使用しているす"
"べてのリポジトリに対してそうしたい場合は、あなたの `$HOME/.gitconfig` で "
"`core.untrackedCache` 構成変数を `true`(または `false`)と一度セットするだけで"
"すべてのリポジトリでその機能を使えるため、簡単です。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:497
msgid ""
"When the `core.untrackedCache` configuration variable is changed, the "
"untracked cache is added to or removed from the index the next time a "
"command reads the index; while when `--[no-|force-]untracked-cache` are "
"used, the untracked cache is immediately added to or removed from the index."
msgstr ""
"`core.untrackedCache` 構成変数が変更されると、次にコマンドがインデックスを読"
"み取るときに、追跡されていないキャッシュがインデックスに追加されるか、イン"
"デックスから削除されます。 一方、 `--[no-|force-]untracked-cache` が使用され"
"ている場合、追跡されていないキャッシュはすぐにインデックスに追加されるか、イ"
"ンデックスから削除されます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:504
msgid ""
"Before 2.17, the untracked cache had a bug where replacing a directory with "
"a symlink to another directory could cause it to incorrectly show files "
"tracked by git as untracked. See the \"status: add a failing test showing a "
"core.untrackedCache bug\" commit to git.git. A workaround for that is (and "
"this might work for other undiscovered bugs in the future):"
msgstr ""
"2.17より前は、追跡されていないモノのキャッシュ(untracked cache)にバグがあり、"
"ディレクトリを別のディレクトリへのシンボリックリンクに置き換えると、gitによっ"
"て追跡されたファイルが追跡されていないものとして誤って表示される可能性があり"
"ました。 git.git の「status: add a failing test showing a core."
"untrackedCache bug」コミットを参照してください。 その回避策は以下のとおりです"
"(これは将来、他の未発見のバグでも機能する可能性があります):"

#. type: delimited block -
#: ../Documentation-sedout/git-update-index.txt:507
#, no-wrap
msgid "$ git -c core.untrackedCache=false status\n"
msgstr "$ git -c core.untrackedCache=false status\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:513
msgid ""
"This bug has also been shown to affect non-symlink cases of replacing a "
"directory with a file when it comes to the internal structures of the "
"untracked cache, but no case has been reported where this resulted in wrong "
"\"git status\" output."
msgstr ""
"このバグは、追跡されていないモノのキャッシュ(untracked cache)の内部構造に関し"
"て、ディレクトリをファイルに置き換えるシンボリックリンク以外のケースにも影響"
"を与えることが示されていますが、これにより誤った「git status」出力が発生した"
"ケースは報告されていません。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:519
msgid ""
"There are also cases where existing indexes written by git versions before "
"2.17 will reference directories that don't exist anymore, potentially "
"causing many \"could not open directory\" warnings to be printed on \"git "
"status\". These are new warnings for existing issues that were previously "
"silently discarded."
msgstr ""
"2.17より前のバージョンのgitによって書き込まれた既存のインデックスが、もう存在"
"しないディレクトリを参照し、「could not open directory」(ディレクトリを開けま"
"せんでした)という警告が「git status」に出力される可能性があります。 これら"
"は、以前は黙って破棄されていた既存の問題に対する新しい警告です。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:523
msgid ""
"As with the bug described above the solution is to one-off do a \"git status"
"\" run with `core.untrackedCache=false` to flush out the leftover bad data."
msgstr ""
"上記のバグと同様に、解決策は、 `core.untrackedCache=false` で「git status」を"
"1回実行して、残っている不良データをフラッシュすることです。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:525
#, no-wrap
msgid "FILE SYSTEM MONITOR"
msgstr "FILE SYSTEM MONITOR"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:529
msgid ""
"This feature is intended to speed up git operations for repos that have "
"large working directories."
msgstr ""
"この機能は、巨大な作業ディレクトリを持つリポジトリのgit操作を高速化することを"
"目的としています。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:536
#, fuzzy
#| msgid ""
#| "It enables git to work together with a file system monitor (see the "
#| "\"fsmonitor-watchman\" section of linkgit:githooks[5]) that can inform it "
#| "as to what files have been modified. This enables git to avoid having to "
#| "lstat() every file to find modified files."
msgid ""
"It enables git to work together with a file system monitor (see linkgit:git-"
"fsmonitor{litdd}daemon[1] and the \"fsmonitor-watchman\" section of linkgit:"
"githooks[5]) that can inform it as to what files have been modified. This "
"enables git to avoid having to lstat() every file to find modified files."
msgstr ""
"これにより、gitはファイルシステムモニター(linkgit:githooks[5]の「fsmonitor-"
"watchman」セクションを参照)と連携して、どのファイルが変更されたかを通知できま"
"す。 これにより、gitは、変更されたファイルを見つけるためにすべてのファイルを "
"lstat() する必要がなくなります。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:540
msgid ""
"When used in conjunction with the untracked cache, it can further improve "
"performance by avoiding the cost of scanning the entire working directory "
"looking for new files."
msgstr ""
"追跡されていないモノのキャッシュ(untracked cache)と組み合わせて使用すると、作"
"業ディレクトリ全体をスキャンして新しいファイルを探すコストを回避できるため、"
"パフォーマンスをさらに向上させることができます。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:548
msgid ""
"If you want to enable (or disable) this feature, it is easier to use the "
"`core.fsmonitor` configuration variable (see linkgit:git-config[1]) than "
"using the `--fsmonitor` option to `git update-index` in each repository, "
"especially if you want to do so across all repositories you use, because you "
"can set the configuration variable in your `$HOME/.gitconfig` just once and "
"have it affect all repositories you touch."
msgstr ""
"この機能を有効(または無効)にする場合は、 各リポジトリの `git update-index` "
"に `--fsmonitor` オプションを付けるよりも、 `core.fsmonitor` 構成変数"
"(linkgit:git-config[1] 参照)を使用する方が簡単です。 特に、すべてのリポジトリ"
"で同じことをしたい場合は、あなたの `$HOME/.gitconfig` で `core.fsmonitor` 構"
"成変数を一度設定するだけですべてのリポジトリでそれが適用されるので、使い勝手"
"はよいでしょう。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:553
msgid ""
"When the `core.fsmonitor` configuration variable is changed, the file system "
"monitor is added to or removed from the index the next time a command reads "
"the index. When `--[no-]fsmonitor` are used, the file system monitor is "
"immediately added to or removed from the index."
msgstr ""
"`core.fsmonitor` 構成変数が変更されると、次にコマンドがインデックスを読み取る"
"ときに、ファイルシステムモニターがインデックスに追加またはインデックスから削"
"除されます。 `--[no-]fsmonitor` を使用すると、ファイルシステムモニターはすぐ"
"にインデックスに追加またはインデックスから削除されます。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:555
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:564
#, no-wrap
msgid ""
"The command honors `core.filemode` configuration variable.  If\n"
"your repository is on a filesystem whose executable bits are\n"
"unreliable, this should be set to 'false' (see linkgit:git-config[1]).\n"
"This causes the command to ignore differences in file modes recorded\n"
"in the index and the file mode on the filesystem if they differ only on\n"
"executable bit.   On such an unfortunate filesystem, you may\n"
"need to use 'git update-index --chmod='.\n"
msgstr ""
"このコマンドは、`core.filemode` 構成変数を尊重します。\n"
"リポジトリが実行可能ビットの信頼性が低いファイルシステム上にある場合は、\n"
"これを「false」に設定する必要があります(linkgit:git-config[1] 参照)。\n"
"これにより、コマンドは、インデックスに記録されたファイルモードと、\n"
"実行可能ビットのみが異なる場合はファイルシステムのファイルモードの違いを無視します。\n"
"このような不幸なファイルシステムでは、\n"
"「git update-index --chmod=」を使用する必要があるかもしれません。\n"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:569
msgid ""
"Quite similarly, if `core.symlinks` configuration variable is set to "
"'false' (see linkgit:git-config[1]), symbolic links are checked out as plain "
"files, and this command does not modify a recorded file mode from symbolic "
"link to regular file."
msgstr ""
"まったく同様に、 `core.symlinks` 構成変数が 'false' に設定されている場合"
"(linkgit:git-config[1] 参照)、シンボリックリンクはプレーンファイルとして"
"チェックアウトされ、そしてこのコマンドは記録されたファイルモードをシンボリッ"
"クから通常のファイルへのリンクへ変更しません。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:572
msgid ""
"The command looks at `core.ignorestat` configuration variable.  See 'Using "
"\"assume unchanged\" bit' section above."
msgstr ""
"このコマンドは、 `core.ignorestat` 構成変数を調べます。 上記「Using \"assume "
"unchanged\" bit」セクションを参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:577
msgid ""
"The command also looks at `core.trustctime` configuration variable.  It can "
"be useful when the inode change time is regularly modified by something "
"outside Git (file system crawlers and backup systems use ctime for marking "
"files processed) (see linkgit:git-config[1])."
msgstr ""
"このコマンドは、 `core.trustctime` 構成変数も調べます。 iノードの変更時刻が"
"Gitの外部で定期的に変更される場合に便利です(ファイルシステムクローラーとバッ"
"クアップシステムは、処理されたファイルのマーキングにctimeを使用します)"
"(linkgit:git-config[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:581
msgid ""
"The untracked cache extension can be enabled by the `core.untrackedCache` "
"configuration variable (see linkgit:git-config[1])."
msgstr ""
"追跡されていないモノのキャッシュ(untracked cache)拡張は、 `core."
"untrackedCache` 構成変数によって有効にできます(linkgit:git-config[1] 参照)。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:583
#, no-wrap
msgid "NOTES"
msgstr "NOTES"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:591
msgid ""
"Users often try to use the assume-unchanged and skip-worktree bits to tell "
"Git to ignore changes to files that are tracked.  This does not work as "
"expected, since Git may still check working tree files against the index "
"when performing certain operations.  In general, Git does not provide a way "
"to ignore changes to tracked files, so alternate solutions are recommended."
msgstr ""
"ユーザーは、追跡されるファイルへの変更を無視するようにGitに指示するために、"
"assume-unchangedビット と skip-worktreeビット を使用しようと試みることがよく"
"ありますが、 Gitは特定の操作を実行するときに、インデックスに対して作業ツリー"
"ファイルをチェックする可能性があるため、これは期待どおりに機能しません。 一般"
"に、Gitは追跡されたファイルへの変更を無視する方法を提供しないため、別の解決策"
"をお勧めします。"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:597
msgid ""
"For example, if the file you want to change is some sort of config file, the "
"repository can include a sample config file that can then be copied into the "
"ignored name and modified.  The repository can even include a script to "
"treat the sample file as a template, modifying and copying it automatically."
msgstr ""
"たとえば、変更するファイルがある種の構成ファイルである場合、リポジトリにサン"
"プルの構成ファイルを含めることができます。このファイルは、無視された名前にコ"
"ピーして変更できます。 リポジトリには、サンプルファイルをテンプレートとして扱"
"い、自動的に変更およびコピーするスクリプトを含めることもできます。"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:599
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:603
msgid "linkgit:git-config[1], linkgit:git-add[1], linkgit:git-ls-files[1]"
msgstr "linkgit:git-config[1], linkgit:git-add[1], linkgit:git-ls-files[1]"

#. type: Title -
#: ../Documentation-sedout/git-update-index.txt:605
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-update-index.txt:606
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"

#~ msgid ""
#~ "To elaborate, \"reading\" means checking for file existence, reading file "
#~ "attributes or file content. The working directory version may be present "
#~ "or absent. If present, its content may match against the index version or "
#~ "not. Writing is not affected by this bit, content safety is still first "
#~ "priority. Note that Git _can_ update working directory file, that is "
#~ "marked skip-worktree, if it is safe to do so (i.e.  working directory "
#~ "version matches index version)"
#~ msgstr ""
#~ "詳しく説明すると、「reading」(読み取り)とは、ファイルの存在を確認するこ"
#~ "と、ファイルの属性またはファイルの内容を読み取ることを意味します。 作業"
#~ "ディレクトリのバージョンが存在する場合と存在しない場合があります。 存在す"
#~ "る場合、そのコンテンツはインデックスバージョンと一致するかどうかがわかりま"
#~ "す。 書き込みはこのビットの影響を受けません。コンテンツの安全性は依然とし"
#~ "て最優先事項です。 安全な場合(つまり、作業ディレクトリのバージョンがイン"
#~ "デックスのバージョンと一致する場合)、Gitはskip-worktreeとマークされた作業"
#~ "ディレクトリファイルを更新できることに注意してください。"

#~ msgid ""
#~ "Although this bit looks similar to assume-unchanged bit, its goal is "
#~ "different from assume-unchanged bit's. Skip-worktree also takes "
#~ "precedence over assume-unchanged bit when both are set."
#~ msgstr ""
#~ "このビットは、assume-unchanged ビットに似ていますが、その目的は、assume-"
#~ "unchanged ビットとは異なります。 skip-worktree は、両方が設定されている場"
#~ "合、 assume-unchanged ビットよりも優先されます。"
