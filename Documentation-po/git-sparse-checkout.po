# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-04-30 10:16+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-sparse-checkout.txt:2
#, no-wrap
msgid "git-sparse-checkout(1)"
msgstr "git-sparse-checkout(1)"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

# 原文の説明はcompileエラー出まくったので、大胆に原文説明を変更した。
# 元々は複数行で
#
# Initialize and modify the sparse-checkout configuration, which reduces the checkout to a set of paths given by a list of patterns.
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:7
#, fuzzy
#| msgid ""
#| "git-sparse-checkout - Reduces the checkout to a set of paths given by a "
#| "list of patterns"
msgid ""
"git-sparse-checkout - Reduce your working tree to a subset of tracked files"
msgstr ""
"git-sparse-checkout - チェックアウトをパターンのリストで指定されたパスのセッ"
"トに減らします"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:13
#, fuzzy, no-wrap
#| msgid "'git sparse-checkout <subcommand> [options]'\n"
msgid "'git sparse-checkout <subcommand> [<options>]'\n"
msgstr "'git sparse-checkout <subcommand> [options]'\n"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:23
msgid ""
"This command is used to create sparse checkouts, which change the working "
"tree from having all tracked files present to only having a subset of those "
"files.  It can also switch which subset of files are present, or undo and go "
"back to having all tracked files present in the working copy."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:27
msgid ""
"The subset of files is chosen by providing a list of directories in cone "
"mode (the default), or by providing a list of patterns in non-cone mode."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:32
msgid ""
"When in a sparse-checkout, other Git commands behave a bit differently.  For "
"example, switching branches will not update paths outside the sparse-"
"checkout directories/patterns, and `git commit -a` will not record paths "
"outside the sparse-checkout directories/patterns as deleted."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:36
msgid ""
"THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER "
"COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE "
"FUTURE."
msgstr ""
"警告: このコマンドは実験的なものです。 その動作、およびスパースチェックアウト"
"の存在下での他のコマンドの動作は、将来変更される可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:39
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:40
#, no-wrap
msgid "'list'"
msgstr "list"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:42
#, fuzzy
#| msgid "Describe the patterns in the sparse-checkout file."
msgid "Describe the directories or patterns in the sparse-checkout file."
msgstr "sparse-checkoutファイルにパターンを記述します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:43
#, no-wrap
msgid "'set'"
msgstr "set"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:50
msgid ""
"Enable the necessary sparse-checkout config settings (`core.sparseCheckout`, "
"`core.sparseCheckoutCone`, and `index.sparse`) if they are not already set "
"to the desired values, populate the sparse-checkout file from the list of "
"arguments following the 'set' subcommand, and update the working directory "
"to match."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:58
msgid ""
"To ensure that adjusting the sparse-checkout settings within a worktree does "
"not alter the sparse-checkout settings in other worktrees, the 'set' "
"subcommand will upgrade your repository config to use worktree-specific "
"config if not already present. The sparsity defined by the arguments to the "
"'set' subcommand are stored in the worktree-specific sparse-checkout file. "
"See linkgit:git-worktree[1] and the documentation of `extensions."
"worktreeConfig` in linkgit:git-config[1] for more details."
msgstr ""

# 原文は standard とのみ書いてあるが文意を汲んで「標準入力」と意訳した。
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:62
#, fuzzy
#| msgid ""
#| "When the `--stdin` option is provided, the patterns are read from "
#| "standard in as a newline-delimited list instead of from the arguments."
msgid ""
"When the `--stdin` option is provided, the directories or patterns are read "
"from standard in as a newline-delimited list instead of from the arguments."
msgstr ""
"`--stdin` オプションを指定すると、パターンは引数からではなく、改行で区切られ"
"たリストとして標準入力から読み込まれます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:72
msgid ""
"By default, the input list is considered a list of directories, matching the "
"output of `git ls-tree -d --name-only`.  This includes interpreting "
"pathnames that begin with a double quote (\") as C-style quoted strings.  "
"Note that all files under the specified directories (at any depth) will be "
"included in the sparse checkout, as well as files that are siblings of "
"either the given directory or any of its ancestors (see 'CONE PATTERN SET' "
"below for more details).  In the past, this was not the default, and `--"
"cone` needed to be specified or `core.sparseCheckoutCone` needed to be "
"enabled."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:77
msgid ""
"When `--no-cone` is passed, the input list is considered a list of "
"patterns.  This mode has a number of drawbacks, including not working with "
"some options like `--sparse-index`.  As explained in the \"Non-cone Problems"
"\" section below, we do not recommend using it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:85
#, fuzzy
#| msgid ""
#| "Use the `--[no-]sparse-index` option to toggle the use of the sparse "
#| "index format. This reduces the size of the index to be more closely "
#| "aligned with your sparse-checkout definition. This can have significant "
#| "performance advantages for commands such as `git status` or `git add`.  "
#| "This feature is still experimental. Some commands might be slower with a "
#| "sparse index until they are properly integrated with the feature."
msgid ""
"Use the `--[no-]sparse-index` option to use a sparse index (the default is "
"to not use it).  A sparse index reduces the size of the index to be more "
"closely aligned with your sparse-checkout definition. This can have "
"significant performance advantages for commands such as `git status` or `git "
"add`.  This feature is still experimental. Some commands might be slower "
"with a sparse index until they are properly integrated with the feature."
msgstr ""
"`--[no-]sparse-index` オプションを使用して、スパースインデックス形式の使用を"
"切り替えます。 これにより、インデックスのサイズが縮小され、スパースチェックア"
"ウト定義とより緊密に連携します。 これにより、`gits tatus` や `git add` などの"
"コマンドのパフォーマンスが大幅に向上する可能性があります。 注意: この機能はま"
"だ実験段階です。 一部のコマンドは、機能と適切に統合されるまで、インデックスが"
"まばら(sparse)であると遅くなる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:92
msgid ""
"Using a sparse index requires modifying the index in a way that is not "
"completely understood by external tools. If you have trouble with this "
"compatibility, then run `git sparse-checkout init --no-sparse-index` to "
"rewrite your index to not be sparse. Older versions of Git will not "
"understand the sparse directory entries index extension and may fail to "
"interact with your repository until it is disabled."
msgstr ""
"スパースインデックスを使用するには、外部ツールでは完全には理解できない方法で"
"インデックスを変更する必要があります。 この互換性に問題がある場合は、 `git "
"sparse-checkout init --no-sparse-index` を実行して、インデックスがまばらにな"
"らないように書き換えます。 古いバージョンのGitは、スパースディレクトリエント"
"リのインデックス拡張機能を理解せず、それが無効になるまでリポジトリとのやり取"
"りに失敗する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:93
#, no-wrap
msgid "'add'"
msgstr "add"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:98
#, fuzzy
#| msgid ""
#| "Update the sparse-checkout file to include additional patterns.  By "
#| "default, these patterns are read from the command-line arguments, but "
#| "they can be read from stdin using the `--stdin` option. When `core."
#| "sparseCheckoutCone` is enabled, the given patterns are interpreted as "
#| "directory names as in the 'set' subcommand."
msgid ""
"Update the sparse-checkout file to include additional directories (in cone "
"mode) or patterns (in non-cone mode).  By default, these directories or "
"patterns are read from the command-line arguments, but they can be read from "
"stdin using the `--stdin` option."
msgstr ""
"スパースチェックアウトファイルを更新して、追加のパターンを含めます。 デフォル"
"トでは、これらのパターンはコマンドライン引数から読み取られますが、 `--stdin` "
"オプションを使用して標準入力から読み取ることができます。 `core."
"sparseCheckoutCone` が有効になっている場合、指定されたパターンはsetサブコマン"
"ドのようにディレクトリ名として解釈されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:99
#, no-wrap
msgid "'reapply'"
msgstr "reapply"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:108
msgid ""
"Reapply the sparsity pattern rules to paths in the working tree.  Commands "
"like merge or rebase can materialize paths to do their work (e.g. in order "
"to show you a conflict), and other sparse-checkout commands might fail to "
"sparsify an individual file (e.g. because it has unstaged changes or "
"conflicts).  In such cases, it can make sense to run `git sparse-checkout "
"reapply` later after cleaning up affected paths (e.g. resolving conflicts, "
"undoing or committing changes, etc.)."
msgstr ""
"作業ツリーのパスにスパースパターンルールを再適用します。 マージやリベースなど"
"のコマンドは、作業を行うためのパスを具体化でき(たとえば、競合を表示するため)"
"ますが、他のスパースチェックアウトコマンドは、個々のファイルをスパース化でき"
"ない場合があります(たとえば、ステージングされていない変更や競合があるため)。 "
"このような場合、影響を受けるパスをクリーンアップした後、(たとえば、競合の解"
"決、変更の取り消しまたはコミットなどの)後で `git sparse-checkout reapply` を"
"実行するのが理にかなっています。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:113
msgid ""
"The `reapply` command can also take `--[no-]cone` and `--[no-]sparse-index` "
"flags, with the same meaning as the flags from the `set` command, in order "
"to change which sparsity mode you are using without needing to also "
"respecify all sparsity paths."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:114
#, no-wrap
msgid "'disable'"
msgstr "disable"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:117
#, fuzzy
#| msgid ""
#| "Disable the `core.sparseCheckout` config setting, and restore the working "
#| "directory to include all files. Leaves the sparse-checkout file intact so "
#| "a later 'git sparse-checkout init' command may return the working "
#| "directory to the same state."
msgid ""
"Disable the `core.sparseCheckout` config setting, and restore the working "
"directory to include all files."
msgstr ""
"`core.sparseCheckout` 構成設定を無効にし、すべてのファイルを含めるように作業"
"ディレクトリを復元(restore)します。 その後 'git sparse-checkout init' コマン"
"ドで作業ディレクトリが同じ状態に戻る可能性があるため、スパースチェックアウト"
"ファイルはそのまま残します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:118
#, no-wrap
msgid "'init'"
msgstr "init"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:121
msgid ""
"Deprecated command that behaves like `set` with no specified paths.  May be "
"removed in the future."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:129
msgid ""
"Historically, `set` did not handle all the necessary config settings, which "
"meant that both `init` and `set` had to be called.  Invoking both meant the "
"`init` step would first remove nearly all tracked files (and in cone mode, "
"ignored files too), then the `set` step would add many of the tracked files "
"(but not ignored files) back.  In addition to the lost files, the "
"performance and UI of this combination was poor."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:137
msgid ""
"Also, historically, `init` would not actually initialize the sparse-checkout "
"file if it already existed.  This meant it was possible to return to a "
"sparse-checkout without remembering which paths to pass to a subsequent "
"'set' or 'add' command.  However, `--cone` and `--sparse-index` options "
"would not be remembered across the disable command, so the easy restore of "
"calling a plain `init` decreased in utility."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:139
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:140
#, fuzzy, no-wrap
#| msgid ""
#| "$ git sparse-checkout list\n"
#| "A/B/C\n"
msgid "`git sparse-checkout set MY/DIR1 SUB/DIR2`"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:150
msgid ""
"Change to a sparse checkout with all files (at any depth) under MY/DIR1/ and "
"SUB/DIR2/ present in the working copy (plus all files immediately under MY/ "
"and SUB/ and the toplevel directory).  If already in a sparse checkout, "
"change which files are present in the working copy to this new selection.  "
"Note that this command will also delete all ignored files in any directory "
"that no longer has either tracked or non-ignored-untracked files present."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:151
#, fuzzy, no-wrap
#| msgid ""
#| "$ git sparse-checkout list\n"
#| "A/B/C\n"
msgid "`git sparse-checkout disable`"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:155
#, fuzzy
#| msgid ""
#| "To repopulate the working directory with all files, use the `git sparse-"
#| "checkout disable` command."
msgid ""
"Repopulate the working directory with all files, disabling sparse checkouts."
msgstr ""
"作業ディレクトリにすべてのファイルを再入力するには、 `git sparse-checkou "
"tdisable` コマンドを使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:156
#, fuzzy, no-wrap
#| msgid ""
#| "$ git sparse-checkout list\n"
#| "A/B/C\n"
msgid "`git sparse-checkout add SOME/DIR/ECTORY`"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:162
msgid ""
"Add all files under SOME/DIR/ECTORY/ (at any depth) to the sparse checkout, "
"as well as all files immediately under SOME/DIR/ and immediately under "
"SOME/.  Must already be in a sparse checkout before using this command."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:163
#, fuzzy, no-wrap
#| msgid "git-sparse-checkout(1)"
msgid "`git sparse-checkout reapply`"
msgstr "git-sparse-checkout(1)"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:174
msgid ""
"It is possible for commands to update the working tree in a way that does "
"not respect the selected sparsity directories.  This can come from tools "
"external to Git writing files, or even affect Git commands because of either "
"special cases (such as hitting conflicts when merging/rebasing), or because "
"some commands didn't fully support sparse checkouts (e.g. the old "
"`recursive` merge backend had only limited support).  This command reapplies "
"the existing sparse directory specifications to make the working directory "
"match."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:176
#, fuzzy, no-wrap
#| msgid "SPARSE CHECKOUT"
msgid "INTERNALS -- SPARSE CHECKOUT"
msgstr "SPARSE CHECKOUT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:186
#, fuzzy
#| msgid ""
#| "\"Sparse checkout\" allows populating the working directory sparsely.  It "
#| "uses the skip-worktree bit (see linkgit:git-update-index[1]) to tell Git "
#| "whether a file in the working directory is worth looking at. If the skip-"
#| "worktree bit is set, then the file is ignored in the working directory. "
#| "Git will not populate the contents of those files, which makes a sparse "
#| "checkout helpful when working in a repository with many files, but only a "
#| "few are important to the current user."
msgid ""
"\"Sparse checkout\" allows populating the working directory sparsely.  It "
"uses the skip-worktree bit (see linkgit:git-update-index[1]) to tell Git "
"whether a file in the working directory is worth looking at. If the skip-"
"worktree bit is set, and the file is not present in the working tree, then "
"its absence is ignored. Git will avoid populating the contents of those "
"files, which makes a sparse checkout helpful when working in a repository "
"with many files, but only a few are important to the current user."
msgstr ""
"「sparse checkout」(まばらなチェックアウト)を使用すると、作業ディレクトリにま"
"ばらにデータを入力できます。 skip-worktreeビット(linkgit:git-update-index[1] "
"参照)を使用して、作業ディレクトリ内のファイルを確認する価値があるかどうかを"
"Gitに通知します。 skip-worktreeビットが設定されている場合、作業ディレクトリの"
"ファイルは無視されます。  Git はこれらのファイルの内容を入力しないので、多く"
"のファイルがあるリポジトリで作業しているが、現在のユーザーにとって重要なもの"
"はごくわずかである場合に、まばらなチェックアウトが役に立ちます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:192
msgid ""
"The `$GIT_DIR/info/sparse-checkout` file is used to define the skip-worktree "
"reference bitmap. When Git updates the working directory, it updates the "
"skip-worktree bits in the index based on this file. The files matching the "
"patterns in the file will appear in the working directory, and the rest will "
"not."
msgstr ""
"`$GIT_DIR/info/sparse-checkout` ファイルは、スキップワークツリー参照ビット"
"マップを定義するために使用されます。 Gitが作業ディレクトリを更新すると、この"
"ファイルに基づいてインデックスのスキップワークツリービットが更新されます。 "
"ファイル内のパターンに一致するファイルは作業ディレクトリに表示され、残りは表"
"示されません。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:194
#, no-wrap
msgid "INTERNALS -- NON-CONE PROBLEMS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:203
msgid ""
"The `$GIT_DIR/info/sparse-checkout` file populated by the `set` and `add` "
"subcommands is defined to be a bunch of patterns (one per line)  using the "
"same syntax as `.gitignore` files.  In cone mode, these patterns are "
"restricted to matching directories (and users only ever need supply or see "
"directory names), while in non-cone mode any gitignore-style pattern is "
"permitted.  Using the full gitignore-style patterns in non-cone mode has a "
"number of shortcomings:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:208
msgid ""
"Fundamentally, it makes various worktree-updating processes (pull, merge, "
"rebase, switch, reset, checkout, etc.) require O(N*M) pattern matches, where "
"N is the number of patterns and M is the number of paths in the index.  This "
"scales poorly."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:211
msgid ""
"Avoiding the scaling issue has to be done via limiting the number of "
"patterns via specifying leading directory name or glob."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:222
msgid ""
"Passing globs on the command line is error-prone as users may forget to "
"quote the glob, causing the shell to expand it into all matching files and "
"pass them all individually along to sparse-checkout set/add.  While this "
"could also be a problem with e.g. \"git grep -- *.c\", mistakes with grep/"
"log/status appear in the immediate output.  With sparse-checkout, the "
"mistake gets recorded at the time the sparse-checkout command is run and "
"might not be problematic until the user later switches branches or rebases "
"or merges, thus putting a delay between the user's error and when they have "
"a chance to catch/notice it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:228
msgid ""
"Related to the previous item, sparse-checkout has an 'add' subcommand but no "
"'remove' subcommand.  Even if a 'remove' subcommand were added, undoing an "
"accidental unquoted glob runs the risk of \"removing too much\", as it may "
"remove entries that had been included before the accidental add."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:237
msgid ""
"Non-cone mode uses gitignore-style patterns to select what to *include* "
"(with the exception of negated patterns), while .gitignore files use "
"gitignore-style patterns to select what to *exclude* (with the exception of "
"negated patterns).  The documentation on gitignore-style patterns usually "
"does not talk in terms of matching or non-matching, but on what the user "
"wants to \"exclude\".  This can cause confusion for users trying to learn "
"how to specify sparse-checkout patterns to get their desired behavior."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:242
msgid ""
"Every other git subcommand that wants to provide \"special path pattern "
"matching\" of some sort uses pathspecs, but non-cone mode for sparse-"
"checkout uses gitignore patterns, which feels inconsistent."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:244
msgid ""
"It has edge cases where the \"right\" behavior is unclear.  Two examples:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:246
#, no-wrap
msgid "First, two users are in a subdirectory, and the first runs\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:247
#, fuzzy, no-wrap
#| msgid ""
#| "$ git sparse-checkout list\n"
#| "A/B/C\n"
msgid "git sparse-checkout set '/toplevel-dir/*.c'\n"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:248
#, no-wrap
msgid "while the second runs\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:249
#, fuzzy, no-wrap
#| msgid ""
#| "$ git sparse-checkout list\n"
#| "A/B/C\n"
msgid "git sparse-checkout set relative-dir\n"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:250
#, no-wrap
msgid "Should those arguments be transliterated into\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:251
#, no-wrap
msgid "current/subdirectory/toplevel-dir/*.c\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:252
#, no-wrap
msgid "and\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:253
#, no-wrap
msgid "current/subdirectory/relative-dir\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:260
#, no-wrap
msgid ""
"before inserting into the sparse-checkout file?  The user who typed\n"
"the first command is probably aware that arguments to set/add are\n"
"supposed to be patterns in non-cone mode, and probably would not be\n"
"happy with such a transliteration.  However, many gitignore-style\n"
"patterns are just paths, which might be what the user who typed the\n"
"second command was thinking, and they'd be upset if their argument\n"
"wasn't transliterated.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:272
msgid ""
"Second, what should bash-completion complete on for set/add commands for non-"
"cone users? If it suggests paths, is it exacerbating the problem above? "
"Also, if it suggests paths, what if the user has a file or directory that "
"begins with either a '!' or '#' or has a '*', '\\', '?', '[', or ']' in its "
"name? And if it suggests paths, will it complete \"/pro\" to \"/proc\" (in "
"the root filesytem) rather than to \"/progress.txt\" in the current "
"directory? (Note that users are likely to want to start paths with a leading "
"'/' in non-cone mode, for the same reason that .gitignore files often have "
"one.)  Completing on files or directories might give nasty surprises in all "
"these cases."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:280
msgid ""
"The excessive flexibility made other extensions essentially impractical.  `--"
"sparse-index` is likely impossible in non-cone mode; even if it is somehow "
"feasible, it would have been far more work to implement and may have been "
"too slow in practice.  Some ideas for adding coupling between partial clones "
"and sparse checkouts are only practical with a more restricted set of paths "
"as well."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:283
msgid ""
"For all these reasons, non-cone mode is deprecated.  Please switch to using "
"cone mode."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:286
#, no-wrap
msgid "INTERNALS -- CONE MODE HANDLING"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:295
#, no-wrap
msgid ""
"The \"cone mode\", which is the default, lets you specify only what\n"
"directories to include.  For any directory specified, all paths below\n"
"that directory will be included, and any paths immediately under\n"
"leading directories (including the toplevel directory) will also be\n"
"included.  Thus, if you specified the directory\n"
"    Documentation/technical/\n"
"then your sparse checkout would contain:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:297
msgid "all files in the toplevel-directory"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:298
msgid "all files immediately under Documentation/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:299
msgid "all files at any depth under Documentation/technical/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:302
msgid ""
"Also, in cone mode, even if no directories are specified, then the files in "
"the toplevel directory will be included."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:312
msgid ""
"When changing the sparse-checkout patterns in cone mode, Git will inspect "
"each tracked directory that is not within the sparse-checkout cone to see if "
"it contains any untracked files. If all of those files are ignored due to "
"the `.gitignore` patterns, then the directory will be deleted. If any of the "
"untracked files within that directory is not ignored, then no deletions will "
"occur within that directory and a warning message will appear. If these "
"files are important, then reset your sparse-checkout definition so they are "
"included, use `git add` and `git commit` to store them, then remove any "
"remaining files manually to ensure Git can behave optimally."
msgstr ""
"円錐(cone)モードでスパースチェックアウトパターンを変更すると、Gitはスパース"
"チェックアウト円錐(cone)内にない追跡中の各ディレクトリを検査して、追跡されて"
"いないファイルが含まれているかどうかを確認します。 `.gitignore` パターンが原"
"因でこれらのファイルがすべて無視された場合、ディレクトリは削除されます。 その"
"ディレクトリ内の追跡されていないファイルのいずれかが無視されない場合、その"
"ディレクトリ内で削除は発生せず、警告メッセージが表示されます。 これらのファイ"
"ルが重要な場合は、スパースチェックアウト定義をリセットして含まれるようにし、 "
"`git add` と `git commit` を使用してファイルを保存し、残りのファイルを手動で"
"削除して、Gitが最適に動作できるようにします。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:316
msgid ""
"See also the \"Internals -- Cone Pattern Set\" section to learn how the "
"directories are transformed under the hood into a subset of the Full Pattern "
"Set of sparse-checkout."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:319
#, fuzzy, no-wrap
#| msgid "FULL PATTERN SET"
msgid "INTERNALS -- FULL PATTERN SET"
msgstr "FULL PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:326
msgid ""
"The full pattern set allows for arbitrary pattern matches and complicated "
"inclusion/exclusion rules. These can result in O(N*M) pattern matches when "
"updating the index, where N is the number of patterns and M is the number of "
"paths in the index. To combat this performance issue, a more restricted "
"pattern set is allowed when `core.sparseCheckoutCone` is enabled."
msgstr ""
"フルパターンセットにより、任意のパターンの一致と複雑な包含/除外ルールが可能に"
"なります。 これらにより、インデックスを更新するときに O(オー;N*M)パターンが一"
"致する可能性があります。ここで、Nはパターンの数、Mはインデックス内のパスの数"
"です。 このパフォーマンスの問題に対処するために、 `core.sparseCheckoutCone` "
"が有効になっている場合は、より制限されたパターンセットが許可されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:333
msgid ""
"The sparse-checkout file uses the same syntax as `.gitignore` files; see "
"linkgit:gitignore[5] for details.  Here, though, the patterns are usually "
"being used to select which files to include rather than which files to "
"exclude.  (However, it can get a bit confusing since gitignore-style "
"patterns have negations defined by patterns which begin with a '!', so you "
"can also select files to _not_ include.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:337
msgid ""
"For example, to select everything, and then to remove the file `unwanted` "
"(so that every file will appear in your working tree except the file named "
"`unwanted`):"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:339
#, no-wrap
msgid "    git sparse-checkout set --no-cone '/*' '!unwanted'\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:343
msgid ""
"These patterns are just placed into the `$GIT_DIR/info/sparse-checkout` as-"
"is, so the contents of that file at this point would be"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:347
#, no-wrap
msgid ""
"/*\n"
"!unwanted\n"
msgstr ""
"/*\n"
"!unwanted\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:352
msgid ""
"See also the \"Sparse Checkout\" section of linkgit:git-read-tree[1] to "
"learn more about the gitignore-style patterns used in sparse checkouts."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:355
#, fuzzy, no-wrap
#| msgid "CONE PATTERN SET"
msgid "INTERNALS -- CONE PATTERN SET"
msgstr "CONE PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:360
msgid ""
"In cone mode, only directories are accepted, but they are translated into "
"the same gitignore-style patterns used in the full pattern set.  We refer to "
"the particular patterns used in those mode as being of one of two types:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:362
#, no-wrap
msgid "*Recursive:* All paths inside a directory are included.\n"
msgstr "*再帰*: (recursive)ディレクトリ内のすべてのパスが含まれます\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:364
#, no-wrap
msgid "*Parent:* All files immediately inside a directory are included.\n"
msgstr "*親*: (parent)ディレクトリ直下のすべてのファイルが含まれます。\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:369
#, fuzzy
#| msgid ""
#| "By default, when running `git sparse-checkout init`, the root directory "
#| "is added as a parent pattern. At this point, the sparse-checkout file "
#| "contains the following patterns:"
msgid ""
"Since cone mode always includes files at the toplevel, when running `git "
"sparse-checkout set` with no directories specified, the toplevel directory "
"is added as a parent pattern.  At this point, the sparse-checkout file "
"contains the following patterns:"
msgstr ""
"デフォルトでは、 `git sparse-checkout init` を実行すると、ルートディレクトリ"
"が親パターンとして追加されます。 この時点で、スパースチェックアウトファイルに"
"は以下のパターンが含まれています:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:373
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
msgstr ""
"/*\n"
"!/*/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:377
#, fuzzy
#| msgid ""
#| "This says \"include everything in root, but nothing two levels below root."
#| "\""
msgid ""
"This says \"include everything immediately under the toplevel directory, but "
"nothing at any level below that.\""
msgstr ""
"これは、「ルートは全てインクルードするが、ルートの2レベル下は何も含めない」と"
"いう意味です。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:383
#, fuzzy
#| msgid ""
#| "When in cone mode, the `git sparse-checkout set` subcommand takes a list "
#| "of directories instead of a list of sparse-checkout patterns. In this "
#| "mode, the command `git sparse-checkout set A/B/C` sets the directory `A/B/"
#| "C` as a recursive pattern, the directories `A` and `A/B` are added as "
#| "parent patterns. The resulting sparse-checkout file is now"
msgid ""
"When in cone mode, the `git sparse-checkout set` subcommand takes a list of "
"directories.  The command `git sparse-checkout set A/B/C` sets the directory "
"`A/B/C` as a recursive pattern, the directories `A` and `A/B` are added as "
"parent patterns. The resulting sparse-checkout file is now"
msgstr ""
"円錐(cone)モードの場合、 `git sparse-checkout set` サブコマンドは、スパース"
"チェックアウトパターンのリストではなく、ディレクトリのリストを取得します。 こ"
"のモードでは、コマンド `git sparse-checkout set A/B/C` は、ディレクトリ `A/B/"
"C` を再帰パターンとして設定し、ディレクトリ `A` と `A/B` は親パターンとして追"
"加されます。 結果のスパースチェックアウトファイルは以下のようになります"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:392
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"
msgstr ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:396
msgid ""
"Here, order matters, so the negative patterns are overridden by the positive "
"patterns that appear lower in the file."
msgstr ""
"ここでは順番が重要なので、ネガティブなパターンはファイルの下位に表示されるポ"
"ジティブなパターンに上書きされます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:403
#, fuzzy
#| msgid ""
#| "If `core.sparseCheckoutCone=true`, then Git will parse the sparse-"
#| "checkout file expecting patterns of these types. Git will warn if the "
#| "patterns do not match.  If the patterns do match the expected format, "
#| "then Git will use faster hash- based algorithms to compute inclusion in "
#| "the sparse-checkout."
msgid ""
"Unless `core.sparseCheckoutCone` is explicitly set to `false`, Git will "
"parse the sparse-checkout file expecting patterns of these types. Git will "
"warn if the patterns do not match.  If the patterns do match the expected "
"format, then Git will use faster hash-based algorithms to compute inclusion "
"in the sparse-checkout.  If they do not match, git will behave as though "
"`core.sparseCheckoutCone` was false, regardless of its setting."
msgstr ""
"`core.sparseCheckoutCone=true` の場合、Gitはこれらのタイプのパターンを期待し"
"てスパースチェックアウトファイルをパースします。 パターンが一致しない場合、"
"Gitは警告を発します。 パターンが期待される形式と一致する場合、Gitはより高速な"
"ハッシュベースのアルゴリズムを使用して、スパースチェックアウトに含めるモノを"
"計算します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:409
#, fuzzy
#| msgid ""
#| "In the cone mode case, the `git sparse-checkout list` subcommand will "
#| "list the directories that define the recursive patterns. For the example "
#| "sparse-checkout file above, the output is as follows:"
msgid ""
"In the cone mode case, despite the fact that full patterns are written to "
"the $GIT_DIR/info/sparse-checkout file, the `git sparse-checkout list` "
"subcommand will list the directories that define the recursive patterns. For "
"the example sparse-checkout file above, the output is as follows:"
msgstr ""
"円錐(cone)モードの場合、 `git sparse-checkout list` サブコマンドは、再帰"
"(recursive)パターンを定義するディレクトリを一覧表示します。 上記のスパース"
"チェックアウトファイルの例の場合、出力は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:413
#, no-wrap
msgid ""
"$ git sparse-checkout list\n"
"A/B/C\n"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:419
msgid ""
"If `core.ignoreCase=true`, then the pattern-matching algorithm will use a "
"case-insensitive check. This corrects for case mismatched filenames in the "
"'git sparse-checkout set' command to reflect the expected cone in the "
"working directory."
msgstr ""
"`core.ignoreCase=true` の場合、パターンマッチングアルゴリズムは大文字と小文字"
"を区別しないチェックを使用します。 これにより、 `git sparse-checkout set`  コ"
"マンドのファイル名が一致しない状況が修正され、作業ディレクトリに期待される円"
"錐(cone)が反映されます。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:422
#, fuzzy, no-wrap
#| msgid "SUBMODULES"
msgid "INTERNALS -- SUBMODULES"
msgstr "SUBMODULES"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:433
msgid ""
"If your repository contains one or more submodules, then submodules are "
"populated based on interactions with the `git submodule` command.  "
"Specifically, `git submodule init -- <path>` will ensure the submodule at "
"`<path>` is present, while `git submodule deinit [-f] -- <path>` will remove "
"the files for the submodule at `<path>` (including any untracked files, "
"uncommitted changes, and unpushed history).  Similar to how sparse-checkout "
"removes files from the working tree but still leaves entries in the index, "
"deinitialized submodules are removed from the working directory but still "
"have an entry in the index."
msgstr ""
"あなたのリポジトリに1つ以上のサブモジュールが含まれている場合、サブモジュール"
"は `git submodule` コマンドとの相互作用に基づいて入力されます。 具体的には、 "
"`git submodule init -- <path>` は `<path>` のサブモジュールが存在することを確"
"認し、 `git submodule deinit [-f] -- <path>` は `<path>` のサブモジュールの"
"ファイルを削除します(追跡されていないファイル、コミットされていない変更、プッ"
"シュされていない履歴を含む)。sparse-checkoutが作業ツリーからファイルを削除す"
"るが、インデックスにエントリを残す方法と同様に、初期化されていないサブモ"
"ジュールは作業ディレクトリから削除されますが、インデックスにはエントリがあり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:443
msgid ""
"Since submodules may have unpushed changes or untracked files, removing them "
"could result in data loss.  Thus, changing sparse inclusion/exclusion rules "
"will not cause an already checked out submodule to be removed from the "
"working copy.  Said another way, just as `checkout` will not cause "
"submodules to be automatically removed or initialized even when switching "
"between branches that remove or add submodules, using `sparse-checkout` to "
"reduce or expand the scope of \"interesting\" files will not cause "
"submodules to be automatically deinitialized or initialized either."
msgstr ""
"サブモジュールにはプッシュされていない変更または追跡されていないファイルがあ"
"る可能性があるため、それらを削除するとデータが失われる可能性があります。 した"
"がって、スパース 包含/除外 ルールを変更しても、すでにチェックアウトされている"
"サブモジュールが作業コピーから削除されることはありません。 別の言い方をすれ"
"ば、サブモジュールを削除または追加するブランチを切り替えても、 `checkout` に"
"よってサブモジュールが自動的に削除または初期化されないのと同様に、 `sparse-"
"checkout` を使用して「興味深い」ファイルの範囲を縮小または拡大してもサブモ"
"ジュールの自動的な非初期化または初期化は発生しません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:450
msgid ""
"Further, the above facts mean that there are multiple reasons that \"tracked"
"\" files might not be present in the working copy: sparsity pattern "
"application from sparse-checkout, and submodule initialization state.  Thus, "
"commands like `git grep` that work on tracked files in the working copy may "
"return results that are limited by either or both of these restrictions."
msgstr ""
"さらに、上記の事実は、「追跡された」ファイルが作業コピーに存在しない可能性に"
"複数の理由があることを意味します。スパースチェックアウトからのスパースパター"
"ンアプリケーション、およびサブモジュールの初期化状態です。 したがって、作業コ"
"ピー内の追跡されたファイルで機能する `git grep` のようなコマンドは、これらの"
"制限のいずれかまたは両方によって制限される結果を返す可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:453
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:457
msgid "linkgit:git-read-tree[1] linkgit:gitignore[5]"
msgstr "linkgit:git-read-tree[1] linkgit:gitignore[5]"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:459
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:460
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"

#~ msgid ""
#~ "Initialize and modify the sparse-checkout configuration, which reduces "
#~ "the checkout to a set of paths given by a list of patterns."
#~ msgstr ""
#~ "スパース(まばらな)チェックアウト構成を初期化および変更します。これにより、"
#~ "チェックアウトがパターンのリストで指定されたパスのセットに削減されます。"

#~ msgid ""
#~ "Enable the `core.sparseCheckout` setting. If the sparse-checkout file "
#~ "does not exist, then populate it with patterns that match every file in "
#~ "the root directory and no other directories, then will remove all "
#~ "directories tracked by Git. Add patterns to the sparse-checkout file to "
#~ "repopulate the working directory."
#~ msgstr ""
#~ "`core.sparseCheckout` 設定を有効にします。スパースチェックアウトファイル"
#~ "(sparse-checkout file)が存在しない場合は、ルートディレクトリ内のすべての"
#~ "ファイルに一致し、他のディレクトリには一致しないパターンをスパースチェック"
#~ "アウトファイルに入力すると、Gitによって追跡されるすべてのディレクトリが削"
#~ "除されます。 スパースチェックアウトファイルにパターンを追加して、作業ディ"
#~ "レクトリに再設定します。"

#~ msgid ""
#~ "To avoid interfering with other worktrees, it first enables the "
#~ "`extensions.worktreeConfig` setting and makes sure to set the `core."
#~ "sparseCheckout` setting in the worktree-specific config file."
#~ msgstr ""
#~ "他のワークツリーへの干渉を避けるために、最初に `extensions."
#~ "worktreeConfig` 設定を有効にし、ワークツリー固有の構成ファイルで必ず "
#~ "`core.sparseCheckout` 設定を設定します。"

#~ msgid ""
#~ "When `--cone` is provided, the `core.sparseCheckoutCone` setting is also "
#~ "set, allowing for better performance with a limited set of patterns (see "
#~ "'CONE PATTERN SET' below)."
#~ msgstr ""
#~ "`--cone` を指定すると、 `core.sparseCheckoutCone` 設定も設定され、限定パ"
#~ "ターンのセットでパフォーマンスが向上します(下記の「CONE PATTERN SET」参"
#~ "照)。"

#~ msgid ""
#~ "Write a set of patterns to the sparse-checkout file, as given as a list "
#~ "of arguments following the 'set' subcommand. Update the working directory "
#~ "to match the new patterns. Enable the core.sparseCheckout config setting "
#~ "if it is not already enabled."
#~ msgstr ""
#~ "setサブコマンドに続く引数のリストとして与えられた一連のパターンをスパース"
#~ "チェックアウトファイルに書き込みます。 新しいパターンに一致するように作業"
#~ "ディレクトリを更新します。 core.sparseCheckout 構成設定がまだ有効になって"
#~ "いない場合は、有効にします。"

#~ msgid ""
#~ "When `core.sparseCheckoutCone` is enabled, the input list is considered a "
#~ "list of directories instead of sparse-checkout patterns. The command "
#~ "writes patterns to the sparse-checkout file to include all files "
#~ "contained in those directories (recursively) as well as files that are "
#~ "siblings of ancestor directories. The input format matches the output of "
#~ "`git ls-tree --name-only`.  This includes interpreting pathnames that "
#~ "begin with a double quote (\") as C-style quoted strings."
#~ msgstr ""
#~ "`core.sparseCheckoutCone` が有効になっている場合、入力リストはスパース"
#~ "チェックアウトパターンではなくディレクトリのリストと見なされます。 このコ"
#~ "マンドは、スパースチェックアウトファイルにパターンを書き込み、それらのディ"
#~ "レクトリに含まれるすべてのファイル(と、以下のディレクトリを再帰的にたどり"
#~ "ます)と、祖先ディレクトリの兄弟であるファイルを含めます。 入力形式は、 "
#~ "`git ls-tree --name-only` の出力と一致します。 これには、二重引用符(`\"`)"
#~ "で始まるパス名をCスタイルの引用符で囲まれた文字列として解釈することが含ま"
#~ "れます。"

#~ msgid ""
#~ "To enable the sparse-checkout feature, run `git sparse-checkout init` to "
#~ "initialize a simple sparse-checkout file and enable the `core."
#~ "sparseCheckout` config setting. Then, run `git sparse-checkout set` to "
#~ "modify the patterns in the sparse-checkout file."
#~ msgstr ""
#~ "スパースチェックアウト機能を有効にするには、 `git sparse-checkout init` を"
#~ "実行してシンプルなスパースチェックアウトファイルを初期化し、 `core."
#~ "sparseCheckout` 構成設定を有効にします。 次に、 `git sparse-checkout set` "
#~ "を実行して、スパースチェックアウトファイルのパターンを変更します。"

#~ msgid ""
#~ "By default, the sparse-checkout file uses the same syntax as `.gitignore` "
#~ "files."
#~ msgstr ""
#~ "デフォルトでは、sparse-checkoutファイルは `.gitignore` ファイルと同じ構文"
#~ "を使用します。"

#~ msgid ""
#~ "While `$GIT_DIR/info/sparse-checkout` is usually used to specify what "
#~ "files are included, you can also specify what files are _not_ included, "
#~ "using negative patterns. For example, to remove the file `unwanted`:"
#~ msgstr ""
#~ "通常、 `$GIT_DIR/info/sparse-checkout` は、含まれるファイルを指定するため"
#~ "に使用されますが、ネガティブパターンを使用して、「含まれない」ファイルを指"
#~ "定することもできます。 たとえば、ファイル unwanted を削除するには以下のよ"
#~ "うにします:"

#~ msgid "The accepted patterns in the cone pattern set are:"
#~ msgstr "円錐(cone)パターンセットで受け入れられるパターンは以下のとおりです:"

#~ msgid ""
#~ "In addition to the above two patterns, we also expect that all files in "
#~ "the root directory are included. If a recursive pattern is added, then "
#~ "all leading directories are added as parent patterns."
#~ msgstr ""
#~ "上記の2つのパターンに加えて、ルートディレクトリ内のすべてのファイルが含ま"
#~ "れていることも期待されます。再帰(recursive)パターンが追加されると、すべて"
#~ "の先行ディレクトリが親(parent)パターンとして追加されます。"
