# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-04-29 07:10+0900\n"
"PO-Revision-Date: 2022-04-30 10:16+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-sparse-checkout.txt:2
#, no-wrap
msgid "git-sparse-checkout(1)"
msgstr "git-sparse-checkout(1)"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

# 原文の説明はcompileエラー出まくったので、大胆に原文説明を変更した。
# 元々は複数行で
#
# Initialize and modify the sparse-checkout configuration, which reduces the checkout to a set of paths given by a list of patterns.
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:7
msgid ""
"git-sparse-checkout - Reduces the checkout to a set of paths given by a list "
"of patterns"
msgstr ""
"git-sparse-checkout - チェックアウトをパターンのリストで指定されたパスのセッ"
"トに減らします"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:12
#, no-wrap
msgid "'git sparse-checkout <subcommand> [options]'\n"
msgstr "'git sparse-checkout <subcommand> [options]'\n"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:19
msgid ""
"Initialize and modify the sparse-checkout configuration, which reduces the "
"checkout to a set of paths given by a list of patterns."
msgstr ""
"スパース(まばらな)チェックアウト構成を初期化および変更します。これにより、"
"チェックアウトがパターンのリストで指定されたパスのセットに削減されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:23
msgid ""
"THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER "
"COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE "
"FUTURE."
msgstr ""
"警告: このコマンドは実験的なものです。 その動作、およびスパースチェックアウト"
"の存在下での他のコマンドの動作は、将来変更される可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:26
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:27
#, no-wrap
msgid "'list'"
msgstr "list"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:29
msgid "Describe the patterns in the sparse-checkout file."
msgstr "sparse-checkoutファイルにパターンを記述します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:30
#, no-wrap
msgid "'init'"
msgstr "init"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:37
msgid ""
"Enable the `core.sparseCheckout` setting. If the sparse-checkout file does "
"not exist, then populate it with patterns that match every file in the root "
"directory and no other directories, then will remove all directories tracked "
"by Git. Add patterns to the sparse-checkout file to repopulate the working "
"directory."
msgstr ""
"`core.sparseCheckout` 設定を有効にします。スパースチェックアウトファイル"
"(sparse-checkout file)が存在しない場合は、ルートディレクトリ内のすべてのファ"
"イルに一致し、他のディレクトリには一致しないパターンをスパースチェックアウト"
"ファイルに入力すると、Gitによって追跡されるすべてのディレクトリが削除されま"
"す。 スパースチェックアウトファイルにパターンを追加して、作業ディレクトリに再"
"設定します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:41
msgid ""
"To avoid interfering with other worktrees, it first enables the `extensions."
"worktreeConfig` setting and makes sure to set the `core.sparseCheckout` "
"setting in the worktree-specific config file."
msgstr ""
"他のワークツリーへの干渉を避けるために、最初に `extensions.worktreeConfig` 設"
"定を有効にし、ワークツリー固有の構成ファイルで必ず `core.sparseCheckout` 設定"
"を設定します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:45
msgid ""
"When `--cone` is provided, the `core.sparseCheckoutCone` setting is also "
"set, allowing for better performance with a limited set of patterns (see "
"'CONE PATTERN SET' below)."
msgstr ""
"`--cone` を指定すると、 `core.sparseCheckoutCone` 設定も設定され、限定パター"
"ンのセットでパフォーマンスが向上します(下記の「CONE PATTERN SET」参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:52
msgid ""
"Use the `--[no-]sparse-index` option to toggle the use of the sparse index "
"format. This reduces the size of the index to be more closely aligned with "
"your sparse-checkout definition. This can have significant performance "
"advantages for commands such as `git status` or `git add`.  This feature is "
"still experimental. Some commands might be slower with a sparse index until "
"they are properly integrated with the feature."
msgstr "`--[no-]sparse-index` オプションを使用して、スパースインデックス形式の使用を切り替えます。 これにより、インデックスのサイズが縮小され、スパースチェックアウト定義とより緊密に連携します。 これにより、`gits tatus` や `git add` などのコマンドのパフォーマンスが大幅に向上する可能性があります。 注意: この機能はまだ実験段階です。 一部のコマンドは、機能と適切に統合されるまで、インデックスがまばら(sparse)であると遅くなる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:59
msgid ""
"Using a sparse index requires modifying the index in a way that is not "
"completely understood by external tools. If you have trouble with this "
"compatibility, then run `git sparse-checkout init --no-sparse-index` to "
"rewrite your index to not be sparse. Older versions of Git will not "
"understand the sparse directory entries index extension and may fail to "
"interact with your repository until it is disabled."
msgstr "スパースインデックスを使用するには、外部ツールでは完全には理解できない方法でインデックスを変更する必要があります。 この互換性に問題がある場合は、 `git sparse-checkout init --no-sparse-index` を実行して、インデックスがまばらにならないように書き換えます。 古いバージョンのGitは、スパースディレクトリエントリのインデックス拡張機能を理解せず、それが無効になるまでリポジトリとのやり取りに失敗する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:60
#, no-wrap
msgid "'set'"
msgstr "set"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:65
msgid ""
"Write a set of patterns to the sparse-checkout file, as given as a list of "
"arguments following the 'set' subcommand. Update the working directory to "
"match the new patterns. Enable the core.sparseCheckout config setting if it "
"is not already enabled."
msgstr "setサブコマンドに続く引数のリストとして与えられた一連のパターンをスパースチェックアウトファイルに書き込みます。 新しいパターンに一致するように作業ディレクトリを更新します。 core.sparseCheckout 構成設定がまだ有効になっていない場合は、有効にします。"

# 原文は standard とのみ書いてあるが文意を汲んで「標準入力」と意訳した。
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:68
msgid ""
"When the `--stdin` option is provided, the patterns are read from standard "
"in as a newline-delimited list instead of from the arguments."
msgstr ""
"`--stdin` オプションを指定すると、パターンは引数からではなく、改行で区切られ"
"たリストとして標準入力から読み込まれます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:76
msgid ""
"When `core.sparseCheckoutCone` is enabled, the input list is considered a "
"list of directories instead of sparse-checkout patterns. The command writes "
"patterns to the sparse-checkout file to include all files contained in those "
"directories (recursively) as well as files that are siblings of ancestor "
"directories. The input format matches the output of `git ls-tree --name-"
"only`.  This includes interpreting pathnames that begin with a double quote "
"(\") as C-style quoted strings."
msgstr "`core.sparseCheckoutCone` が有効になっている場合、入力リストはスパースチェックアウトパターンではなくディレクトリのリストと見なされます。 このコマンドは、スパースチェックアウトファイルにパターンを書き込み、それらのディレクトリに含まれるすべてのファイル(と、以下のディレクトリを再帰的にたどります)と、祖先ディレクトリの兄弟であるファイルを含めます。 入力形式は、 `git ls-tree --name-only` の出力と一致します。 これには、二重引用符(`\"`)で始まるパス名をCスタイルの引用符で囲まれた文字列として解釈することが含まれます。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:77
#, no-wrap
msgid "'add'"
msgstr "add"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:83
msgid ""
"Update the sparse-checkout file to include additional patterns.  By default, "
"these patterns are read from the command-line arguments, but they can be "
"read from stdin using the `--stdin` option. When `core.sparseCheckoutCone` "
"is enabled, the given patterns are interpreted as directory names as in the "
"'set' subcommand."
msgstr "スパースチェックアウトファイルを更新して、追加のパターンを含めます。 デフォルトでは、これらのパターンはコマンドライン引数から読み取られますが、 `--stdin` オプションを使用して標準入力から読み取ることができます。 `core.sparseCheckoutCone` が有効になっている場合、指定されたパターンはsetサブコマンドのようにディレクトリ名として解釈されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:84
#, no-wrap
msgid "'reapply'"
msgstr "reapply"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:93
msgid ""
"Reapply the sparsity pattern rules to paths in the working tree.  Commands "
"like merge or rebase can materialize paths to do their work (e.g. in order "
"to show you a conflict), and other sparse-checkout commands might fail to "
"sparsify an individual file (e.g. because it has unstaged changes or "
"conflicts).  In such cases, it can make sense to run `git sparse-checkout "
"reapply` later after cleaning up affected paths (e.g. resolving conflicts, "
"undoing or committing changes, etc.)."
msgstr "作業ツリーのパスにスパースパターンルールを再適用します。 マージやリベースなどのコマンドは、作業を行うためのパスを具体化でき(たとえば、競合を表示するため)ますが、他のスパースチェックアウトコマンドは、個々のファイルをスパース化できない場合があります(たとえば、ステージングされていない変更や競合があるため)。 このような場合、影響を受けるパスをクリーンアップした後、(たとえば、競合の解決、変更の取り消しまたはコミットなどの)後で `git sparse-checkout reapply` を実行するのが理にかなっています。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:94
#, no-wrap
msgid "'disable'"
msgstr "disable"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:99
msgid ""
"Disable the `core.sparseCheckout` config setting, and restore the working "
"directory to include all files. Leaves the sparse-checkout file intact so a "
"later 'git sparse-checkout init' command may return the working directory to "
"the same state."
msgstr "`core.sparseCheckout` 構成設定を無効にし、すべてのファイルを含めるように作業ディレクトリを復元(restore)します。 その後 'git sparse-checkout init' コマンドで作業ディレクトリが同じ状態に戻る可能性があるため、スパースチェックアウトファイルはそのまま残します。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:101
#, no-wrap
msgid "SPARSE CHECKOUT"
msgstr "SPARSE CHECKOUT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:110
msgid ""
"\"Sparse checkout\" allows populating the working directory sparsely.  It "
"uses the skip-worktree bit (see linkgit:git-update-index[1]) to tell Git "
"whether a file in the working directory is worth looking at. If the skip-"
"worktree bit is set, then the file is ignored in the working directory. Git "
"will not populate the contents of those files, which makes a sparse checkout "
"helpful when working in a repository with many files, but only a few are "
"important to the current user."
msgstr ""
"「sparse checkout」(まばらなチェックアウト)を使用すると、作業ディレクトリにま"
"ばらにデータを入力できます。 skip-worktreeビット(linkgit:git-update-index[1] "
"参照)を使用して、作業ディレクトリ内のファイルを確認する価値があるかどうかを"
"Gitに通知します。 skip-worktreeビットが設定されている場合、作業ディレクトリの"
"ファイルは無視されます。  Git はこれらのファイルの内容を入力しないので、多く"
"のファイルがあるリポジトリで作業しているが、現在のユーザーにとって重要なもの"
"はごくわずかである場合に、まばらなチェックアウトが役に立ちます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:116
msgid ""
"The `$GIT_DIR/info/sparse-checkout` file is used to define the skip-worktree "
"reference bitmap. When Git updates the working directory, it updates the "
"skip-worktree bits in the index based on this file. The files matching the "
"patterns in the file will appear in the working directory, and the rest will "
"not."
msgstr "`$GIT_DIR/info/sparse-checkout` ファイルは、スキップワークツリー参照ビットマップを定義するために使用されます。 Gitが作業ディレクトリを更新すると、このファイルに基づいてインデックスのスキップワークツリービットが更新されます。 ファイル内のパターンに一致するファイルは作業ディレクトリに表示され、残りは表示されません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:121
msgid ""
"To enable the sparse-checkout feature, run `git sparse-checkout init` to "
"initialize a simple sparse-checkout file and enable the `core."
"sparseCheckout` config setting. Then, run `git sparse-checkout set` to "
"modify the patterns in the sparse-checkout file."
msgstr "スパースチェックアウト機能を有効にするには、 `git sparse-checkout init` を実行してシンプルなスパースチェックアウトファイルを初期化し、 `core.sparseCheckout` 構成設定を有効にします。 次に、 `git sparse-checkout set` を実行して、スパースチェックアウトファイルのパターンを変更します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:124
msgid ""
"To repopulate the working directory with all files, use the `git sparse-"
"checkout disable` command."
msgstr ""
"作業ディレクトリにすべてのファイルを再入力するには、 `git sparse-checkou "
"tdisable` コマンドを使用します。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:127
#, no-wrap
msgid "FULL PATTERN SET"
msgstr "FULL PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:131
msgid ""
"By default, the sparse-checkout file uses the same syntax as `.gitignore` "
"files."
msgstr ""
"デフォルトでは、sparse-checkoutファイルは `.gitignore` ファイルと同じ構文を使"
"用します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:135
msgid ""
"While `$GIT_DIR/info/sparse-checkout` is usually used to specify what files "
"are included, you can also specify what files are _not_ included, using "
"negative patterns. For example, to remove the file `unwanted`:"
msgstr ""
"通常、 `$GIT_DIR/info/sparse-checkout` は、含まれるファイルを指定するために使"
"用されますが、ネガティブパターンを使用して、「含まれない」ファイルを指定する"
"こともできます。 たとえば、ファイル unwanted を削除するには以下のようにしま"
"す:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:139
#, no-wrap
msgid ""
"/*\n"
"!unwanted\n"
msgstr ""
"/*\n"
"!unwanted\n"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:143
#, no-wrap
msgid "CONE PATTERN SET"
msgstr "CONE PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:150
msgid ""
"The full pattern set allows for arbitrary pattern matches and complicated "
"inclusion/exclusion rules. These can result in O(N*M) pattern matches when "
"updating the index, where N is the number of patterns and M is the number of "
"paths in the index. To combat this performance issue, a more restricted "
"pattern set is allowed when `core.sparseCheckoutCone` is enabled."
msgstr ""
"フルパターンセットにより、任意のパターンの一致と複雑な包含/除外ルールが可能に"
"なります。 これらにより、インデックスを更新するときに O(オー;N*M)パターンが一"
"致する可能性があります。ここで、Nはパターンの数、Mはインデックス内のパスの数"
"です。 このパフォーマンスの問題に対処するために、 `core.sparseCheckoutCone` "
"が有効になっている場合は、より制限されたパターンセットが許可されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:152
msgid "The accepted patterns in the cone pattern set are:"
msgstr "円錐(cone)パターンセットで受け入れられるパターンは以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:154
#, no-wrap
msgid "*Recursive:* All paths inside a directory are included.\n"
msgstr "*再帰*: (recursive)ディレクトリ内のすべてのパスが含まれます\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:156
#, no-wrap
msgid "*Parent:* All files immediately inside a directory are included.\n"
msgstr "*親*: (parent)ディレクトリ直下のすべてのファイルが含まれます。\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:160
msgid ""
"In addition to the above two patterns, we also expect that all files in the "
"root directory are included. If a recursive pattern is added, then all "
"leading directories are added as parent patterns."
msgstr "上記の2つのパターンに加えて、ルートディレクトリ内のすべてのファイルが含まれていることも期待されます。再帰(recursive)パターンが追加されると、すべての先行ディレクトリが親(parent)パターンとして追加されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:164
msgid ""
"By default, when running `git sparse-checkout init`, the root directory is "
"added as a parent pattern. At this point, the sparse-checkout file contains "
"the following patterns:"
msgstr "デフォルトでは、 `git sparse-checkout init` を実行すると、ルートディレクトリが親パターンとして追加されます。 この時点で、スパースチェックアウトファイルには以下のパターンが含まれています:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:168
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
msgstr ""
"/*\n"
"!/*/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:171
msgid ""
"This says \"include everything in root, but nothing two levels below root.\""
msgstr ""
"これは、「ルートは全てインクルードするが、ルートの2レベル下は何も含めない」と"
"いう意味です。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:177
msgid ""
"When in cone mode, the `git sparse-checkout set` subcommand takes a list of "
"directories instead of a list of sparse-checkout patterns. In this mode, the "
"command `git sparse-checkout set A/B/C` sets the directory `A/B/C` as a "
"recursive pattern, the directories `A` and `A/B` are added as parent "
"patterns. The resulting sparse-checkout file is now"
msgstr "円錐(cone)モードの場合、 `git sparse-checkout set` サブコマンドは、スパースチェックアウトパターンのリストではなく、ディレクトリのリストを取得します。 このモードでは、コマンド `git sparse-checkout set A/B/C` は、ディレクトリ `A/B/C` を再帰パターンとして設定し、ディレクトリ `A` と `A/B` は親パターンとして追加されます。 結果のスパースチェックアウトファイルは以下のようになります"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:186
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"
msgstr ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:190
msgid ""
"Here, order matters, so the negative patterns are overridden by the positive "
"patterns that appear lower in the file."
msgstr "ここでは順番が重要なので、ネガティブなパターンはファイルの下位に表示されるポジティブなパターンに上書きされます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:195
msgid ""
"If `core.sparseCheckoutCone=true`, then Git will parse the sparse-checkout "
"file expecting patterns of these types. Git will warn if the patterns do not "
"match.  If the patterns do match the expected format, then Git will use "
"faster hash- based algorithms to compute inclusion in the sparse-checkout."
msgstr "`core.sparseCheckoutCone=true` の場合、Gitはこれらのタイプのパターンを期待してスパースチェックアウトファイルをパースします。 パターンが一致しない場合、Gitは警告を発します。 パターンが期待される形式と一致する場合、Gitはより高速なハッシュベースのアルゴリズムを使用して、スパースチェックアウトに含めるモノを計算します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:199
msgid ""
"In the cone mode case, the `git sparse-checkout list` subcommand will list "
"the directories that define the recursive patterns. For the example sparse-"
"checkout file above, the output is as follows:"
msgstr "円錐(cone)モードの場合、 `git sparse-checkout list` サブコマンドは、再帰(recursive)パターンを定義するディレクトリを一覧表示します。 上記のスパースチェックアウトファイルの例の場合、出力は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:203
#, no-wrap
msgid ""
"$ git sparse-checkout list\n"
"A/B/C\n"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:209
msgid ""
"If `core.ignoreCase=true`, then the pattern-matching algorithm will use a "
"case-insensitive check. This corrects for case mismatched filenames in the "
"'git sparse-checkout set' command to reflect the expected cone in the "
"working directory."
msgstr "`core.ignoreCase=true` の場合、パターンマッチングアルゴリズムは大文字と小文字を区別しないチェックを使用します。 これにより、 `git sparse-checkout set`  コマンドのファイル名が一致しない状況が修正され、作業ディレクトリに期待される円錐(cone)が反映されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:219
msgid ""
"When changing the sparse-checkout patterns in cone mode, Git will inspect "
"each tracked directory that is not within the sparse-checkout cone to see if "
"it contains any untracked files. If all of those files are ignored due to "
"the `.gitignore` patterns, then the directory will be deleted. If any of the "
"untracked files within that directory is not ignored, then no deletions will "
"occur within that directory and a warning message will appear. If these "
"files are important, then reset your sparse-checkout definition so they are "
"included, use `git add` and `git commit` to store them, then remove any "
"remaining files manually to ensure Git can behave optimally."
msgstr "円錐(cone)モードでスパースチェックアウトパターンを変更すると、Gitはスパースチェックアウト円錐(cone)内にない追跡中の各ディレクトリを検査して、追跡されていないファイルが含まれているかどうかを確認します。 `.gitignore` パターンが原因でこれらのファイルがすべて無視された場合、ディレクトリは削除されます。 そのディレクトリ内の追跡されていないファイルのいずれかが無視されない場合、そのディレクトリ内で削除は発生せず、警告メッセージが表示されます。 これらのファイルが重要な場合は、スパースチェックアウト定義をリセットして含まれるようにし、 `git add` と `git commit` を使用してファイルを保存し、残りのファイルを手動で削除して、Gitが最適に動作できるようにします。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:222
#, no-wrap
msgid "SUBMODULES"
msgstr "SUBMODULES"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:233
msgid ""
"If your repository contains one or more submodules, then submodules are "
"populated based on interactions with the `git submodule` command.  "
"Specifically, `git submodule init -- <path>` will ensure the submodule at "
"`<path>` is present, while `git submodule deinit [-f] -- <path>` will remove "
"the files for the submodule at `<path>` (including any untracked files, "
"uncommitted changes, and unpushed history).  Similar to how sparse-checkout "
"removes files from the working tree but still leaves entries in the index, "
"deinitialized submodules are removed from the working directory but still "
"have an entry in the index."
msgstr "あなたのリポジトリに1つ以上のサブモジュールが含まれている場合、サブモジュールは `git submodule` コマンドとの相互作用に基づいて入力されます。 具体的には、 `git submodule init -- <path>` は `<path>` のサブモジュールが存在することを確認し、 `git submodule deinit [-f] -- <path>` は `<path>` のサブモジュールのファイルを削除します(追跡されていないファイル、コミットされていない変更、プッシュされていない履歴を含む)。sparse-checkoutが作業ツリーからファイルを削除するが、インデックスにエントリを残す方法と同様に、初期化されていないサブモジュールは作業ディレクトリから削除されますが、インデックスにはエントリがあります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:243
msgid ""
"Since submodules may have unpushed changes or untracked files, removing them "
"could result in data loss.  Thus, changing sparse inclusion/exclusion rules "
"will not cause an already checked out submodule to be removed from the "
"working copy.  Said another way, just as `checkout` will not cause "
"submodules to be automatically removed or initialized even when switching "
"between branches that remove or add submodules, using `sparse-checkout` to "
"reduce or expand the scope of \"interesting\" files will not cause "
"submodules to be automatically deinitialized or initialized either."
msgstr "サブモジュールにはプッシュされていない変更または追跡されていないファイルがある可能性があるため、それらを削除するとデータが失われる可能性があります。 したがって、スパース 包含/除外 ルールを変更しても、すでにチェックアウトされているサブモジュールが作業コピーから削除されることはありません。 別の言い方をすれば、サブモジュールを削除または追加するブランチを切り替えても、 `checkout` によってサブモジュールが自動的に削除または初期化されないのと同様に、 `sparse-checkout` を使用して「興味深い」ファイルの範囲を縮小または拡大してもサブモジュールの自動的な非初期化または初期化は発生しません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:250
msgid ""
"Further, the above facts mean that there are multiple reasons that \"tracked"
"\" files might not be present in the working copy: sparsity pattern "
"application from sparse-checkout, and submodule initialization state.  Thus, "
"commands like `git grep` that work on tracked files in the working copy may "
"return results that are limited by either or both of these restrictions."
msgstr "さらに、上記の事実は、「追跡された」ファイルが作業コピーに存在しない可能性に複数の理由があることを意味します。スパースチェックアウトからのスパースパターンアプリケーション、およびサブモジュールの初期化状態です。 したがって、作業コピー内の追跡されたファイルで機能する `git grep` のようなコマンドは、これらの制限のいずれかまたは両方によって制限される結果を返す可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:253
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:257
msgid "linkgit:git-read-tree[1] linkgit:gitignore[5]"
msgstr "linkgit:git-read-tree[1] linkgit:gitignore[5]"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:259
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:260
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
