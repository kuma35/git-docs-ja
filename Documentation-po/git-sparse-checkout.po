# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2024-01-28 07:35+0900\n"
"PO-Revision-Date: 2024-01-28 18:34+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-sparse-checkout.txt:2
#, no-wrap
msgid "git-sparse-checkout(1)"
msgstr "git-sparse-checkout(1)"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

# 原文の説明はcompileエラー出まくったので、大胆に原文説明を変更した。
# 元々は複数行で
#
# Initialize and modify the sparse-checkout configuration, which reduces the checkout to a set of paths given by a list of patterns.
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:7
msgid ""
"git-sparse-checkout - Reduce your working tree to a subset of tracked files"
msgstr ""
"git-sparse-checkout - あなたの作業ツリーを追跡ファイルのサブセットのために縮"
"小します"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:13
#, no-wrap
msgid "'git sparse-checkout' (init | list | set | add | reapply | disable | check-rules) [<options>]\n"
msgstr "'git sparse-checkout' (init | list | set | add | reapply | disable | check-rules) [<options>]\n"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:23
msgid ""
"This command is used to create sparse checkouts, which change the working "
"tree from having all tracked files present to only having a subset of those "
"files.  It can also switch which subset of files are present, or undo and go "
"back to having all tracked files present in the working copy."
msgstr ""
"このコマンドは、すべての追跡ファイルが存在する状態から、それらのファイルのサ"
"ブセットのみが存在する状態に作業ツリーを変更するスパース・チェックアウトを作"
"成するために使用されます。 また、存在するファイルのサブセットを切り替えるか、"
"または、元に戻してすべての追跡ファイルが作業コピーに存在するように戻すことも"
"できます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:27
msgid ""
"The subset of files is chosen by providing a list of directories in cone "
"mode (the default), or by providing a list of patterns in non-cone mode."
msgstr ""
"ファイルのサブセットは、コーン・モード(デフォルト)でディレクトリのリストを提"
"供するか、非コーン・モードでパターンのリストを提供することによって選択されま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:32
msgid ""
"When in a sparse-checkout, other Git commands behave a bit differently.  For "
"example, switching branches will not update paths outside the sparse-"
"checkout directories/patterns, and `git commit -a` will not record paths "
"outside the sparse-checkout directories/patterns as deleted."
msgstr ""
"スパース・チェックアウト中は、他の Git コマンドの動作が少し異なります。 たと"
"えば、ブランチを切り替えても、スパース・チェックアウト・ディレクトリ外やス"
"パース・チェックアウト・ディレクトリ外のパスは更新されず、 `git commit -a` は"
"スパース・チェックアウト・ディレクトリ外や/スパース・チェックアウト・パターン"
"外のパスを削除済みとして記録しません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:36
msgid ""
"THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER "
"COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE "
"FUTURE."
msgstr ""
"警告: このコマンドは実験的なものです。 その動作、およびスパースチェックアウト"
"の存在下での他のコマンドの動作は、将来変更される可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:39
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:40
#, no-wrap
msgid "'list'"
msgstr "list"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:42
msgid "Describe the directories or patterns in the sparse-checkout file."
msgstr ""
"スパース・チェックアウト・ファイルにディレクトリ達またはパターン達を記述しま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:43
#, no-wrap
msgid "'set'"
msgstr "set"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:50
msgid ""
"Enable the necessary sparse-checkout config settings (`core.sparseCheckout`, "
"`core.sparseCheckoutCone`, and `index.sparse`) if they are not already set "
"to the desired values, populate the sparse-checkout file from the list of "
"arguments following the 'set' subcommand, and update the working directory "
"to match."
msgstr ""
"必要なスパース・チェックアウト構成設定(`core.sparseCheckout` と `core."
"sparseCheckoutCone` と`index.sparse`)がまだ目的の値に設定されていない場合は有"
"効にし、 `set` サブコマンドに続く引数のリストからスパース・チェックアウト・"
"ファイルに入力し、それにマッチするよう作業ディレクトリを更新します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:58
msgid ""
"To ensure that adjusting the sparse-checkout settings within a worktree does "
"not alter the sparse-checkout settings in other worktrees, the 'set' "
"subcommand will upgrade your repository config to use worktree-specific "
"config if not already present. The sparsity defined by the arguments to the "
"'set' subcommand are stored in the worktree-specific sparse-checkout file. "
"See linkgit:git-worktree[1] and the documentation of `extensions."
"worktreeConfig` in linkgit:git-config[1] for more details."
msgstr ""
"ワークツリー内のスパース・チェックアウト設定を調整しても、他のワークツリーの"
"スパース・チェックアウト設定が変更されないようにするために、 `set` サブコマン"
"ドは、ワークツリー固有の設定がまだ存在しない場合は、それを使用するようにあな"
"たのリポジトリ設定をアップグレードします。 `set` サブコマンドへの引数によって"
"定義されたスパース性は、ワークツリー固有のスパース・チェックアウト・ファイル"
"(worktree-specific sparse-checkout file)に格納されます。 詳細については、"
"linkgit:git-worktree[1] および linkgit:git-config[1] の `extensions."
"worktreeConfig` のドキュメントを参照してください。"

# 原文は standard とのみ書いてあるが文意を汲んで「標準入力」と意訳した。
#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:62
msgid ""
"When the `--stdin` option is provided, the directories or patterns are read "
"from standard in as a newline-delimited list instead of from the arguments."
msgstr ""
"`--stdin` オプションを指定すると、ディレクトリ達またはパターン達は引数からで"
"はなく、改行で区切られたリストとして標準入力から読み込まれます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:72
msgid ""
"By default, the input list is considered a list of directories, matching the "
"output of `git ls-tree -d --name-only`.  This includes interpreting "
"pathnames that begin with a double quote (\") as C-style quoted strings.  "
"Note that all files under the specified directories (at any depth) will be "
"included in the sparse checkout, as well as files that are siblings of "
"either the given directory or any of its ancestors (see 'CONE PATTERN SET' "
"below for more details).  In the past, this was not the default, and `--"
"cone` needed to be specified or `core.sparseCheckoutCone` needed to be "
"enabled."
msgstr ""
"デフォルトでは、入力リストはディレクトリのリストと見なされ、 `git ls-tree -d "
"--name-only` の出力と一致します。 これには、二重引用符(`\"`)で始まるパス名を "
"C スタイルのクォートされた文字列として解釈することが含まれます。 注意: 指定さ"
"れたディレクトリの(任意の深さの)下にあるすべてのファイル、および指定された"
"ディレクトリまたはその祖先のいずれかの兄弟であるファイルがスパース・チェック"
"アウトに含まれることに注意してください(詳細については、下記「CONE PATTERN "
"SET」を参照してください)。 以前はこれがデフォルトではなく、 `--cone` を指定す"
"るか、`core.sparseCheckoutCone` を有効にする必要がありました。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:77
msgid ""
"When `--no-cone` is passed, the input list is considered a list of "
"patterns.  This mode has a number of drawbacks, including not working with "
"some options like `--sparse-index`.  As explained in the \"Non-cone "
"Problems\" section below, we do not recommend using it."
msgstr ""
"`--no-cone` が渡されると、入力リストはパターンのリストと見なされます。 この"
"モードでは、`--sparse-index` などの一部のオプションが機能し無い等、多くの欠点"
"があります。 下記「Non-cone Problems」セクションで説明されているように、使用"
"はお勧めしません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:85
msgid ""
"Use the `--[no-]sparse-index` option to use a sparse index (the default is "
"to not use it).  A sparse index reduces the size of the index to be more "
"closely aligned with your sparse-checkout definition. This can have "
"significant performance advantages for commands such as `git status` or `git "
"add`.  This feature is still experimental. Some commands might be slower "
"with a sparse index until they are properly integrated with the feature."
msgstr ""
"`--[no-]sparse-index` オプションを使用して、 スパース・インデックスを使用しま"
"す(デフォルトでは使用しません)。 スパース・インデックスは、 インデックスのサ"
"イズを縮小して、スパース・チェックアウトの定義により近づけます。 これによ"
"り、 `git status` や `git add` などのコマンドのパフォーマンスが大幅に向上しま"
"す。 この機能はまだ実験段階です。 一部のコマンドは、機能に適切に統合されるま"
"で、 スパース・インデックスを使用すると遅くなる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:92
msgid ""
"Using a sparse index requires modifying the index in a way that is not "
"completely understood by external tools. If you have trouble with this "
"compatibility, then run `git sparse-checkout init --no-sparse-index` to "
"rewrite your index to not be sparse. Older versions of Git will not "
"understand the sparse directory entries index extension and may fail to "
"interact with your repository until it is disabled."
msgstr ""
"スパースインデックスを使用するには、外部ツールでは完全には理解できない方法で"
"インデックスを変更する必要があります。 この互換性に問題がある場合は、 `git "
"sparse-checkout init --no-sparse-index` を実行して、インデックスがまばらにな"
"らないように書き換えます。 古いバージョンのGitは、スパースディレクトリエント"
"リのインデックス拡張機能を理解せず、それが無効になるまでリポジトリとのやり取"
"りに失敗する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:93
#, no-wrap
msgid "'add'"
msgstr "add"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:98
msgid ""
"Update the sparse-checkout file to include additional directories (in cone "
"mode) or patterns (in non-cone mode).  By default, these directories or "
"patterns are read from the command-line arguments, but they can be read from "
"stdin using the `--stdin` option."
msgstr ""
"スパース・チェックアウト・ファイルを更新して、 追加のディレクトリ(コーン・"
"モードの場合)またはパターン(非コーン・モードの場合)を含めます。 デフォルトで"
"は、これらのディレクトリまたはパターンはコマンドライン引数から読み取られます"
"が、 `--stdin` オプションを使用して stdin から読み取ることができます。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:99
#, no-wrap
msgid "'reapply'"
msgstr "reapply"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:108
msgid ""
"Reapply the sparsity pattern rules to paths in the working tree.  Commands "
"like merge or rebase can materialize paths to do their work (e.g. in order "
"to show you a conflict), and other sparse-checkout commands might fail to "
"sparsify an individual file (e.g. because it has unstaged changes or "
"conflicts).  In such cases, it can make sense to run `git sparse-checkout "
"reapply` later after cleaning up affected paths (e.g. resolving conflicts, "
"undoing or committing changes, etc.)."
msgstr ""
"作業ツリーのパスにスパースパターンルールを再適用します。 マージやリベースなど"
"のコマンドは、作業を行うためのパスを具体化でき(たとえば、競合を表示するため)"
"ますが、他のスパースチェックアウトコマンドは、個々のファイルをスパース化でき"
"ない場合があります(たとえば、ステージングされていない変更や競合があるため)。 "
"このような場合、影響を受けるパスをクリーンアップした後、(たとえば、競合の解"
"決、変更の取り消しまたはコミットなどの)後で `git sparse-checkout reapply` を"
"実行するのが理にかなっています。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:113
msgid ""
"The `reapply` command can also take `--[no-]cone` and `--[no-]sparse-index` "
"flags, with the same meaning as the flags from the `set` command, in order "
"to change which sparsity mode you are using without needing to also "
"respecify all sparsity paths."
msgstr ""
"`reapply` コマンドは `--[no-]cone` や `--[no-]sparse-index` フラグも使用でき"
"ます。これは、 `set` コマンドのフラグと同一の意味で、 これにより、あなたは全"
"てのスパース・パス(sparsity paths)を再指定すること無く、スパース・モードを変"
"更できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:114
#, no-wrap
msgid "'disable'"
msgstr "disable"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:117
msgid ""
"Disable the `core.sparseCheckout` config setting, and restore the working "
"directory to include all files."
msgstr ""
"`core.sparseCheckout` 構成設定を無効にし、すべてのファイルを含めるように作業"
"ディレクトリを復元(restore)します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:118
#, no-wrap
msgid "'init'"
msgstr "init"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:121
msgid ""
"Deprecated command that behaves like `set` with no specified paths.  May be "
"removed in the future."
msgstr ""
"パスが指定されていない「set」のように動作する非推奨のコマンド。 将来削除され"
"る可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:129
msgid ""
"Historically, `set` did not handle all the necessary config settings, which "
"meant that both `init` and `set` had to be called.  Invoking both meant the "
"`init` step would first remove nearly all tracked files (and in cone mode, "
"ignored files too), then the `set` step would add many of the tracked files "
"(but not ignored files) back.  In addition to the lost files, the "
"performance and UI of this combination was poor."
msgstr ""
"かつて `set` は必要なすべての構成設定を処理していませんでした。 つまり、 "
"`init` と `set` の両方を呼び出す必要がありました。 両方を呼び出すと、最初に "
"`init` ステップでほぼすべての追跡ファイルが削除され(コーン・モードでは無視さ"
"れたファイル(ignored files)も含めて)、 次に `set` ステップで追跡ファイルの多"
"くが追加されます(ただし、無視されたファイル(ignored files)は含まれません)。 "
"ファイルが失われるだけでなく、この組み合わせのパフォーマンスと UI も貧弱でし"
"た。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:137
msgid ""
"Also, historically, `init` would not actually initialize the sparse-checkout "
"file if it already existed.  This meant it was possible to return to a "
"sparse-checkout without remembering which paths to pass to a subsequent "
"'set' or 'add' command.  However, `--cone` and `--sparse-index` options "
"would not be remembered across the disable command, so the easy restore of "
"calling a plain `init` decreased in utility."
msgstr ""
"また、かつては、 スパース・チェックアウト・ファイルが既に存在する場合、 "
"`init` は実際にはそれを初期化しませんでした。 これは、後続の `set` または "
"`add` コマンドに渡すパスを覚えていなくても、 スパース・チェックアウトに戻るこ"
"とができることを意味していました。 ただし、 `--cone` オプションと `--sparse-"
"index` オプションは、 `disable` コマンドまでまたがって記憶される訳では無いた"
"め、 単純な `init` を呼び出す簡単な復元の有用性が低下しました。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:138
#, no-wrap
msgid "'check-rules'"
msgstr "check-rules"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:140
msgid "Check whether sparsity rules match one or more paths."
msgstr "スパースのルール(sparsity rules)が 1 つ以上のパスにマッチするかどうかチェックします。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:146
msgid ""
"By default `check-rules` reads a list of paths from stdin and outputs only "
"the ones that match the current sparsity rules. The input is expected to "
"consist of one path per line, matching the output of `git ls-tree --name-"
"only` including that pathnames that begin with a double quote (\") are "
"interpreted as C-style quoted strings."
msgstr "デフォルトでは、 `check-rules` は stdin からパスのリストを読み取り、 現在のスパースのルール(sparsity rules)にマッチするパスのみを出力します。 入力は一行につき一つのパスで構成され、 二重引用符 (`\"`) で始まるパス名は C 言語スタイルのクォートされた文字列として解釈されることを含めて、 `git ls-tree --name-only` の出力と一致します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:151
msgid ""
"When called with the `--rules-file <file>` flag the input files are matched "
"against the sparse checkout rules found in `<file>` instead of the current "
"ones.  The rules in the files are expected to be in the same form as "
"accepted by `git sparse-checkout set --stdin` (in particular, they must be "
"newline-delimited)."
msgstr "`--rules-file <file>` フラグを指定して呼び出すと、 入力ファイルは現在のルールの代わりに `<file>` で探してきたスパース・チェックアウト・ルールとマッチングされます。 ファイル内のルールは、 `git sparse-checkout set --stdin` で受け入れられるのと同じ形式であることが期待されます(特に、それらは改行で区切られている必要があります)。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:155
msgid ""
"By default, the rules passed to the `--rules-file` option are interpreted as "
"cone mode directories. To pass non-cone mode patterns with `--rules-file`, "
"combine the option with the `--no-cone` option."
msgstr "デフォルトでは、 `--rules-file` オプションに渡されたルールはコーン・モード(円錐モード)のディレクトリとして解釈されます。 `--rules-file` を使用して非コーン・モード・パターンを渡すには、 このオプションを `--no-cone` オプションと組み合わせます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:159
msgid ""
"When called with the `-z` flag, the format of the paths input on stdin as "
"well as the output paths are \\0 terminated and not quoted. Note that this "
"does not apply to the format of the rules passed with the `--rules-file` "
"option."
msgstr "`-z` フラグを指定して呼び出すと、出力パスと同様に、 stdin に入力されるパスの形式は \\0 で終了し、クォートされません。 これは、`--rules-file` オプションで渡されるルールの形式には適用されないことに注意してください。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:162
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:163
#, no-wrap
msgid "`git sparse-checkout set MY/DIR1 SUB/DIR2`"
msgstr "`git sparse-checkout set MY/DIR1 SUB/DIR2`"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:173
msgid ""
"Change to a sparse checkout with all files (at any depth) under MY/DIR1/ and "
"SUB/DIR2/ present in the working copy (plus all files immediately under MY/ "
"and SUB/ and the toplevel directory).  If already in a sparse checkout, "
"change which files are present in the working copy to this new selection.  "
"Note that this command will also delete all ignored files in any directory "
"that no longer has either tracked or non-ignored-untracked files present."
msgstr ""
"作業コピーに存在する MY/DIR1/ および SUB/DIR2/ の下のすべてのファイル(任意の"
"深さ)(加えて  `MY/` や `SUB/` 直下と、トップレベル・ディレクトリのすべての"
"ファイル)を使用して、スパース チェックアウトに変更します。 すでにスパース・"
"チェックアウトである場合は、作業コピーに存在するファイルをこの新しい選択に変"
"更します。 注意: このコマンドは、追跡中のファイルまたは、無視されていない追跡"
"されていない(non-ignored-untracked)ファイルが存在しなくなったディレクトリ内の"
"すべての無視されたファイル(ignored files)も削除することに注意してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:174
#, no-wrap
msgid "`git sparse-checkout disable`"
msgstr "`git sparse-checkout disable`"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:178
msgid ""
"Repopulate the working directory with all files, disabling sparse checkouts."
msgstr ""
"スパース・チェックアウトを無効にして、 作業ディレクトリにすべてのファイルを再"
"入力します。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:179
#, no-wrap
msgid "`git sparse-checkout add SOME/DIR/ECTORY`"
msgstr "`git sparse-checkout add SOME/DIR/ECTORY`"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:185
msgid ""
"Add all files under SOME/DIR/ECTORY/ (at any depth) to the sparse checkout, "
"as well as all files immediately under SOME/DIR/ and immediately under "
"SOME/.  Must already be in a sparse checkout before using this command."
msgstr ""
"`SOME/DIR/ECTORY/` の下(任意の深さ)にあるすべてのファイルをスパース・チェック"
"アウトに追加し、 `SOME/DIR/` の直下と `SOME/` の直下にあるすべてのファイルも"
"追加します。 このコマンドを使用する前に、スパース・チェックアウトにしておく必"
"要があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-sparse-checkout.txt:186
#, no-wrap
msgid "`git sparse-checkout reapply`"
msgstr "`git sparse-checkout reapply`"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:197
msgid ""
"It is possible for commands to update the working tree in a way that does "
"not respect the selected sparsity directories.  This can come from tools "
"external to Git writing files, or even affect Git commands because of either "
"special cases (such as hitting conflicts when merging/rebasing), or because "
"some commands didn't fully support sparse checkouts (e.g. the old "
"`recursive` merge backend had only limited support).  This command reapplies "
"the existing sparse directory specifications to make the working directory "
"match."
msgstr ""
"コマンドが、 選択されたスパース・ディレクトリを尊重しない方法で作業ツリーを更"
"新する可能性があります。 これは、Git の外部のツールがファイルを書き込むことで"
"発生したり、 また、(マージ/リベース時に競合が発生するなどの)特殊なケースや一"
"部のコマンドがスパース・チェックアウトを完全にサポートしていないために Git コ"
"マンドに影響を与えるたりする可能性があります(たとえば、古い「recursive」(再帰"
"的)マージ・バックエンドのサポートは限定的でした)。 このコマンドは、既存のス"
"パース・ディレクトリの指定を再適用して、作業ディレクトリを一致させます。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:199
#, no-wrap
msgid "INTERNALS -- SPARSE CHECKOUT"
msgstr "INTERNALS -- SPARSE CHECKOUT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:209
msgid ""
"\"Sparse checkout\" allows populating the working directory sparsely.  It "
"uses the skip-worktree bit (see linkgit:git-update-index[1]) to tell Git "
"whether a file in the working directory is worth looking at. If the skip-"
"worktree bit is set, and the file is not present in the working tree, then "
"its absence is ignored. Git will avoid populating the contents of those "
"files, which makes a sparse checkout helpful when working in a repository "
"with many files, but only a few are important to the current user."
msgstr ""
"「スパース・チェックアウト」(sparse checkout;疎らなチェックアウト)を使用する"
"と、 作業ディレクトリを疎らに設定できます。 これは、skip-worktree ビット "
"(linkgit:git-update-index[1] を参照) を使用して、作業ディレクトリ内のファイル"
"を調べる価値があるかどうかを Git に伝えます。 skip-worktree ビットが設定され"
"ていて、 ファイルが作業ツリーに存在しない場合、その不在は無視されます。 Git "
"はこれらのファイルの内容を作業ディレクトリに入力することを回避します。これに"
"より、多くのファイルを含むリポジトリで作業する場合にはスパース・チェックアウ"
"トが役に立ちますが、現在のユーザーにとってほとんど重要では無いものです。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:215
msgid ""
"The `$GIT_DIR/info/sparse-checkout` file is used to define the skip-worktree "
"reference bitmap. When Git updates the working directory, it updates the "
"skip-worktree bits in the index based on this file. The files matching the "
"patterns in the file will appear in the working directory, and the rest will "
"not."
msgstr ""
"`$GIT_DIR/info/sparse-checkout` ファイルは、スキップワークツリー参照ビット"
"マップを定義するために使用されます。 Gitが作業ディレクトリを更新すると、この"
"ファイルに基づいてインデックスのスキップワークツリービットが更新されます。 "
"ファイル内のパターンに一致するファイルは作業ディレクトリに表示され、残りは表"
"示されません。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:217
#, no-wrap
msgid "INTERNALS -- NON-CONE PROBLEMS"
msgstr "INTERNALS -- NON-CONE PROBLEMS"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:226
msgid ""
"The `$GIT_DIR/info/sparse-checkout` file populated by the `set` and `add` "
"subcommands is defined to be a bunch of patterns (one per line)  using the "
"same syntax as `.gitignore` files.  In cone mode, these patterns are "
"restricted to matching directories (and users only ever need supply or see "
"directory names), while in non-cone mode any gitignore-style pattern is "
"permitted.  Using the full gitignore-style patterns in non-cone mode has a "
"number of shortcomings:"
msgstr ""
"`set` や `add` サブコマンドによって入力される `$GIT_DIR/info/sparse-"
"checkout` ファイルは、 `.gitignore` ファイルと同じ構文を使用して(1行に1つの)"
"一連のパターンとして定義されます。 コーン・モードでは、 これらのパターンは一"
"致するディレクトリに制限されます(ユーザーはディレクトリ名を指定または表示する"
"だけで済みます)。一方、非コーン・モードでは、任意の gitignore スタイルのパ"
"ターンが許可されます。 非コーン・モードで完全な gitignore スタイルのパターン"
"を使用すると、 以下のようないくつかの欠点があります:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:231
msgid ""
"Fundamentally, it makes various worktree-updating processes (pull, merge, "
"rebase, switch, reset, checkout, etc.) require O(N*M) pattern matches, where "
"N is the number of patterns and M is the number of paths in the index.  This "
"scales poorly."
msgstr ""
"基本的に、さまざまなワークツリー更新プロセス(pull, merge, rebase, switch, "
"reset, checkout, 等)で O(N*M) 回のパターン・マッチングが必要になります。ここ"
"で、N はパターンの数、M はインデックス内のパスの数です。これはスケーリングが"
"不十分です。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:234
msgid ""
"Avoiding the scaling issue has to be done via limiting the number of "
"patterns via specifying leading directory name or glob."
msgstr ""
"スケーリングの問題を回避するには、先頭のディレクトリ名またはグロブを指定して"
"パターンの数を制限する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:245
msgid ""
"Passing globs on the command line is error-prone as users may forget to "
"quote the glob, causing the shell to expand it into all matching files and "
"pass them all individually along to sparse-checkout set/add.  While this "
"could also be a problem with e.g. \"git grep -- *.c\", mistakes with grep/"
"log/status appear in the immediate output.  With sparse-checkout, the "
"mistake gets recorded at the time the sparse-checkout command is run and "
"might not be problematic until the user later switches branches or rebases "
"or merges, thus putting a delay between the user's error and when they have "
"a chance to catch/notice it."
msgstr ""
"コマンドラインでグロブを渡すとエラーが発生しやすくなります。ユーザーがグロブ"
"をクォートするのを忘れる可能性があるため、シェルがそれをすべての一致するファ"
"イルに展開し、それらすべてを個別にスパース・チェックアウト set/add に渡す原因"
"となります。 これは、例えば `git grep -- *.c` でも問題になる可能性があります"
"が、 grep/log/status での間違いは即座に出力が得られます。 スパース・チェック"
"アウトでは、間違いはスパース・チェックアウト・コマンドの実行時に記録され、後"
"でユーザーがブランチ切り替えまたはリベースまたはマージを行うまで問題にならな"
"い可能性があるため、ユーザーのエラーと、ユーザーがそれをキャッチする機会、ま"
"たはユーザにそれを通知する機会、までに遅延が生じます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:251
msgid ""
"Related to the previous item, sparse-checkout has an 'add' subcommand but no "
"'remove' subcommand.  Even if a 'remove' subcommand were added, undoing an "
"accidental unquoted glob runs the risk of \"removing too much\", as it may "
"remove entries that had been included before the accidental add."
msgstr ""
"先の項目に関連して、スパース・チェックアウトには `add` サブコマンドがあります"
"が、 `remove` サブコマンドはありません。 `remove` サブコマンドが追加された場"
"合、クォートされていない偶発的なグロブを元に戻すと、偶発的な追加の前に含まれ"
"ていたエントリが削除される可能性があるため、「削除しすぎ」のリスクがありま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:260
msgid ""
"Non-cone mode uses gitignore-style patterns to select what to *include* "
"(with the exception of negated patterns), while .gitignore files use "
"gitignore-style patterns to select what to *exclude* (with the exception of "
"negated patterns).  The documentation on gitignore-style patterns usually "
"does not talk in terms of matching or non-matching, but on what the user "
"wants to \"exclude\".  This can cause confusion for users trying to learn "
"how to specify sparse-checkout patterns to get their desired behavior."
msgstr ""
"非コーン・モード(non-cone mode)では gitignore スタイルのパターンを使用して"
"「含める」(否定パターンを除く)ものを選択しますが、 `.gitignore` ファイルは "
"gitignore スタイルのパターンを使用して「除外するもの」(否定パターンを除く)を"
"選択します。 gitignore スタイルのパターンに関するドキュメントは通常、 一致ま"
"たは不一致の観点からではなく、 ユーザーが何を「除外」したいかについて述べてい"
"ます。 これは、 スパース・チェックアウト・パターンを指定して目的の動作を取得"
"する方法を学習しようとしているユーザーにとっては混乱を招く可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:265
msgid ""
"Every other git subcommand that wants to provide \"special path pattern "
"matching\" of some sort uses pathspecs, but non-cone mode for sparse-"
"checkout uses gitignore patterns, which feels inconsistent."
msgstr ""
"ある種の「特別なパス・パターン・マッチング」を提供したい他のすべての git サブ"
"コマンドは pathspecs を使用しますが、 スパース・チェックアウトの非コーン・"
"モードは gitignore パターンを使用するため、一貫性がありません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:267
msgid ""
"It has edge cases where the \"right\" behavior is unclear.  Two examples:"
msgstr "「正しい」振る舞いが不明確な境界ギリギリのケース(edge cases)があります。 以下に例を2つ挙げます:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:269
msgid "First, two users are in a subdirectory, and the first runs"
msgstr "最初の例は、 あるサブディレクトリに 2 人のユーザーがいて、 最初のユーザーが以下を実行します"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:271
#, no-wrap
msgid "`git sparse-checkout set '/toplevel-dir/*.c'`\n"
msgstr "`git sparse-checkout set '/toplevel-dir/*.c'`\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:273
msgid "while the second runs"
msgstr "ここで、 2人目のユーザーが以下を実行します"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:275
#, no-wrap
msgid "  `git sparse-checkout set relative-dir`\n"
msgstr "  `git sparse-checkout set relative-dir`\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:277
msgid "Should those arguments be transliterated into"
msgstr "上記2つの引数は以下のように変換されるべきでしょうか？"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:279
#, no-wrap
msgid "  `current/subdirectory/toplevel-dir/*.c`\n"
msgstr "  `current/subdirectory/toplevel-dir/*.c`\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:281
msgid "and"
msgstr "と"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:283
#, no-wrap
msgid "  `current/subdirectory/relative-dir`\n"
msgstr "  `current/subdirectory/relative-dir`\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:291
msgid ""
"before inserting into the sparse-checkout file? The user who typed the first "
"command is probably aware that arguments to set/add are supposed to be "
"patterns in non-cone mode, and probably would not be happy with such a "
"transliteration.  However, many gitignore-style patterns are just paths, "
"which might be what the user who typed the second command was thinking, and "
"they'd be upset if their argument wasn't transliterated."
msgstr "というのも、 最初のコマンドを入力したユーザーは、 set/add  の引数が非円錐(non-cone)モードのパターンであることを認識しており、おそらくこのような変換には満足しないでしょう。 けれども、多くの gitignore スタイルのパターンは単なるパスであり、2 番目のコマンドを入力したユーザーが考えていたものである可能性があり、引数が変換されていないと動揺することでしょう。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:303
msgid ""
"Second, what should bash-completion complete on for set/add commands for non-"
"cone users? If it suggests paths, is it exacerbating the problem above? "
"Also, if it suggests paths, what if the user has a file or directory that "
"begins with either a '!' or '#' or has a '*', '\\', '?', '[', or ']' in its "
"name? And if it suggests paths, will it complete \"/pro\" to \"/proc\" (in "
"the root filesystem) rather than to \"/progress.txt\" in the current "
"directory? (Note that users are likely to want to start paths with a leading "
"'/' in non-cone mode, for the same reason that .gitignore files often have "
"one.)  Completing on files or directories might give nasty surprises in all "
"these cases."
msgstr "２つ目の例は、非コーンのユーザーの set/add コマンドの bash補完で補完させる必要があるのは何でしょうか？という問題です。 パスが提案されている場合、上記の問題を悪化させていませんか？ また、パスが提案されている場合、ユーザーのファイルやディレクトリが `!` や `#` で始まっていたり、その名前に `*` や `\\` や `?` や `[` や `]` が含まれていたらどうなるでしょう？ そしてまた、パスを提案する場合、現在のディレクトリの `/progress.txt` ではなく、 `/pro` を (ルート・ファイルシステムの) `/proc` に補完しますか？ (`.gitignore` ファイルにあることが多いのと同じ理由で、ユーザーは非コーン・モードで先頭の `/` でパスを開始する可能性が高いことに注意してください。) これらすべての場合で、ファイルまたはディレクトリを補完すると、厄介なサプライズが生じる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:311
msgid ""
"The excessive flexibility made other extensions essentially impractical.  `--"
"sparse-index` is likely impossible in non-cone mode; even if it is somehow "
"feasible, it would have been far more work to implement and may have been "
"too slow in practice.  Some ideas for adding coupling between partial clones "
"and sparse checkouts are only practical with a more restricted set of paths "
"as well."
msgstr ""
"過度の柔軟性により、他の拡張機能は本質的に実用的ではなくなりました。 `--"
"sparse-index` 機能は非コーン・モードではおそらく不可能です。 たとえそれが何ら"
"かの形で実行可能であったとしても、 実装するにははるかに多くの作業が必要であ"
"り、かつ、実際に動かすと遅すぎる可能性があります。 部分(partial)クローンとス"
"パース・チェックアウトの間の結合を追加するためのいくつかのアイデアは、パスの"
"セットがより制限されている場合にのみ実用的です。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:314
msgid ""
"For all these reasons, non-cone mode is deprecated.  Please switch to using "
"cone mode."
msgstr ""
"これらすべての理由から、 非コーン・モードは推奨されません。 コーン・モードを"
"使用するように切り替えてください。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:317
#, no-wrap
msgid "INTERNALS -- CONE MODE HANDLING"
msgstr "INTERNALS -- CONE MODE HANDLING"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:326
msgid ""
"The \"cone mode\", which is the default, lets you specify only what "
"directories to include.  For any directory specified, all paths below that "
"directory will be included, and any paths immediately under leading "
"directories (including the toplevel directory) will also be included.  Thus, "
"if you specified the directory `Documentation/technical/` then your sparse "
"checkout would contain:"
msgstr ""
"デフォルトの「コーン・モード」では、含めるディレクトリのみを指定できます。 指"
"定されたディレクトリについては、そのディレクトリの下のすべてのパスが含まれ、"
"先頭のディレクトリ (最上位ディレクトリを含む) のすぐ下のパスも含まれます。 し"
"たがって、ディレクトリ `Documentation/technical/` を指定した場合、スパース・"
"チェックアウトには以下が含まれます:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:328
msgid "all files in the toplevel-directory"
msgstr "最上位ディレクトリ内のすべてのファイル"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:329
msgid "all files immediately under Documentation/"
msgstr "`Documentation/` 直下のすべてのファイル"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:330
msgid "all files at any depth under Documentation/technical/"
msgstr "`Documentation/technical/` の下の任意の深さのすべてのファイル"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:333
msgid ""
"Also, in cone mode, even if no directories are specified, then the files in "
"the toplevel directory will be included."
msgstr ""
"また、コーン・モードでは、ディレクトリが指定されていない場合でも、最上位ディ"
"レクトリ内のファイルが含まれます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:343
msgid ""
"When changing the sparse-checkout patterns in cone mode, Git will inspect "
"each tracked directory that is not within the sparse-checkout cone to see if "
"it contains any untracked files. If all of those files are ignored due to "
"the `.gitignore` patterns, then the directory will be deleted. If any of the "
"untracked files within that directory is not ignored, then no deletions will "
"occur within that directory and a warning message will appear. If these "
"files are important, then reset your sparse-checkout definition so they are "
"included, use `git add` and `git commit` to store them, then remove any "
"remaining files manually to ensure Git can behave optimally."
msgstr ""
"円錐(cone)モードでスパースチェックアウトパターンを変更すると、Gitはスパース"
"チェックアウト円錐(cone)内にない追跡中の各ディレクトリを検査して、追跡されて"
"いないファイルが含まれているかどうかを確認します。 `.gitignore` パターンが原"
"因でこれらのファイルがすべて無視された場合、ディレクトリは削除されます。 その"
"ディレクトリ内の追跡されていないファイルのいずれかが無視されない場合、その"
"ディレクトリ内で削除は発生せず、警告メッセージが表示されます。 これらのファイ"
"ルが重要な場合は、スパースチェックアウト定義をリセットして含まれるようにし、 "
"`git add` と `git commit` を使用してファイルを保存し、残りのファイルを手動で"
"削除して、Gitが最適に動作できるようにします。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:347
msgid ""
"See also the \"Internals -- Cone Pattern Set\" section to learn how the "
"directories are transformed under the hood into a subset of the Full Pattern "
"Set of sparse-checkout."
msgstr ""
"ディレクトリがフード(hood)の下でスパース・チェックアウトのフル・パターン・"
"セットのサブセットに変換される方法については、「Internals -- Cone Pattern "
"Set」セクションも参照してください。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:350
#, no-wrap
msgid "INTERNALS -- FULL PATTERN SET"
msgstr "INTERNALS -- FULL PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:357
msgid ""
"The full pattern set allows for arbitrary pattern matches and complicated "
"inclusion/exclusion rules. These can result in O(N*M) pattern matches when "
"updating the index, where N is the number of patterns and M is the number of "
"paths in the index. To combat this performance issue, a more restricted "
"pattern set is allowed when `core.sparseCheckoutCone` is enabled."
msgstr ""
"フルパターンセットにより、任意のパターンの一致と複雑な包含/除外ルールが可能に"
"なります。 これらにより、インデックスを更新するときに O(オー;N*M)パターンが一"
"致する可能性があります。ここで、Nはパターンの数、Mはインデックス内のパスの数"
"です。 このパフォーマンスの問題に対処するために、 `core.sparseCheckoutCone` "
"が有効になっている場合は、より制限されたパターンセットが許可されます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:364
msgid ""
"The sparse-checkout file uses the same syntax as `.gitignore` files; see "
"linkgit:gitignore[5] for details.  Here, though, the patterns are usually "
"being used to select which files to include rather than which files to "
"exclude.  (However, it can get a bit confusing since gitignore-style "
"patterns have negations defined by patterns which begin with a '!', so you "
"can also select files to _not_ include.)"
msgstr ""
"スパース・チェックアウト・ファイルは `.gitignore` ファイルと同じ構文を使用し"
"ます。 その詳細については、linkgit:gitignore[5] を参照してください。 ただし、"
"ここでは通常、どのファイルを除外するかではなく、どのファイルを含めるかを選択"
"するためにパターンが使用されています。 (ただし、gitignore スタイルのパターン"
"では `!` で始まるパターンによって否定が定義されているため、「含めない」ファイ"
"ルを選択することもでき、少々混乱することがあります。 )"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:368
msgid ""
"For example, to select everything, and then to remove the file `unwanted` "
"(so that every file will appear in your working tree except the file named "
"`unwanted`):"
msgstr ""
"たとえば、(`unwanted` という名前のファイルを除くすべてのファイルが作業ツリー"
"に表示されるように)、すべてを選択してからファイル `unwanted` を削除するには以"
"下のようにします:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:370
#, no-wrap
msgid "    git sparse-checkout set --no-cone '/*' '!unwanted'\n"
msgstr "    git sparse-checkout set --no-cone '/*' '!unwanted'\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:374
msgid ""
"These patterns are just placed into the `$GIT_DIR/info/sparse-checkout` as-"
"is, so the contents of that file at this point would be"
msgstr ""
"これらのパターンはそのまま `$GIT_DIR/info/sparse-checkout` というファイルに配"
"置されるため、この時点での、このファイルの内容は以下のようになります"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:378
#, no-wrap
msgid ""
"/*\n"
"!unwanted\n"
msgstr ""
"/*\n"
"!unwanted\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:383
msgid ""
"See also the \"Sparse Checkout\" section of linkgit:git-read-tree[1] to "
"learn more about the gitignore-style patterns used in sparse checkouts."
msgstr ""
"スパース・チェックアウトで使用される gitignore スタイルのパターンの詳細につい"
"ては、 linkgit:git-read-tree[1] の「Sparse Checkout」セクションも参照してくだ"
"さい。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:386
#, no-wrap
msgid "INTERNALS -- CONE PATTERN SET"
msgstr "INTERNALS -- CONE PATTERN SET"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:391
msgid ""
"In cone mode, only directories are accepted, but they are translated into "
"the same gitignore-style patterns used in the full pattern set.  We refer to "
"the particular patterns used in those mode as being of one of two types:"
msgstr ""
"コーン・モードでは、ディレクトリのみが受け入れられますが、完全なパターン・"
"セットで使用されるのと同じ gitignore スタイルのパターンに変換されます。 私達"
"はその際に使用される特殊なパターンを2つのタイプに分類しています:"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:393
#, no-wrap
msgid "*Recursive:* All paths inside a directory are included.\n"
msgstr "*再帰*: (recursive)ディレクトリ内のすべてのパスが含まれます\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:395
#, no-wrap
msgid "*Parent:* All files immediately inside a directory are included.\n"
msgstr "*親*: (parent)ディレクトリ直下のすべてのファイルが含まれます。\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:400
msgid ""
"Since cone mode always includes files at the toplevel, when running `git "
"sparse-checkout set` with no directories specified, the toplevel directory "
"is added as a parent pattern.  At this point, the sparse-checkout file "
"contains the following patterns:"
msgstr ""
"コーン・モードでは常にトップレベルにファイルが含まれるため、 ディレクトリを指"
"定せずに `git sparse-checkout set` を実行すると、 トップレベル・ディレクトリ"
"が親パターンとして追加されます。 この時点で、スパース・チェック・ファイルには"
"以下のパターンが含まれています:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:404
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
msgstr ""
"/*\n"
"!/*/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:408
msgid ""
"This says \"include everything immediately under the toplevel directory, but "
"nothing at any level below that.\""
msgstr ""
"これは、「最上位ディレクトリの直下のすべてを含めますが、それより下のレベルの"
"は何も含めない」という意味です。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:414
msgid ""
"When in cone mode, the `git sparse-checkout set` subcommand takes a list of "
"directories.  The command `git sparse-checkout set A/B/C` sets the directory "
"`A/B/C` as a recursive pattern, the directories `A` and `A/B` are added as "
"parent patterns. The resulting sparse-checkout file is now"
msgstr ""
"コーン・モードの場合、 `git sparse-checkout set` サブコマンドはディレクトリの"
"リストを受け取ります。 コマンド `git sparse-checkout set A/B/C` はディレクト"
"リ `A/B/C` を再帰パターンとして設定し、 ディレクトリ `A` と `A/B` が親パター"
"ンとして追加されます。 結果として得られるスパース・チェックアウト・ファイルは"
"以下のようになります"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:423
#, no-wrap
msgid ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"
msgstr ""
"/*\n"
"!/*/\n"
"/A/\n"
"!/A/*/\n"
"/A/B/\n"
"!/A/B/*/\n"
"/A/B/C/\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:427
msgid ""
"Here, order matters, so the negative patterns are overridden by the positive "
"patterns that appear lower in the file."
msgstr ""
"ここでは順番が重要なので、ネガティブなパターンはファイルの下位に表示されるポ"
"ジティブなパターンに上書きされます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:434
msgid ""
"Unless `core.sparseCheckoutCone` is explicitly set to `false`, Git will "
"parse the sparse-checkout file expecting patterns of these types. Git will "
"warn if the patterns do not match.  If the patterns do match the expected "
"format, then Git will use faster hash-based algorithms to compute inclusion "
"in the sparse-checkout.  If they do not match, git will behave as though "
"`core.sparseCheckoutCone` was false, regardless of its setting."
msgstr ""
"`core.sparseCheckoutCone` が明示的に `false` に設定されていない限り、Git はこ"
"れらのタイプのパターンを想定してスパース・チェックアウト・ファイルをパースし"
"ます。 パターンが一致しない場合、Git は警告します。 パターンが予想される形式"
"と一致する場合、Git はより高速なハッシュベースのアルゴリズムを使用して、ス"
"パース・チェックアウトへの包含を計算します。 一致しない場合、設定に関係な"
"く、 git は `core.sparseCheckoutCone` が `false` であるかのように動作します。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:440
msgid ""
"In the cone mode case, despite the fact that full patterns are written to "
"the $GIT_DIR/info/sparse-checkout file, the `git sparse-checkout list` "
"subcommand will list the directories that define the recursive patterns. For "
"the example sparse-checkout file above, the output is as follows:"
msgstr ""
"コーン・モードの場合、 完全なパターンが `$GIT_DIR/info/sparse-checkout` ファ"
"イルに書き込まれるという事実にもかかわらず、 `git sparse-checkout list` サブ"
"コマンドは、再帰パターンを定義するディレクトリを一覧表示します。 上記のスパー"
"ス・チェックアウト・ファイルの例では、出力は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-sparse-checkout.txt:444
#, no-wrap
msgid ""
"$ git sparse-checkout list\n"
"A/B/C\n"
msgstr ""
"$ git sparse-checkout list\n"
"A/B/C\n"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:450
msgid ""
"If `core.ignoreCase=true`, then the pattern-matching algorithm will use a "
"case-insensitive check. This corrects for case mismatched filenames in the "
"'git sparse-checkout set' command to reflect the expected cone in the "
"working directory."
msgstr ""
"`core.ignoreCase=true` の場合、パターンマッチングアルゴリズムは大文字と小文字"
"を区別しないチェックを使用します。 これにより、 `git sparse-checkout set`  コ"
"マンドのファイル名が一致しない状況が修正され、作業ディレクトリに期待される円"
"錐(cone)が反映されます。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:453
#, no-wrap
msgid "INTERNALS -- SUBMODULES"
msgstr "INTERNALS -- SUBMODULES"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:464
msgid ""
"If your repository contains one or more submodules, then submodules are "
"populated based on interactions with the `git submodule` command.  "
"Specifically, `git submodule init -- <path>` will ensure the submodule at "
"`<path>` is present, while `git submodule deinit [-f] -- <path>` will remove "
"the files for the submodule at `<path>` (including any untracked files, "
"uncommitted changes, and unpushed history).  Similar to how sparse-checkout "
"removes files from the working tree but still leaves entries in the index, "
"deinitialized submodules are removed from the working directory but still "
"have an entry in the index."
msgstr ""
"あなたのリポジトリに1つ以上のサブモジュールが含まれている場合、サブモジュール"
"は `git submodule` コマンドとの相互作用に基づいて入力されます。 具体的には、 "
"`git submodule init -- <path>` は `<path>` のサブモジュールが存在することを確"
"認し、 `git submodule deinit [-f] -- <path>` は `<path>` のサブモジュールの"
"ファイルを削除します(追跡されていないファイル、コミットされていない変更、プッ"
"シュされていない履歴を含む)。sparse-checkoutが作業ツリーからファイルを削除す"
"るが、インデックスにエントリを残す方法と同様に、初期化されていないサブモ"
"ジュールは作業ディレクトリから削除されますが、インデックスにはエントリがあり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:474
msgid ""
"Since submodules may have unpushed changes or untracked files, removing them "
"could result in data loss.  Thus, changing sparse inclusion/exclusion rules "
"will not cause an already checked out submodule to be removed from the "
"working copy.  Said another way, just as `checkout` will not cause "
"submodules to be automatically removed or initialized even when switching "
"between branches that remove or add submodules, using `sparse-checkout` to "
"reduce or expand the scope of \"interesting\" files will not cause "
"submodules to be automatically deinitialized or initialized either."
msgstr ""
"サブモジュールにはプッシュされていない変更または追跡されていないファイルがあ"
"る可能性があるため、それらを削除するとデータが失われる可能性があります。 した"
"がって、スパース 包含/除外 ルールを変更しても、すでにチェックアウトされている"
"サブモジュールが作業コピーから削除されることはありません。 別の言い方をすれ"
"ば、サブモジュールを削除または追加するブランチを切り替えても、 `checkout` に"
"よってサブモジュールが自動的に削除または初期化されないのと同様に、 `sparse-"
"checkout` を使用して「興味深い」ファイルの範囲を縮小または拡大してもサブモ"
"ジュールの自動的な非初期化または初期化は発生しません。"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:481
msgid ""
"Further, the above facts mean that there are multiple reasons that "
"\"tracked\" files might not be present in the working copy: sparsity pattern "
"application from sparse-checkout, and submodule initialization state.  Thus, "
"commands like `git grep` that work on tracked files in the working copy may "
"return results that are limited by either or both of these restrictions."
msgstr ""
"さらに、上記の事実は、「追跡された」ファイルが作業コピーに存在しない可能性に"
"複数の理由があることを意味します。スパースチェックアウトからのスパースパター"
"ンアプリケーション、およびサブモジュールの初期化状態です。 したがって、作業コ"
"ピー内の追跡されたファイルで機能する `git grep` のようなコマンドは、これらの"
"制限のいずれかまたは両方によって制限される結果を返す可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:484
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:488
msgid "linkgit:git-read-tree[1] linkgit:gitignore[5]"
msgstr "linkgit:git-read-tree[1] linkgit:gitignore[5]"

#. type: Title -
#: ../Documentation-sedout/git-sparse-checkout.txt:490
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-sparse-checkout.txt:491
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
