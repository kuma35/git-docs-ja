# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-gc.txt:2
#, no-wrap
msgid "git-gc(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:7
msgid "git-gc - Cleanup unnecessary files and optimize the local repository"
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:13
#, no-wrap
msgid ""
"'git gc' [--aggressive] [--auto] [--quiet] [--prune=<date> | --no-prune] "
"[--force] [--keep-largest-pack]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:22
msgid ""
"Runs a number of housekeeping tasks within the current repository, such as "
"compressing file revisions (to reduce disk space and increase performance), "
"removing unreachable objects which may have been created from prior "
"invocations of 'git add', packing refs, pruning reflog, rerere metadata or "
"stale working trees. May also update ancillary indexes such as the "
"commit-graph."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:27
msgid ""
"When common porcelain operations that create objects are run, they will "
"check whether the repository has grown substantially since the last "
"maintenance, and if so run `git gc` automatically. See `gc.auto` below for "
"how to disable this behavior."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:33
msgid ""
"Running `git gc` manually should only be needed when adding objects to a "
"repository without regularly running such porcelain commands, to do a "
"one-off repository optimization, or e.g. to clean up a suboptimal "
"mass-import. See the \"PACKFILE OPTIMIZATION\" section in "
"linkgit:git-fast-import[1] for more details on the import case."
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:35
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:37
#, no-wrap
msgid "--aggressive"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:43
msgid ""
"Usually 'git gc' runs very quickly while providing good disk space "
"utilization and performance.  This option will cause 'git gc' to more "
"aggressively optimize the repository at the expense of taking much more "
"time.  The effects of this optimization are mostly persistent. See the "
"\"AGGRESSIVE\" section below for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:44
#, no-wrap
msgid "--auto"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:47
msgid ""
"With this option, 'git gc' checks whether any housekeeping is required; if "
"not, it exits without performing any work."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:50
msgid ""
"See the `gc.auto` option in the \"CONFIGURATION\" section below for how this "
"heuristic works."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:55
msgid ""
"Once housekeeping is triggered by exceeding the limits of configuration "
"options such as `gc.auto` and `gc.autoPackLimit`, all other housekeeping "
"tasks (e.g. rerere, working trees, reflog...) will be performed as well."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:57
#, no-wrap
msgid "--prune=<date>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:64
msgid ""
"Prune loose objects older than date (default is 2 weeks ago, overridable by "
"the config variable `gc.pruneExpire`).  --prune=now prunes loose objects "
"regardless of their age and increases the risk of corruption if another "
"process is writing to the repository concurrently; see \"NOTES\" "
"below. --prune is on by default."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:65
#, no-wrap
msgid "--no-prune"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:67
msgid "Do not prune any loose objects."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:68
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:70
msgid "Suppress all progress reports."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:71
#, no-wrap
msgid "--force"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:74
msgid ""
"Force `git gc` to run even if there may be another `git gc` instance running "
"on this repository."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-gc.txt:75
#, no-wrap
msgid "--keep-largest-pack"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:79
msgid ""
"All packs except the largest pack and those marked with a `.keep` files are "
"consolidated into a single pack. When this option is used, "
"`gc.bigPackThreshold` is ignored."
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:81
#, no-wrap
msgid "AGGRESSIVE"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:88
msgid ""
"When the `--aggressive` option is supplied, linkgit:git-repack[1] will be "
"invoked with the `-f` flag, which in turn will pass `--no-reuse-delta` to "
"linkgit:git-pack-objects[1]. This will throw away any existing deltas and "
"re-compute them, at the expense of spending much more time on the repacking."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:93
msgid ""
"The effects of this are mostly persistent, e.g. when packs and loose objects "
"are coalesced into one another pack the existing deltas in that pack might "
"get re-used, but there are also various cases where we might pick a "
"sub-optimal delta from a newer pack instead."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:99
msgid ""
"Furthermore, supplying `--aggressive` will tweak the `--depth` and "
"`--window` options passed to linkgit:git-repack[1]. See the "
"`gc.aggressiveDepth` and `gc.aggressiveWindow` settings below. By using a "
"larger window size we're more likely to find more optimal deltas."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:105
msgid ""
"It's probably not worth it to use this option on a given repository without "
"running tailored performance benchmarks on it. It takes a lot more time, and "
"the resulting space/delta optimization may or may not be worth it. Not using "
"this at all is the right trade-off for most users and their repositories."
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:107
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:111
msgid ""
"The below documentation is the same as what's found in "
"linkgit:git-config[1]:"
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:115
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:128
msgid ""
"'git gc' tries very hard not to delete objects that are referenced anywhere "
"in your repository. In particular, it will keep not only objects referenced "
"by your current set of branches and tags, but also objects referenced by the "
"index, remote-tracking branches, reflogs (which may reference commits in "
"branches that were later amended or rewound), and anything else in the "
"refs/* namespace. Note that a note (of the kind created by 'git notes') "
"attached to an object does not contribute in keeping the object alive. If "
"you are expecting some objects to be deleted and they aren't, check all of "
"those locations and decide whether it makes sense in your case to remove "
"those references."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:135
msgid ""
"On the other hand, when 'git gc' runs concurrently with another process, "
"there is a risk of it deleting an object that the other process is using but "
"hasn't created a reference to. This may just cause the other process to fail "
"or may corrupt the repository if the other process later adds a reference to "
"the deleted object. Git has two features that significantly mitigate this "
"problem:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:138
msgid ""
"Any object with modification time newer than the `--prune` date is kept, "
"along with everything reachable from it."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:142
msgid ""
"Most operations that add an object to the database update the modification "
"time of the object if it is already present so that #1 applies."
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:146
msgid ""
"However, these features fall short of a complete solution, so users who run "
"commands concurrently have to live with some risk of corruption (which seems "
"to be low in practice)."
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:148
#, no-wrap
msgid "HOOKS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:152
msgid ""
"The 'git gc --auto' command will run the 'pre-auto-gc' hook.  See "
"linkgit:githooks[5] for more information."
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:155
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:160
msgid ""
"linkgit:git-prune[1] linkgit:git-reflog[1] linkgit:git-repack[1] "
"linkgit:git-rerere[1]"
msgstr ""

#. type: Title -
#: ../Documentation/git-gc.txt:162
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-gc.txt:163
msgid "Part of the linkgit:git[1] suite"
msgstr ""
