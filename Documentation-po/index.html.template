<!DOCTYPE html><html lang="ja">
  <head>
    <meta charset="utf-8" />
    <title>git htmls and infos</title>
  </head>
  <body>
    <h1>git-docs-ja</h1>
    <p>ぼちぼち翻訳中です。</p>
    <p>リポジトリは <a href="https://github.com/kuma35/git-docs-ja">https://github.com/kuma35/git-docs-ja</a> の docs-ja ブランチをご覧下さい。</p>
    <p> based on ${GIT_VERSION} </p>
    <h1>git htmls</h1>
    <dl>
      <dt><a href="htmldocs/git.html">git</a></dt>
      <dd>
	gitコマンド、各gitサブコマンド、how-to文書インデックス等。
      </dd>
      <dt><a href="htmldocs/git-bisect-lk2009.html">Fighting regressions with git bisect</a></dt>
      <dd>
	デグレと戦うための優れたツールが重要である理由を示します。
	「git bisect」がどのように機能するか、および内部で使用するアルゴリズムについて説明します。
	それから、「git bisect」を利用して現在の慣行を改善する方法を説明します。
	また、「git bisect」が将来どのように改善されるかについて議論します。
      </dd>
      <dt><a href="htmldocs/MyFirstObjectWalk.html">MyFirstObjectWalk</a></dt>
      <dd>
	小さなgitコマンド git walken を実際にステップバイステップで
	コーディングしながらgitコマンド作成の基礎を学びます。
      </dd>
      <dt><a href="htmldocs/MyFirstContribution.html">My First Contribution to the Git Project</a></dt>
      <dd>
	(訳注:gitコマンド psuh (pushではない) を例に git コマンド作成の基礎と git プロジェクトへの貢献方法を知ります。)
	(訳注:一部、別文書へのリンクが切れています。)
      </dd>
    </dl>
    <h2>technical</h2>
    <dl>
      <dt><a href="htmldocs/technical/api-index.html">Git API Documents</a></dt>
      <dd>
	Gitは時間の経過とともに一連の内部APIを成長させてきました。
	このコレクションはそれらを文書化したものです。
      </dd>
      <dt><a href="htmldocs/technical/bundle-format.html">Git bundle v2 format</a></dt>
      <dd>
	Gitバンドル形式は、refとGitオブジェクトの両方を表す形式です。
      </dd>
      <dt><a href="htmldocs/technical/chunk-format.html">Chunk-based file formats</a></dt>
      <dd>
	Gitの一部のファイル形式では、「チャンク」(chunks)という共通の概念を使用してファイルのセクションを記述します。
	この共通形式は、commit-graph ファイルと multi-pack-index ファイルで使用されます。
      </dd>
      <dt><a href="htmldocs/technical/directory-rename-detection.html">Directory rename detection</a></dt>
      <dd>
	Directory rename detection
      </dd>
      <dt><a href="htmldocs/technical/long-running-process-protocol.html">Long-running process protocol</a></dt>
      <dd>
	このプロトコルは、Gitが単一のGitコマンドの全期間を通じて外部プロセスと通信する必要がある場合に使用されます。
      </dd>
      <dt><a href="htmldocs/technical/multi-pack-index.html">Multi-Pack-Index (MIDX) Design Notes</a></dt>
      <dd>
	Multi-Pack-Index (MIDX) Design Notes
      </dd>
      <dt><a href="htmldocs/technical/pack-format.html">Git pack format</a></dt>
      <dd>
	Git pack format
      </dd>
      <dt><a href="htmldocs/technical/pack-heuristics.html">Concerning Git’s Packing Heuristics</a></dt>
      <dd>
	パッキングヒューリスティックの詳細に関するIRCチャットログ
      </dd>
      <dt><a href="htmldocs/technical/packfile-uri.html">Packfile URIs</a></dt>
      <dd>
	サーバーはパックファイル応答の一部をURIとして提供できます。
	これにより、帯域幅とCPU使用率のスケーラビリティを向上させるサーバー設計が可能になります。
      </dd>
      <dt><a href="htmldocs/technical/protocol-common.html">Documentation Common to Pack and Http Protocols</a></dt>
      <dd>
	pkt-lineは、可変長のバイナリ文字列です…
      </dd>
      <dt><a href="htmldocs/technical/protocol-v2.html">Git Wire Protocol, Version 2</a></dt>
      <dd>
	このドキュメントは、Gitのワイヤープロトコルのバージョン2の仕様を示しています。プロトコルv2は、以下の方法でv1を改善します…
      </dd>
      <dt><a href="htmldocs/technical/repository-version.html">Git Repository Format Versions</a></dt>
      <dd>
	すべてのgitリポジトリは、その config ファイルの `core.repositoryformatversion` キーにバージョン数値が印されています…
      </dd>
      <dt><a href="htmldocs/technical/rerere.html">rerere</a></dt>
      <dd>
	rerereのロジックについて説明します。
      </dd>
      <dt><a href="htmldocs/technical/send-pack-pipeline.html">Git-send-pack internals</a></dt>
      <dd>
	Git-send-pack の内部構造 概説
      </dd>
      <dt><a href="htmldocs/technical/shallow.html">Shallow commits</a></dt>
      <dd>
	Shallow commits
      </dd>
      <dt><a href="htmldocs/technical/trivial-merge.html">Trivial merge rules</a></dt>
      <dd>
	read-tree でのtrivial(些細な)マージロジックの結果について説明します。
      </dd>
    </dl>
    <h1>git info</h1>
    <dl>
      <dt><a href="info/git.info">git.info</a></dt>
      <dt><a href="info/gitman.info">gitman.info</a></dt>
      <dt><a href="info/dir">dir</a></dt>
      <dd>
	infos and dir
      </dd>
    </dl>
    <h1>git doc textfiles</h1>
    <dl>
      <dt><a href="INSTALL.txt">INSTALL</a></dt>
      <dd>
	ビルド、インストールせずに試しに使う方法、
	システムではなくホームディレクトリにインストールする方法、
	通常の、システムにインストールする方法、
	最低限必須のライブラリ、外せるライブラリ
      </dd>
    </dl>
    <h1>git manual pages</h1>
    <p>
      マニュアルページ生成は、まったく確認もテストもしていません。
      それでも作成したい場合は、
      当該リポジトリを clone して docs-ja ブランチに切り替えてから、
      Documentation-po/ フォルダで ./compile.sh man を実行して下さい。
    </p>
</body>
</html>
