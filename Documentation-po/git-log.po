# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-log.txt:2
#, no-wrap
msgid "git-log(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:7
msgid "git-log - Show commit logs"
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:13
#, no-wrap
msgid "'git log' [<options>] [<revision range>] [[--] <path>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:17
msgid "Shows the commit logs."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:25
msgid ""
"The command takes options applicable to the linkgit:git-rev-list[1] command "
"to control what is shown and how, and options applicable to the "
"linkgit:git-diff[1] command to control how the changes each commit "
"introduces are shown."
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:28
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:30
#, no-wrap
msgid "--follow"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:33
msgid ""
"Continue listing the history of a file beyond renames (works only for a "
"single file)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:34
#, no-wrap
msgid "--no-decorate"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:35
#, no-wrap
msgid "--decorate[=short|full|auto|no]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:45
msgid ""
"Print out the ref names of any commits that are shown. If 'short' is "
"specified, the ref name prefixes 'refs/heads/', 'refs/tags/' and "
"'refs/remotes/' will not be printed. If 'full' is specified, the full ref "
"name (including prefix) will be printed. If 'auto' is specified, then if the "
"output is going to a terminal, the ref names are shown as if 'short' were "
"given, otherwise no ref names are shown. The option `--decorate` is "
"short-hand for `--decorate=short`.  Default to configuration value of "
"`log.decorate` if configured, otherwise, `auto`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:46
#, no-wrap
msgid "--decorate-refs=<pattern>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:47
#, no-wrap
msgid "--decorate-refs-exclude=<pattern>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:55
msgid ""
"If no `--decorate-refs` is given, pretend as if all refs were included.  For "
"each candidate, do not use it for decoration if it matches any patterns "
"given to `--decorate-refs-exclude` or if it doesn't match any of the "
"patterns given to `--decorate-refs`. The `log.excludeDecoration` config "
"option allows excluding refs from the decorations, but an explicit "
"`--decorate-refs` pattern will override a match in `log.excludeDecoration`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:56
#, no-wrap
msgid "--source"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:59
msgid ""
"Print out the ref name given on the command line by which each commit was "
"reached."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:60
#, no-wrap
msgid "--[no-]mailmap"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:61
#, no-wrap
msgid "--[no-]use-mailmap"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:65
msgid ""
"Use mailmap file to map author and committer names and email addresses to "
"canonical real names and email addresses. See linkgit:git-shortlog[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:66
#, no-wrap
msgid "--full-diff"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:72
msgid ""
"Without this flag, `git log -p <path>...` shows commits that touch the "
"specified paths, and diffs about the same specified paths.  With this, the "
"full diff is shown for commits that touch the specified paths; this means "
"that \"<path>...\" limits only commits, and doesn't limit diff for those "
"commits."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:75
msgid ""
"Note that this affects all diff-based output types, e.g. those produced by "
"`--stat`, etc."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:76
#, no-wrap
msgid "--log-size"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:81
msgid ""
"Include a line ``log size <number>'' in the output for each commit, where "
"<number> is the length of that commit's message in bytes.  Intended to speed "
"up tools that read log messages from `git log` output by allowing them to "
"allocate space in advance."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:84
#, no-wrap
msgid "<revision range>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:92
msgid ""
"Show only commits in the specified revision range.  When no <revision range> "
"is specified, it defaults to `HEAD` (i.e. the whole history leading to the "
"current commit).  `origin..HEAD` specifies all the commits reachable from "
"the current commit (i.e. `HEAD`), but not from `origin`. For a complete list "
"of ways to spell <revision range>, see the 'Specifying Ranges' section of "
"linkgit:gitrevisions[7]."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:93
#, no-wrap
msgid "[--] <path>..."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:98
msgid ""
"Show only commits that are enough to explain how the files that match the "
"specified paths came to be.  See 'History Simplification' below for details "
"and other simplification modes."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:101
msgid ""
"Paths may need to be prefixed with `--` to separate them from options or the "
"revision range, when confusion arises."
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:107
#, no-wrap
msgid "DIFF FORMATTING"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:111
msgid ""
"By default, `git log` does not generate any diff output. The options below "
"can be used to show the changes made by each commit."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:118
msgid ""
"Note that unless one of `--diff-merges` variants (including short `-m`, "
"`-c`, and `--cc` options) is explicitly given, merge commits will not show a "
"diff, even if a diff format like `--patch` is selected, nor will they match "
"search options like `-S`. The exception is when `--first-parent` is in use, "
"in which case `first-parent` is the default format."
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:126
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:127
#, no-wrap
msgid "`git log --no-merges`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:130
msgid "Show the whole commit history, but skip any merges"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:131
#, no-wrap
msgid "`git log v2.6.12.. include/scsi drivers/scsi`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:135
msgid ""
"Show all commits since version 'v2.6.12' that changed any file in the "
"`include/scsi` or `drivers/scsi` subdirectories"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:136
#, no-wrap
msgid "`git log --since=\"2 weeks ago\" -- gitk`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:141
msgid ""
"Show the changes during the last two weeks to the file 'gitk'.  The `--` is "
"necessary to avoid confusion with the *branch* named 'gitk'"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:142
#, no-wrap
msgid "`git log --name-status release..test`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:147
msgid ""
"Show the commits that are in the \"test\" branch but not yet in the "
"\"release\" branch, along with the list of paths each commit modifies."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:148
#, no-wrap
msgid "`git log --follow builtin/rev-list.c`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:153
msgid ""
"Shows the commits that changed `builtin/rev-list.c`, including those commits "
"that occurred before the file was given its present name."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:154
#, no-wrap
msgid "`git log --branches --not --remotes=origin`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:159
msgid ""
"Shows all commits that are in any of local branches but not in any of "
"remote-tracking branches for 'origin' (what you have that origin doesn't)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:160
#, no-wrap
msgid "`git log master --not --remotes=*/master`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:164
msgid ""
"Shows all commits that are in local master but not in any remote repository "
"master branches."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:165
#, no-wrap
msgid "`git log -p -m --first-parent`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:172
msgid ""
"Shows the history including change diffs, but only from the ``main branch'' "
"perspective, skipping commits that come from merged branches, and showing "
"full diffs of changes introduced by the merges.  This makes sense only when "
"following a strict policy of merging all topic branches when staying on a "
"single integration branch."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:173
#, no-wrap
msgid "`git log -L '/int main/',/^}/:main.c`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:177
msgid "Shows how the function `main()` in the file `main.c` evolved over time."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:178
#, no-wrap
msgid "`git log -3`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:181
msgid "Limits the number of commits to show to 3."
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:183
#, no-wrap
msgid "DISCUSSION"
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:188
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:192
msgid ""
"See linkgit:git-config[1] for core variables and linkgit:git-diff[1] for "
"settings related to diff generation."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:193
#, no-wrap
msgid "format.pretty"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:196
msgid ""
"Default for the `--format` option.  (See 'Pretty Formats' above.)  Defaults "
"to `medium`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:197
#, no-wrap
msgid "i18n.logOutputEncoding"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:201
msgid ""
"Encoding to use when displaying logs.  (See 'Discussion' above.)  Defaults "
"to the value of `i18n.commitEncoding` if set, and UTF-8 otherwise."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:202
#, no-wrap
msgid "log.date"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:206
msgid ""
"Default format for human-readable dates.  (Compare the `--date` option.)  "
"Defaults to \"default\", which means to write dates like `Sat May 8 19:35:34 "
"2010 -0500`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:210
msgid ""
"If the format is set to \"auto:foo\" and the pager is in use, format \"foo\" "
"will be the used for the date format. Otherwise \"default\" will be used."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:211
#, no-wrap
msgid "log.follow"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:216
msgid ""
"If `true`, `git log` will act as if the `--follow` option was used when a "
"single <path> is given.  This has the same limitations as `--follow`, "
"i.e. it cannot be used to follow multiple files and does not work well on "
"non-linear history."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:217
#, no-wrap
msgid "log.showRoot"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:222
msgid ""
"If `false`, `git log` and related commands will not treat the initial commit "
"as a big creation event.  Any root commits in `git log -p` output would be "
"shown without a diff attached.  The default is `true`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:223
#, no-wrap
msgid "log.showSignature"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:226
msgid ""
"If `true`, `git log` and related commands will act as if the "
"`--show-signature` option was passed to them."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:227
#, no-wrap
msgid "mailmap.*"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:229
msgid "See linkgit:git-shortlog[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-log.txt:230
#, no-wrap
msgid "notes.displayRef"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:235
msgid ""
"Which refs, in addition to the default set by `core.notesRef` or "
"`GIT_NOTES_REF`, to read notes from when showing commit messages with the "
"`log` family of commands.  See linkgit:git-notes[1]."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:239
msgid ""
"May be an unabbreviated ref name or a glob and may be specified multiple "
"times.  A warning will be issued for refs that do not exist, but a glob that "
"does not match any refs is silently ignored."
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:243
msgid ""
"This setting can be disabled by the `--no-notes` option, overridden by the "
"`GIT_NOTES_DISPLAY_REF` environment variable, and overridden by the "
"`--notes=<ref>` option."
msgstr ""

#. type: Title -
#: ../Documentation/git-log.txt:245
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-log.txt:246
msgid "Part of the linkgit:git[1] suite"
msgstr ""
