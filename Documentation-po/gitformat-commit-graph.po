# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-10-13 17:18+0900\n"
"PO-Revision-Date: 2022-10-16 08:49+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/gitformat-commit-graph.txt:2
#, no-wrap
msgid "gitformat-commit-graph(5)"
msgstr "gitformat-commit-graph(5)"

#. type: Title -
#: ../Documentation-sedout/gitformat-commit-graph.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:7
msgid "gitformat-commit-graph - Git commit graph format"
msgstr "gitformat-commit-graph - Git コミット・グラフ形式"

#. type: Title -
#: ../Documentation-sedout/gitformat-commit-graph.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:13
#, no-wrap
msgid ""
"$GIT_DIR/objects/info/commit-graph\n"
"$GIT_DIR/objects/info/commit-graphs/*\n"
msgstr ""
"$GIT_DIR/objects/info/commit-graph\n"
"$GIT_DIR/objects/info/commit-graphs/*\n"

#. type: Title -
#: ../Documentation-sedout/gitformat-commit-graph.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:19
msgid ""
"The Git commit graph stores a list of commit OIDs and some associated "
"metadata, including:"
msgstr ""
"Gitコミットグラフには、コミットOIDのリストと、以下のような関連するメタデータ"
"が格納されます:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:21
msgid "The generation number of the commit."
msgstr "コミットの世代番号。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:23
msgid "The root tree OID."
msgstr "ルートツリーOID。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:25
msgid "The commit date."
msgstr "コミット日付。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:28
msgid ""
"The parents of the commit, stored using positional references within the "
"graph file."
msgstr "グラフファイル内の位置参照を使用して保存されたコミットの親。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:31
msgid ""
"The Bloom filter of the commit carrying the paths that were changed between "
"the commit and its first parent, if requested."
msgstr ""
"要求された場合、コミットとその最初の親の間で変更されたパスを伝えるコミットの"
"ブルームフィルター"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:36
msgid ""
"These positional references are stored as unsigned 32-bit integers "
"corresponding to the array position within the list of commit OIDs. Due to "
"some special constants we use to track parents, we can store at most (1 << "
"30) + (1 << 29) + (1 << 28) - 1 (around 1.8 billion) commits."
msgstr ""
"これらの位置参照は、コミット OID のリスト内の配列位置に対応する符号なし 32 "
"ビット整数として格納されます。 親を追跡するために使用するいくつかの特別な定数"
"により、最大で (1 << 30) + (1 << 29) + (1 << 28) - 1 (約 18 億) のコミットを"
"格納できます。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-commit-graph.txt:37
#, no-wrap
msgid "Commit graph files have the following format:"
msgstr "Commit graph files have the following format:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:43
msgid ""
"In order to allow extensions that add extra data to the graph, we organize "
"the body into \"chunks\" and provide a binary lookup table at the beginning "
"of the body. The header includes certain values, such as number of chunks "
"and hash type."
msgstr ""
"グラフに余分なデータを追加する拡張を可能にするために、ボディを「チャンク」に"
"編成し、ぼでぃの先頭にバイナリ ルックアップ テーブルを提供します。 ヘッダーに"
"は、チャンク数やハッシュ タイプなどの特定の値が含まれます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:45
msgid "All multi-byte numbers are in network byte order."
msgstr "すべての複数バイト数値はネットワークバイトオーダーです。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-commit-graph.txt:46
#, no-wrap
msgid "HEADER:"
msgstr "HEADER:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:49
msgid "4-byte signature:"
msgstr "4バイト シグネチャ:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:51
msgid "The signature is: {'C', 'G', 'P', 'H'}"
msgstr "シグネチャは: {'C', 'G', 'P', 'H'}"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:53
msgid "1-byte version number:"
msgstr "1バイト バージョン番号:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:55
msgid "Currently, the only valid version is 1."
msgstr "現在、有効なバージョンは 1 のみです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:57
msgid "1-byte Hash Version"
msgstr "1バイト ハッシュバージョン"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:59
msgid "We infer the hash length (H) from this value:"
msgstr "以下の値からハッシュ長(H)を推測します:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:62
#, no-wrap
msgid ""
" 1 => SHA-1\n"
" 2 => SHA-256\n"
msgstr ""
" 1 => SHA-1\n"
" 2 => SHA-256\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:66
msgid ""
"If the hash type does not match the repository's hash algorithm, the commit-"
"graph file should be ignored with a warning presented to the user."
msgstr ""
"ハッシュタイプがリポジトリのハッシュアルゴリズムと一致しない場合、コミットグ"
"ラフファイルは無視され、ユーザーに警告が表示されます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:68
msgid "1-byte number (C) of \"chunks\""
msgstr "1バイト チャンクの数(C)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:70
msgid "1-byte number (B) of base commit-graphs"
msgstr "1バイト ベースコミットグラフの数(B)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:73
msgid "We infer the length (H*B) of the Base Graphs chunk from this value."
msgstr "この値からベースグラフチャンクの長さ(H*B)を推測します。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-commit-graph.txt:75
#, no-wrap
msgid "CHUNK LOOKUP:"
msgstr "CHUNK LOOKUP:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:78
msgid "(C + 1) * 12 bytes listing the table of contents for the chunks:"
msgstr "(C + 1) * 12 バイト  チャンクの目次をリストします:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:84
msgid ""
"First 4 bytes describe the chunk id. Value 0 is a terminating label.  Other "
"8 bytes provide the byte-offset in current file for chunk to start. (Chunks "
"are ordered contiguously in the file, so you can infer the length using the "
"next chunk position if necessary.) Each chunk ID appears at most once."
msgstr ""
"最初の 4 バイトはチャンク ID を表します。 値 0 は終了ラベルです。 他の 8 バイ"
"トは、チャンクが始まる現在のファイル内バイトオフセットを提供します。 (チャン"
"クはファイル内で連続して並べられているため、必要に応じて次のチャンク位置を使"
"用して長さを推測できます。)  各チャンク ID は最大 1 回しか表れせん。"

#. --
#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:89
msgid ""
"The CHUNK LOOKUP matches the table of contents from the chunk-based file "
"format, see linkgit:gitformat-chunk[5]"
msgstr "CHUNK LOOKUP は、チャンクベースのファイル形式の目次とマッチします。 linkgit:gitformat-chunk[5] を参照してください。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-commit-graph.txt:90
#, no-wrap
msgid "CHUNK DATA:"
msgstr "CHUNK DATA:"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:92
#, no-wrap
msgid "OID Fanout (ID: {'O', 'I', 'D', 'F'}) (256 * 4 bytes)"
msgstr "OID Fanout (ID: {'O', 'I', 'D', 'F'}) (256 * 4 bytes)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:96
msgid ""
"The ith entry, F[i], stores the number of OIDs with first byte at most i. "
"Thus F[255] stores the total number of commits (N)."
msgstr "i 番目のエントリ F[i] には、 最初のバイトが最大で i 個の OID の数が格納されます。 したがって、 F[255] にはコミットの総数 (N) が格納されます。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:97
#, no-wrap
msgid "OID Lookup (ID: {'O', 'I', 'D', 'L'}) (N * H bytes)"
msgstr "OID Lookup (ID: {'O', 'I', 'D', 'L'}) (N * H bytes)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:99
msgid "The OIDs for all commits in the graph, sorted in ascending order."
msgstr "昇順でソートされた、グラフ内のすべてのコミットの OID。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:100
#, no-wrap
msgid "Commit Data (ID: {'C', 'D', 'A', 'T' }) (N * (H + 16) bytes)"
msgstr "Commit Data (ID: {'C', 'D', 'A', 'T' }) (N * (H + 16) bytes)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:102
msgid "The first H bytes are for the OID of the root tree."
msgstr "最初の H バイトは、ルートツリーの OID 用です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:107
msgid ""
"The next 8 bytes are for the positions of the first two parents of the ith "
"commit. Stores value 0x70000000 if no parent in that position. If there are "
"more than two parents, the second value has its most-significant bit on and "
"the other bits store an array position into the Extra Edge List chunk."
msgstr ""
"次の 8 バイトは、i 番目のコミットの最初の 2 つの親の位置用です。 その位置に親"
"がいない場合は、値 0x70000000 を格納します。 親が 3 つ以上ある場合、2 番目の"
"値の最上位ビットがオンになり、他のビットは配列位置を Extra Edge List チャンク"
"に格納します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:114
msgid ""
"The next 8 bytes store the topological level (generation number v1)  of the "
"commit and the commit time in seconds since EPOCH. The generation number "
"uses the higher 30 bits of the first 4 bytes, while the commit time uses the "
"32 bits of the second 4 bytes, along with the lowest 2 bits of the lowest "
"byte, storing the 33rd and 34th bit of the commit time."
msgstr ""
"その次の 8 バイトには、コミットのトポロジレベル(世代番号 v1)とエポックからの"
"コミット時間(秒単位)が格納されます。 世代番号は最初の 4 バイトの上位 30 ビッ"
"トを使用し、コミット時間はその次の 4 バイトの 32 ビットと最下位バイトの下位 "
"2 ビットを使用して、コミット時間の 33 番目と 34 番目のビットを格納します。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:115
#, no-wrap
msgid "Generation Data (ID: {'G', 'D', 'A', '2' }) (N * 4 bytes) [Optional]"
msgstr "Generation Data (ID: {'G', 'D', 'A', '2' }) (N * 4 bytes) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:118
msgid ""
"This list of 4-byte values store corrected commit date offsets for the "
"commits, arranged in the same order as commit data chunk."
msgstr ""
"この 4 バイト値のリストには、コミットデータチャンクと同じ順序で配置された、コ"
"ミットの修正されたコミット日付オフセットが格納されます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:122
msgid ""
"If the corrected commit date offset cannot be stored within 31 bits, the "
"value has its most-significant bit on and the other bits store the position "
"of corrected commit date into the Generation Data Overflow chunk."
msgstr ""
"修正されたコミット日付オフセットが 31 ビット以内に格納できない場合、値の最上"
"位ビットがオンになり、他のビットは修正されたコミット日付の位置をジェネレー"
"ション データ オーバーフロー チャンク(Generation Data Overflow chunk)に格納し"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:125
msgid ""
"Generation Data chunk is present only when commit-graph file is written by "
"compatible versions of Git and in case of split commit-graph chains, the "
"topmost layer also has Generation Data chunk."
msgstr ""
"ジェネレーション データ チャンクは、互換性のあるバージョンの Git によってコ"
"ミット グラフ ファイルが書き込まれた場合にのみ存在し、分割されたコミット グラ"
"フ チェーンの場合、最上層にもジェネレーション データ チャンクがあります。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:126
#, no-wrap
msgid "Generation Data Overflow (ID: {'G', 'D', 'O', '2' }) [Optional]"
msgstr "Generation Data Overflow (ID: {'G', 'D', 'O', '2' }) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:130
msgid ""
"This list of 8-byte values stores the corrected commit date offsets for "
"commits with corrected commit date offsets that cannot be stored within 31 "
"bits."
msgstr ""
"この 8 バイト値のリストには、31 ビット内に格納できない修正されたコミット日付"
"オフセットを持つコミットの修正されたコミット日付オフセットが格納されます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:133
msgid ""
"Generation Data Overflow chunk is present only when Generation Data chunk is "
"present and atleast one corrected commit date offset cannot be stored within "
"31 bits."
msgstr ""
"ジェネレーション データ オーバーフロー チャンクは、ジェネレーション データ "
"チャンクが存在し、少なくとも 1 つ以上修正されたコミット日付オフセットが 31 "
"ビット内に格納できない場合にのみ存在します。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:134
#, no-wrap
msgid "Extra Edge List (ID: {'E', 'D', 'G', 'E'}) [Optional]"
msgstr "Extra Edge List (ID: {'E', 'D', 'G', 'E'}) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:141
msgid ""
"This list of 4-byte values store the second through nth parents for all "
"octopus merges. The second parent value in the commit data stores an array "
"position within this list along with the most-significant bit on. Starting "
"at that array position, iterate through this list of commit positions for "
"the parents until reaching a value with the most-significant bit on. The "
"other bits correspond to the position of the last parent."
msgstr "この 4 バイト値のリストには、すべてのオクトパス・マージの 2 番目から n 番目の親が格納されます。 コミット・データの 2 番目の親の値は、 このリスト内の配列位置を最上位ビットをオンにして格納します。 その配列位置から開始して、 最上位ビットがオンの値に到達するまで、 親のコミット位置のこのリストを繰り返します。 他のビットは、 最後の親の位置に対応します。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:142
#, no-wrap
msgid "Bloom Filter Index (ID: {'B', 'I', 'D', 'X'}) (N * 4 bytes) [Optional]"
msgstr "Bloom Filter Index (ID: {'B', 'I', 'D', 'X'}) (N * 4 bytes) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:147
msgid ""
"The ith entry, BIDX[i], stores the number of bytes in all Bloom filters from "
"commit 0 to commit i (inclusive) in lexicographic order. The Bloom filter "
"for the i-th commit spans from BIDX[i-1] to BIDX[i] (plus header length), "
"where BIDX[-1] is 0."
msgstr ""
"i 番目のエントリ BIDX[i] には、コミット 0 からコミット i までのすべてのブルー"
"ムフィルターのバイト数が、辞書順で格納されます。 i 番目のコミットのブルーム "
"フィルターは、BIDX[i-1] から BIDX[i] (およびヘッダー長) に及びます。ここで、"
"BIDX[-1] は 0 です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:148
msgid "The BIDX chunk is ignored if the BDAT chunk is not present."
msgstr "BDAT チャンクが存在しない場合、BIDX チャンクは無視されます。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:149
#, no-wrap
msgid "Bloom Filter Data (ID: {'B', 'D', 'A', 'T'}) [Optional]"
msgstr "Bloom Filter Data (ID: {'B', 'D', 'A', 'T'}) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:151
msgid "It starts with header consisting of three unsigned 32-bit integers:"
msgstr "3 つの符号なし 32 ビット整数で構成されるヘッダーで始まります:"

# https://sites.google.com/site/progrhymetechwiki/cs/algorithm
# MurmurHash
# 暗号化処理には向いていないが、高速一様なハッシュ生成に向いたハッシュ関数。
# HashDos脆弱性の対策で一時使われるようになったが、どうも後にSipHashに取って代わられたようだ。
#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:158
msgid ""
"Version of the hash algorithm being used. We currently only support value 1 "
"which corresponds to the 32-bit version of the murmur3 hash implemented "
"exactly as described in https://en.wikipedia.org/wiki/MurmurHash#Algorithm "
"and the double hashing technique using seed values 0x293ae76f and 0x7e646e2 "
"as described in https://doi.org/10.1007/978-3-540-30494-4_26 \"Bloom Filters "
"in Probabilistic Verification\""
msgstr "使用されているハッシュ・アルゴリズムのバージョン。 現在、 `https://en.wikipedia.org/wiki/MurmurHash#Algorithm` で説明されているとおりに実装された murmur3 ハッシュの 32 ビット・バージョンに対応する値 1 と、 `https://doi.org/10.1007/978-3-540-30494-4_26` \"Bloom Filters in Probabilistic Verification\" で説明されているシード値 0x293ae76f および 0x7e646e2 を使用する二重ハッシュ手法(double hashing technique)のみをサポートしています。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:160
msgid ""
"The number of times a path is hashed and hence the number of bit positions "
"that cumulatively determine whether a file is present in the commit."
msgstr "パスがハッシュ化される回数、 つまり、コミットにおいてファイルが存在するかどうかを累積的に判断するビット位置の数です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:163
msgid ""
"The minimum number of bits 'b' per entry in the Bloom filter. If the filter "
"contains 'n' entries, then the filter size is the minimum number of 64-bit "
"words that contain n*b bits."
msgstr "ブルーム・フィルターのエントリあたりのビット `b` の最小数。 フィルタに `n` 個のエントリが含まれる場合、 フィルタ・サイズは、 n*b ビットを含む 64 ビット ワードの最小数です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:165
msgid ""
"The rest of the chunk is the concatenation of all the computed Bloom filters "
"for the commits in lexicographic order."
msgstr "チャンクの残りの部分は、コミットに対して計算されたすべてのブルーム・フィルター(Bloom filter)を辞書順で連結したものです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:167
msgid ""
"Note: Commits with no changes or more than 512 changes have Bloom filters of "
"length one, with either all bits set to zero or one respectively."
msgstr "注意: 変更がないコミット、または 512 を超える変更があるコミットは、 長さが 1 のブルーム・フィルターを持ち、すべてのビットがそれぞれ 0 または 1 に設定されます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:168
msgid "The BDAT chunk is present if and only if BIDX is present."
msgstr "BDAT チャンクは、 BIDX が存在する場合にのみ存在します。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-commit-graph.txt:169
#, no-wrap
msgid "Base Graphs List (ID: {'B', 'A', 'S', 'E'}) [Optional]"
msgstr "Base Graphs List (ID: {'B', 'A', 'S', 'E'}) [Optional]"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:174
msgid ""
"This list of H-byte hashes describe a set of B commit-graph files that form "
"a commit-graph chain. The graph position for the ith commit in this file's "
"OID Lookup chunk is equal to i plus the number of commits in all base "
"graphs.  If B is non-zero, this chunk must exist."
msgstr "この H バイト・ハッシュのリストは、 コミット・グラフ・チェーンを形成する一連の B コミット・グラフ・ファイルを記述します。 このファイルの OID ルックアップ・チャンクの i 番目のコミットのグラフ位置は、 i にすべてのベース・グラフのコミット数を加えた値に等しくなります。 B がゼロでない場合、 このチャンクが存在する必要があります。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-commit-graph.txt:175
#, no-wrap
msgid "TRAILER:"
msgstr "TRAILER:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:178
msgid "H-byte HASH-checksum of all of the above."
msgstr "上記すべての H バイト ハッシュ チェックサム。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-commit-graph.txt:179
#, no-wrap
msgid "Historical Notes:"
msgstr "Historical Notes:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:186
msgid ""
"The Generation Data (GDA2) and Generation Data Overflow (GDO2) chunks have "
"the number '2' in their chunk IDs because a previous version of Git wrote "
"possibly erroneous data in these chunks with the IDs \"GDAT\" and \"GDOV\". "
"By changing the IDs, newer versions of Git will silently ignore those older "
"chunks and write the new information without trusting the incorrect data."
msgstr "Generation Data (GDA2) および Generation Data Overflow (GDO2) チャンクのチャンク ID には `2` という数字が含まれています。 これは、 以前のバージョンの Git が ID `GDAT` および `GDOV` を使用してこれらのチャンクに誤ったデータを書き込んだためです。 ID を変更することで、 Git の新しいバージョンは古いチャンクを黙って無視し、 誤ったデータを信頼することなく新しい情報を書き込みます。"

#. type: Title -
#: ../Documentation-sedout/gitformat-commit-graph.txt:188
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/gitformat-commit-graph.txt:189
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
