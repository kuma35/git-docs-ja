# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-cherry.txt:2
#, no-wrap
msgid "git-cherry(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:7
msgid "git-cherry - Find commits yet to be applied to upstream"
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:12
#, no-wrap
msgid "'git cherry' [-v] [<upstream> [<head> [<limit>]]]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:17
msgid ""
"Determine whether there are commits in `<head>..<upstream>` that are "
"equivalent to those in the range `<limit>..<head>`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:22
msgid ""
"The equivalence test is based on the diff, after removing whitespace and "
"line numbers.  git-cherry therefore detects when commits have been "
"\"copied\" by means of linkgit:git-cherry-pick[1], linkgit:git-am[1] or "
"linkgit:git-rebase[1]."
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:26
msgid ""
"Outputs the SHA1 of every commit in `<limit>..<head>`, prefixed with `-` for "
"commits that have an equivalent in <upstream>, and `+` for commits that do "
"not."
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:28
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-cherry.txt:29
#, no-wrap
msgid "-v"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:31
msgid "Show the commit subjects next to the SHA1s."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-cherry.txt:32
#, no-wrap
msgid "<upstream>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:35
msgid ""
"Upstream branch to search for equivalent commits.  Defaults to the upstream "
"branch of HEAD."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-cherry.txt:36
#, no-wrap
msgid "<head>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:38
msgid "Working branch; defaults to HEAD."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-cherry.txt:39
#, no-wrap
msgid "<limit>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:41
msgid "Do not report commits up to (and including) limit."
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:43
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Title ~
#: ../Documentation/git-cherry.txt:46
#, no-wrap
msgid "Patch workflows"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:52
msgid ""
"git-cherry is frequently used in patch-based workflows (see "
"linkgit:gitworkflows[7]) to determine if a series of patches has been "
"applied by the upstream maintainer.  In such a workflow you might create and "
"send a topic branch like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:58
#, no-wrap
msgid ""
"$ git checkout -b topic origin/master\n"
"# work and create some commits\n"
"$ git format-patch origin/master\n"
"$ git send-email ... 00*\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:62
msgid ""
"Later, you can see whether your changes have been applied by saying (still "
"on `topic`):"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:66
#, no-wrap
msgid ""
"$ git fetch  # update your notion of origin/master\n"
"$ git cherry -v\n"
msgstr ""

#. type: Title ~
#: ../Documentation/git-cherry.txt:69
#, no-wrap
msgid "Concrete example"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:73
msgid ""
"In a situation where topic consisted of three commits, and the maintainer "
"applied two of them, the situation might look like:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:86
#, no-wrap
msgid ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... snip some other commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... snip a lot more that has happened ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"|/\n"
"o 1234567 branch point\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:90
msgid ""
"In such cases, git-cherry shows a concise summary of what has yet to be "
"applied:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:96
#, no-wrap
msgid ""
"$ git cherry origin/master topic\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:102
msgid ""
"Here, we see that the commits A and C (marked with `-`) can be dropped from "
"your `topic` branch when you rebase it on top of `origin/master`, while the "
"commit B (marked with `+`) still needs to be kept so that it will be sent to "
"be applied to `origin/master`."
msgstr ""

#. type: Title ~
#: ../Documentation/git-cherry.txt:105
#, no-wrap
msgid "Using a limit"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:110
msgid ""
"The optional <limit> is useful in cases where your topic is based on other "
"work that is not in upstream.  Expanding on the previous example, this might "
"look like:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:126
#, no-wrap
msgid ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... snip some other commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... snip a lot more that has happened ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"| * 0000fff (base) unpublished stuff F\n"
"[... snip ...]\n"
"| * 0000aaa unpublished stuff A\n"
"|/\n"
"o 1234567 merge-base between upstream and topic\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:130
msgid ""
"By specifying `base` as the limit, you can avoid listing commits between "
"`base` and `topic`:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-cherry.txt:136
#, no-wrap
msgid ""
"$ git cherry origin/master topic base\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:140
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:142
msgid "linkgit:git-patch-id[1]"
msgstr ""

#. type: Title -
#: ../Documentation/git-cherry.txt:144
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-cherry.txt:145
msgid "Part of the linkgit:git[1] suite"
msgstr ""
