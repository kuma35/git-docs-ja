# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-09-29 02:40+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-notes.txt:2
#, no-wrap
msgid "git-notes(1)"
msgstr "git-notes(1)"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:7
msgid "git-notes - Add or inspect object notes"
msgstr "git-notes - オブジェクトノートを追加または検査します"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:23
#, no-wrap
msgid ""
"'git notes' [list [<object>]]\n"
"'git notes' add [-f] [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' copy [-f] ( --stdin | <from-object> [<to-object>] )\n"
"'git notes' append [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' edit [--allow-empty] [<object>]\n"
"'git notes' show [<object>]\n"
"'git notes' merge [-v | -q] [-s <strategy> ] <notes-ref>\n"
"'git notes' merge --commit [-v | -q]\n"
"'git notes' merge --abort [-v | -q]\n"
"'git notes' remove [--ignore-missing] [--stdin] [<object>...]\n"
"'git notes' prune [-n] [-v]\n"
"'git notes' get-ref\n"
msgstr ""
"'git notes' [list [<object>]]\n"
"'git notes' add [-f] [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' copy [-f] ( --stdin | <from-object> [<to-object>] )\n"
"'git notes' append [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' edit [--allow-empty] [<object>]\n"
"'git notes' show [<object>]\n"
"'git notes' merge [-v | -q] [-s <strategy> ] <notes-ref>\n"
"'git notes' merge --commit [-v | -q]\n"
"'git notes' merge --abort [-v | -q]\n"
"'git notes' remove [--ignore-missing] [--stdin] [<object>...]\n"
"'git notes' prune [-n] [-v]\n"
"'git notes' get-ref\n"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:26
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:29
msgid ""
"Adds, removes, or reads notes attached to objects, without touching the "
"objects themselves."
msgstr ""
"オブジェクト自体に触れることなく、オブジェクトに添付のノートを追加、削除、ま"
"たは読み取ります。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:34
msgid ""
"By default, notes are saved to and read from `refs/notes/commits`, but this "
"default can be overridden.  See the OPTIONS, CONFIGURATION, and ENVIRONMENT "
"sections below.  If this ref does not exist, it will be quietly created when "
"it is first needed to store a note."
msgstr ""
"デフォルトでは、ノートは `refs/notes/commits` に保存され、そこから読み取られ"
"ますが、このデフォルトはオーバーライドできます。 以下の「OPTIONS」セクショ"
"ン、「CONFIGURATION」セクション、「ENVIRONMENT」のセクションを参照してくださ"
"い。 このrefが存在しない場合、ノートを保存するために最初に必要になったときに"
"黙って作成されます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:41
msgid ""
"A typical use of notes is to supplement a commit message without changing "
"the commit itself. Notes can be shown by 'git log' along with the original "
"commit message. To distinguish these notes from the message stored in the "
"commit object, the notes are indented like the message, after an unindented "
"line saying \"Notes (<refname>):\" (or \"Notes:\" for `refs/notes/commits`)."
msgstr ""
"ノートの一般的な使用法は、コミット自体を変更せずにコミットメッセージを補足す"
"ることです。 ノートは、元のコミットメッセージとともに `git log` で表示できま"
"す。 コミットオブジェクトに格納されているメッセージと区別するために、ノートは"
"メッセージと同様にインデントされます。インデントされていない行には \"Notes "
"(<refname>):\" (`refs/notes/commits` の場合は \"Notes:\") と書かれています。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:45
msgid ""
"Notes can also be added to patches prepared with `git format-patch` by using "
"the `--notes` option. Such notes are added as a patch commentary after a "
"three dash separator line."
msgstr ""
"`--notes` オプションを使用して、 `git format-patch` で作成されたパッチにノー"
"トを追加することもできます。 このようなノートは、3つのダッシュの区切り行の後"
"にパッチの解説として追加されます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:48
msgid ""
"To change which notes are shown by 'git log', see the \"notes.displayRef\" "
"discussion in <<CONFIGURATION>>."
msgstr "`git log` で表示されるノートを変更するには、 <<CONFIGURATION>> の `notes.displayRef` についての議論を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:51
msgid ""
"See the \"notes.rewrite.<command>\" configuration for a way to carry notes "
"across commands that rewrite commits."
msgstr ""
"コミットを書き換えるコマンド間でノートを渡す法については、 `notes.rewrite."
"<command>` 構成を参照してください。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:54
#, no-wrap
msgid "SUBCOMMANDS"
msgstr "SUBCOMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:56
#, no-wrap
msgid "list"
msgstr "list"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:61
msgid ""
"List the notes object for a given object. If no object is given, show a list "
"of all note objects and the objects they annotate (in the format \"<note "
"object> <annotated object>\").  This is the default subcommand if no "
"subcommand is given."
msgstr ""
"指定のオブジェクトのノートオブジェクトを一覧表示します。 オブジェクトが指定さ"
"れていない場合は、すべてのノートオブジェクトとそれらが注釈を付けるオブジェク"
"トのリストを表示します(\"<note object> <annotated object>\" 形式)。 サブコマ"
"ンドが指定されていない場合、これはデフォルトのサブコマンドです。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:62
#, no-wrap
msgid "add"
msgstr "add"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:69
msgid ""
"Add notes for a given object (defaults to HEAD). Abort if the object already "
"has notes (use `-f` to overwrite existing notes).  However, if you're using "
"`add` interactively (using an editor to supply the notes contents), then - "
"instead of aborting - the existing notes will be opened in the editor (like "
"the `edit` subcommand)."
msgstr ""
"指定のオブジェクトにメモを追加します(デフォルトはHEAD)。 オブジェクトにすでに"
"ノートがある場合は中止(abort)します(既存のノートを上書きするには `-f` を使用"
"します)。 ただし、 `add` を対話的に使用している場合(エディタを使用してノート"
"の内容を入力する場合)、中止する代わりに、(`edit` サブコマンドのように、)既存"
"のノートがエディタで開かれます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:70
#, no-wrap
msgid "copy"
msgstr "copy"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:76
msgid ""
"Copy the notes for the first object onto the second object (defaults to "
"HEAD). Abort if the second object already has notes, or if the first object "
"has none (use -f to overwrite existing notes to the second object). This "
"subcommand is equivalent to: `git notes add [-f] -C $(git notes list <from-"
"object>) <to-object>`"
msgstr ""
"最初のオブジェクトのノートを2番目のオブジェクト(デフォルトはHEAD)にコピーしま"
"す。 2番目のオブジェクトにすでにノートがある場合、または最初のオブジェクトに"
"ノートがない場合は中止(abort)します(`-f` を使用して2番目のオブジェクトの既存"
"のノートを上書きします)。このサブコマンドは `git notes add [-f] -C $(git "
"notes list <from-object>) <to-object>` と同等です。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:78
msgid "In `--stdin` mode, take lines in the format"
msgstr "`--stdin` モードでは、以下の形式で行を取得します"

#. type: delimited block -
#: ../Documentation-sedout/git-notes.txt:81
#, no-wrap
msgid "<from-object> SP <to-object> [ SP <rest> ] LF\n"
msgstr "<from-object> SP <to-object> [ SP <rest> ] LF\n"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:86
msgid ""
"on standard input, and copy the notes from each <from-object> to its "
"corresponding <to-object>.  (The optional `<rest>` is ignored so that the "
"command can read the input given to the `post-rewrite` hook.)"
msgstr ""
"標準入力で、各<from-object>から対応する<to-object>にノートをコピーします。 "
"(オプションの `<rest>` は無視されるため、コマンドは `post-rewrite` フックに与"
"えられた入力を読み取ることができます。)"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:87
#, no-wrap
msgid "append"
msgstr "append"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:90
msgid ""
"Append to the notes of an existing object (defaults to HEAD).  Creates a new "
"notes object if needed."
msgstr ""
"既存のオブジェクトのノートに追加します(デフォルトはHEAD)。 必要に応じて、新し"
"いノートオブジェクトを作成します。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:91
#, no-wrap
msgid "edit"
msgstr "edit"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:93
msgid "Edit the notes for a given object (defaults to HEAD)."
msgstr "指定のオブジェクトのノートを編集します(デフォルトはHEAD)。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:94
#, no-wrap
msgid "show"
msgstr "show"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:96
msgid "Show the notes for a given object (defaults to HEAD)."
msgstr "指定のオブジェクトのノートを表示します(デフォルトはHEAD)。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:97
#, no-wrap
msgid "merge"
msgstr "merge"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:102
msgid ""
"Merge the given notes ref into the current notes ref.  This will try to "
"merge the changes made by the given notes ref (called \"remote\") since the "
"merge-base (if any) into the current notes ref (called \"local\")."
msgstr ""
"指定のノートrefを現在のノートrefにマージします。 これにより、マージベース(存"
"在する場合)以降に指定されたnote参照(「remote」と呼ばれる）によって行われた変"
"更が現在のノートref(「local」と呼ばれる)にマージされます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:111
msgid ""
"If conflicts arise and a strategy for automatically resolving conflicting "
"notes (see the \"NOTES MERGE STRATEGIES\" section) is not given, the \"manual"
"\" resolver is used. This resolver checks out the conflicting notes in a "
"special worktree (`.git/NOTES_MERGE_WORKTREE`), and instructs the user to "
"manually resolve the conflicts there.  When done, the user can either "
"finalize the merge with 'git notes merge --commit', or abort the merge with "
"'git notes merge --abort'."
msgstr ""
"競合が発生し、競合するノートを自動的に解決するための戦略(「NOTES MERGE "
"STRATEGIES」セクション参照)が指定されていない場合は、「manual」(手動)リゾル"
"バーが使用されます。 このリゾルバーは、特別なワークツリー(`.git/"
"NOTES_MERGE_WORKTREE`)内の競合するノートをチェックアウトし、そこで競合を手動"
"で解決するようにユーザーに指示します。 完了したら、ユーザーは `git notes "
"merge --commit` を使用してマージを完了するか、 `git notes merge --abort` を使"
"用してマージを中止(abort)できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:112
#, no-wrap
msgid "remove"
msgstr "remove"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:117
msgid ""
"Remove the notes for given objects (defaults to HEAD). When giving zero or "
"one object from the command line, this is equivalent to specifying an empty "
"note message to the `edit` subcommand."
msgstr ""
"指定のオブジェクトのノートを削除します(デフォルトはHEAD)。 コマンドラインから"
"0個または1個のオブジェクトを指定する場合、これは `edit` サブコマンドに空の"
"ノートメッセージを指定することと同じです。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:118
#, no-wrap
msgid "prune"
msgstr "prune"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:120
msgid "Remove all notes for non-existing/unreachable objects."
msgstr ""
"存在しない(non-existing)/到達できない(unreachable) オブジェクトのすべてのノー"
"トを削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:121
#, no-wrap
msgid "get-ref"
msgstr "get-ref"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:124
msgid ""
"Print the current notes ref. This provides an easy way to retrieve the "
"current notes ref (e.g. from scripts)."
msgstr ""
"現在のノートを出力します。これにより、現在のノートrefを(スクリプトなどから)簡"
"単に取得する方法が提供されます。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:126
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:127
#, no-wrap
msgid "`-f`"
msgstr "`-f`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:128
#, no-wrap
msgid "`--force`"
msgstr "`--force`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:131
msgid ""
"When adding notes to an object that already has notes, overwrite the "
"existing notes (instead of aborting)."
msgstr ""
"すでにノートがあるオブジェクトにノートを追加する場合は、(中止するのではな"
"く、)既存のノートを上書きします。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:132
#, no-wrap
msgid "`-m <msg>`"
msgstr "`-m <msg>`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:133
#, no-wrap
msgid "`--message=<msg>`"
msgstr "`--message=<msg>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:139
msgid ""
"Use the given note message (instead of prompting).  If multiple `-m` options "
"are given, their values are concatenated as separate paragraphs.  Lines "
"starting with `#` and empty lines other than a single line between "
"paragraphs will be stripped out."
msgstr ""
"(プロンプトを表示する代わりに、)指定のノートメッセージを使用します。 複数の "
"`-m` オプションが指定されている場合、それらの値は個別の段落として連結されま"
"す。 `#` で始まる行と、段落間の1行以外の空行は削除されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:140
#, no-wrap
msgid "`-F <file>`"
msgstr "`-F <file>`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:141
#, no-wrap
msgid "`--file=<file>`"
msgstr "`--file=<file>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:146
msgid ""
"Take the note message from the given file.  Use '-' to read the note message "
"from the standard input.  Lines starting with `#` and empty lines other than "
"a single line between paragraphs will be stripped out."
msgstr ""
"指定のファイルからメモメッセージを取得します。 `-` を使用すると、標準入力から"
"メモメッセージを読み取ります。 `#` で始まる行と、段落間の1行以外の空行は削除"
"されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:147
#, no-wrap
msgid "`-C <object>`"
msgstr "`-C <object>`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:148
#, no-wrap
msgid "`--reuse-message=<object>`"
msgstr "`--reuse-message=<object>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:152
msgid ""
"Take the given blob object (for example, another note) as the note message. "
"(Use `git notes copy <object>` instead to copy notes between objects.)"
msgstr ""
"指定のブロブオブジェクト(たとえば、別のノート)をノートメッセージとして受け取"
"ります。 (オブジェクト間でメモをコピーするには、代わりに `git notes copy "
"<object>` を使用してください。)"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:153
#, no-wrap
msgid "`-c <object>`"
msgstr "`-c <object>`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:154
#, no-wrap
msgid "`--reedit-message=<object>`"
msgstr "`--reedit-message=<object>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:157
msgid ""
"Like '-C', but with `-c` the editor is invoked, so that the user can further "
"edit the note message."
msgstr ""
"'-C' と同様ですが、 `-c` を使用するとエディタが呼び出されるため、ユーザーは"
"ノートメッセージをさらに編集できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:158
#, no-wrap
msgid "`--allow-empty`"
msgstr "`--allow-empty`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:161
msgid ""
"Allow an empty note object to be stored. The default behavior is to "
"automatically remove empty notes."
msgstr ""
"空のノートオブジェクトを保存できるようにします。 デフォルトの動作では、空の"
"ノートは自動的に削除されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:162
#, no-wrap
msgid "`--ref <ref>`"
msgstr "`--ref <ref>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:168
msgid ""
"Manipulate the notes tree in <ref>.  This overrides `GIT_NOTES_REF` and the "
"\"core.notesRef\" configuration.  The ref specifies the full refname when it "
"begins with `refs/notes/`; when it begins with `notes/`, `refs/` and "
"otherwise `refs/notes/` is prefixed to form a full name of the ref."
msgstr ""
"<ref>のノートツリーを操作します。 これは、 `GIT_NOTES_REF` と、 `core."
"notesRef` 構成をオーバーライドします。 refは、 `refs/notes/` で始まる完全な"
"ref名を指定します。 `notes/` で始まる場合、 `refs/` が接頭辞として付けられ、"
"それ以外の場合は `refs/notes/` が接頭辞として付けられ、refのフルネームを形成"
"します。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:169
#, no-wrap
msgid "`--ignore-missing`"
msgstr "`--ignore-missing`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:172
msgid ""
"Do not consider it an error to request removing notes from an object that "
"does not have notes attached to it."
msgstr ""
"ノートが添付されていないオブジェクトからノートの削除を要求することをエラーと"
"見なさないでください。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:173
#, no-wrap
msgid "`--stdin`"
msgstr "`--stdin`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:177
msgid ""
"Also read the object names to remove notes from the standard input (there is "
"no reason you cannot combine this with object names from the command line)."
msgstr ""
"また、ノートを削除するために標準入力からオブジェクト名を読み取る(コマンドライ"
"ンからオブジェクト名と組み合わせることができないわけではありません)。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:178
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:179
#, no-wrap
msgid "`--dry-run`"
msgstr "`--dry-run`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:182
msgid ""
"Do not remove anything; just report the object names whose notes would be "
"removed."
msgstr ""
"何も削除しないでください。 ノートが削除されるオブジェクト名を報告するだけで"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:183
#, no-wrap
msgid "`-s <strategy>`"
msgstr "`-s <strategy>`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:184
#, no-wrap
msgid "`--strategy=<strategy>`"
msgstr "`--strategy=<strategy>`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:191
msgid ""
"When merging notes, resolve notes conflicts using the given strategy. The "
"following strategies are recognized: \"manual\" (default), \"ours\", \"theirs"
"\", \"union\" and \"cat_sort_uniq\".  This option overrides the \"notes."
"mergeStrategy\" configuration setting.  See the \"NOTES MERGE STRATEGIES\" "
"section below for more information on each notes merge strategy."
msgstr ""
"ノートをマージするときは、指定の戦略を使用してノートの競合を解決します。 次の"
"戦略が認識されます:  `manual`(デフォルト)、 `ours` 、 `theirs` 、 "
"`union`  、 `cat_sort_uniq` 。 このオプションは、 `notes.mergeStrategy` 構成"
"設定をオーバーライドします。 各ノートマージ戦略の詳細については、以下の"
"「NOTES MERGE STRATEGIES」セクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:192
#, no-wrap
msgid "`--commit`"
msgstr "`--commit`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:200
msgid ""
"Finalize an in-progress 'git notes merge'. Use this option when you have "
"resolved the conflicts that 'git notes merge' stored in .git/"
"NOTES_MERGE_WORKTREE. This amends the partial merge commit created by 'git "
"notes merge' (stored in .git/NOTES_MERGE_PARTIAL) by adding the notes in ."
"git/NOTES_MERGE_WORKTREE. The notes ref stored in the .git/NOTES_MERGE_REF "
"symref is updated to the resulting commit."
msgstr ""
"進行中の `git notes merge` を完了させます。 `.git/NOTES_MERGE_WORKTREE` に保"
"存されている `git notes merge` の競合を解決した場合は、このオプションを使用し"
"ます。 これにより、 `.git/NOTES_MERGE_WORKTREE` にノートを追加することで、 "
"`git notes merge` (`.git/NOTES_MERGE_PARTIAL` に保存)によって作成された部分的"
"なマージコミットが修正されます。 `.git/NOTES_MERGE_REF` symref に保存されてい"
"るノートrefは、結果のコミットに更新されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:201
#, no-wrap
msgid "`--abort`"
msgstr "`--abort`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:205
msgid ""
"Abort/reset an in-progress 'git notes merge', i.e. a notes merge with "
"conflicts. This simply removes all files related to the notes merge."
msgstr ""
"進行中の `git notes merge` を 中止(abort)/リセット します。つまり、ノートの"
"マージは競合を伴います。これにより、ノートのマージに関連するすべてのファイル"
"が削除されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:206
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:207
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:209
msgid "When merging notes, operate quietly."
msgstr "ノートをマージするときは、黙って作業します。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:210
#, no-wrap
msgid "`-v`"
msgstr "`-v`"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:211
#, no-wrap
msgid "`--verbose`"
msgstr "`--verbose`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:215
msgid ""
"When merging notes, be more verbose.  When pruning notes, report all object "
"names whose notes are removed."
msgstr ""
"ノートをマージするときは、よりおしゃべりになります。ノートを刈り込むときは、"
"ノートが削除されたすべてのオブジェクト名を報告してください。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:218
#, no-wrap
msgid "DISCUSSION"
msgstr "DISCUSSION"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:229
msgid ""
"Commit notes are blobs containing extra information about an object (usually "
"information to supplement a commit's message).  These blobs are taken from "
"notes refs.  A notes ref is usually a branch which contains \"files\" whose "
"paths are the object names for the objects they describe, with some "
"directory separators included for performance reasons footnote:[Permitted "
"pathnames have the form 'bf'`/`'fe'`/`'30'`/`'...'`/`'680d5a...': a sequence "
"of directory names of two hexadecimal digits each followed by a filename "
"with the rest of the object ID.]."
msgstr ""
"コミットノートは、オブジェクトに関する追加情報(通常はコミットのメッセージを補"
"足する情報)を含むブロブです。 これらのブロブは、ノートrefから取得されます。 "
"ノートrefは通常、パスが記述されたオブジェクトのオブジェクト名である「ファイ"
"ル」を含むブランチであり、パフォーマンス上の理由からいくつかのディレクトリ区"
"切り文字が含まれています。 footnote:[ 許可されるパス名の形式は `bf/"
"fe/30/.../680d5a...` です。2桁の16進数のディレクトリ名のシーケンスそれぞれの"
"後に、残りのオブジェクトIDを含むファイル名が続きます。 ]"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:236
msgid ""
"Every notes change creates a new commit at the specified notes ref.  You can "
"therefore inspect the history of the notes by invoking, e.g., `git log -p "
"notes/commits`.  Currently the commit message only records which operation "
"triggered the update, and the commit authorship is determined according to "
"the usual rules (see linkgit:git-commit[1]).  These details may change in "
"the future."
msgstr ""
"ノートを変更するたびに、指定したノート参照に新しいコミットが作成されます。 し"
"たがって、たとえば `git log -p notes/commits` を実行することで、ノートの履歴"
"を調べることができます。 現在のところ、コミットメッセージには更新のきっかけと"
"なった操作が記録されているだけで、コミットの作者は通常のルールに従って決定さ"
"れます(linkgit:git-commit[1] 参照)。 これらの詳細は、将来的に変更される可能性"
"があります。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:240
msgid ""
"It is also permitted for a notes ref to point directly to a tree object, in "
"which case the history of the notes can be read with `git log -p -g "
"<refname>`."
msgstr ""
"ノートrefがツリーオブジェクトを直接指すことも許可されています。その場合、ノー"
"トの履歴は `git log -p -g <refname>` で読み取ることができます。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:243
#, no-wrap
msgid "NOTES MERGE STRATEGIES"
msgstr "NOTES MERGE STRATEGIES"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:252
msgid ""
"The default notes merge strategy is \"manual\", which checks out conflicting "
"notes in a special work tree for resolving notes conflicts (`.git/"
"NOTES_MERGE_WORKTREE`), and instructs the user to resolve the conflicts in "
"that work tree.  When done, the user can either finalize the merge with 'git "
"notes merge --commit', or abort the merge with 'git notes merge --abort'."
msgstr ""
"デフォルトのノートマージ戦略は「manual」です。これは、ノートの競合を解決する"
"ために特別な作業ツリー(`.git/NOTES_MERGE_WORKTREE`)で競合するノートをチェック"
"アウトし、そのワークツリーで競合を解決するようにユーザーに指示します。完了し"
"たら、ユーザーは `git notes merge --commit` を使用してマージを完了するか、 "
"`git notes merge --abort` を使用してマージを中止できます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:255
msgid ""
"Users may select an automated merge strategy from among the following using "
"either -s/--strategy option or configuring notes.mergeStrategy accordingly:"
msgstr ""
"ユーザーは、`-s`/`--strategy` オプションを使用するか、 notes.mergeStrategy を"
"適宜構成して、以下の中から自動マージ戦略を選択できます:"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:258
msgid ""
"\"ours\" automatically resolves conflicting notes in favor of the local "
"version (i.e. the current notes ref)."
msgstr ""
"「ours」は、競合するノートを自動的に解決して、ローカルバージョン(つまり、現在"
"のノートref)を優先します。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:262
msgid ""
"\"theirs\" automatically resolves notes conflicts in favor of the remote "
"version (i.e. the given notes ref being merged into the current notes ref)."
msgstr ""
"「theirs」は、リモートバージョンを優先してノートの競合を自動的に解決します(つ"
"まり、指定されたノートrefが現在のノートrefにマージされます)。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:265
msgid ""
"\"union\" automatically resolves notes conflicts by concatenating the local "
"and remote versions."
msgstr ""
"「union」は、ローカルバージョンとリモートバージョンを連結することにより、ノー"
"トの競合を自動的に解決します。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:275
msgid ""
"\"cat_sort_uniq\" is similar to \"union\", but in addition to concatenating "
"the local and remote versions, this strategy also sorts the resulting lines, "
"and removes duplicate lines from the result. This is equivalent to applying "
"the \"cat | sort | uniq\" shell pipeline to the local and remote versions. "
"This strategy is useful if the notes follow a line-based format where one "
"wants to avoid duplicated lines in the merge result.  Note that if either "
"the local or remote version contain duplicate lines prior to the merge, "
"these will also be removed by this notes merge strategy."
msgstr ""
"「cat_sort_uniq」は `union` に似ていますが、この戦略は、ローカルバージョンと"
"リモートバージョンを連結することに加えて、結果の行を並べ替え、結果から重複す"
"る行を削除します。 これは、 `cat | sort | uniq` シェルパイプラインをローカル"
"バージョンとリモートバージョンに適用するのと同じです。この戦略は、ノートが行"
"ベースの形式に従っていて、マージ結果で行が重複しないようにする場合に役立ちま"
"す。 ローカルバージョンまたはリモートバージョンのいずれかにマージ前に既に重複"
"行が含まれている場合、これらもこのノートマージ戦略によって削除されることに注"
"意してください。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:278
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:282
msgid ""
"You can use notes to add annotations with information that was not available "
"at the time a commit was written."
msgstr ""
"あなたはノートを使用して、コミットが書き込まれた時点では利用できなかった情報"
"を含む注釈を追加できます。"

#. type: delimited block -
#: ../Documentation-sedout/git-notes.txt:288
#, no-wrap
msgid ""
"$ git notes add -m 'Tested-by: Johannes Sixt <j6t@kdbg.org>' 72a144e2\n"
"$ git show -s 72a144e\n"
"[...]\n"
"    Signed-off-by: Junio C Hamano <gitster@pobox.com>\n"
msgstr ""
"$ git notes add -m 'Tested-by: Johannes Sixt <j6t@kdbg.org>' 72a144e2\n"
"$ git show -s 72a144e\n"
"[...]\n"
"    Signed-off-by: Junio C Hamano <gitster@pobox.com>\n"

#. type: delimited block -
#: ../Documentation-sedout/git-notes.txt:291
#, no-wrap
msgid ""
"Notes:\n"
"    Tested-by: Johannes Sixt <j6t@kdbg.org>\n"
msgstr ""
"Notes:\n"
"    Tested-by: Johannes Sixt <j6t@kdbg.org>\n"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:296
msgid ""
"In principle, a note is a regular Git blob, and any kind of (non-)format is "
"accepted.  You can binary-safely create notes from arbitrary files using "
"'git hash-object':"
msgstr ""
"原則として、ノートは通常のGitブロブであり、あらゆる種類の形式(または非形式)が"
"受け入れられます。 `git hash-object` を使用して、任意のファイルから安全にノー"
"トを作成できます:"

#. type: delimited block -
#: ../Documentation-sedout/git-notes.txt:301
#, no-wrap
msgid ""
"$ cc *.c\n"
"$ blob=$(git hash-object -w a.out)\n"
"$ git notes --ref=built add --allow-empty -C \"$blob\" HEAD\n"
msgstr ""
"$ cc *.c\n"
"$ blob=$(git hash-object -w a.out)\n"
"$ git notes --ref=built add --allow-empty -C \"$blob\" HEAD\n"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:308
msgid ""
"(You cannot simply use `git notes --ref=built add -F a.out HEAD` because "
"that is not binary-safe.)  Of course, it doesn't make much sense to display "
"non-text-format notes with 'git log', so if you use such notes, you'll "
"probably need to write some special-purpose tools to do something useful "
"with them."
msgstr ""
"(これはバイナリセーフ(binary-safe)ではないため、単純に `git notes --"
"ref=built add -F a.out HEAD` を使用することはできません。) もちろん、テキスト"
"形式以外のノートを `git log` で表示することはあまり意味がありません。なので、"
"あなたがそのようなノートを使用する場合は、それらを使用して何か便利なことを行"
"うために、あなたはおそらくいくつかの特別な目的のツールを作成する必要がありま"
"す。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:312
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:314
#, no-wrap
msgid "core.notesRef"
msgstr "core.notesRef"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:319
msgid ""
"Notes ref to read and manipulate instead of `refs/notes/commits`.  Must be "
"an unabbreviated ref name.  This setting can be overridden through the "
"environment and command line."
msgstr ""
"`refs/notes/commits` の代わりに読み取りおよび操作するノートref。省略されてい"
"ないref名である必要があります。この設定は、環境およびコマンドラインから上書き"
"できます。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:326
#, no-wrap
msgid "ENVIRONMENT"
msgstr "ENVIRONMENT"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:328
#, no-wrap
msgid "`GIT_NOTES_REF`"
msgstr "`GIT_NOTES_REF`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:331
msgid ""
"Which ref to manipulate notes from, instead of `refs/notes/commits`.  This "
"overrides the `core.notesRef` setting."
msgstr ""
"`refs/notes/commits` の代わりに、どのrefからノートを操作するか。 これは "
"`core.notesRef` 設定を上書きします。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:332
#, no-wrap
msgid "`GIT_NOTES_DISPLAY_REF`"
msgstr "`GIT_NOTES_DISPLAY_REF`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:338
msgid ""
"Colon-delimited list of refs or globs indicating which refs, in addition to "
"the default from `core.notesRef` or `GIT_NOTES_REF`, to read notes from when "
"showing commit messages.  This overrides the `notes.displayRef` setting."
msgstr ""
"コロンで区切られた ref または glob のリスト。コミットメッセージを表示する際"
"に、デフォルトの `core.notesRef` または `GIT_NOTES_REF` に加えて、どの ref か"
"らノートを読み込むかを指定します。 これは `notes.displayRef` の設定よりも優先"
"されます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:341
msgid ""
"A warning will be issued for refs that do not exist, but a glob that does "
"not match any refs is silently ignored."
msgstr ""
"存在しないrefに対して警告が発行されますが、どのrefとも一致しないグロブ(glob)"
"は黙って無視されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:342
#, no-wrap
msgid "`GIT_NOTES_REWRITE_MODE`"
msgstr "`GIT_NOTES_REWRITE_MODE`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:347
msgid ""
"When copying notes during a rewrite, what to do if the target commit already "
"has a note.  Must be one of `overwrite`, `concatenate`, `cat_sort_uniq`, or "
"`ignore`.  This overrides the `core.rewriteMode` setting."
msgstr ""
"書き換え中にノートをコピーするときに、ターゲットコミットにすでにノートがある"
"場合の対処方法。 `overwrite` 、`concatenate` 、 `cat_sort_uniq` 、`ignore` の"
"いずれかである必要があります。 これは `core.rewriteMode` 設定を上書きします。"

#. type: Labeled list
#: ../Documentation-sedout/git-notes.txt:348
#, no-wrap
msgid "`GIT_NOTES_REWRITE_REF`"
msgstr "`GIT_NOTES_REWRITE_REF`"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:352
msgid ""
"When rewriting commits, which notes to copy from the original to the "
"rewritten commit.  Must be a colon-delimited list of refs or globs."
msgstr ""
"コミットを書き換える場合、元のコミットから書き換えられたコミットにコピーする"
"ためのノート。refまたはグロブ(glob)のコロンで区切られたリストである必要があり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:355
msgid ""
"If not set in the environment, the list of notes to copy depends on the "
"`notes.rewrite.<command>` and `notes.rewriteRef` settings."
msgstr ""
"環境で設定されていない場合、コピーするノートのリストは、 `notes.rewrite."
"<command>` および `notes.rewriteRef` の設定によって異なります。"

#. type: Title -
#: ../Documentation-sedout/git-notes.txt:357
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-notes.txt:358
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
