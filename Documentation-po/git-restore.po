# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-restore.txt:2
#, no-wrap
msgid "git-restore(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:7
msgid "git-restore - Restore working tree files"
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:14
#, no-wrap
msgid ""
"'git restore' [<options>] [--source=<tree>] [--staged] [--worktree] [--] "
"<pathspec>...\n"
"'git restore' [<options>] [--source=<tree>] [--staged] [--worktree] "
"--pathspec-from-file=<file> [--pathspec-file-nul]\n"
"'git restore' (-p|--patch) [<options>] [--source=<tree>] [--staged] "
"[--worktree] [--] [<pathspec>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:20
msgid ""
"Restore specified paths in the working tree with some contents from a "
"restore source. If a path is tracked but does not exist in the restore "
"source, it will be removed to match the source."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:24
msgid ""
"The command can also be used to restore the content in the index with "
"`--staged`, or restore both the working tree and the index with `--staged "
"--worktree`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:27
msgid ""
"By default, if `--staged` is given, the contents are restored from `HEAD`, "
"otherwise from the index. Use `--source` to restore from a different commit."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:30
msgid ""
"See \"Reset, restore and revert\" in linkgit:git[1] for the differences "
"between the three commands."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:32
msgid "THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE."
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:34
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:35
#, no-wrap
msgid "-s <tree>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:36
#, no-wrap
msgid "--source=<tree>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:40
msgid ""
"Restore the working tree files with the content from the given tree. It is "
"common to specify the source tree by naming a commit, branch or tag "
"associated with it."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:43
msgid ""
"If not specified, the contents are restored from `HEAD` if `--staged` is "
"given, otherwise from the index."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:47
msgid ""
"As a special case, you may use `\"A...B\"` as a shortcut for the merge base "
"of `A` and `B` if there is exactly one merge base. You can leave out at most "
"one of `A` and `B`, in which case it defaults to `HEAD`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:48
#, no-wrap
msgid "-p"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:49
#, no-wrap
msgid "--patch"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:54
msgid ""
"Interactively select hunks in the difference between the restore source and "
"the restore location. See the ``Interactive Mode'' section of "
"linkgit:git-add[1] to learn how to operate the `--patch` mode."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:57
msgid ""
"Note that `--patch` can accept no pathspec and will prompt to restore all "
"modified paths."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:58
#, no-wrap
msgid "-W"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:59
#, no-wrap
msgid "--worktree"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:60
#, no-wrap
msgid "-S"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:61
#, no-wrap
msgid "--staged"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:65
msgid ""
"Specify the restore location. If neither option is specified, by default the "
"working tree is restored. Specifying `--staged` will only restore the "
"index. Specifying both restores both."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:66
#, no-wrap
msgid "-q"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:67
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:69
msgid "Quiet, suppress feedback messages. Implies `--no-progress`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:70
#, no-wrap
msgid "--progress"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:71
#, no-wrap
msgid "--no-progress"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:76
msgid ""
"Progress status is reported on the standard error stream by default when it "
"is attached to a terminal, unless `--quiet` is specified. This flag enables "
"progress reporting even if not attached to a terminal, regardless of "
"`--quiet`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:77
#, no-wrap
msgid "--ours"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:78
#, no-wrap
msgid "--theirs"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:81
msgid ""
"When restoring files in the working tree from the index, use stage #2 "
"('ours') or #3 ('theirs') for unmerged paths."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:85
msgid ""
"Note that during `git rebase` and `git pull --rebase`, 'ours' and 'theirs' "
"may appear swapped. See the explanation of the same options in "
"linkgit:git-checkout[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:86
#, no-wrap
msgid "-m"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:87
#, no-wrap
msgid "--merge"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:90
msgid ""
"When restoring files on the working tree from the index, recreate the "
"conflicted merge in the unmerged paths."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:91
#, no-wrap
msgid "--conflict=<style>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:97
msgid ""
"The same as `--merge` option above, but changes the way the conflicting "
"hunks are presented, overriding the `merge.conflictStyle` configuration "
"variable.  Possible values are \"merge\" (default) and \"diff3\" (in "
"addition to what is shown by \"merge\" style, shows the original contents)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:98
#, no-wrap
msgid "--ignore-unmerged"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:103
msgid ""
"When restoring files on the working tree from the index, do not abort the "
"operation if there are unmerged entries and neither `--ours`, `--theirs`, "
"`--merge` or `--conflict` is specified. Unmerged paths on the working tree "
"are left alone."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:104
#, no-wrap
msgid "--ignore-skip-worktree-bits"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:110
msgid ""
"In sparse checkout mode, by default is to only update entries matched by "
"`<pathspec>` and sparse patterns in $GIT_DIR/info/sparse-checkout. This "
"option ignores the sparse patterns and unconditionally restores any files in "
"`<pathspec>`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:111
#, no-wrap
msgid "--recurse-submodules"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:112
#, no-wrap
msgid "--no-recurse-submodules"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:121
msgid ""
"If `<pathspec>` names an active submodule and the restore location includes "
"the working tree, the submodule will only be updated if this option is "
"given, in which case its working tree will be restored to the commit "
"recorded in the superproject, and any local modifications overwritten. If "
"nothing (or `--no-recurse-submodules`) is used, submodules working trees "
"will not be updated. Just like linkgit:git-checkout[1], this will detach "
"`HEAD` of the submodule."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:122
#, no-wrap
msgid "--overlay"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:123
#, no-wrap
msgid "--no-overlay"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:128
msgid ""
"In overlay mode, the command never removes files when restoring. In "
"no-overlay mode, tracked files that do not appear in the `--source` tree are "
"removed, to make them match `<tree>` exactly. The default is no-overlay "
"mode."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:129
#, no-wrap
msgid "--pathspec-from-file=<file>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:136
msgid ""
"Pathspec is passed in `<file>` instead of commandline args. If `<file>` is "
"exactly `-` then standard input is used. Pathspec elements are separated by "
"LF or CR/LF. Pathspec elements can be quoted as explained for the "
"configuration variable `core.quotePath` (see linkgit:git-config[1]). See "
"also `--pathspec-file-nul` and global `--literal-pathspecs`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:137
#, no-wrap
msgid "--pathspec-file-nul"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:141
msgid ""
"Only meaningful with `--pathspec-from-file`. Pathspec elements are separated "
"with NUL character and all other characters are taken literally (including "
"newlines and quotes)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:142
#, no-wrap
msgid "\\--"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:144
msgid "Do not interpret any more arguments as options."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-restore.txt:145
#, no-wrap
msgid "<pathspec>..."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:147
msgid "Limits the paths affected by the operation."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:149
msgid "For more details, see the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:151
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:156
msgid ""
"The following sequence switches to the `master` branch, reverts the "
"`Makefile` to two revisions back, deletes hello.c by mistake, and gets it "
"back from the index."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:162
#, no-wrap
msgid ""
"$ git switch master\n"
"$ git restore --source master~2 Makefile  <1>\n"
"$ rm -f hello.c\n"
"$ git restore hello.c                     <2>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:165
msgid "take a file out of another commit"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:166
msgid "restore hello.c from the index"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:169
msgid ""
"If you want to restore _all_ C source files to match the version in the "
"index, you can say"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:172
#, no-wrap
msgid "$ git restore '*.c'\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:178
msgid ""
"Note the quotes around `*.c`.  The file `hello.c` will also be restored, "
"even though it is no longer in the working tree, because the file globbing "
"is used to match entries in the index (not in the working tree by the "
"shell)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:180
msgid "To restore all files in the current directory"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:183
#, no-wrap
msgid "$ git restore .\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:187
msgid ""
"or to restore all working tree files with 'top' pathspec magic (see "
"linkgit:gitglossary[7])"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:190
#, no-wrap
msgid "$ git restore :/\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:194
msgid ""
"To restore a file in the index to match the version in `HEAD` (this is the "
"same as using linkgit:git-reset[1])"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:197
#, no-wrap
msgid "$ git restore --staged hello.c\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:201
msgid ""
"or you can restore both the index and the working tree (this the same as "
"using linkgit:git-checkout[1])"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:204
#, no-wrap
msgid "$ git restore --source=HEAD --staged --worktree hello.c\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:207
msgid "or the short form which is more practical but less readable:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-restore.txt:210
#, no-wrap
msgid "$ git restore -s@ -SW hello.c\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:213
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:216
msgid "linkgit:git-checkout[1], linkgit:git-reset[1]"
msgstr ""

#. type: Title -
#: ../Documentation/git-restore.txt:218
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-restore.txt:219
msgid "Part of the linkgit:git[1] suite"
msgstr ""
