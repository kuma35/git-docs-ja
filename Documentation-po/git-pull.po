# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-pull.txt:2
#, no-wrap
msgid "git-pull(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:7
msgid ""
"git-pull - Fetch from and integrate with another repository or a local "
"branch"
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:13
#, no-wrap
msgid "'git pull' [<options>] [<repository> [<refspec>...]]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:24
msgid ""
"Incorporates changes from a remote repository into the current branch.  If "
"the current branch is behind the remote, then by default it will "
"fast-forward the current branch to match the remote.  If the current branch "
"and the remote have diverged, the user needs to specify how to reconcile the "
"divergent branches with `--rebase` or `--no-rebase` (or the corresponding "
"configuration option in `pull.rebase`)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:29
msgid ""
"More precisely, `git pull` runs `git fetch` with the given parameters and "
"then depending on configuration options or command line flags, will call "
"either `git rebase` or `git merge` to reconcile diverging branches."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:36
msgid ""
"<repository> should be the name of a remote repository as passed to "
"linkgit:git-fetch[1].  <refspec> can name an arbitrary remote ref (for "
"example, the name of a tag) or even a collection of refs with corresponding "
"remote-tracking branches (e.g., "
"refs/heads/{asterisk}:refs/remotes/origin/{asterisk}), but usually it is the "
"name of a branch in the remote repository."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:40
msgid ""
"Default values for <repository> and <branch> are read from the \"remote\" "
"and \"merge\" configuration for the current branch as set by "
"linkgit:git-branch[1] `--track`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:43
msgid "Assume the following history exists and the current branch is \"`master`\":"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:50
#, no-wrap
msgid ""
"\t  A---B---C master on origin\n"
"\t /\n"
"    D---E---F---G master\n"
"\t^\n"
"\torigin/master in your repository\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:57
msgid ""
"Then \"`git pull`\" will fetch and replay the changes from the remote "
"`master` branch since it diverged from the local `master` (i.e., `E`)  until "
"its current commit (`C`) on top of `master` and record the result in a new "
"commit along with the names of the two parent commits and a log message from "
"the user describing the changes."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:62
#, no-wrap
msgid ""
"\t  A---B---C origin/master\n"
"\t /         \\\n"
"    D---E---F---G---H master\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:66
msgid ""
"See linkgit:git-merge[1] for details, including how conflicts are presented "
"and handled."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:71
msgid ""
"In Git 1.7.0 or later, to cancel a conflicting merge, use `git reset "
"--merge`.  *Warning*: In older versions of Git, running 'git pull' with "
"uncommitted changes is discouraged: while possible, it leaves you in a state "
"that may be hard to back out of in the case of a conflict."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:76
msgid ""
"If any of the remote changes overlap with local uncommitted changes, the "
"merge will be automatically canceled and the work tree untouched.  It is "
"generally best to get any local changes in working order before pulling or "
"stash them away with linkgit:git-stash[1]."
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:78
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:80
#, no-wrap
msgid "-q"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:81
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:85
msgid ""
"This is passed to both underlying git-fetch to squelch reporting of during "
"transfer, and underlying git-merge to squelch output during merging."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:86
#, no-wrap
msgid "-v"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:87
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:89
msgid "Pass --verbose to git-fetch and git-merge."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:90
#, no-wrap
msgid "--[no-]recurse-submodules[=yes|on-demand|no]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:95
msgid ""
"This option controls if new commits of populated submodules should be "
"fetched, and if the working trees of active submodules should be updated, "
"too (see linkgit:git-fetch[1], linkgit:git-config[1] and "
"linkgit:gitmodules[5])."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:97
msgid ""
"If the checkout is done via rebase, local submodule commits are rebased as "
"well."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:99
msgid ""
"If the update is done via merge, the submodule conflicts are resolved and "
"checked out."
msgstr ""

#. type: Title ~
#: ../Documentation/git-pull.txt:101
#, no-wrap
msgid "Options related to merging"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:107
#, no-wrap
msgid "-r"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:108
#, no-wrap
msgid "--rebase[=false|true|merges|preserve|interactive]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:114
msgid ""
"When true, rebase the current branch on top of the upstream branch after "
"fetching. If there is a remote-tracking branch corresponding to the upstream "
"branch and the upstream branch was rebased since last fetched, the rebase "
"uses that information to avoid rebasing non-local changes."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:118
msgid ""
"When set to `merges`, rebase using `git rebase --rebase-merges` so that the "
"local merge commits are included in the rebase (see linkgit:git-rebase[1] "
"for details)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:122
msgid ""
"When set to `preserve` (deprecated in favor of `merges`), rebase with the "
"`--preserve-merges` option passed to `git rebase` so that locally created "
"merge commits will not be flattened."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:124
msgid "When false, merge the upstream branch into the current branch."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:126
msgid "When `interactive`, enable the interactive mode of rebase."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:130
msgid ""
"See `pull.rebase`, `branch.<name>.rebase` and `branch.autoSetupRebase` in "
"linkgit:git-config[1] if you want to make `git pull` always use `--rebase` "
"instead of merging."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:136
msgid ""
"This is a potentially _dangerous_ mode of operation.  It rewrites history, "
"which does not bode well when you published that history already.  Do *not* "
"use this option unless you have read linkgit:git-rebase[1] carefully."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-pull.txt:137
#, no-wrap
msgid "--no-rebase"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:139
msgid "This is shorthand for --rebase=false."
msgstr ""

#. type: Title ~
#: ../Documentation/git-pull.txt:141
#, no-wrap
msgid "Options related to fetching"
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:152
#, no-wrap
msgid "DEFAULT BEHAVIOUR"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:159
msgid ""
"Often people use `git pull` without giving any parameter.  Traditionally, "
"this has been equivalent to saying `git pull origin`.  However, when "
"configuration `branch.<name>.remote` is present while on branch `<name>`, "
"that value is used instead of `origin`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:164
msgid ""
"In order to determine what URL to use to fetch from, the value of the "
"configuration `remote.<origin>.url` is consulted and if there is not any "
"such variable, the value on the `URL:` line in `$GIT_DIR/remotes/<origin>` "
"is used."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:173
msgid ""
"In order to determine what remote branches to fetch (and optionally store in "
"the remote-tracking branches) when the command is run without any refspec "
"parameters on the command line, values of the configuration variable "
"`remote.<origin>.fetch` are consulted, and if there aren't any, "
"`$GIT_DIR/remotes/<origin>` is consulted and its `Pull:` lines are used.  In "
"addition to the refspec formats described in the OPTIONS section, you can "
"have a globbing refspec that looks like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:176
#, no-wrap
msgid "refs/heads/*:refs/remotes/origin/*\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:183
msgid ""
"A globbing refspec must have a non-empty RHS (i.e. must store what were "
"fetched in remote-tracking branches), and its LHS and RHS must end with "
"`/*`.  The above specifies that all remote branches are tracked using "
"remote-tracking branches in `refs/remotes/origin/` hierarchy under the same "
"name."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:187
msgid ""
"The rule to determine which remote branch to merge after fetching is a bit "
"involved, in order not to break backward compatibility."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:190
msgid ""
"If explicit refspecs were given on the command line of `git pull`, they are "
"all merged."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:195
msgid ""
"When no refspec was given on the command line, then `git pull` uses the "
"refspec from the configuration or `$GIT_DIR/remotes/<origin>`.  In such "
"cases, the following rules apply:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:199
msgid ""
"If `branch.<name>.merge` configuration for the current branch `<name>` "
"exists, that is the name of the branch at the remote site that is merged."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:201
msgid "If the refspec is a globbing one, nothing is merged."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:203
msgid "Otherwise the remote branch of the first refspec is merged."
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:206
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:211
msgid ""
"Update the remote-tracking branches for the repository you cloned from, then "
"merge one of them into your current branch:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:215
#, no-wrap
msgid ""
"$ git pull\n"
"$ git pull origin\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:220
msgid ""
"Normally the branch merged in is the HEAD of the remote repository, but the "
"choice is determined by the branch.<name>.remote and branch.<name>.merge "
"options; see linkgit:git-config[1] for details."
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:222
msgid "Merge into the current branch the remote branch `next`:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:225
#, no-wrap
msgid "$ git pull origin next\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:230
msgid ""
"This leaves a copy of `next` temporarily in FETCH_HEAD, and updates the "
"remote-tracking branch `origin/next`.  The same can be done by invoking "
"fetch and merge:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-pull.txt:234
#, no-wrap
msgid ""
"$ git fetch origin\n"
"$ git merge origin/next\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:239
msgid ""
"If you tried a pull which resulted in complex conflicts and would want to "
"start over, you can recover with 'git reset'."
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:244
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:251
msgid ""
"Using --recurse-submodules can only fetch new commits in already checked out "
"submodules right now. When e.g. upstream added a new submodule in the just "
"fetched commits of the superproject the submodule itself cannot be fetched, "
"making it impossible to check out that submodule later without having to do "
"a fetch again. This is expected to be fixed in a future Git version."
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:253
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:255
msgid "linkgit:git-fetch[1], linkgit:git-merge[1], linkgit:git-config[1]"
msgstr ""

#. type: Title -
#: ../Documentation/git-pull.txt:257
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-pull.txt:258
msgid "Part of the linkgit:git[1] suite"
msgstr ""
