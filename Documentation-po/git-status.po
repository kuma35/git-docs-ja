# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-status.txt:2
#, no-wrap
msgid "git-status(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:7
msgid "git-status - Show the working tree status"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:13
#, no-wrap
msgid "'git status' [<options>...] [--] [<pathspec>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:23
msgid ""
"Displays paths that have differences between the index file and the current "
"HEAD commit, paths that have differences between the working tree and the "
"index file, and paths in the working tree that are not tracked by Git (and "
"are not ignored by linkgit:gitignore[5]). The first are what you _would_ "
"commit by running `git commit`; the second and third are what you _could_ "
"commit by running 'git add' before running `git commit`."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:25
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:27
#, no-wrap
msgid "`-s`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:28
#, no-wrap
msgid "`--short`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:30
msgid "Give the output in the short-format."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:31
#, no-wrap
msgid "`-b`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:32
#, no-wrap
msgid "`--branch`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:34
msgid "Show the branch and tracking info even in short-format."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:35
#, no-wrap
msgid "`--show-stash`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:37
msgid "Show the number of entries currently stashed away."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:38
#, no-wrap
msgid "`--porcelain[=<version>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:43
msgid ""
"Give the output in an easy-to-parse format for scripts.  This is similar to "
"the short output, but will remain stable across Git versions and regardless "
"of user configuration. See below for details."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:46
msgid ""
"The version parameter is used to specify the format version.  This is "
"optional and defaults to the original version 'v1' format."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:47
#, no-wrap
msgid "`--long`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:49
msgid "Give the output in the long-format. This is the default."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:50
#, no-wrap
msgid "`-v`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:51
#, no-wrap
msgid "`--verbose`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:57
msgid ""
"In addition to the names of files that have been changed, also show the "
"textual changes that are staged to be committed (i.e., like the output of "
"`git diff --cached`). If `-v` is specified twice, then also show the changes "
"in the working tree that have not yet been staged (i.e., like the output of "
"`git diff`)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:58
#, no-wrap
msgid "`-u[<mode>]`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:59
#, no-wrap
msgid "`--untracked-files[=<mode>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:61
msgid "Show untracked files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:66
msgid ""
"The mode parameter is used to specify the handling of untracked files.  It "
"is optional: it defaults to 'all', and if specified, it must be stuck to the "
"option (e.g. `-uno`, but not `-u no`)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:68
#: ../Documentation-sedout/git-status.txt:110
msgid "The possible options are:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:70
#, no-wrap
msgid "'no'     - Show no untracked files.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:71
#, no-wrap
msgid "'normal' - Shows untracked files and directories.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:72
#, no-wrap
msgid "'all'    - Also shows individual files in untracked directories.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:82
msgid ""
"When `-u` option is not used, untracked files and directories are shown (i."
"e. the same as specifying `normal`), to help you avoid forgetting to add "
"newly created files.  Because it takes extra work to find untracked files in "
"the filesystem, this mode may take some time in a large working tree.  "
"Consider enabling untracked cache and split index if supported (see `git "
"update-index --untracked-cache` and `git update-index --split-index`), "
"Otherwise you can use `no` to have `git status` return more quickly without "
"showing untracked files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:85
msgid ""
"The default can be changed using the status.showUntrackedFiles configuration "
"variable documented in linkgit:git-config[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:87
#, no-wrap
msgid "`--ignore-submodules[=<when>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:101
msgid ""
"Ignore changes to submodules when looking for changes. <when> can be either "
"\"none\", \"untracked\", \"dirty\" or \"all\", which is the default.  Using "
"\"none\" will consider the submodule modified when it either contains "
"untracked or modified files or its HEAD differs from the commit recorded in "
"the superproject and can be used to override any settings of the 'ignore' "
"option in linkgit:git-config[1] or linkgit:gitmodules[5]. When \"untracked\" "
"is used submodules are not considered dirty when they only contain untracked "
"content (but they are still scanned for modified content). Using \"dirty\" "
"ignores all changes to the work tree of submodules, only changes to the "
"commits stored in the superproject are shown (this was the behavior before "
"1.7.0). Using \"all\" hides all changes to submodules (and suppresses the "
"output of submodule summaries when the config option `status."
"submoduleSummary` is set)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:102
#, no-wrap
msgid "`--ignored[=<mode>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:104
msgid "Show ignored files as well."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:108
msgid ""
"The mode parameter is used to specify the handling of ignored files.  It is "
"optional: it defaults to 'traditional'."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:112
msgid "'traditional' - Shows ignored files and directories, unless"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:115
#, no-wrap
msgid ""
"--untracked-files=all is specified, in which case\n"
"individual files in ignored directories are\n"
"displayed.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:116
#, no-wrap
msgid "'no'\t        - Show no ignored files.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:117
#, no-wrap
msgid "'matching'    - Shows ignored files and directories matching an\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:118
#, no-wrap
msgid "ignore pattern.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:124
msgid ""
"When 'matching' mode is specified, paths that explicitly match an ignored "
"pattern are shown. If a directory matches an ignore pattern, then it is "
"shown, but not paths contained in the ignored directory. If a directory does "
"not match an ignore pattern, but all contents are ignored, then the "
"directory is not shown, but all contents are shown."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:126
#, no-wrap
msgid "`-z`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:129
msgid ""
"Terminate entries with NUL, instead of LF.  This implies the `--"
"porcelain=v1` output format if no other format is given."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:130
#, no-wrap
msgid "`--column[=<options>]`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:131
#, no-wrap
msgid "`--no-column`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:136
msgid ""
"Display untracked files in columns. See configuration variable `column."
"status` for option syntax. `--column` and `--no-column` without options are "
"equivalent to 'always' and 'never' respectively."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:137
#, no-wrap
msgid "`--ahead-behind`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:138
#, no-wrap
msgid "`--no-ahead-behind`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:141
msgid ""
"Display or do not display detailed ahead/behind counts for the branch "
"relative to its upstream branch.  Defaults to true."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:142
#, no-wrap
msgid "`--renames`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:143
#, no-wrap
msgid "`--no-renames`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:146
msgid ""
"Turn on/off rename detection regardless of user configuration.  See also "
"linkgit:git-diff[1] `--no-renames`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:147
#, no-wrap
msgid "`--find-renames[=<n>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:151
msgid ""
"Turn on rename detection, optionally setting the similarity threshold.  See "
"also linkgit:git-diff[1] `--find-renames`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-status.txt:152
#, no-wrap
msgid "<pathspec>..."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:154
msgid "See the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:156
#, no-wrap
msgid "OUTPUT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:162
msgid ""
"The output from this command is designed to be used as a commit template "
"comment.  The default, long format, is designed to be human readable, "
"verbose and descriptive.  Its contents and format are subject to change at "
"any time."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:167
msgid ""
"The paths mentioned in the output, unlike many other Git commands, are made "
"relative to the current directory if you are working in a subdirectory (this "
"is on purpose, to help cutting and pasting). See the status.relativePaths "
"config option below."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-status.txt:169
#, no-wrap
msgid "Short Format"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:173
msgid ""
"In the short-format, the status of each path is shown as one of these forms"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:176
#, no-wrap
msgid ""
"\tXY PATH\n"
"\tXY ORIG_PATH -> PATH\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:180
msgid ""
"where `ORIG_PATH` is where the renamed/copied contents came from. "
"`ORIG_PATH` is only shown when the entry is renamed or copied. The `XY` is a "
"two-letter status code."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:186
msgid ""
"The fields (including the `->`) are separated from each other by a single "
"space. If a filename contains whitespace or other nonprintable characters, "
"that field will be quoted in the manner of a C string literal: surrounded by "
"ASCII double quote (34) characters, and with interior special characters "
"backslash-escaped."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:189
msgid ""
"There are three different types of states that are shown using this format, "
"and each one uses the `XY` syntax differently:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:191
msgid ""
"When a merge is occurring and the merge was successful, or outside of a merge"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:193
msgid ""
"situation, `X` shows the status of the index and `Y` shows the status of the "
"working tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:194
msgid ""
"When a merge conflict has occurred and has not yet been resolved, `X` and `Y`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:196
msgid ""
"show the state introduced by each head of the merge, relative to the common "
"ancestor. These paths are said to be _unmerged_."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:197
msgid ""
"When a path is untracked, `X` and `Y` are always the same, since they are"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:200
msgid ""
"unknown to the index. `??` is used for untracked paths. Ignored files are "
"not listed unless `--ignored` is used; if it is, ignored files are indicated "
"by `!!`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:203
msgid ""
"Note that the term _merge_ here also includes rebases using the default `--"
"merge` strategy, cherry-picks, and anything else using the merge machinery."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:207
msgid ""
"In the following table, these three classes are shown in separate sections, "
"and these characters are used for `X` and `Y` fields for the first two "
"sections that show tracked paths:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:209
msgid "' ' = unmodified"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:210
msgid "'M' = modified"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:211
msgid "'A' = added"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:212
msgid "'D' = deleted"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:213
msgid "'R' = renamed"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:214
msgid "'C' = copied"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:215
msgid "'U' = updated but unmerged"
msgstr ""

#. type: delimited block .
#: ../Documentation-sedout/git-status.txt:242
#, no-wrap
msgid ""
"X          Y     Meaning\n"
"-------------------------------------------------\n"
"\t [AMD]   not updated\n"
"M        [ MD]   updated in index\n"
"A        [ MD]   added to index\n"
"D                deleted from index\n"
"R        [ MD]   renamed in index\n"
"C        [ MD]   copied in index\n"
"[MARC]           index and work tree matches\n"
"[ MARC]     M    work tree changed since index\n"
"[ MARC]     D    deleted in work tree\n"
"[ D]        R    renamed in work tree\n"
"[ D]        C    copied in work tree\n"
"-------------------------------------------------\n"
"D           D    unmerged, both deleted\n"
"A           U    unmerged, added by us\n"
"U           D    unmerged, deleted by them\n"
"U           A    unmerged, added by them\n"
"D           U    unmerged, deleted by us\n"
"A           A    unmerged, both added\n"
"U           U    unmerged, both modified\n"
"-------------------------------------------------\n"
"?           ?    untracked\n"
"!           !    ignored\n"
"-------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:251
#, no-wrap
msgid ""
"Submodules have more state and instead report\n"
"\t\tM    the submodule has a different HEAD than\n"
"\t\t     recorded in the index\n"
"\t\tm    the submodule has modified content\n"
"\t\t?    the submodule has untracked files\n"
"since modified content or untracked files in a submodule cannot be added\n"
"via `git add` in the superproject to prepare a commit.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:254
msgid ""
"'m' and '?' are applied recursively. For example if a nested submodule in a "
"submodule contains an untracked file, this is reported as '?' as well."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:256
msgid "If -b is used the short-format status is preceded by a line"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:258
#, no-wrap
msgid "    ## branchname tracking info\n"
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-status.txt:260
#, no-wrap
msgid "Porcelain Format Version 1"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:267
msgid ""
"Version 1 porcelain format is similar to the short format, but is guaranteed "
"not to change in a backwards-incompatible way between Git versions or based "
"on user configuration. This makes it ideal for parsing by scripts.  The "
"description of the short format above also describes the porcelain format, "
"with a few exceptions:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:270
msgid ""
"The user's color.status configuration is not respected; color will always be "
"off."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:273
msgid ""
"The user's status.relativePaths configuration is not respected; paths shown "
"will always be relative to the repository root."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:283
msgid ""
"There is also an alternate -z format recommended for machine parsing. In "
"that format, the status field is the same, but some other things change.  "
"First, the '\\->' is omitted from rename entries and the field order is "
"reversed (e.g 'from \\-> to' becomes 'to from'). Second, a NUL (ASCII 0) "
"follows each filename, replacing space as a field separator and the "
"terminating newline (but a space still separates the status field from the "
"first filename).  Third, filenames containing special characters are not "
"specially formatted; no quoting or backslash-escaping is performed."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:285
msgid ""
"Any submodule changes are reported as modified `M` instead of `m` or single "
"`?`."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-status.txt:287
#, no-wrap
msgid "Porcelain Format Version 2"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:292
msgid ""
"Version 2 format adds more detailed information about the state of the "
"worktree and changed items.  Version 2 also defines an extensible set of "
"easy to parse optional headers."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:296
msgid ""
"Header lines start with \"#\" and are added in response to specific command "
"line arguments.  Parsers should ignore headers they don't recognize."
msgstr ""

#. type: Title ^
#: ../Documentation-sedout/git-status.txt:298
#, no-wrap
msgid "Branch Headers"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:302
msgid ""
"If `--branch` is given, a series of header lines are printed with "
"information about the current branch."
msgstr ""

#. type: delimited block .
#: ../Documentation-sedout/git-status.txt:312
#, no-wrap
msgid ""
"Line                                     Notes\n"
"------------------------------------------------------------\n"
"# branch.oid <commit> | (initial)        Current commit.\n"
"# branch.head <branch> | (detached)      Current branch.\n"
"# branch.upstream <upstream_branch>      If upstream is set.\n"
"# branch.ab +<ahead> -<behind>           If upstream is set and\n"
"\t\t\t\t\t the commit is present.\n"
"------------------------------------------------------------\n"
msgstr ""

#. type: Title ^
#: ../Documentation-sedout/git-status.txt:315
#, no-wrap
msgid "Changed Tracked Entries"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:322
msgid ""
"Following the headers, a series of lines are printed for tracked entries.  "
"One of three different line formats may be used to describe an entry "
"depending on the type of change.  Tracked entries are printed in an "
"undefined order; parsers should allow for a mixture of the 3 line types in "
"any order."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:324
msgid "Ordinary changed entries have the following format:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:326
#, no-wrap
msgid "    1 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <path>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:328
msgid "Renamed or copied entries have the following format:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:330
#, no-wrap
msgid "    2 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <X><score> <path><sep><origPath>\n"
msgstr ""

#. type: delimited block .
#: ../Documentation-sedout/git-status.txt:361
#, no-wrap
msgid ""
"Field       Meaning\n"
"--------------------------------------------------------\n"
"<XY>        A 2 character field containing the staged and\n"
"\t    unstaged XY values described in the short format,\n"
"\t    with unchanged indicated by a \".\" rather than\n"
"\t    a space.\n"
"<sub>       A 4 character field describing the submodule state.\n"
"\t    \"N...\" when the entry is not a submodule.\n"
"\t    \"S<c><m><u>\" when the entry is a submodule.\n"
"\t    <c> is \"C\" if the commit changed; otherwise \".\".\n"
"\t    <m> is \"M\" if it has tracked changes; otherwise \".\".\n"
"\t    <u> is \"U\" if there are untracked changes; otherwise \".\".\n"
"<mH>        The octal file mode in HEAD.\n"
"<mI>        The octal file mode in the index.\n"
"<mW>        The octal file mode in the worktree.\n"
"<hH>        The object name in HEAD.\n"
"<hI>        The object name in the index.\n"
"<X><score>  The rename or copy score (denoting the percentage\n"
"\t    of similarity between the source and target of the\n"
"\t    move or copy). For example \"R100\" or \"C75\".\n"
"<path>      The pathname.  In a renamed/copied entry, this\n"
"\t    is the target path.\n"
"<sep>       When the `-z` option is used, the 2 pathnames are separated\n"
"\t    with a NUL (ASCII 0x00) byte; otherwise, a tab (ASCII 0x09)\n"
"\t    byte separates them.\n"
"<origPath>  The pathname in the commit at HEAD or in the index.\n"
"\t    This is only present in a renamed/copied entry, and\n"
"\t    tells where the renamed/copied contents came from.\n"
"--------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:365
msgid ""
"Unmerged entries have the following format; the first character is a \"u\" "
"to distinguish from ordinary changed entries."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:367
#, no-wrap
msgid "    u <xy> <sub> <m1> <m2> <m3> <mW> <h1> <h2> <h3> <path>\n"
msgstr ""

#. type: delimited block .
#: ../Documentation-sedout/git-status.txt:384
#, no-wrap
msgid ""
"Field       Meaning\n"
"--------------------------------------------------------\n"
"<XY>        A 2 character field describing the conflict type\n"
"\t    as described in the short format.\n"
"<sub>       A 4 character field describing the submodule state\n"
"\t    as described above.\n"
"<m1>        The octal file mode in stage 1.\n"
"<m2>        The octal file mode in stage 2.\n"
"<m3>        The octal file mode in stage 3.\n"
"<mW>        The octal file mode in the worktree.\n"
"<h1>        The object name in stage 1.\n"
"<h2>        The object name in stage 2.\n"
"<h3>        The object name in stage 3.\n"
"<path>      The pathname.\n"
"--------------------------------------------------------\n"
msgstr ""

#. type: Title ^
#: ../Documentation-sedout/git-status.txt:387
#, no-wrap
msgid "Other Items"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:392
msgid ""
"Following the tracked entries (and if requested), a series of lines will be "
"printed for untracked and then ignored items found in the worktree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:394
msgid "Untracked items have the following format:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:396
#, no-wrap
msgid "    ? <path>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:398
msgid "Ignored items have the following format:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:400
#, no-wrap
msgid "    ! <path>\n"
msgstr ""

#. type: Title ^
#: ../Documentation-sedout/git-status.txt:402
#, no-wrap
msgid "Pathname Format Notes and -z"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:407
msgid ""
"When the `-z` option is given, pathnames are printed as is and without any "
"quoting and lines are terminated with a NUL (ASCII 0x00)  byte."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:411
msgid ""
"Without the `-z` option, pathnames with \"unusual\" characters are quoted as "
"explained for the configuration variable `core.quotePath` (see linkgit:git-"
"config[1])."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:414
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:420
msgid ""
"The command honors `color.status` (or `status.color` -- they mean the same "
"thing and the latter is kept for backward compatibility) and `color.status."
"<slot>` configuration variables to colorize its output."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:424
msgid ""
"If the config variable `status.relativePaths` is set to false, then all "
"paths shown are relative to the repository root, not to the current "
"directory."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:435
msgid ""
"If `status.submoduleSummary` is set to a non zero number or true (identical "
"to -1 or an unlimited number), the submodule summary will be enabled for the "
"long format and a summary of commits for modified submodules will be shown "
"(see --summary-limit option of linkgit:git-submodule[1]). Please note that "
"the summary output from the status command will be suppressed for all "
"submodules when `diff.ignoreSubmodules` is set to 'all' or only for those "
"submodules where `submodule.<name>.ignore=all`. To also view the summary for "
"ignored submodules you can either use the --ignore-submodules=dirty command "
"line option or the 'git submodule summary' command, which shows a similar "
"output but does not honor these settings."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:437
#, no-wrap
msgid "BACKGROUND REFRESH"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:448
msgid ""
"By default, `git status` will automatically refresh the index, updating the "
"cached stat information from the working tree and writing out the result. "
"Writing out the updated index is an optimization that isn't strictly "
"necessary (`status` computes the values for itself, but writing them out is "
"just to save subsequent programs from repeating our computation). When "
"`status` is run in the background, the lock held during the write may "
"conflict with other simultaneous processes, causing them to fail. Scripts "
"running `status` in the background should consider using `git --no-optional-"
"locks status` (see linkgit:git[1] for details)."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:450
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:452
msgid "linkgit:gitignore[5]"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-status.txt:454
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-status.txt:455
msgid "Part of the linkgit:git[1] suite"
msgstr ""
