# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-reflog.txt:2
#, no-wrap
msgid "git-reflog(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-reflog.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:7
msgid "git-reflog - Manage reflog information"
msgstr ""

#. type: Title -
#: ../Documentation/git-reflog.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:13
#, no-wrap
msgid "'git reflog' <subcommand> <options>\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-reflog.txt:15
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:18
msgid ""
"The command takes various subcommands, and different options depending on "
"the subcommand:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:27
#, no-wrap
msgid ""
"'git reflog' ['show'] [log-options] [<ref>]\n"
"'git reflog expire' [--expire=<time>] [--expire-unreachable=<time>]\n"
"\t[--rewrite] [--updateref] [--stale-fix]\n"
"\t[--dry-run | -n] [--verbose] [--all [--single-worktree] | <refs>...]\n"
"'git reflog delete' [--rewrite] [--updateref]\n"
"\t[--dry-run | -n] [--verbose] ref@\\{specifier\\}...\n"
"'git reflog exists' <ref>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:35
msgid ""
"Reference logs, or \"reflogs\", record when the tips of branches and other "
"references were updated in the local repository. Reflogs are useful in "
"various Git commands, to specify the old value of a reference. For example, "
"`HEAD@{2}` means \"where HEAD used to be two moves ago\", "
"`master@{one.week.ago}` means \"where master used to point to one week ago "
"in this local repository\", and so on. See linkgit:gitrevisions[7] for more "
"details."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:37
msgid "This command manages the information recorded in the reflogs."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:44
msgid ""
"The \"show\" subcommand (which is also the default, in the absence of any "
"subcommands) shows the log of the reference provided in the command-line (or "
"`HEAD`, by default). The reflog covers all recent actions, and in addition "
"the `HEAD` reflog records branch switching.  `git reflog show` is an alias "
"for `git log -g --abbrev-commit --pretty=oneline`; see linkgit:git-log[1] "
"for more information."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:50
msgid ""
"The \"expire\" subcommand prunes older reflog entries. Entries older than "
"`expire` time, or entries older than `expire-unreachable` time and not "
"reachable from the current tip, are removed from the reflog.  This is "
"typically not used directly by end users -- instead, see linkgit:git-gc[1]."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:55
msgid ""
"The \"delete\" subcommand deletes single entries from the reflog. Its "
"argument must be an _exact_ entry (e.g. \"`git reflog delete "
"master@{2}`\"). This subcommand is also typically not used directly by end "
"users."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:59
msgid ""
"The \"exists\" subcommand checks whether a ref has a reflog.  It exits with "
"zero status if the reflog exists, and non-zero status if it does not."
msgstr ""

#. type: Title -
#: ../Documentation/git-reflog.txt:61
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Title ~
#: ../Documentation/git-reflog.txt:64
#, no-wrap
msgid "Options for `show`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:67
msgid "`git reflog show` accepts any of the options accepted by `git log`."
msgstr ""

#. type: Title ~
#: ../Documentation/git-reflog.txt:70
#, no-wrap
msgid "Options for `expire`"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:72
#, no-wrap
msgid "--all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:74
msgid "Process the reflogs of all references."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:75
#, no-wrap
msgid "--single-worktree"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:79
msgid ""
"By default when `--all` is specified, reflogs from all working trees are "
"processed. This option limits the processing to reflogs from the current "
"working tree only."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:80
#, no-wrap
msgid "--expire=<time>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:87
msgid ""
"Prune entries older than the specified time. If this option is not "
"specified, the expiration time is taken from the configuration setting "
"`gc.reflogExpire`, which in turn defaults to 90 days. `--expire=all` prunes "
"entries regardless of their age; `--expire=never` turns off pruning of "
"reachable entries (but see `--expire-unreachable`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:88
#, no-wrap
msgid "--expire-unreachable=<time>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:97
msgid ""
"Prune entries older than `<time>` that are not reachable from the current "
"tip of the branch. If this option is not specified, the expiration time is "
"taken from the configuration setting `gc.reflogExpireUnreachable`, which in "
"turn defaults to 30 days. `--expire-unreachable=all` prunes unreachable "
"entries regardless of their age; `--expire-unreachable=never` turns off "
"early pruning of unreachable entries (but see `--expire`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:98
#, no-wrap
msgid "--updateref"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:102
msgid ""
"Update the reference to the value of the top reflog entry (i.e.  "
"<ref>@\\{0\\}) if the previous top entry was pruned.  (This option is "
"ignored for symbolic references.)"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:103
#, no-wrap
msgid "--rewrite"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:107
msgid ""
"If a reflog entry's predecessor is pruned, adjust its \"old\" SHA-1 to be "
"equal to the \"new\" SHA-1 field of the entry that now precedes it."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:108
#, no-wrap
msgid "--stale-fix"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:113
msgid ""
"Prune any reflog entries that point to \"broken commits\". A broken commit "
"is a commit that is not reachable from any of the reference tips and that "
"refers, directly or indirectly, to a missing commit, tree, or blob object."
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:118
msgid ""
"This computation involves traversing all the reachable objects, i.e. it has "
"the same cost as 'git prune'.  It is primarily intended to fix corruption "
"caused by garbage collecting using older versions of Git, which didn't "
"protect objects referred to by reflogs."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:119
#, no-wrap
msgid "-n"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:120
#, no-wrap
msgid "--dry-run"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:123
msgid "Do not actually prune any entries; just show what would have been pruned."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-reflog.txt:124
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:126
msgid "Print extra information on screen."
msgstr ""

#. type: Title ~
#: ../Documentation/git-reflog.txt:129
#, no-wrap
msgid "Options for `delete`"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:134
msgid ""
"`git reflog delete` accepts options `--updateref`, `--rewrite`, `-n`, "
"`--dry-run`, and `--verbose`, with the same meanings as when they are used "
"with `expire`."
msgstr ""

#. type: Title -
#: ../Documentation/git-reflog.txt:137
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-reflog.txt:138
msgid "Part of the linkgit:git[1] suite"
msgstr ""
