# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-commit-graph.txt:2
#, no-wrap
msgid "git-commit-graph(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:7
msgid "git-commit-graph - Write and verify Git commit-graph files"
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:14
#, no-wrap
msgid ""
"'git commit-graph verify' [--object-dir <dir>] [--shallow] "
"[--[no-]progress]\n"
"'git commit-graph write' <options> [--object-dir <dir>] [--[no-]progress]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:17
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:20
msgid "Manage the serialized commit-graph file."
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:23
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-commit-graph.txt:24
#, no-wrap
msgid "--object-dir"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:33
msgid ""
"Use given directory for the location of packfiles and commit-graph "
"file. This parameter exists to specify the location of an alternate that "
"only has the objects directory, not a full `.git` directory. The "
"commit-graph file is expected to be in the `<dir>/info` directory and the "
"packfiles are expected to be in `<dir>/pack`. If the directory could not be "
"made into an absolute path, or does not match any known object directory, "
"`git commit-graph ...` will exit with non-zero status."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-commit-graph.txt:34
#, no-wrap
msgid "--[no-]progress"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:37
msgid ""
"Turn progress on/off explicitly. If neither is specified, progress is shown "
"if standard error is connected to a terminal."
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:39
#, no-wrap
msgid "COMMANDS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-commit-graph.txt:40
#, no-wrap
msgid "'write'"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:45
msgid ""
"Write a commit-graph file based on the commits found in packfiles. If the "
"config option `core.commitGraph` is disabled, then this command will output "
"a warning, then return success without writing a commit-graph file."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:49
msgid ""
"With the `--stdin-packs` option, generate the new commit graph by walking "
"objects only in the specified pack-indexes. (Cannot be combined with "
"`--stdin-commits` or `--reachable`.)"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:56
msgid ""
"With the `--stdin-commits` option, generate the new commit graph by walking "
"commits starting at the commits specified in stdin as a list of OIDs in hex, "
"one OID per line. OIDs that resolve to non-commits (either directly, or by "
"peeling tags) are silently ignored. OIDs that are malformed, or do not exist "
"generate an error. (Cannot be combined with `--stdin-packs` or "
"`--reachable`.)"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:60
msgid ""
"With the `--reachable` option, generate the new commit graph by walking "
"commits starting at all refs. (Cannot be combined with `--stdin-commits` or "
"`--stdin-packs`.)"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:63
msgid ""
"With the `--append` option, include all commits that are present in the "
"existing commit-graph file."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:71
msgid ""
"With the `--changed-paths` option, compute and write information about the "
"paths changed between a commit and its first parent. This operation can take "
"a while on large repositories. It provides significant performance gains for "
"getting history of a directory or a file with `git log -- <path>`. If this "
"option is given, future commit-graph writes will automatically assume that "
"this option was intended. Use `--no-changed-paths` to stop storing this "
"data."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:78
msgid ""
"With the `--max-new-filters=<n>` option, generate at most `n` new Bloom "
"filters (if `--changed-paths` is specified). If `n` is `-1`, no limit is "
"enforced. Only commits present in the new layer count against this limit. To "
"retroactively compute Bloom filters over earlier layers, it is advised to "
"use `--split=replace`.  Overrides the `commitGraph.maxNewFilters` "
"configuration."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:85
msgid ""
"With the `--split[=<strategy>]` option, write the commit-graph as a chain of "
"multiple commit-graph files stored in "
"`<dir>/info/commit-graphs`. Commit-graph layers are merged based on the "
"strategy and other splitting options. The new commits not already in the "
"commit-graph are added in a new \"tip\" file. This file is merged with the "
"existing file if the following merge conditions are met:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:92
msgid ""
"If `--split=no-merge` is specified, a merge is never performed, and the "
"remaining options are ignored. `--split=replace` overwrites the existing "
"chain with a new one. A bare `--split` defers to the remaining "
"options. (Note that merging a chain of commit graphs replaces the existing "
"chain with a length-1 chain where the first and only incremental holds the "
"entire graph)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:97
msgid ""
"If `--size-multiple=<X>` is not specified, let `X` equal 2. If the new tip "
"file would have `N` commits and the previous tip has `M` commits and `X` "
"times `N` is greater than `M`, instead merge the two files into a single "
"file."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:101
msgid ""
"If `--max-commits=<M>` is specified with `M` a positive integer, and the new "
"tip file would have more than `M` commits, then instead merge the new tip "
"with the previous tip."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:105
msgid ""
"Finally, if `--expire-time=<datetime>` is not specified, let `datetime` be "
"the current time. After writing the split commit-graph, delete all unused "
"commit-graph whose modified times are older than `datetime`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-commit-graph.txt:106
#, no-wrap
msgid "'verify'"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:110
msgid ""
"Read the commit-graph file and verify its contents against the object "
"database. Used to check for corrupted data."
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:113
msgid ""
"With the `--shallow` option, only check the tip commit-graph file in a chain "
"of split commit-graphs."
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:116
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:120
msgid ""
"Write a commit-graph file for the packed commits in your local `.git` "
"directory."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-commit-graph.txt:123
#, no-wrap
msgid "$ git commit-graph write\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:127
msgid ""
"Write a commit-graph file, extending the current commit-graph file using "
"commits in `<pack-index>`."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-commit-graph.txt:130
#, no-wrap
msgid "$ echo <pack-index> | git commit-graph write --stdin-packs\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:133
msgid "Write a commit-graph file containing all reachable commits."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-commit-graph.txt:136
#, no-wrap
msgid "$ git show-ref -s | git commit-graph write --stdin-commits\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:140
msgid ""
"Write a commit-graph file containing all commits in the current commit-graph "
"file along with those reachable from `HEAD`."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-commit-graph.txt:143
#, no-wrap
msgid "$ git rev-parse HEAD | git commit-graph write --stdin-commits --append\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-commit-graph.txt:147
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-commit-graph.txt:148
msgid "Part of the linkgit:git[1] suite"
msgstr ""
