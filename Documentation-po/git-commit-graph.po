# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2022-10-01 21:04+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-commit-graph.txt:2
#, no-wrap
msgid "git-commit-graph(1)"
msgstr "git-commit-graph(1)"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:7
msgid "git-commit-graph - Write and verify Git commit-graph files"
msgstr ""
"git-commit-graph - Gitコミットグラフファイル(commit-graph file)の書き出しと検"
"証(verify)"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:17
#, fuzzy, no-wrap
#| msgid ""
#| "'git commit-graph verify' [--object-dir <dir>] [--shallow] [--[no-]progress]\n"
#| "'git commit-graph write' <options> [--object-dir <dir>] [--[no-]progress]\n"
msgid ""
"'git commit-graph verify' [--object-dir <dir>] [--shallow] [--[no-]progress]\n"
"'git commit-graph write' [--object-dir <dir>] [--append]\n"
"\t\t\t[--split[=<strategy>]] [--reachable | --stdin-packs | --stdin-commits]\n"
"\t\t\t[--changed-paths] [--[no-]max-new-filters <n>] [--[no-]progress]\n"
"\t\t\t<split options>\n"
msgstr ""
"'git commit-graph verify' [--object-dir <dir>] [--shallow] [--[no-]progress]\n"
"'git commit-graph write' <options> [--object-dir <dir>] [--[no-]progress]\n"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:20
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:23
msgid "Manage the serialized commit-graph file."
msgstr "シリアル化されたコミットグラフファイルを管理します。"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:26
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-commit-graph.txt:27
#, no-wrap
msgid "`--object-dir`"
msgstr "`--object-dir`"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:36
msgid ""
"Use given directory for the location of packfiles and commit-graph file. "
"This parameter exists to specify the location of an alternate that only has "
"the objects directory, not a full `.git` directory. The commit-graph file is "
"expected to be in the `<dir>/info` directory and the packfiles are expected "
"to be in `<dir>/pack`. If the directory could not be made into an absolute "
"path, or does not match any known object directory, `git commit-graph ...` "
"will exit with non-zero status."
msgstr ""
"パックファイルとコミットグラフファイルの場所として、指定のディレクトリを使用"
"します。このパラメータは、完全な `.git` ディレクトリではなく、objectsディレク"
"トリのみを持つ代替の場所を指定するために存在します。コミットグラフファイルは "
"`<dir>/info` ディレクトリにあり、パックファイルは `<dir>/pack` にあるものと期"
"待されます。ディレクトリを絶対パスにすることができなかった場合、または既知の"
"オブジェクトディレクトリと一致しない場合、 `git commit-graph ...` はゼロ以外"
"のステータスで終了します。"

#. type: Labeled list
#: ../Documentation-sedout/git-commit-graph.txt:37
#, no-wrap
msgid "`--[no-]progress`"
msgstr "`--[no-]progress`"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:40
msgid ""
"Turn progress on/off explicitly. If neither is specified, progress is shown "
"if standard error is connected to a terminal."
msgstr ""
"進行状況を明示的にオン/オフにします。どちらも指定されていない場合、標準エラー"
"が端末に接続されていれば進行状況が表示されます。"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:42
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-commit-graph.txt:43
#, no-wrap
msgid "'write'"
msgstr "`write`"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:48
msgid ""
"Write a commit-graph file based on the commits found in packfiles. If the "
"config option `core.commitGraph` is disabled, then this command will output "
"a warning, then return success without writing a commit-graph file."
msgstr ""
"パックファイルで見つかったコミットに基づいてコミットグラフファイルを書き出し"
"ます。構成オプション `core.commitGraph` が無効になっている場合、このコマンド"
"は警告を出力し、コミットグラフファイルを書き込まずに成功を返します。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:52
msgid ""
"With the `--stdin-packs` option, generate the new commit graph by walking "
"objects only in the specified pack-indexes. (Cannot be combined with `--"
"stdin-commits` or `--reachable`.)"
msgstr ""
"`--stdin-packs` オプションと共に使用して、指定のパックインデックス内のオブ"
"ジェクトのみをウォークすることにより、新しいコミットグラフを生成します。 (`--"
"stdin-commits` または `--reachable` と組み合わせることはできません。)"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:59
msgid ""
"With the `--stdin-commits` option, generate the new commit graph by walking "
"commits starting at the commits specified in stdin as a list of OIDs in hex, "
"one OID per line. OIDs that resolve to non-commits (either directly, or by "
"peeling tags) are silently ignored. OIDs that are malformed, or do not exist "
"generate an error. (Cannot be combined with `--stdin-packs` or `--"
"reachable`.)"
msgstr ""
"`--stdin-commits` オプションと共に使用して、16進数のOIDのリストとしてstdinで"
"指定されたコミットから始まるコミットを1行に1つずつウォークして、新しいコミッ"
"トグラフを生成します。(直接に、またはタグの皮むきによって、)非コミットに解決"
"されるOIDは黙って無視されます。不正な形式のOID、または存在しないOIDは、エラー"
"を生成します。 (`--stdin-packs` または `--reachable` と組み合わせることはでき"
"ません。)"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:63
msgid ""
"With the `--reachable` option, generate the new commit graph by walking "
"commits starting at all refs. (Cannot be combined with `--stdin-commits` or "
"`--stdin-packs`.)"
msgstr ""
"`--reachable` オプションと共に使用して、すべての参照で開始するコミットを"
"ウォークして、新しいコミットグラフを生成します。 (`--stdin-commits` または "
"`--stdin-packs` と組み合わせることはできません。)"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:66
msgid ""
"With the `--append` option, include all commits that are present in the "
"existing commit-graph file."
msgstr ""
"`--append` オプションと共に使用して、既存のコミットグラフファイルに存在するす"
"べてのコミットを含めます。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:74
msgid ""
"With the `--changed-paths` option, compute and write information about the "
"paths changed between a commit and its first parent. This operation can take "
"a while on large repositories. It provides significant performance gains for "
"getting history of a directory or a file with `git log -- <path>`. If this "
"option is given, future commit-graph writes will automatically assume that "
"this option was intended. Use `--no-changed-paths` to stop storing this data."
msgstr ""
"`--changed-paths` オプションと共に使用すると、コミットとその最初の親(first "
"parent)の間で変更されたパスに関する情報を計算して書き込みます。この操作は、大"
"規模なリポジトリでは時間がかかる場合があります。 `git log -- <path>` を使用す"
"ると、ディレクトリまたはファイルの履歴を取得するためのパフォーマンスが大幅に"
"向上します。このオプションが指定されている場合、その後のコミットグラフ書き込"
"みでは、このオプションが指定されたものであると自動的に想定されます。このデー"
"タの保存を停止するには、 `--no-changed-paths` を使用します。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:81
msgid ""
"With the `--max-new-filters=<n>` option, generate at most `n` new Bloom "
"filters (if `--changed-paths` is specified). If `n` is `-1`, no limit is "
"enforced. Only commits present in the new layer count against this limit. To "
"retroactively compute Bloom filters over earlier layers, it is advised to "
"use `--split=replace`.  Overrides the `commitGraph.maxNewFilters` "
"configuration."
msgstr ""
"`--max-new-filters=<n>` オプションと共に使用して、(`--changed-paths` が指定さ"
"れている場合、)最大で `n` の新しいブルームフィルター(Bloom filters)を生成しま"
"す。 `n` が `-1` の場合、制限は適用されません。この制限に対しては、新しいレイ"
"ヤーに存在するコミットのみがカウントされます。以前のレイヤーでブルームフィル"
"ターをさかのぼって計算するには、 `--split=replace` を使用することをお勧めしま"
"す。 `commitGraph.maxNewFilters` 構成をオーバーライドします。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:88
msgid ""
"With the `--split[=<strategy>]` option, write the commit-graph as a chain of "
"multiple commit-graph files stored in `<dir>/info/commit-graphs`. Commit-"
"graph layers are merged based on the strategy and other splitting options. "
"The new commits not already in the commit-graph are added in a new \"tip\" "
"file. This file is merged with the existing file if the following merge "
"conditions are met:"
msgstr ""
"`--split[=<strategy>]` オプションと共に使用して、 `<dir>/info/commit-graphs` "
"に格納されている複数のコミットグラフファイルのチェーンとしてコミットグラフを"
"記述します。コミットグラフレイヤーは、戦略およびその他の分割オプションに基づ"
"いてマージされます。コミットグラフにまだ含まれていない新しいコミットは、新し"
"い先端ファイル(tip file)に追加されます。以下のマージ条件が満たされた場合、こ"
"のファイルは既存のファイルとマージされます:"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:95
msgid ""
"If `--split=no-merge` is specified, a merge is never performed, and the "
"remaining options are ignored. `--split=replace` overwrites the existing "
"chain with a new one. A bare `--split` defers to the remaining options. "
"(Note that merging a chain of commit graphs replaces the existing chain with "
"a length-1 chain where the first and only incremental holds the entire "
"graph)."
msgstr ""
"`--split=no-merge` が指定されている場合、マージは実行されず、残りのオプション"
"は無視されます。 `--split=replace` は、既存のチェーンを新しいチェーンで上書き"
"します。裸の `--split` は後続のオプションに従います。 (注意: コミットグラフの"
"チェーンをマージすると、既存のチェーンが長さ1のチェーンに置き換えられ、最初で"
"唯一の増分がグラフ全体を保持することに注意してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:100
msgid ""
"If `--size-multiple=<X>` is not specified, let `X` equal 2. If the new tip "
"file would have `N` commits and the previous tip has `M` commits and `X` "
"times `N` is greater than `M`, instead merge the two files into a single "
"file."
msgstr ""
"`--size-multiple=<X>` が指定されていない場合は、 Xを2に等しくします。新しい先"
"端ファイル(tip file)にN個のコミットがあり、以前の先端にM個のコミットがあり、"
"「X 掛ける N」が M より大きい場合は、代わりに2つのファイルを1つのファイルに"
"マージします。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:104
msgid ""
"If `--max-commits=<M>` is specified with `M` a positive integer, and the new "
"tip file would have more than `M` commits, then instead merge the new tip "
"with the previous tip."
msgstr ""
"`--max-commits=<M>` オプションの M が正の整数で指定され、新しい先端ファイル"
"(tip file) に M 以上のコミットがある場合は、代わりに新しい先端を以前の先端と"
"マージします。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:108
msgid ""
"Finally, if `--expire-time=<datetime>` is not specified, let `datetime` be "
"the current time. After writing the split commit-graph, delete all unused "
"commit-graph whose modified times are older than `datetime`."
msgstr ""
"最後に、 `--expire-time=<datetime>` が指定されていない場合は、 datetimeを現在"
"の時刻とします。分割コミットグラフ(split commit-graph)を書き込んだ後、変更時"
"刻がdatetimeより古い未使用のコミットグラフをすべて削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-commit-graph.txt:109
#, no-wrap
msgid "'verify'"
msgstr "`verify`"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:113
msgid ""
"Read the commit-graph file and verify its contents against the object "
"database. Used to check for corrupted data."
msgstr ""
"コミットグラフファイルを読み取り、その内容をオブジェクトデータベースと照合し"
"て確認(verify)します。破損したデータをチェックするために使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:116
msgid ""
"With the `--shallow` option, only check the tip commit-graph file in a chain "
"of split commit-graphs."
msgstr ""
"`--shallow` オプションと共に使用すると、分割コミットグラフ(split commit-"
"graphs)のチェーン内の先端コミットグラフファイルのみをチェックします。"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:119
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:123
msgid ""
"Write a commit-graph file for the packed commits in your local `.git` "
"directory."
msgstr ""
"パックされたコミットのコミットグラフファイルをローカルの `.git` ディレクトリ"
"に書き込みます。"

#. type: delimited block -
#: ../Documentation-sedout/git-commit-graph.txt:126
#, no-wrap
msgid "$ git commit-graph write\n"
msgstr "$ git commit-graph write\n"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:130
msgid ""
"Write a commit-graph file, extending the current commit-graph file using "
"commits in `<pack-index>`."
msgstr ""
"`<pack-index>` のコミットを使用して、現在のコミットグラフファイルを拡張するコ"
"ミットグラフファイルを書き出します。"

#. type: delimited block -
#: ../Documentation-sedout/git-commit-graph.txt:133
#, no-wrap
msgid "$ echo <pack-index> | git commit-graph write --stdin-packs\n"
msgstr "$ echo <pack-index> | git commit-graph write --stdin-packs\n"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:136
msgid "Write a commit-graph file containing all reachable commits."
msgstr "到達可能なすべてのコミットを含むコミットグラフファイルを作成します。"

#. type: delimited block -
#: ../Documentation-sedout/git-commit-graph.txt:139
#, no-wrap
msgid "$ git show-ref -s | git commit-graph write --stdin-commits\n"
msgstr "$ git show-ref -s | git commit-graph write --stdin-commits\n"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:143
msgid ""
"Write a commit-graph file containing all commits in the current commit-graph "
"file along with those reachable from `HEAD`."
msgstr ""
"現在のコミットグラフファイル内のすべてのコミットと `HEAD` から到達可能なコ"
"ミットを含むコミットグラフファイルを書き出します。"

#. type: delimited block -
#: ../Documentation-sedout/git-commit-graph.txt:146
#, no-wrap
msgid "$ git rev-parse HEAD | git commit-graph write --stdin-commits --append\n"
msgstr "$ git rev-parse HEAD | git commit-graph write --stdin-commits --append\n"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:149
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:157
#, no-wrap
msgid "FILE FORMAT"
msgstr "FILE FORMAT"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:160
msgid "see linkgit:gitformat-commit-graph[5]."
msgstr "see linkgit:gitformat-commit-graph[5]."

#. type: Title -
#: ../Documentation-sedout/git-commit-graph.txt:162
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-commit-graph.txt:163
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
