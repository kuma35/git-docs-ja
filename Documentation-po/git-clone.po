# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-05-17 11:22+0900\n"
"PO-Revision-Date: 2022-05-18 08:23+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-clone.txt:2
#, no-wrap
msgid "git-clone(1)"
msgstr "git-clone(1)"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:7
msgid "git-clone - Clone a repository into a new directory"
msgstr "git-clone - リポジトリを新しいディレクトリにクローン(複製)します"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:21
#, no-wrap
msgid ""
"'git clone' [--template=<template_directory>]\n"
"\t  [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n"
"\t  [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]\n"
"\t  [--dissociate] [--separate-git-dir <git dir>]\n"
"\t  [--depth <depth>] [--[no-]single-branch] [--no-tags]\n"
"\t  [--recurse-submodules[=<pathspec>]] [--[no-]shallow-submodules]\n"
"\t  [--[no-]remote-submodules] [--jobs <n>] [--sparse] [--[no-]reject-shallow]\n"
"\t  [--filter=<filter>] [--] <repository>\n"
"\t  [<directory>]\n"
msgstr ""
"'git clone' [--template=<template_directory>]\n"
"\t  [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n"
"\t  [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]\n"
"\t  [--dissociate] [--separate-git-dir <git dir>]\n"
"\t  [--depth <depth>] [--[no-]single-branch] [--no-tags]\n"
"\t  [--recurse-submodules[=<pathspec>]] [--[no-]shallow-submodules]\n"
"\t  [--[no-]remote-submodules] [--jobs <n>] [--sparse] [--[no-]reject-shallow]\n"
"\t  [--filter=<filter>] [--] <repository>\n"
"\t  [<directory>]\n"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:23
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:30
msgid ""
"Clones a repository into a newly created directory, creates remote-tracking "
"branches for each branch in the cloned repository (visible using `git branch "
"--remotes`), and creates and checks out an initial branch that is forked "
"from the cloned repository's currently active branch."
msgstr ""
"リポジトリを新しく作成されたディレクトリにクローン(clone;複製)し、複製された"
"リポジトリ内の各ブランチのリモート追跡ブランチを作成し(`git branch --"
"remotes` を使用して表示できます)、複製されたリポジトリの現在アクティブなブラ"
"ンチからフォークされた初期ブランチを作成してチェックアウトします。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:36
msgid ""
"After the clone, a plain `git fetch` without arguments will update all the "
"remote-tracking branches, and a `git pull` without arguments will in "
"addition merge the remote master branch into the current master branch, if "
"any (this is untrue when \"--single-branch\" is given; see below)."
msgstr ""
"クローン後、引数のない `git fetch` は、すべてのリモート追跡ブランチを更新し、"
"加えて、引数のない `git pull` は、存在する場合、リモートのmasterブランチを現"
"在のmasterブランチにマージします（これは、 `--single-branch` が指定されている"
"場合は当てはまりません。以下参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:41
msgid ""
"This default configuration is achieved by creating references to the remote "
"branch heads under `refs/remotes/origin` and by initializing `remote.origin."
"url` and `remote.origin.fetch` configuration variables."
msgstr ""
"このデフォルト設定は、 `refs/remotes/origin` の下にリモートブランチヘッドへの"
"参照を作成し、`remote.origin.url` と `remote.origin.fetch` 設定変数を初期化す"
"ることによって実現されます。"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:44
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:45
#, no-wrap
msgid "`-l`"
msgstr "`-l`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:46
#, no-wrap
msgid "`--local`"
msgstr "`--local`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:53
msgid ""
"When the repository to clone from is on a local machine, this flag bypasses "
"the normal \"Git aware\" transport mechanism and clones the repository by "
"making a copy of HEAD and everything under objects and refs directories.  "
"The files under `.git/objects/` directory are hardlinked to save space when "
"possible."
msgstr ""
"複製元のリポジトリがローカルマシン上にある場合、このフラグは通常の 「Git対"
"応」転送メカニズムをバイパスし、オブジェクトおよびrefsディレクトリの下にある"
"HEADおよびすべてのコピーを作成することでリポジトリを複製します。 `.git/"
"objects/` ディレクトリの下のファイルは、可能な場合はスペースを節約するために"
"ハードリンクされています。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:60
msgid ""
"If the repository is specified as a local path (e.g., `/path/to/repo`), this "
"is the default, and --local is essentially a no-op.  If the repository is "
"specified as a URL, then this flag is ignored (and we never use the local "
"optimizations).  Specifying `--no-local` will override the default when `/"
"path/to/repo` is given, using the regular Git transport instead."
msgstr ""
"リポジトリがローカルパス(例: `/path/to/repo`)として指定されている場合、これが"
"デフォルトであり、 `--local` は基本的に何も操作しません(no-op)です。 リポジト"
"リがURLとして指定されている場合、このフラグは無視されます(ローカル最適化は使"
"用されません)。 `--no-local` を指定すると、 `/path/to/repo` が指定されたとき"
"デフォルトが上書きされ、代わりに通常のGit転送が使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:64
msgid ""
"this operation can race with concurrent modification to the source "
"repository, similar to running `cp -r src dst` while modifying `src`."
msgstr "この操作は、 `src` を変更しながら `cp -r src dst` を実行するのと同様に、ソースリポジトリへの同時変更と競合する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:65
#, no-wrap
msgid "`--no-hardlinks`"
msgstr "`--no-hardlinks`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:70
msgid ""
"Force the cloning process from a repository on a local filesystem to copy "
"the files under the `.git/objects` directory instead of using hardlinks. "
"This may be desirable if you are trying to make a back-up of your repository."
msgstr ""
"ハードリンクを使用する代わりに、ローカルファイルシステム上のリポジトリからの"
"クローン作成プロセスで、ファイルを `.git/objects` ディレクトリの下にコピーす"
"るように強制します。 これは、リポジトリのバックアップを作成しようとしている場"
"合に望ましい場合があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:71
#, no-wrap
msgid "`-s`"
msgstr "`-s`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:72
#, no-wrap
msgid "`--shared`"
msgstr "`--shared`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:78
msgid ""
"When the repository to clone is on the local machine, instead of using hard "
"links, automatically setup `.git/objects/info/alternates` to share the "
"objects with the source repository.  The resulting repository starts out "
"without any object of its own."
msgstr "クローンを作成するリポジトリがローカルマシン上にある場合、ハードリンクを使用する代わりに、オブジェクトをソースリポジトリと共有するように `.git/objects/info/alternates` を自動的に設定します。 結果のリポジトリは、独自のオブジェクトなしで開始されます。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:88
msgid ""
"this is a possibly dangerous operation; do *not* use it unless you "
"understand what it does. If you clone your repository using this option and "
"then delete branches (or use any other Git command that makes any existing "
"commit unreferenced) in the source repository, some objects may become "
"unreferenced (or dangling).  These objects may be removed by normal Git "
"operations (such as `git commit`)  which automatically call `git maintenance "
"run --auto`. (See linkgit:git-maintenance[1].) If these objects are removed "
"and were referenced by the cloned repository, then the cloned repository "
"will become corrupt."
msgstr "これは危険な操作になり得ます。あなたが、それが何をするのか理解していない限り、使用してはいけません。 このオプションを使用してリポジトリのクローンを作成してから、ソースリポジトリ内のブランチを削除する(または既存のコミットを参照しないようにする他のGitコマンドを使用する)と、一部のオブジェクトが参照されなくなる(unreferenced)(または宙ぶらりん(dangling)になる)可能性があります。 そうしたオブジェクトは、 `git maintenance run --auto` を自動的に呼び出す通常のGit操作(`git commit` など)によって削除される場合があります(linkgit:git-maintenance[1] 参照)。 これらのオブジェクトが削除され、クローンされたリポジトリーによって参照された場合、クローンされたリポジトリーは破損します。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:94
msgid ""
"Note that running `git repack` without the `--local` option in a repository "
"cloned with `--shared` will copy objects from the source repository into a "
"pack in the cloned repository, removing the disk space savings of `clone --"
"shared`.  It is safe, however, to run `git gc`, which uses the `--local` "
"option by default."
msgstr "注意: `--shared` でクローンされたリポジトリで `--local` オプションなしで `git repack` を実行すると、オブジェクトがソースリポジトリからクローンされたリポジトリのパックにコピーされ、 `clone --shared` によるディスクスペースの節約はなくなります。 ただし、デフォルトで `--local` オプションを使用する `git gc` を実行するのは安全です。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:98
msgid ""
"If you want to break the dependency of a repository cloned with `--shared` "
"on its source repository, you can simply run `git repack -a` to copy all "
"objects from the source repository into a pack in the cloned repository."
msgstr "`--shared` でクローンされたリポジトリのソースリポジトリへの依存関係を解消したい場合、 `git repack -a` を実行するだけで、すべてのオブジェクトをソースリポジトリから、クローンされたリポジトリのパックにコピーできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:99
#, no-wrap
msgid "`--reference[-if-able] <repository>`"
msgstr "`--reference[-if-able] <repository>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:109
msgid ""
"If the reference repository is on the local machine, automatically setup `."
"git/objects/info/alternates` to obtain objects from the reference "
"repository.  Using an already existing repository as an alternate will "
"require fewer objects to be copied from the repository being cloned, "
"reducing network and local storage costs.  When using the `--reference-if-"
"able`, a non existing directory is skipped with a warning instead of "
"aborting the clone."
msgstr "参照リポジトリがローカルマシン上にある場合は、参照リポジトリからオブジェクトを取得するように `.git/objects/info/alternates` を自動的に設定します。 既存のリポジトリをalternateとして使用すると、クローンされるリポジトリからコピーする必要のあるオブジェクトが少なくなり、ネットワークとローカルのストレージコストが削減されます。 `--reference-if-able` を使用すると、存在しないディレクトリはクローンを中断する代わりに警告を出してスキップします。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:112
msgid ""
"see the NOTE for the `--shared` option, and also the `--dissociate` option."
msgstr "`--shared` オプションと `--dissociate` オプションについては「NOTE」を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:113
#, no-wrap
msgid "`--dissociate`"
msgstr "`--dissociate`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:123
msgid ""
"Borrow the objects from reference repositories specified with the `--"
"reference` options only to reduce network transfer, and stop borrowing from "
"them after a clone is made by making necessary local copies of borrowed "
"objects.  This option can also be used when cloning locally from a "
"repository that already borrows objects from another repository--the new "
"repository will borrow objects from the same repository, and this option can "
"be used to stop the borrowing."
msgstr "ネットワーク転送を減らすために `--reference` オプションで指定された参照リポジトリからオブジェクトを借用しクローン作成後に、借用したオブジェクトの必要なローカルコピーを作成し、借用を停止(stop)します。 このオプションは、すでに他のリポジトリからオブジェクトを借りているリポジトリからローカルにクローンを作成するときにも使用できます--新しいリポジトリは同一のリポジトリからオブジェクトを借りますが、このオプションを使用して借用を停止できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:124
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:125
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:128
msgid ""
"Operate quietly.  Progress is not reported to the standard error stream."
msgstr "静かにします。進行状況は標準エラーストリームに報告されません。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:129
#, no-wrap
msgid "`-v`"
msgstr "`-v`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:130
#, no-wrap
msgid "`--verbose`"
msgstr "`--verbose`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:133
msgid ""
"Run verbosely. Does not affect the reporting of progress status to the "
"standard error stream."
msgstr ""
"賑やかにします。標準エラーストリームへの進行状況のレポートには影響しません。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:134
#, no-wrap
msgid "`--progress`"
msgstr "`--progress`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:139
msgid ""
"Progress status is reported on the standard error stream by default when it "
"is attached to a terminal, unless `--quiet` is specified. This flag forces "
"progress status even if the standard error stream is not directed to a "
"terminal."
msgstr "`--quiet` が指定されていない限り、進行状況は、端末に接続されている場合、デフォルトで標準エラーストリームに報告されます。 このフラグは、標準エラーストリームが端末に送信されていない場合でも、進行状況を強制します。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:140
#, no-wrap
msgid "`--server-option=<option>`"
msgstr "`--server-option=<option>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:147
msgid ""
"Transmit the given string to the server when communicating using protocol "
"version 2.  The given string must not contain a NUL or LF character.  The "
"server's handling of server options, including unknown ones, is server-"
"specific.  When multiple `--server-option=<option>` are given, they are all "
"sent to the other side in the order listed on the command line."
msgstr "プロトコルバージョン2を使用して通信する場合、指定の文字列をサーバーに送信します。指定の文字列には、NULまたはLF文字を含めることはできません。 不明なオプションを含むサーバーオプションのサーバー処理は、サーバー固有です。 複数の `--server-option=<option>` が指定されている場合、それらはすべてコマンドラインにリストされている順序で相手側に送信されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:148
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:149
#, no-wrap
msgid "`--no-checkout`"
msgstr "`--no-checkout`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:151
msgid "No checkout of HEAD is performed after the clone is complete."
msgstr "クローンの完了後、HEADのチェックアウトは実行されません。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:152
#, no-wrap
msgid "`--[no-]reject-shallow`"
msgstr "`--[no-]reject-shallow`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:156
msgid ""
"Fail if the source repository is a shallow repository.  The 'clone."
"rejectShallow' configuration variable can be used to specify the default."
msgstr "ソースリポジトリが浅い(shallow)リポジトリの場合は失敗します。 'clone.rejectShallow' 構成変数を使用して、デフォルトを指定できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:157
#, no-wrap
msgid "`--bare`"
msgstr "`--bare`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:168
msgid ""
"Make a 'bare' Git repository.  That is, instead of creating `<directory>` "
"and placing the administrative files in `<directory>/.git`, make the "
"`<directory>` itself the `$GIT_DIR`. This obviously implies the `--no-"
"checkout` because there is nowhere to check out the working tree.  Also the "
"branch heads at the remote are copied directly to corresponding local branch "
"heads, without mapping them to `refs/remotes/origin/`.  When this option is "
"used, neither remote-tracking branches nor the related configuration "
"variables are created."
msgstr "「ベア」(bare=裸の)Gitリポジトリを作成します。 つまり、 `<directory>` を作成して管理ファイルを `<directory>/.git` に配置する代わりに、 `<directory>` 自体を `$GIT_DIR` にします。 作業ツリーをチェックアウトする場所がないため、これは明らかに `--no-checkout` を意味します。 また、リモートのブランチヘッドは、 `refs/remotes/origin/` にマッピングせずに、対応するローカルブランチヘッドに直接コピーされます。 このオプションを使用すると、リモート追跡ブランチも関連する構成変数も作成されません。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:169
#, no-wrap
msgid "`--sparse`"
msgstr "`--sparse`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:174
msgid ""
"Initialize the sparse-checkout file so the working directory starts with "
"only the files in the root of the repository. The sparse-checkout file can "
"be modified to grow the working directory as needed."
msgstr "(sparse:まばらなの意)作業ディレクトリがリポジトリのルートにあるファイルのみで開始するように、sparse-checkoutファイルを初期化します。 sparse-checkoutファイルは、必要に応じて作業ディレクトリを拡張するように変更できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:175
#, no-wrap
msgid "`--filter=<filter-spec>`"
msgstr "`--filter=<filter-spec>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:184
msgid ""
"Use the partial clone feature and request that the server sends a subset of "
"reachable objects according to a given object filter.  When using `--"
"filter`, the supplied `<filter-spec>` is used for the partial clone filter. "
"For example, `--filter=blob:none` will filter out all blobs (file contents) "
"until needed by Git. Also, `--filter=blob:limit=<size>` will filter out all "
"blobs of size at least `<size>`. For more details on filter specifications, "
"see the `--filter` option in linkgit:git-rev-list[1]."
msgstr "部分クローン(partial clone)機能を使用して、サーバーが特定のオブジェクトフィルターに従って到達可能なオブジェクトのサブセットを送信するように要求します。 `--filter` を使用する場合、提供された `<filter-spec>` が部分クローンフィルターに使用されます。 たとえば、 `--filter=blob:none` は、Gitで必要になるまで、すべてのブロブ(ファイルの内容)を除外します。 また、 `--filter=blob:limit=<size>` は、少なくとも `<size>` のサイズのすべてのブロブを除外します。 フィルタ仕様の詳細については、 linkgit:git-rev-list[1] の `--filter` オプションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:185
#, no-wrap
msgid "`--mirror`"
msgstr "`--mirror`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:192
msgid ""
"Set up a mirror of the source repository.  This implies `--bare`.  Compared "
"to `--bare`, `--mirror` not only maps local branches of the source to local "
"branches of the target, it maps all refs (including remote-tracking "
"branches, notes etc.) and sets up a refspec configuration such that all "
"these refs are overwritten by a `git remote update` in the target repository."
msgstr "ソースリポジトリのミラーを設定します。 これは `--bare` を意味します。 `--bare` と比較して、 `--mirror` は、ソースのローカルブランチをターゲットのローカルブランチにマップするだけでなく、すべての参照(リモート追跡ブランチ、noteなどを含む)をマップし、以下のようなrefspec構成をセットアップします。 これらのすべての参照は、ターゲットリポジトリ内の `git remote update` によって上書きされます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:193
#, no-wrap
msgid "`-o <name>`"
msgstr "`-o <name>`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:194
#, no-wrap
msgid "`--origin <name>`"
msgstr "`--origin <name>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:198
msgid ""
"Instead of using the remote name `origin` to keep track of the upstream "
"repository, use `<name>`.  Overrides `clone.defaultRemoteName` from the "
"config."
msgstr "リモート名 `origin` を使用してアップストリームリポジトリを追跡する代わりに、`<name>` を使用します。 構成(config)の `clone.defaultRemoteName` をオーバーライドします。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:199
#, no-wrap
msgid "`-b <name>`"
msgstr "`-b <name>`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:200
#, no-wrap
msgid "`--branch <name>`"
msgstr "`--branch <name>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:207
msgid ""
"Instead of pointing the newly created HEAD to the branch pointed to by the "
"cloned repository's HEAD, point to `<name>` branch instead. In a non-bare "
"repository, this is the branch that will be checked out.  `--branch` can "
"also take tags and detaches the HEAD at that commit in the resulting "
"repository."
msgstr "新しく作成されたHEADを、複製されたリポジトリのHEADが指すブランチにポイントする代わりに、代わりに `<name>` ブランチをポイントします。 非ベアリポジトリでは、これはチェックアウトされるブランチです。 `--branch` はタグを取得し、結果のリポジトリでそのコミット時にHEADを切り離す(detach)こともできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:208
#, no-wrap
msgid "`-u <upload-pack>`"
msgstr "`-u <upload-pack>`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:209
#, no-wrap
msgid "`--upload-pack <upload-pack>`"
msgstr "`--upload-pack <upload-pack>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:213
msgid ""
"When given, and the repository to clone from is accessed via ssh, this "
"specifies a non-default path for the command run on the other end."
msgstr "これが指定され、クローンを作成するリポジトリにssh経由でアクセスする場合、これは、通信相手側(the other end)で実行されるコマンドのデフォルト以外のパスを指定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:214
#, no-wrap
msgid "`--template=<template_directory>`"
msgstr "`--template=<template_directory>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:217
msgid ""
"Specify the directory from which templates will be used; (See the \"TEMPLATE "
"DIRECTORY\" section of linkgit:git-init[1].)"
msgstr "テンプレートを使用するディレクトリを指定します。 (linkgit:git-init[1] の「TEMPLATE DIRECTORY」セクションを参照してください。)"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:218
#, no-wrap
msgid "`-c <key>=<value>`"
msgstr "`-c <key>=<value>`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:219
#, no-wrap
msgid "`--config <key>=<value>`"
msgstr "`--config <key>=<value>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:228
msgid ""
"Set a configuration variable in the newly-created repository; this takes "
"effect immediately after the repository is initialized, but before the "
"remote history is fetched or any files checked out.  The key is in the same "
"format as expected by linkgit:git-config[1] (e.g., `core.eol=true`). If "
"multiple values are given for the same key, each value will be written to "
"the config file. This makes it safe, for example, to add additional fetch "
"refspecs to the origin remote."
msgstr "新しく作成されたリポジトリに構成変数を設定します。 これは、リポジトリが初期化された直後または、リモート履歴がフェッチされる前または、ファイルがチェックアウトされる前に有効になります。 キーは、 linkgit:git-config[1] で期待されるものと同じ形式です(例: `core.eol=true`)。 同じキーに複数値が指定されている場合、各値は構成ファイルに書き込まれます。 これにより、たとえば、originのリモートにフェッチrefspecを追加しても安全になります。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:234
msgid ""
"Due to limitations of the current implementation, some configuration "
"variables do not take effect until after the initial fetch and checkout.  "
"Configuration variables known to not take effect are: `remote.<name>.mirror` "
"and `remote.<name>.tagOpt`.  Use the corresponding `--mirror` and `--no-"
"tags` options instead."
msgstr "現在の実装の制限により、一部の構成変数は、最初のフェッチとチェックアウトが完了するまで有効になりません。 有効にならないことがわかっている構成変数は、 `remote.<name>.mirror` と `remote.<name>.tagOpt` です。 代わりに、対応する `--mirror` および `--no-tags` オプションを使用してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:235
#, no-wrap
msgid "`--depth <depth>`"
msgstr "`--depth <depth>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:241
msgid ""
"Create a 'shallow' clone with a history truncated to the specified number of "
"commits. Implies `--single-branch` unless `--no-single-branch` is given to "
"fetch the histories near the tips of all branches. If you want to clone "
"submodules shallowly, also pass `--shallow-submodules`."
msgstr "指定されたコミット数に切り捨てられた履歴を持つ「浅い」クローン(shallow clone)を作成します。 すべてのブランチの先端近くの履歴をフェッチするために `--no-single-branch` が指定されていない限り、 `--single-branch` を意味します。 サブモジュールを浅くクローンする場合は、 `--shallow-submodules` も渡します。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:242
#, no-wrap
msgid "`--shallow-since=<date>`"
msgstr "`--shallow-since=<date>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:244
msgid "Create a shallow clone with a history after the specified time."
msgstr "指定した日時以降の履歴を持つ浅いクローン(shallow clone)を作成します。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:245
#, no-wrap
msgid "`--shallow-exclude=<revision>`"
msgstr "`--shallow-exclude=<revision>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:249
msgid ""
"Create a shallow clone with a history, excluding commits reachable from a "
"specified remote branch or tag.  This option can be specified multiple times."
msgstr "指定のリモートブランチまたはタグから到達可能なコミットを除外して、履歴を持つ浅いクローン(shallow clone)を作成します。 このオプションは複数回指定できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:250
#, no-wrap
msgid "`--[no-]single-branch`"
msgstr "`--[no-]single-branch`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:259
msgid ""
"Clone only the history leading to the tip of a single branch, either "
"specified by the `--branch` option or the primary branch remote's `HEAD` "
"points at.  Further fetches into the resulting repository will only update "
"the remote-tracking branch for the branch this option was used for the "
"initial cloning.  If the HEAD at the remote did not point at any branch when "
"`--single-branch` clone was made, no remote-tracking branch is created."
msgstr "`--branch` オプションで指定された、またはリモートのプライマリブランチの `HEAD` が指す単一のブランチの先端につながる履歴のみをクローンします。 結果のリポジトリにさらにフェッチすると、このオプションが最初のクローン作成に使用されたブランチのリモート追跡ブランチのみが更新されます。 `--single-branch` クローンが作成されたときに、リモートのHEADがどのブランチも指さなかった場合、リモート追跡ブランチは作成されません。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:260
#, no-wrap
msgid "`--no-tags`"
msgstr "`--no-tags`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:266
msgid ""
"Don't clone any tags, and set `remote.<remote>.tagOpt=--no-tags` in the "
"config, ensuring that future `git pull` and `git fetch` operations won't "
"follow any tags. Subsequent explicit tag fetches will still work, (see "
"linkgit:git-fetch[1])."
msgstr "タグのクローンを作成せず、構成に `remote.<remote>.tagOpt=--no-tags` を設定して、今後の `git pull` および `git fetch` 操作がタグに従わないようにします。 指定後も明示的なタグフェッチは引き続き機能します(linkgit:git-fetch[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:271
msgid ""
"Can be used in conjunction with `--single-branch` to clone and maintain a "
"branch with no references other than a single cloned branch. This is useful "
"e.g. to maintain minimal clones of the default branch of some repository for "
"search indexing."
msgstr "`--single-branch` と組み合わせて使用すると、単一のクローンされたブランチ以外の参照なしでブランチをクローンおよび維持できます。 検索インデックス作成のために、一部のリポジトリのデフォルトブランチの最小限のクローンを維持するので便利です。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:272
#, no-wrap
msgid "`--recurse-submodules[=<pathspec>]`"
msgstr "`--recurse-submodules[=<pathspec>]`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:280
msgid ""
"After the clone is created, initialize and clone submodules within based on "
"the provided pathspec.  If no pathspec is provided, all submodules are "
"initialized and cloned.  This option can be given multiple times for "
"pathspecs consisting of multiple entries.  The resulting clone has "
"`submodule.active` set to the provided pathspec, or \".\" (meaning all "
"submodules) if no pathspec is provided."
msgstr "クローンが作成されたら、提供されたパススペックに基づいてサブモジュールを初期化し、クローンを作成します。 パススペックが指定されていない場合、すべてのサブモジュールが初期化され、クローン化されます。 このオプションは、複数のエントリで構成されるパススペックに対して複数回指定できます。 結果として得られるクローンには `submodule.active` が指定され、パス指定がない場合は `.` (すべてのサブモジュールを意味します) が設定されます。"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:287
msgid ""
"Submodules are initialized and cloned using their default settings. This is "
"equivalent to running `git submodule update --init --recursive <pathspec>` "
"immediately after the clone is finished. This option is ignored if the "
"cloned repository does not have a worktree/checkout (i.e. if any of `--no-"
"checkout`/`-n`, `--bare`, or `--mirror` is given)"
msgstr "サブモジュールは、デフォルト設定を使用して初期化およびクローン化されます。 これは、クローンが終了した直後に `git submodule update --init --recursive <pathspec>` を実行するのと同じです。 クローンされたリポジトリに ワークツリー/チェックアウト がない場合(つまり、 `--no-checkout`/`-n` または `--bare` または `--mirror` のいずれかが指定されている場合)、このオプションは無視されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:288
#, no-wrap
msgid "`--[no-]shallow-submodules`"
msgstr "`--[no-]shallow-submodules`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:290
msgid "All submodules which are cloned will be shallow with a depth of 1."
msgstr "クローンされるすべてのサブモジュールは、深さが1の浅さののになります。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:291
#, no-wrap
msgid "`--[no-]remote-submodules`"
msgstr "`--[no-]remote-submodules`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:296
msgid ""
"All submodules which are cloned will use the status of the submodule's "
"remote-tracking branch to update the submodule, rather than the "
"superproject's recorded SHA-1. Equivalent to passing `--remote` to `git "
"submodule update`."
msgstr "クローン化されるすべてのサブモジュールは、スーパープロジェクトの記録されたSHA-1ではなく、サブモジュールのリモート追跡ブランチのステータスを使用してサブモジュールを更新します。  `--remote` を `git submodule update` に渡すのと同じです。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:297
#, no-wrap
msgid "`--separate-git-dir=<git dir>`"
msgstr "`--separate-git-dir=<git dir>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:303
msgid ""
"Instead of placing the cloned repository where it is supposed to be, place "
"the cloned repository at the specified directory, then make a filesystem-"
"agnostic Git symbolic link to there.  The result is Git repository can be "
"separated from working tree."
msgstr "クローンされたリポジトリを本来あるべき場所に配置する代わりに、クローンされたリポジトリを指定されたディレクトリに配置し、そこへのファイルシステムに依存しないGitシンボリックリンクを作成します。 その結果、Gitリポジトリを作業ツリーから分離できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:304
#, no-wrap
msgid "`-j <n>`"
msgstr "`-j <n>`"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:305
#, no-wrap
msgid "`--jobs <n>`"
msgstr "`--jobs <n>`"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:308
msgid ""
"The number of submodules fetched at the same time.  Defaults to the "
"`submodule.fetchJobs` option."
msgstr ""
"同時にフェッチするサブモジュールの数。 デフォルトは `submodule.fetchJobs` オ"
"プションです。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:309
#, no-wrap
msgid "<repository>"
msgstr "<repository>"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:313
msgid ""
"The (possibly remote) repository to clone from.  See the <<URLS,GIT URLS>> "
"section below for more information on specifying repositories."
msgstr "クローンを作成する(場合によってはリモートの)リポジトリ。 リポジトリの指定の詳細については、下記 <<URLS,GIT URLS>> セクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-clone.txt:314
#, no-wrap
msgid "<directory>"
msgstr "<directory>"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:320
msgid ""
"The name of a new directory to clone into.  The \"humanish\" part of the "
"source repository is used if no directory is explicitly given (`repo` for `/"
"path/to/repo.git` and `foo` for `host.xz:foo/.git`).  Cloning into an "
"existing directory is only allowed if the directory is empty."
msgstr "クローンを作成する新しいディレクトリの名前。 ディレクトリが明示的に指定されていない場合は、ソースリポジトリの「人間味のある」(humanish)部分が使用されます(`/path/to/repo.git` の場合は `repo` 、 `host.xz:foo/.git` の場合は `foo` )。 既存のディレクトリへのクローン作成は、ディレクトリが空の場合にのみ許可されます。"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:325
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:328
msgid "Clone from upstream:"
msgstr "アップストリームからのクローン:"

#. type: delimited block -
#: ../Documentation-sedout/git-clone.txt:333
#, no-wrap
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../linux.git my-linux\n"
"$ cd my-linux\n"
"$ make\n"
msgstr ""
"$ git clone git://git.kernel.org/pub/scm/.../linux.git my-linux\n"
"$ cd my-linux\n"
"$ make\n"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:337
msgid ""
"Make a local clone that borrows from the current directory, without checking "
"things out:"
msgstr "チェックアウトせずに、現在のディレクトリから借用するローカルクローンを作成します:"

#. type: delimited block -
#: ../Documentation-sedout/git-clone.txt:342
#, no-wrap
msgid ""
"$ git clone -l -s -n . ../copy\n"
"$ cd ../copy\n"
"$ git show-branch\n"
msgstr ""
"$ git clone -l -s -n . ../copy\n"
"$ cd ../copy\n"
"$ git show-branch\n"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:346
msgid "Clone from upstream while borrowing from an existing local directory:"
msgstr "既存のローカルディレクトリから借用しつつ、アップストリームからクローンを作成します:"

#. type: delimited block -
#: ../Documentation-sedout/git-clone.txt:352
#, no-wrap
msgid ""
"$ git clone --reference /git/linux.git \\\n"
"\tgit://git.kernel.org/pub/scm/.../linux.git \\\n"
"\tmy-linux\n"
"$ cd my-linux\n"
msgstr ""
"$ git clone --reference /git/linux.git \\\n"
"\tgit://git.kernel.org/pub/scm/.../linux.git \\\n"
"\tmy-linux\n"
"$ cd my-linux\n"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:356
msgid "Create a bare repository to publish your changes to the public:"
msgstr "変更を公開するためのベア(bare)リポジトリを作成します:"

#. type: delimited block -
#: ../Documentation-sedout/git-clone.txt:359
#, no-wrap
msgid "$ git clone --bare -l /home/proj/.git /pub/scm/proj.git\n"
msgstr "$ git clone --bare -l /home/proj/.git /pub/scm/proj.git\n"

#. type: Title -
#: ../Documentation-sedout/git-clone.txt:363
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-clone.txt:364
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
