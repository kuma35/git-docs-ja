# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/giteveryday.txt:2
#, no-wrap
msgid "giteveryday(7)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:7
msgid "giteveryday - A useful minimum set of commands for Everyday Git"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:12
msgid "Everyday Git With 20 Commands Or So"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:18
msgid ""
"Git users can broadly be grouped into four categories for the purposes of "
"describing here a small set of useful command for everyday Git."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:20
msgid "<<STANDALONE,Individual Developer (Standalone)>> commands are essential"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:21
msgid "for anybody who makes a commit, even for somebody who works alone."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:23
msgid "If you work with other people, you will need commands listed in"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:24
msgid "the <<PARTICIPANT,Individual Developer (Participant)>> section as well."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:26
msgid "People who play the <<INTEGRATOR,Integrator>> role need to learn some"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:27
msgid "more commands in addition to the above."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:29
msgid "<<ADMINISTRATION,Repository Administration>> commands are for system"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:31
msgid ""
"administrators who are responsible for the care and feeding of Git "
"repositories."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:34
#, no-wrap
msgid "Individual Developer (Standalone)[[STANDALONE]]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:39
msgid ""
"A standalone individual developer does not exchange patches with other "
"people, and works alone in a single repository, using the following commands."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:41
msgid "linkgit:git-init[1] to create a new repository."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:43
msgid "linkgit:git-log[1] to see what happened."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:46
msgid "linkgit:git-switch[1] and linkgit:git-branch[1] to switch branches."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:48
msgid "linkgit:git-add[1] to manage the index file."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:51
msgid ""
"linkgit:git-diff[1] and linkgit:git-status[1] to see what you are in the "
"middle of doing."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:53
msgid "linkgit:git-commit[1] to advance the current branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:55
msgid "linkgit:git-restore[1] to undo changes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:57
msgid "linkgit:git-merge[1] to merge between local branches."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:59
msgid "linkgit:git-rebase[1] to maintain topic branches."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:61
msgid "linkgit:git-tag[1] to mark a known point."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/giteveryday.txt:63
#: ../Documentation-sedout/giteveryday.txt:143
#: ../Documentation-sedout/giteveryday.txt:265
#: ../Documentation-sedout/giteveryday.txt:358
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:65
#, no-wrap
msgid "Use a tarball as a starting point for a new repository."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:74
#, no-wrap
msgid ""
"$ tar zxf frotz.tar.gz\n"
"$ cd frotz\n"
"$ git init\n"
"$ git add . <1>\n"
"$ git commit -m \"import of frotz source tree.\"\n"
"$ git tag v2.43 <2>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:77
msgid "add everything under the current directory."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:78
msgid "make a lightweight, unannotated tag."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:79
#, no-wrap
msgid "Create a topic branch and develop."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:96
#, no-wrap
msgid ""
"$ git switch -c alsa-audio <1>\n"
"$ edit/compile/test\n"
"$ git restore curses/ux_audio_oss.c <2>\n"
"$ git add curses/ux_audio_alsa.c <3>\n"
"$ edit/compile/test\n"
"$ git diff HEAD <4>\n"
"$ git commit -a -s <5>\n"
"$ edit/compile/test\n"
"$ git diff HEAD^ <6>\n"
"$ git commit -a --amend <7>\n"
"$ git switch master <8>\n"
"$ git merge alsa-audio <9>\n"
"$ git log --since='3 days ago' <10>\n"
"$ git log v2.43.. curses/ <11>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:99
msgid "create a new topic branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:100
msgid "revert your botched changes in `curses/ux_audio_oss.c`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:102
msgid ""
"you need to tell Git if you added a new file; removal and modification will "
"be caught if you do `git commit -a` later."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:103
msgid "to see what changes you are committing."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:104
msgid "commit everything, as you have tested, with your sign-off."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:105
msgid "look at all your changes including the previous commit."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:107
msgid ""
"amend the previous commit, adding all your new changes, using your original "
"message."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:108
msgid "switch to the master branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:109
msgid "merge a topic branch into your master branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:112
msgid ""
"review commit logs; other forms to limit output can be combined and include "
"`-10` (to show up to 10 commits), `--until=2005-12-10`, etc."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:114
msgid ""
"view only the changes that touch what's in `curses/` directory, since "
"`v2.43` tag."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:117
#, no-wrap
msgid "Individual Developer (Participant)[[PARTICIPANT]]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:122
msgid ""
"A developer working as a participant in a group project needs to learn how "
"to communicate with others, and uses these commands in addition to the ones "
"needed by a standalone developer."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:125
msgid "linkgit:git-clone[1] from the upstream to prime your local repository."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:128
msgid ""
"linkgit:git-pull[1] and linkgit:git-fetch[1] from \"origin\" to keep up-to-"
"date with the upstream."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:131
msgid ""
"linkgit:git-push[1] to shared repository, if you adopt CVS style shared "
"repository workflow."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:134
msgid ""
"linkgit:git-format-patch[1] to prepare e-mail submission, if you adopt Linux "
"kernel-style public forum workflow."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:137
msgid ""
"linkgit:git-send-email[1] to send your e-mail submission without corruption "
"by your MUA."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:140
msgid ""
"linkgit:git-request-pull[1] to create a summary of changes for your upstream "
"to pull."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:145
#, no-wrap
msgid "Clone the upstream and work on it.  Feed changes to upstream."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:161
#, no-wrap
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../torvalds/linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ git switch -c mine master <1>\n"
"$ edit/compile/test; git commit -a -s <2>\n"
"$ git format-patch master <3>\n"
"$ git send-email --to=\"person <email@example.com>\" 00*.patch <4>\n"
"$ git switch master <5>\n"
"$ git pull <6>\n"
"$ git log -p ORIG_HEAD.. arch/i386 include/asm-i386 <7>\n"
"$ git ls-remote --heads http://git.kernel.org/.../jgarzik/libata-dev.git <8>\n"
"$ git pull git://git.kernel.org/pub/.../jgarzik/libata-dev.git ALL <9>\n"
"$ git reset --hard ORIG_HEAD <10>\n"
"$ git gc <11>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:164
msgid "checkout a new branch `mine` from master."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:165
msgid "repeat as needed."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:166
msgid "extract patches from your branch, relative to master,"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:167
msgid "and email them."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:168
msgid "return to `master`, ready to see what's new"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:170
msgid ""
"`git pull` fetches from `origin` by default and merges into the current "
"branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:173
msgid ""
"immediately after pulling, look at the changes done upstream since last time "
"we checked, only in the area we are interested in."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:174
msgid "check the branch names in an external repository (if not known)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:176
msgid ""
"fetch from a specific branch `ALL` from a specific repository and merge it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:177
msgid "revert the pull."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:178
msgid "garbage collect leftover objects from reverted pull."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:180
#, no-wrap
msgid "Push into another repository."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:194
#, no-wrap
msgid ""
"satellite$ git clone mothership:frotz frotz <1>\n"
"satellite$ cd frotz\n"
"satellite$ git config --get-regexp '^(remote|branch)\\.' <2>\n"
"remote.origin.url mothership:frotz\n"
"remote.origin.fetch refs/heads/*:refs/remotes/origin/*\n"
"branch.master.remote origin\n"
"branch.master.merge refs/heads/master\n"
"satellite$ git config remote.origin.push \\\n"
"\t   +refs/heads/*:refs/remotes/satellite/* <3>\n"
"satellite$ edit/compile/test/commit\n"
"satellite$ git push origin <4>\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:198
#, no-wrap
msgid ""
"mothership$ cd frotz\n"
"mothership$ git switch master\n"
"mothership$ git merge satellite/master <5>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:203
msgid ""
"mothership machine has a frotz repository under your home directory; clone "
"from it to start a repository on the satellite machine."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:206
msgid ""
"clone sets these configuration variables by default.  It arranges `git pull` "
"to fetch and store the branches of mothership machine to local `remotes/"
"origin/*` remote-tracking branches."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:208
msgid ""
"arrange `git push` to push all local branches to their corresponding branch "
"of the mothership machine."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:212
msgid ""
"push will stash all our work away on `remotes/satellite/*` remote-tracking "
"branches on the mothership machine.  You could use this as a back-up method. "
"Likewise, you can pretend that mothership \"fetched\" from you (useful when "
"access is one sided)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:214
msgid ""
"on mothership machine, merge the work done on the satellite machine into the "
"master branch."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:215
#, no-wrap
msgid "Branch off of a specific tag."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:222
#, no-wrap
msgid ""
"$ git switch -c private2.6.14 v2.6.14 <1>\n"
"$ edit/compile/test; git commit -a\n"
"$ git checkout master\n"
"$ git cherry-pick v2.6.14..private2.6.14 <2>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:226
msgid ""
"create a private branch based on a well known (but somewhat behind)  tag."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:229
msgid ""
"forward port all changes in `private2.6.14` branch to `master` branch "
"without a formal \"merging\". Or longhand + `git format-patch -k -m --stdout "
"v2.6.14..private2.6.14 |"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:230
msgid "git am -3 -k`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:235
msgid ""
"An alternate participant submission mechanism is using the `git request-"
"pull` or pull-request mechanisms (e.g as used on GitHub (www.github.com) to "
"notify your upstream of your contribution."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:237
#, no-wrap
msgid "Integrator[[INTEGRATOR]]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:243
msgid ""
"A fairly central person acting as the integrator in a group project receives "
"changes made by others, reviews and integrates them and publishes the result "
"for others to use, using these commands in addition to the ones needed by "
"participants."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:249
msgid ""
"This section can also be used by those who respond to `git request-pull` or "
"pull-request on GitHub (www.github.com) to integrate the work of others into "
"their history. A sub-area lieutenant for a repository will act both as a "
"participant and as an integrator."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:253
msgid "linkgit:git-am[1] to apply patches e-mailed in from your contributors."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:255
msgid "linkgit:git-pull[1] to merge from your trusted lieutenants."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:258
msgid ""
"linkgit:git-format-patch[1] to prepare and send suggested alternative to "
"contributors."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:260
msgid "linkgit:git-revert[1] to undo botched commits."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:262
msgid "linkgit:git-push[1] to publish the bleeding edge."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:267
#, no-wrap
msgid "A typical integrator's Git day."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:292
#, no-wrap
msgid ""
"$ git status <1>\n"
"$ git branch --no-merged master <2>\n"
"$ mailx <3>\n"
"& s 2 3 4 5 ./+to-apply\n"
"& s 7 8 ./+hold-linus\n"
"& q\n"
"$ git switch -c topic/one master\n"
"$ git am -3 -i -s ./+to-apply <4>\n"
"$ compile/test\n"
"$ git switch -c hold/linus && git am -3 -i -s ./+hold-linus <5>\n"
"$ git switch topic/one && git rebase master <6>\n"
"$ git switch -C seen next <7>\n"
"$ git merge topic/one topic/two && git merge hold/linus <8>\n"
"$ git switch maint\n"
"$ git cherry-pick master~4 <9>\n"
"$ compile/test\n"
"$ git tag -s -m \"GIT 0.99.9x\" v0.99.9x <10>\n"
"$ git fetch ko && for branch in master maint next seen <11>\n"
"    do\n"
"\tgit show-branch ko/$branch $branch <12>\n"
"    done\n"
"$ git push --follow-tags ko <13>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:295
msgid "see what you were in the middle of doing, if anything."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:298
msgid ""
"see which branches haven't been merged into `master` yet.  Likewise for any "
"other integration branches e.g. `maint`, `next` and `seen`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:300
msgid ""
"read mails, save ones that are applicable, and save others that are not "
"quite ready (other mail readers are available)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:301
msgid "apply them, interactively, with your sign-offs."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:302
msgid "create topic branch as needed and apply, again with sign-offs."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:304
msgid ""
"rebase internal topic branch that has not been merged to the master or "
"exposed as a part of a stable branch."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:305
msgid "restart `seen` every time from the next."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:306
msgid "and bundle topic branches still cooking."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:307
msgid "backport a critical fix."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:308
msgid "create a signed tag."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:310
msgid ""
"make sure master was not accidentally rewound beyond that already pushed out."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:313
msgid ""
"In the output from `git show-branch`, `master` should have everything `ko/"
"master` has, and `next` should have everything `ko/next` has, etc."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:315
msgid ""
"push out the bleeding edge, together with new tags that point into the "
"pushed history."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:318
msgid ""
"In this example, the `ko` shorthand points at the Git maintainer's "
"repository at kernel.org, and looks like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:328
#, no-wrap
msgid ""
"(in .git/config)\n"
"[remote \"ko\"]\n"
"\turl = kernel.org:/pub/scm/git/git.git\n"
"\tfetch = refs/heads/*:refs/remotes/ko/*\n"
"\tpush = refs/heads/master\n"
"\tpush = refs/heads/next\n"
"\tpush = +refs/heads/seen\n"
"\tpush = refs/heads/maint\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:332
#, no-wrap
msgid "Repository Administration[[ADMINISTRATION]]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:336
msgid ""
"A repository administrator uses the following tools to set up and maintain "
"access to the repository by developers."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:339
msgid "linkgit:git-daemon[1] to allow anonymous download from repository."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:342
msgid ""
"linkgit:git-shell[1] can be used as a 'restricted login shell' for shared "
"central repository users."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:345
msgid ""
"linkgit:git-http-backend[1] provides a server side implementation of Git-"
"over-HTTP (\"Smart http\") allowing both fetch and push services."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:348
msgid ""
"linkgit:gitweb[1] provides a web front-end to Git repositories, which can be "
"set-up using the linkgit:git-instaweb[1] script."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:351
msgid ""
"link:howto/update-hook-example.html[update hook howto] has a good example of "
"managing a shared central repository."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:354
msgid ""
"In addition there are a number of other widely deployed hosting, browsing "
"and reviewing solutions such as:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:356
msgid "gitolite, gerrit code review, cgit and others."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:359
#, no-wrap
msgid "We assume the following in /etc/services"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:364
#, no-wrap
msgid ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Git Version Control System\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:366
#, no-wrap
msgid "Run git-daemon to serve /pub/scm from inetd."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:372
#, no-wrap
msgid ""
"$ grep git /etc/inetd.conf\n"
"git\tstream\ttcp\tnowait\tnobody \\\n"
"  /usr/bin/git-daemon git-daemon --inetd --export-all /pub/scm\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:375
msgid "The actual configuration line should be on one line."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:376
#, no-wrap
msgid "Run git-daemon to serve /pub/scm from xinetd."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:394
#, no-wrap
msgid ""
"$ cat /etc/xinetd.d/git-daemon\n"
"# default: off\n"
"# description: The Git server offers access to Git repositories\n"
"service git\n"
"{\n"
"\tdisable = no\n"
"\ttype            = UNLISTED\n"
"\tport            = 9418\n"
"\tsocket_type     = stream\n"
"\twait            = no\n"
"\tuser            = nobody\n"
"\tserver          = /usr/bin/git-daemon\n"
"\tserver_args     = --inetd --export-all --base-path=/pub/scm\n"
"\tlog_on_failure  += USERID\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:398
msgid ""
"Check your xinetd(8) documentation and setup, this is from a Fedora system.  "
"Others might be different."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:399
#, no-wrap
msgid "Give push/pull only access to developers using git-over-ssh."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:403
msgid "e.g. those using: `$ git push/pull ssh://host.xz/pub/scm/project`"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:412
#, no-wrap
msgid ""
"$ grep git /etc/passwd <1>\n"
"alice:x:1000:1000::/home/alice:/usr/bin/git-shell\n"
"bob:x:1001:1001::/home/bob:/usr/bin/git-shell\n"
"cindy:x:1002:1002::/home/cindy:/usr/bin/git-shell\n"
"david:x:1003:1003::/home/david:/usr/bin/git-shell\n"
"$ grep git /etc/shells <2>\n"
"/usr/bin/git-shell\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:417
msgid ""
"log-in shell is set to /usr/bin/git-shell, which does not allow anything but "
"`git push` and `git pull`.  The users require ssh access to the machine."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:419
msgid ""
"in many distributions /etc/shells needs to list what is used as the login "
"shell."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/giteveryday.txt:420
#, no-wrap
msgid "CVS-style shared repository."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/giteveryday.txt:443
#, no-wrap
msgid ""
"$ grep git /etc/group <1>\n"
"git:x:9418:alice,bob,cindy,david\n"
"$ cd /home/devo.git\n"
"$ ls -l <2>\n"
"  lrwxrwxrwx   1 david git    17 Dec  4 22:40 HEAD -> refs/heads/master\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 branches\n"
"  -rw-rw-r--   1 david git    84 Dec  4 22:40 config\n"
"  -rw-rw-r--   1 david git    58 Dec  4 22:40 description\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 hooks\n"
"  -rw-rw-r--   1 david git 37504 Dec  4 22:40 index\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 info\n"
"  drwxrwsr-x   4 david git  4096 Dec  4 22:40 objects\n"
"  drwxrwsr-x   4 david git  4096 Nov  7 14:58 refs\n"
"  drwxrwsr-x   2 david git  4096 Dec  4 22:40 remotes\n"
"$ ls -l hooks/update <3>\n"
"  -r-xr-xr-x   1 david git  3536 Dec  4 22:40 update\n"
"$ cat info/allowed-users <4>\n"
"refs/heads/master\talice\\|cindy\n"
"refs/heads/doc-update\tbob\n"
"refs/tags/v[0-9]*\tdavid\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:446
msgid "place the developers into the same git group."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:447
msgid "and make the shared repository writable by the group."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:449
msgid ""
"use update-hook example by Carl from Documentation/howto/ for branch policy "
"control."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:452
msgid ""
"alice and cindy can push into master, only bob can push into doc-update.  "
"david is the release manager and is the only person who can create and push "
"version tags."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/giteveryday.txt:454
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/giteveryday.txt:455
msgid "Part of the linkgit:git[1] suite"
msgstr ""
