# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-branch.txt:2
#, no-wrap
msgid "git-branch(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:7
msgid "git-branch - List, create, or delete branches"
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:26
#, no-wrap
msgid ""
"'git branch' [--color[=<when>] | --no-color] [--show-current]\n"
"\t[-v [--abbrev=<n> | --no-abbrev]]\n"
"\t[--column[=<options>] | --no-column] [--sort=<key>]\n"
"\t[--merged [<commit>]] [--no-merged [<commit>]]\n"
"\t[--contains [<commit>]] [--no-contains [<commit>]]\n"
"\t[--points-at <object>] [--format=<format>]\n"
"\t[(-r | --remotes) | (-a | --all)]\n"
"\t[--list] [<pattern>...]\n"
"'git branch' [--track | --no-track] [-f] <branchname> [<start-point>]\n"
"'git branch' (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n"
"'git branch' --unset-upstream [<branchname>]\n"
"'git branch' (-m | -M) [<oldbranch>] <newbranch>\n"
"'git branch' (-c | -C) [<oldbranch>] <newbranch>\n"
"'git branch' (-d | -D) [-r] <branchname>...\n"
"'git branch' --edit-description [<branchname>]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:28
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:36
msgid ""
"If `--list` is given, or if there are no non-option arguments, existing "
"branches are listed; the current branch will be highlighted in green and "
"marked with an asterisk.  Any branches checked out in linked worktrees will "
"be highlighted in cyan and marked with a plus sign. Option `-r` causes the "
"remote-tracking branches to be listed, and option `-a` shows both local and "
"remote branches."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:41
msgid ""
"If a `<pattern>` is given, it is used as a shell wildcard to restrict the "
"output to matching branches. If multiple patterns are given, a branch is "
"shown if it matches any of the patterns."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:45
msgid ""
"Note that when providing a `<pattern>`, you must use `--list`; otherwise the "
"command may be interpreted as branch creation."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:54
msgid ""
"With `--contains`, shows only the branches that contain the named commit (in "
"other words, the branches whose tip commits are descendants of the named "
"commit), `--no-contains` inverts it. With `--merged`, only branches merged "
"into the named commit (i.e. the branches whose tip commits are reachable "
"from the named commit) will be listed.  With `--no-merged` only branches not "
"merged into the named commit will be listed.  If the <commit> argument is "
"missing it defaults to `HEAD` (i.e. the tip of the current branch)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:61
msgid ""
"The command's second form creates a new branch head named <branchname> which "
"points to the current `HEAD`, or <start-point> if given. As a special case, "
"for <start-point>, you may use `\"A...B\"` as a shortcut for the merge base "
"of `A` and `B` if there is exactly one merge base. You can leave out at most "
"one of `A` and `B`, in which case it defaults to `HEAD`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:65
msgid ""
"Note that this will create the new branch, but it will not switch the "
"working tree to it; use \"git switch <newbranch>\" to switch to the new "
"branch."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:73
msgid ""
"When a local branch is started off a remote-tracking branch, Git sets up the "
"branch (specifically the `branch.<name>.remote` and `branch.<name>.merge` "
"configuration entries) so that 'git pull' will appropriately merge from the "
"remote-tracking branch. This behavior may be changed via the global "
"`branch.autoSetupMerge` configuration flag. That setting can be overridden "
"by using the `--track` and `--no-track` options, and changed later using "
"`git branch --set-upstream-to`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:79
msgid ""
"With a `-m` or `-M` option, <oldbranch> will be renamed to <newbranch>.  If "
"<oldbranch> had a corresponding reflog, it is renamed to match <newbranch>, "
"and a reflog entry is created to remember the branch renaming. If "
"<newbranch> exists, -M must be used to force the rename to happen."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:83
msgid ""
"The `-c` and `-C` options have the exact same semantics as `-m` and `-M`, "
"except instead of the branch being renamed, it will be copied to a new name, "
"along with its config and reflog."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:87
msgid ""
"With a `-d` or `-D` option, `<branchname>` will be deleted.  You may specify "
"more than one branch for deletion.  If the branch currently has a reflog "
"then the reflog will also be deleted."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:93
msgid ""
"Use `-r` together with `-d` to delete remote-tracking branches. Note, that "
"it only makes sense to delete remote-tracking branches if they no longer "
"exist in the remote repository or if 'git fetch' was configured not to fetch "
"them again. See also the 'prune' subcommand of linkgit:git-remote[1] for a "
"way to clean up all obsolete remote-tracking branches."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:96
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:97
#, no-wrap
msgid "-d"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:98
#, no-wrap
msgid "--delete"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:102
msgid ""
"Delete a branch. The branch must be fully merged in its upstream branch, or "
"in `HEAD` if no upstream was set with `--track` or `--set-upstream-to`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:103
#, no-wrap
msgid "-D"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:105
msgid "Shortcut for `--delete --force`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:106
#, no-wrap
msgid "--create-reflog"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:115
msgid ""
"Create the branch's reflog.  This activates recording of all changes made to "
"the branch ref, enabling use of date based sha1 expressions such as "
"\"<branchname>@\\{yesterday}\".  Note that in non-bare repositories, reflogs "
"are usually enabled by default by the `core.logAllRefUpdates` config "
"option.  The negated form `--no-create-reflog` only overrides an earlier "
"`--create-reflog`, but currently does not negate the setting of "
"`core.logAllRefUpdates`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:116
#, no-wrap
msgid "-f"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:117
#, no-wrap
msgid "--force"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:125
msgid ""
"Reset <branchname> to <startpoint>, even if <branchname> exists "
"already. Without `-f`, 'git branch' refuses to change an existing branch.  "
"In combination with `-d` (or `--delete`), allow deleting the branch "
"irrespective of its merged status, or whether it even points to a valid "
"commit. In combination with `-m` (or `--move`), allow renaming the branch "
"even if the new branch name already exists, the same applies for `-c` (or "
"`--copy`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:126
#, no-wrap
msgid "-m"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:127
#, no-wrap
msgid "--move"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:129
msgid "Move/rename a branch and the corresponding reflog."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:130
#, no-wrap
msgid "-M"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:132
msgid "Shortcut for `--move --force`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:133
#, no-wrap
msgid "-c"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:134
#, no-wrap
msgid "--copy"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:136
msgid "Copy a branch and the corresponding reflog."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:137
#, no-wrap
msgid "-C"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:139
msgid "Shortcut for `--copy --force`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:140
#, no-wrap
msgid "--color[=<when>]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:144
msgid ""
"Color branches to highlight current, local, and remote-tracking branches.  "
"The value must be always (the default), never, or auto."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:145
#, no-wrap
msgid "--no-color"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:149
msgid ""
"Turn off branch colors, even when the configuration file gives the default "
"to color output.  Same as `--color=never`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:150
#, no-wrap
msgid "-i"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:151
#, no-wrap
msgid "--ignore-case"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:153
msgid "Sorting and filtering branches are case insensitive."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:154
#, no-wrap
msgid "--column[=<options>]"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:155
#, no-wrap
msgid "--no-column"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:159
msgid ""
"Display branch listing in columns. See configuration variable "
"`column.branch` for option syntax. `--column` and `--no-column` without "
"options are equivalent to 'always' and 'never' respectively."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:161
msgid "This option is only applicable in non-verbose mode."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:162
#, no-wrap
msgid "-r"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:163
#, no-wrap
msgid "--remotes"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:166
msgid ""
"List or delete (if used with -d) the remote-tracking branches.  Combine with "
"`--list` to match the optional pattern(s)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:167
#, no-wrap
msgid "-a"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:168
#, no-wrap
msgid "--all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:171
msgid ""
"List both remote-tracking branches and local branches.  Combine with "
"`--list` to match optional pattern(s)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:172
#, no-wrap
msgid "-l"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:173
#, no-wrap
msgid "--list"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:177
msgid ""
"List branches.  With optional `<pattern>...`, e.g. `git branch --list "
"'maint-*'`, list only the branches that match the pattern(s)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:178
#, no-wrap
msgid "--show-current"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:181
msgid ""
"Print the name of the current branch. In detached HEAD state, nothing is "
"printed."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:182
#, no-wrap
msgid "-v"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:183
#, no-wrap
msgid "-vv"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:184
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:192
msgid ""
"When in list mode, show sha1 and commit subject line for each head, along "
"with relationship to upstream branch (if any). If given twice, print the "
"path of the linked worktree (if any) and the name of the upstream branch, as "
"well (see also `git remote show <remote>`).  Note that the current "
"worktree's HEAD will not have its path printed (it will always be your "
"current directory)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:193
#, no-wrap
msgid "-q"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:194
#, no-wrap
msgid "--quiet"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:197
msgid ""
"Be more quiet when creating or deleting a branch, suppressing non-error "
"messages."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:198
#, no-wrap
msgid "--abbrev=<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:204
msgid ""
"In the verbose listing that show the commit object name, show the shortest "
"prefix that is at least '<n>' hexdigits long that uniquely refers the "
"object.  The default value is 7 and can be overridden by the `core.abbrev` "
"config option."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:205
#, no-wrap
msgid "--no-abbrev"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:207
msgid "Display the full sha1s in the output listing rather than abbreviating them."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:208
#, no-wrap
msgid "-t"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:209
#, no-wrap
msgid "--track"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:217
msgid ""
"When creating a new branch, set up `branch.<name>.remote` and "
"`branch.<name>.merge` configuration entries to mark the start-point branch "
"as \"upstream\" from the new branch. This configuration will tell git to "
"show the relationship between the two branches in `git status` and `git "
"branch -v`. Furthermore, it directs `git pull` without arguments to pull "
"from the upstream when the new branch is checked out."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:223
msgid ""
"This behavior is the default when the start point is a remote-tracking "
"branch.  Set the branch.autoSetupMerge configuration variable to `false` if "
"you want `git switch`, `git checkout` and `git branch` to always behave as "
"if `--no-track` were given. Set it to `always` if you want this behavior "
"when the start-point is either a local or remote-tracking branch."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:224
#, no-wrap
msgid "--no-track"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:227
msgid ""
"Do not set up \"upstream\" configuration, even if the branch.autoSetupMerge "
"configuration variable is true."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:228
#, no-wrap
msgid "--set-upstream"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:231
msgid ""
"As this option had confusing syntax, it is no longer supported.  Please use "
"`--track` or `--set-upstream-to` instead."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:232
#, no-wrap
msgid "-u <upstream>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:233
#, no-wrap
msgid "--set-upstream-to=<upstream>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:237
msgid ""
"Set up <branchname>'s tracking information so <upstream> is considered "
"<branchname>'s upstream branch. If no <branchname> is specified, then it "
"defaults to the current branch."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:238
#, no-wrap
msgid "--unset-upstream"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:241
msgid ""
"Remove the upstream information for <branchname>. If no branch is specified "
"it defaults to the current branch."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:242
#, no-wrap
msgid "--edit-description"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:247
msgid ""
"Open an editor and edit the text to explain what the branch is for, to be "
"used by various other commands (e.g. `format-patch`, `request-pull`, and "
"`merge` (if enabled)). Multi-line explanations may be used."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:248
#, no-wrap
msgid "--contains [<commit>]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:251
msgid ""
"Only list branches which contain the specified commit (HEAD if not "
"specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:252
#, no-wrap
msgid "--no-contains [<commit>]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:255
msgid ""
"Only list branches which don't contain the specified commit (HEAD if not "
"specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:256
#, no-wrap
msgid "--merged [<commit>]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:259
msgid ""
"Only list branches whose tips are reachable from the specified commit (HEAD "
"if not specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:260
#, no-wrap
msgid "--no-merged [<commit>]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:263
msgid ""
"Only list branches whose tips are not reachable from the specified commit "
"(HEAD if not specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:264
#, no-wrap
msgid "<branchname>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:269
msgid ""
"The name of the branch to create or delete.  The new branch name must pass "
"all checks defined by linkgit:git-check-ref-format[1].  Some of these checks "
"may restrict the characters allowed in a branch name."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:270
#, no-wrap
msgid "<start-point>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:274
msgid ""
"The new branch head will point to this commit.  It may be given as a branch "
"name, a commit-id, or a tag.  If this option is omitted, the current HEAD "
"will be used instead."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:275
#, no-wrap
msgid "<oldbranch>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:277
msgid "The name of an existing branch to rename."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:278
#, no-wrap
msgid "<newbranch>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:281
msgid ""
"The new name for an existing branch. The same restrictions as for "
"<branchname> apply."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:282
#, no-wrap
msgid "--sort=<key>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:292
msgid ""
"Sort based on the key given. Prefix `-` to sort in descending order of the "
"value. You may use the --sort=<key> option multiple times, in which case the "
"last key becomes the primary key. The keys supported are the same as those "
"in `git for-each-ref`. Sort order defaults to the value configured for the "
"`branch.sort` variable if exists, or to sorting based on the full refname "
"(including `refs/...` prefix). This lists detached HEAD (if present) first, "
"then local branches and finally remote-tracking branches. See "
"linkgit:git-config[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:294
#, no-wrap
msgid "--points-at <object>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:296
msgid "Only list branches of the given object."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:297
#, no-wrap
msgid "--format <format>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:301
msgid ""
"A string that interpolates `%(fieldname)` from a branch ref being shown and "
"the object it points at.  The format is the same as that of "
"linkgit:git-for-each-ref[1]."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:303
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:307
msgid ""
"`pager.branch` is only respected when listing branches, i.e., when `--list` "
"is used or implied. The default is to use a pager.  See "
"linkgit:git-config[1]."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:309
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:311
#, no-wrap
msgid "Start development from a known tag"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-branch.txt:318
#, no-wrap
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ git branch my2.6.14 v2.6.14   <1>\n"
"$ git switch my2.6.14\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:322
msgid ""
"This step and the next one could be combined into a single step with "
"\"checkout -b my2.6.14 v2.6.14\"."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:323
#, no-wrap
msgid "Delete an unneeded branch"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-branch.txt:330
#, no-wrap
msgid ""
"$ git clone git://git.kernel.org/.../git.git my.git\n"
"$ cd my.git\n"
"$ git branch -d -r origin/todo origin/html origin/man   <1>\n"
"$ git branch -D test                                    <2>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:335
msgid ""
"Delete the remote-tracking branches \"todo\", \"html\" and \"man\". The next "
"'fetch' or 'pull' will create them again unless you configure them not to.  "
"See linkgit:git-fetch[1]."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:337
msgid ""
"Delete the \"test\" branch even if the \"master\" branch (or whichever "
"branch is currently checked out) does not have all commits from the test "
"branch."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-branch.txt:338
#, no-wrap
msgid "Listing branches from a specific remote"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-branch.txt:343
#, no-wrap
msgid ""
"$ git branch -r -l '<remote>/<pattern>'                 <1>\n"
"$ git for-each-ref 'refs/remotes/<remote>/<pattern>'    <2>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:347
msgid ""
"Using `-a` would conflate <remote> with any local branches you happen to "
"have been prefixed with the same <remote> pattern."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:348
msgid ""
"`for-each-ref` can take a wide range of options. See "
"linkgit:git-for-each-ref[1]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:350
msgid "Patterns will normally need quoting."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:352
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:357
msgid ""
"If you are creating a branch that you want to switch to immediately, it is "
"easier to use the \"git switch\" command with its `-c` option to do the same "
"thing with a single command."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:360
msgid ""
"The options `--contains`, `--no-contains`, `--merged` and `--no-merged` "
"serve four related but different purposes:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:364
msgid ""
"`--contains <commit>` is used to find all branches which will need special "
"attention if <commit> were to be rebased or amended, since those branches "
"contain the specified <commit>."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:367
msgid ""
"`--no-contains <commit>` is the inverse of that, i.e. branches that don't "
"contain the specified <commit>."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:370
msgid ""
"`--merged` is used to find all branches which can be safely deleted, since "
"those branches are fully contained by HEAD."
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:373
msgid ""
"`--no-merged` is used to find branches which are candidates for merging into "
"HEAD, since those branches are not fully contained by HEAD."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:377
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:383
msgid ""
"linkgit:git-check-ref-format[1], linkgit:git-fetch[1], "
"linkgit:git-remote[1], "
"link:user-manual.html#what-is-a-branch[``Understanding history: What is a "
"branch?''] in the Git User's Manual."
msgstr ""

#. type: Title -
#: ../Documentation/git-branch.txt:385
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-branch.txt:386
msgid "Part of the linkgit:git[1] suite"
msgstr ""
