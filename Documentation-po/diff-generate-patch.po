# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title -
#: ../Documentation/diff-generate-patch.txt:2
#, no-wrap
msgid "Generating patch text with -p"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:15
msgid ""
"Running linkgit:git-diff[1], linkgit:git-log[1], linkgit:git-show[1], "
"linkgit:git-diff-index[1], linkgit:git-diff-tree[1], or "
"linkgit:git-diff-files[1] with the `-p` option produces patch text.  You can "
"customize the creation of patch text via the `GIT_EXTERNAL_DIFF` and the "
"`GIT_DIFF_OPTS` environment variables (see linkgit:git[1]), and the `diff` "
"attribute (see linkgit:gitattributes[5])."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:18
msgid ""
"What the -p option produces is slightly different from the traditional diff "
"format:"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:20
msgid "It is preceded with a \"git diff\" header that looks like this:"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:22
#, no-wrap
msgid "diff --git a/file1 b/file2\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:26
msgid ""
"The `a/` and `b/` filenames are the same unless rename/copy is involved.  "
"Especially, even for a creation or a deletion, `/dev/null` is _not_ used in "
"place of the `a/` or `b/` filenames."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:30
msgid ""
"When rename/copy is involved, `file1` and `file2` show the name of the "
"source file of the rename/copy and the name of the file that rename/copy "
"produces, respectively."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:32
msgid "It is followed by one or more extended header lines:"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:44
#, no-wrap
msgid ""
"old mode <mode>\n"
"new mode <mode>\n"
"deleted file mode <mode>\n"
"new file mode <mode>\n"
"copy from <path>\n"
"copy to <path>\n"
"rename from <path>\n"
"rename to <path>\n"
"similarity index <number>\n"
"dissimilarity index <number>\n"
"index <hash>..<hash> <mode>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:47
msgid ""
"File modes are printed as 6-digit octal numbers including the file type and "
"file permission bits."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:49
msgid "Path names in extended headers do not include the `a/` and `b/` prefixes."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:56
msgid ""
"The similarity index is the percentage of unchanged lines, and the "
"dissimilarity index is the percentage of changed lines.  It is a rounded "
"down integer, followed by a percent sign.  The similarity index value of "
"100% is thus reserved for two equal files, while 100% dissimilarity means "
"that no line from the old file made it into the new one."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:60
msgid ""
"The index line includes the blob object names before and after the change.  "
"The <mode> is included if the file mode does not change; otherwise, separate "
"lines indicate the old and the new mode."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:64
msgid ""
"Pathnames with \"unusual\" characters are quoted as explained for the "
"configuration variable `core.quotePath` (see linkgit:git-config[1])."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:69
msgid ""
"All the `file1` files in the output refer to files before the commit, and "
"all the `file2` files refer to files after the commit.  It is incorrect to "
"apply each change to each file sequentially.  For example, this patch will "
"swap a and b:"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:76
#, no-wrap
msgid ""
"diff --git a/a b/b\n"
"rename from a\n"
"rename to b\n"
"diff --git a/b b/a\n"
"rename from b\n"
"rename to a\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:81
msgid ""
"Hunk headers mention the name of the function to which the hunk applies.  "
"See \"Defining a custom hunk-header\" in linkgit:gitattributes[5] for "
"details of how to tailor to this to specific languages."
msgstr ""

#. type: Title -
#: ../Documentation/diff-generate-patch.txt:84
#, no-wrap
msgid "Combined diff format"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:92
msgid ""
"Any diff-generating command can take the `-c` or `--cc` option to produce a "
"'combined diff' when showing a merge. This is the default format when "
"showing merges with linkgit:git-diff[1] or linkgit:git-show[1]. Note also "
"that you can give suitable `--diff-merges` option to any of these commands "
"to force generation of diffs in specific format."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:94
msgid "A \"combined diff\" format looks like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/diff-generate-patch.txt:103
#, no-wrap
msgid ""
"diff --combined describe.c\n"
"index fabadb8,cc95eb0..4866510\n"
"--- a/describe.c\n"
"+++ b/describe.c\n"
"@@@ -98,20 -98,12 +98,20 @@@\n"
"\treturn (a_date > b_date) ? -1 : (a_date == b_date) ? 0 : 1;\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/diff-generate-patch.txt:113
#, no-wrap
msgid ""
"- static void describe(char *arg)\n"
" -static void describe(struct commit *cmit, int last_one)\n"
"++static void describe(char *arg, int last_one)\n"
"  {\n"
" +\tunsigned char sha1[20];\n"
" +\tstruct commit *cmit;\n"
"\tstruct commit_list *list;\n"
"\tstatic int initialized = 0;\n"
"\tstruct commit_name *n;\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/diff-generate-patch.txt:123
#, no-wrap
msgid ""
" +\tif (get_sha1(arg, sha1) < 0)\n"
" +\t\tusage(describe_usage);\n"
" +\tcmit = lookup_commit_reference(sha1);\n"
" +\tif (!cmit)\n"
" +\t\tusage(describe_usage);\n"
" +\n"
"\tif (!initialized) {\n"
"\t\tinitialized = 1;\n"
"\t\tfor_each_ref(get_name);\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:127
msgid ""
"It is preceded with a \"git diff\" header, that looks like this (when the "
"`-c` option is used):"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:129
#, no-wrap
msgid "diff --combined file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:131
msgid "or like this (when the `--cc` option is used):"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:133
#, no-wrap
msgid "       diff --cc file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:136
msgid ""
"It is followed by one or more extended header lines (this example shows a "
"merge with two parents):"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:141
#, no-wrap
msgid ""
"index <hash>,<hash>..<hash>\n"
"mode <mode>,<mode>..<mode>\n"
"new file mode <mode>\n"
"deleted file mode <mode>,<mode>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:147
msgid ""
"The `mode <mode>,<mode>..<mode>` line appears only if at least one of the "
"<mode> is different from the rest. Extended headers with information about "
"detected contents movement (renames and copying detection) are designed to "
"work with diff of two <tree-ish> and are not used by combined diff format."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:149
msgid "It is followed by two-line from-file/to-file header"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:151 ../Documentation/diff-generate-patch.txt:162 ../Documentation/diff-generate-patch.txt:163 ../Documentation/diff-generate-patch.txt:164
msgid "a/file"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:152 ../Documentation/diff-generate-patch.txt:165
msgid "b/file"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:156
msgid ""
"Similar to two-line header for traditional 'unified' diff format, "
"`/dev/null` is used to signal created or deleted files."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:160
msgid ""
"However, if the --combined-all-paths option is provided, instead of a "
"two-line from-file/to-file you get a N+1 line from-file/to-file header, "
"where N is the number of parents in the merge commit"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:169
msgid ""
"This extended format can be useful if rename or copy detection is active, to "
"allow you to see the original name of the file in different parents."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:175
msgid ""
"Chunk header format is modified to prevent people from accidentally feeding "
"it to `patch -p1`. Combined diff format was created for review of merge "
"commit changes, and was not meant to be applied. The change is similar to "
"the change in the extended 'index' header:"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:177
#, no-wrap
msgid "@@@ <from-file-range> <from-file-range> <to-file-range> @@@\n"
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:180
msgid ""
"There are (number of parents + 1) `@` characters in the chunk header for "
"combined diff format."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:189
msgid ""
"Unlike the traditional 'unified' diff format, which shows two files A and B "
"with a single column that has `-` (minus -- appears in A but removed in B), "
"`+` (plus -- missing in A but added to B), or `\" \"` (space -- unchanged) "
"prefix, this format compares two or more files file1, file2,... with one "
"file X, and shows how X differs from each of fileN.  One column for each of "
"fileN is prepended to the output line to note how X's line is different from "
"it."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:195
msgid ""
"A `-` character in the column N means that the line appears in fileN but it "
"does not appear in the result.  A `+` character in the column N means that "
"the line appears in the result, and fileN does not have that line (in other "
"words, the line was added, from the point of view of that parent)."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:201
msgid ""
"In the above example output, the function signature was changed from both "
"files (hence two `-` removals from both file1 and file2, plus `++` to mean "
"one line that was added does not appear in either file1 or file2).  Also "
"eight other lines are the same from file1 but do not appear in file2 (hence "
"prefixed with `+`)."
msgstr ""

#. type: Plain text
#: ../Documentation/diff-generate-patch.txt:207
msgid ""
"When shown by `git diff-tree -c`, it compares the parents of a merge commit "
"with the merge result (i.e. file1..fileN are the parents).  When shown by "
"`git diff-files -c`, it compares the two unresolved merge parents with the "
"working tree file (i.e. file1 is stage 2 aka \"our version\", file2 is stage "
"3 aka \"their version\")."
msgstr ""
