# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-config.txt:2
#, no-wrap
msgid "git-config(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:7
msgid "git-config - Get and set repository or global options"
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:27
#, no-wrap
msgid ""
"'git config' [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] "
"[--show-scope] [-z|--null] name [value [value-pattern]]\n"
"'git config' [<file-option>] [--type=<type>] --add name value\n"
"'git config' [<file-option>] [--type=<type>] [--fixed-value] --replace-all "
"name value [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] "
"[-z|--null] [--fixed-value] --get name [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] "
"[-z|--null] [--fixed-value] --get-all name [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] "
"[-z|--null] [--fixed-value] [--name-only] --get-regexp name_regex "
"[value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch name "
"URL\n"
"'git config' [<file-option>] [--fixed-value] --unset name [value-pattern]\n"
"'git config' [<file-option>] [--fixed-value] --unset-all name "
"[value-pattern]\n"
"'git config' [<file-option>] --rename-section old_name new_name\n"
"'git config' [<file-option>] --remove-section name\n"
"'git config' [<file-option>] [--show-origin] [--show-scope] [-z|--null] "
"[--name-only] -l | --list\n"
"'git config' [<file-option>] --get-color name [default]\n"
"'git config' [<file-option>] --get-colorbool name [stdout-is-tty]\n"
"'git config' [<file-option>] -e | --edit\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:29
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:33
msgid ""
"You can query/set/replace/unset options with this command. The name is "
"actually the section and the key separated by a dot, and the value will be "
"escaped."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:43
msgid ""
"Multiple lines can be added to an option by using the `--add` option.  If "
"you want to update or unset an option which can occur on multiple lines, a "
"`value-pattern` (which is an extended regular expression, unless the "
"`--fixed-value` option is given) needs to be given.  Only the existing "
"values that match the pattern are updated or unset.  If you want to handle "
"the lines that do *not* match the pattern, just prepend a single exclamation "
"mark in front (see also <<EXAMPLES>>), but note that this only works when "
"the `--fixed-value` option is not in use."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:48
msgid ""
"The `--type=<type>` option instructs 'git config' to ensure that incoming "
"and outgoing values are canonicalize-able under the given <type>.  If no "
"`--type=<type>` is given, no canonicalization will be performed. Callers may "
"unset an existing `--type` specifier with `--no-type`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:54
msgid ""
"When reading, the values are read from the system, global and repository "
"local configuration files by default, and options `--system`, `--global`, "
"`--local`, `--worktree` and `--file <filename>` can be used to tell the "
"command to read from only that location (see <<FILES>>)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:60
msgid ""
"When writing, the new value is written to the repository local configuration "
"file by default, and options `--system`, `--global`, `--worktree`, `--file "
"<filename>` can be used to tell the command to write to that location (you "
"can say `--local` but that is the default)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:63
msgid ""
"This command will fail with non-zero status upon error.  Some exit codes "
"are:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:65
msgid "The section or key is invalid (ret=1),"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:66
msgid "no section or name was provided (ret=2),"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:67
msgid "the config file is invalid (ret=3),"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:68
msgid "the config file cannot be written (ret=4),"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:69
msgid "you try to unset an option which does not exist (ret=5),"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:70
msgid "you try to unset/set an option for which multiple lines match (ret=5), or"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:71
msgid "you try to use an invalid regexp (ret=6)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:73
msgid "On success, the command returns the exit code 0."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:76
msgid ""
"A list of all available configuration variables can be obtained using the "
"`git help --config` command."
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:79
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:81
#, no-wrap
msgid "--replace-all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:84
msgid ""
"Default behavior is to replace at most one line. This replaces all lines "
"matching the key (and optionally the `value-pattern`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:85
#, no-wrap
msgid "--add"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:89
msgid ""
"Adds a new line to the option without altering any existing values.  This is "
"the same as providing '^$' as the `value-pattern` in `--replace-all`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:90
#, no-wrap
msgid "--get"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:94
msgid ""
"Get the value for a given key (optionally filtered by a regex matching the "
"value). Returns error code 1 if the key was not found and the last value if "
"multiple key values were found."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:95
#, no-wrap
msgid "--get-all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:97
msgid "Like get, but returns all values for a multi-valued key."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:98
#, no-wrap
msgid "--get-regexp"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:104
msgid ""
"Like --get-all, but interprets the name as a regular expression and writes "
"out the key names.  Regular expression matching is currently case-sensitive "
"and done against a canonicalized version of the key in which section and "
"variable names are lowercased, but subsection names are not."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:105
#, no-wrap
msgid "--get-urlmatch name URL"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:112
msgid ""
"When given a two-part name section.key, the value for section.<url>.key "
"whose <url> part matches the best to the given URL is returned (if no such "
"key exists, the value for section.key is used as a fallback).  When given "
"just the section as name, do so for all the keys in the section and list "
"them.  Returns error code 1 if no value is found."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:113
#, no-wrap
msgid "--global"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:118
msgid ""
"For writing options: write to global `~/.gitconfig` file rather than the "
"repository `.git/config`, write to `$XDG_CONFIG_HOME/git/config` file if "
"this file exists and the `~/.gitconfig` file doesn't."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:121
msgid ""
"For reading options: read only from global `~/.gitconfig` and from "
"`$XDG_CONFIG_HOME/git/config` rather than from all available files."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:123 ../Documentation/git-config.txt:133 ../Documentation/git-config.txt:142 ../Documentation/git-config.txt:157 ../Documentation/git-config.txt:356
msgid "See also <<FILES>>."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:124
#, no-wrap
msgid "--system"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:128
msgid ""
"For writing options: write to system-wide `$(prefix)/etc/gitconfig` rather "
"than the repository `.git/config`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:131
msgid ""
"For reading options: read only from system-wide `$(prefix)/etc/gitconfig` "
"rather than from all available files."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:134
#, no-wrap
msgid "--local"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:137
msgid ""
"For writing options: write to the repository `.git/config` file.  This is "
"the default behavior."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:140
msgid ""
"For reading options: read only from the repository `.git/config` rather than "
"from all available files."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:143
#, no-wrap
msgid "--worktree"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:147
msgid ""
"Similar to `--local` except that `.git/config.worktree` is read from or "
"written to if `extensions.worktreeConfig` is present. If not it's the same "
"as `--local`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:148
#, no-wrap
msgid "-f config-file"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:149
#, no-wrap
msgid "--file config-file"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:152
msgid ""
"For writing options: write to the specified file rather than the repository "
"`.git/config`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:155
msgid ""
"For reading options: read only from the specified file rather than from all "
"available files."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:158
#, no-wrap
msgid "--blob blob"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:164
msgid ""
"Similar to `--file` but use the given blob instead of a file. E.g.  you can "
"use 'master:.gitmodules' to read values from the file '.gitmodules' in the "
"master branch. See \"SPECIFYING REVISIONS\" section in "
"linkgit:gitrevisions[7] for a more complete list of ways to spell blob "
"names."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:165
#, no-wrap
msgid "--remove-section"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:167
msgid "Remove the given section from the configuration file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:168
#, no-wrap
msgid "--rename-section"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:170
msgid "Rename the given section to a new name."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:171
#, no-wrap
msgid "--unset"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:173
msgid "Remove the line matching the key from config file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:174
#, no-wrap
msgid "--unset-all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:176
msgid "Remove all lines matching the key from config file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:177
#, no-wrap
msgid "-l"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:178
#, no-wrap
msgid "--list"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:180
msgid "List all variables set in config file, along with their values."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:181
#, no-wrap
msgid "--fixed-value"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:186
msgid ""
"When used with the `value-pattern` argument, treat `value-pattern` as an "
"exact string instead of a regular expression. This will restrict the "
"name/value pairs that are matched to only those where the value is exactly "
"equal to the `value-pattern`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:187
#, no-wrap
msgid "--type <type>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:191
msgid ""
"'git config' will ensure that any input or output is valid under the given "
"type constraint(s), and will canonicalize outgoing values in `<type>`'s "
"canonical form."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:193
msgid "Valid `<type>`'s include:"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:195
msgid "'bool': canonicalize values as either \"true\" or \"false\"."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:198
msgid ""
"'int': canonicalize values as simple decimal numbers. An optional suffix of "
"'k', 'm', or 'g' will cause the value to be multiplied by 1024, 1048576, or "
"1073741824 upon input."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:200
msgid ""
"'bool-or-int': canonicalize according to either 'bool' or 'int', as "
"described above."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:204
msgid ""
"'path': canonicalize by adding a leading `~` to the value of `$HOME` and "
"`~user` to the home directory for the specified user. This specifier has no "
"effect when setting the value (but you can use `git config section.variable "
"~/` from the command line to let your shell do the expansion.)"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:206
msgid ""
"'expiry-date': canonicalize by converting from a fixed or relative "
"date-string to a timestamp. This specifier has no effect when setting the "
"value."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:210
msgid ""
"'color': When getting a value, canonicalize by converting to an ANSI color "
"escape sequence. When setting a value, a sanity-check is performed to ensure "
"that the given value is canonicalize-able as an ANSI color, but it is "
"written as-is."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:212
#, no-wrap
msgid "--bool"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:213
#, no-wrap
msgid "--int"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:214
#, no-wrap
msgid "--bool-or-int"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:215
#, no-wrap
msgid "--path"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:216
#, no-wrap
msgid "--expiry-date"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:219
msgid ""
"Historical options for selecting a type specifier. Prefer instead `--type` "
"(see above)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:220
#, no-wrap
msgid "--no-type"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:224
msgid ""
"Un-sets the previously set type specifier (if one was previously set). This "
"option requests that 'git config' not canonicalize the retrieved variable.  "
"`--no-type` has no effect without `--type=<type>` or `--<type>`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:225
#, no-wrap
msgid "-z"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:226
#, no-wrap
msgid "--null"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:233
msgid ""
"For all options that output values and/or keys, always end values with the "
"null character (instead of a newline). Use newline instead as a delimiter "
"between key and value. This allows for secure parsing of the output without "
"getting confused e.g. by values that contain line breaks."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:234
#, no-wrap
msgid "--name-only"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:237
msgid "Output only the names of config variables for `--list` or `--get-regexp`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:238
#, no-wrap
msgid "--show-origin"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:243
msgid ""
"Augment the output of all queried config options with the origin type (file, "
"standard input, blob, command line) and the actual origin (config file path, "
"ref, or blob id if applicable)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:244
#, no-wrap
msgid "--show-scope"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:248
msgid ""
"Similar to `--show-origin` in that it augments the output of all queried "
"config options with the scope of that value (local, global, system, "
"command)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:249
#, no-wrap
msgid "--get-colorbool name [stdout-is-tty]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:259
msgid ""
"Find the color setting for `name` (e.g. `color.diff`) and output \"true\" or "
"\"false\".  `stdout-is-tty` should be either \"true\" or \"false\", and is "
"taken into account when configuration says \"auto\".  If `stdout-is-tty` is "
"missing, then checks the standard output of the command itself, and exits "
"with status 0 if color is to be used, or exits with status 1 otherwise.  "
"When the color setting for `name` is undefined, the command uses `color.ui` "
"as fallback."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:260
#, no-wrap
msgid "--get-color name [default]"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:266
msgid ""
"Find the color configured for `name` (e.g. `color.diff.new`) and output it "
"as the ANSI color escape sequence to the standard output.  The optional "
"`default` parameter is used instead, if there is no color configured for "
"`name`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:270
msgid ""
"`--type=color [--default=<default>]` is preferred over `--get-color` (but "
"note that `--get-color` will omit the trailing newline printed by "
"`--type=color`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:271
#, no-wrap
msgid "-e"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:272
#, no-wrap
msgid "--edit"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:275
msgid ""
"Opens an editor to modify the specified config file; either `--system`, "
"`--global`, or repository (default)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:276
#, no-wrap
msgid "--[no-]includes"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:281
msgid ""
"Respect `include.*` directives in config files when looking up "
"values. Defaults to `off` when a specific file is given (e.g., using "
"`--file`, `--global`, etc) and `on` when searching all config files."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:282
#, no-wrap
msgid "--default <value>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:285
msgid ""
"When using `--get`, and the requested variable is not found, behave as if "
"<value> were the value assigned to the that variable."
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:287
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:291
msgid ""
"`pager.config` is only respected when listing configuration, i.e., when "
"using `--list` or any of the `--get-*` which may return multiple results.  "
"The default is to use a pager."
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:294
#, no-wrap
msgid "FILES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:298
msgid ""
"If not set explicitly with `--file`, there are four files where 'git config' "
"will search for configuration options:"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:299
#, no-wrap
msgid "$(prefix)/etc/gitconfig"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:301
msgid "System-wide configuration file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:302
#, no-wrap
msgid "$XDG_CONFIG_HOME/git/config"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:309
msgid ""
"Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or "
"empty, `$HOME/.config/git/config` will be used. Any single-valued variable "
"set in this file will be overwritten by whatever is in `~/.gitconfig`.  It "
"is a good idea not to create this file if you sometimes use older versions "
"of Git, as support for this file was added fairly recently."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:310
#, no-wrap
msgid "~/.gitconfig"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:313
msgid "User-specific configuration file. Also called \"global\" configuration file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:314
#, no-wrap
msgid "$GIT_DIR/config"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:316
msgid "Repository specific configuration file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:317
#, no-wrap
msgid "$GIT_DIR/config.worktree"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:320
msgid ""
"This is optional and is only searched when `extensions.worktreeConfig` is "
"present in $GIT_DIR/config."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:326
msgid ""
"If no further options are given, all reading options will read all of these "
"files that are available. If the global or the system-wide configuration "
"file are not available they will be ignored. If the repository configuration "
"file is not available or readable, 'git config' will exit with a non-zero "
"error code. However, in neither case will an error message be issued."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:330
msgid ""
"The files are read in the order given above, with last value found taking "
"precedence over values read earlier.  When multiple values are taken then "
"all values of a key from all files will be used."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:333
msgid ""
"You may override individual configuration parameters when running any git "
"command by using the `-c` option. See linkgit:git[1] for details."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:337
msgid ""
"All writing options will per default write to the repository specific "
"configuration file. Note that this also affects options like `--replace-all` "
"and `--unset`. *'git config' will only ever change one file at a time*."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:341
msgid ""
"You can override these rules using the `--global`, `--system`, `--local`, "
"`--worktree`, and `--file` command-line options; see <<OPTIONS>> above."
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:344
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:346
#, no-wrap
msgid "GIT_CONFIG_GLOBAL"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:347
#, no-wrap
msgid "GIT_CONFIG_SYSTEM"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:350
msgid ""
"Take the configuration from the given files instead from global or "
"system-level configuration. See linkgit:git[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:351
#, no-wrap
msgid "GIT_CONFIG_NOSYSTEM"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:354
msgid ""
"Whether to skip reading settings from the system-wide "
"$(prefix)/etc/gitconfig file. See linkgit:git[1] for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:357
#, no-wrap
msgid "GIT_CONFIG_COUNT"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:358
#, no-wrap
msgid "GIT_CONFIG_KEY_<n>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:359
#, no-wrap
msgid "GIT_CONFIG_VALUE_<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:368
msgid ""
"If GIT_CONFIG_COUNT is set to a positive number, all environment pairs "
"GIT_CONFIG_KEY_<n> and GIT_CONFIG_VALUE_<n> up to that number will be added "
"to the process's runtime configuration. The config pairs are "
"zero-indexed. Any missing key or value is treated as an error. An empty "
"GIT_CONFIG_COUNT is treated the same as GIT_CONFIG_COUNT=0, namely no pairs "
"are processed. These environment variables will override values in "
"configuration files, but will be overridden by any explicit options passed "
"via `git -c`."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:372
msgid ""
"This is useful for cases where you want to spawn multiple git commands with "
"a common configuration but cannot depend on a configuration file, for "
"example when writing scripts."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-config.txt:373
#, no-wrap
msgid "GIT_CONFIG"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:379
msgid ""
"If no `--file` option is provided to `git config`, use the file given by "
"`GIT_CONFIG` as if it were provided via `--file`. This variable has no "
"effect on other Git commands, and is mostly for historical compatibility; "
"there is generally no reason to use it instead of the `--file` option."
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:382
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:385
msgid "Given a .git/config like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:392
#, no-wrap
msgid ""
"#\n"
"# This is the config file, and\n"
"# a '#' or ';' character indicates\n"
"# a comment\n"
"#\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:397
#, no-wrap
msgid ""
"; core variables\n"
"[core]\n"
"\t; Don't trust file modes\n"
"\tfilemode = false\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:402
#, no-wrap
msgid ""
"; Our diff algorithm\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:407
#, no-wrap
msgid ""
"; Proxy settings\n"
"[core]\n"
"\tgitproxy=proxy-command for kernel.org\n"
"\tgitproxy=default-proxy ; for all the rest\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:414
#, no-wrap
msgid ""
"; HTTP\n"
"[http]\n"
"\tsslVerify\n"
"[http \"https://weak.example.com\"]\n"
"\tsslVerify = false\n"
"\tcookieFile = /tmp/cookie.txt\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:417
msgid "you can set the filemode to true with"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:420
#, no-wrap
msgid "% git config core.filemode true\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:425
msgid ""
"The hypothetical proxy command entries actually have a postfix to discern "
"what URL they apply to. Here is how to change the entry for kernel.org to "
"\"ssh\"."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:428
#, no-wrap
msgid "% git config core.gitproxy '\"ssh\" for kernel.org' 'for kernel.org$'\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:431
msgid "This makes sure that only the key/value pair for kernel.org is replaced."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:433
msgid "To delete the entry for renames, do"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:436
#, no-wrap
msgid "% git config --unset diff.renames\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:440
msgid ""
"If you want to delete an entry for a multivar (like core.gitproxy above), "
"you have to provide a regex matching the value of exactly one line."
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:442
msgid "To query the value for a given key, do"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:445
#, no-wrap
msgid "% git config --get core.filemode\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:448
msgid "or"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:451
#, no-wrap
msgid "% git config core.filemode\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:454
msgid "or, to query a multivar:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:457
#, no-wrap
msgid "% git config --get core.gitproxy \"for kernel.org$\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:460
msgid "If you want to know all the values for a multivar, do:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:463
#, no-wrap
msgid "% git config --get-all core.gitproxy\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:467
msgid ""
"If you like to live dangerously, you can replace *all* core.gitproxy by a "
"new one with"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:470
#, no-wrap
msgid "% git config --replace-all core.gitproxy ssh\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:474
msgid ""
"However, if you really only want to replace the line for the default proxy, "
"i.e. the one without a \"for ...\" postfix, do something like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:477
#, no-wrap
msgid "% git config core.gitproxy ssh '! for '\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:480
msgid "To actually match only values with an exclamation mark, you have to"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:483
#, no-wrap
msgid "% git config section.key value '[!]'\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:486
msgid "To add a new proxy, without altering any of the existing ones, use"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:489
#, no-wrap
msgid "% git config --add core.gitproxy '\"proxy-command\" for example.com'\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:493
msgid "An example to use customized color from the configuration in your script:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:499
#, no-wrap
msgid ""
"#!/bin/sh\n"
"WS=$(git config --get-color color.diff.whitespace \"blue reverse\")\n"
"RESET=$(git config --get-color \"\" \"reset\")\n"
"echo \"${WS}your whitespace color or blue reverse${RESET}\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:503
msgid ""
"For URLs in `https://weak.example.com`, `http.sslVerify` is set to false, "
"while it is set to `true` for all others:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:512
#, no-wrap
msgid ""
"% git config --type=bool --get-urlmatch http.sslverify "
"https://good.example.com\n"
"true\n"
"% git config --type=bool --get-urlmatch http.sslverify "
"https://weak.example.com\n"
"false\n"
"% git config --get-urlmatch http https://weak.example.com\n"
"http.cookieFile /tmp/cookie.txt\n"
"http.sslverify false\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:517
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:522
msgid ""
"When using the deprecated `[section.subsection]` syntax, changing a value "
"will result in adding a multi-line key instead of a change, if the "
"subsection is given with at least one uppercase character. For example when "
"the config looks like"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:526
#, no-wrap
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:529
msgid "and running `git config section.Subsection.key value2` will result in"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-config.txt:534
#, no-wrap
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
"    key = value2\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-config.txt:538
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-config.txt:539
msgid "Part of the linkgit:git[1] suite"
msgstr ""
