# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2021-12-01 17:04+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-config.txt:2
#, no-wrap
msgid "git-config(1)"
msgstr "git-config(1)"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:7
msgid "git-config - Get and set repository or global options"
msgstr ""
"git-config - リポジトリオプションまたはグローバルオプションを、取得および設定"
"する"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:27
#, fuzzy, no-wrap
#| msgid ""
#| "'git config' [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] name [value [value-pattern]]\n"
#| "'git config' [<file-option>] [--type=<type>] --add name value\n"
#| "'git config' [<file-option>] [--type=<type>] [--fixed-value] --replace-all name value [value-pattern]\n"
#| "'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get name [value-pattern]\n"
#| "'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all name [value-pattern]\n"
#| "'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp name_regex [value-pattern]\n"
#| "'git config' [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch name URL\n"
#| "'git config' [<file-option>] [--fixed-value] --unset name [value-pattern]\n"
#| "'git config' [<file-option>] [--fixed-value] --unset-all name [value-pattern]\n"
#| "'git config' [<file-option>] --rename-section old_name new_name\n"
#| "'git config' [<file-option>] --remove-section name\n"
#| "'git config' [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list\n"
#| "'git config' [<file-option>] --get-color name [default]\n"
#| "'git config' [<file-option>] --get-colorbool name [stdout-is-tty]\n"
#| "'git config' [<file-option>] -e | --edit\n"
msgid ""
"'git config' [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] <name> [<value> [<value-pattern>]]\n"
"'git config' [<file-option>] [--type=<type>] --add <name> <value>\n"
"'git config' [<file-option>] [--type=<type>] [--fixed-value] --replace-all <name> <value> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp <name-regex> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch <name> <URL>\n"
"'git config' [<file-option>] [--fixed-value] --unset <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--fixed-value] --unset-all <name> [<value-pattern>]\n"
"'git config' [<file-option>] --rename-section <old-name> <new-name>\n"
"'git config' [<file-option>] --remove-section <name>\n"
"'git config' [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list\n"
"'git config' [<file-option>] --get-color <name> [<default>]\n"
"'git config' [<file-option>] --get-colorbool <name> [<stdout-is-tty>]\n"
"'git config' [<file-option>] -e | --edit\n"
msgstr ""
"'git config' [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] name [value [value-pattern]]\n"
"'git config' [<file-option>] [--type=<type>] --add name value\n"
"'git config' [<file-option>] [--type=<type>] [--fixed-value] --replace-all name value [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get name [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all name [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp name_regex [value-pattern]\n"
"'git config' [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch name URL\n"
"'git config' [<file-option>] [--fixed-value] --unset name [value-pattern]\n"
"'git config' [<file-option>] [--fixed-value] --unset-all name [value-pattern]\n"
"'git config' [<file-option>] --rename-section old_name new_name\n"
"'git config' [<file-option>] --remove-section name\n"
"'git config' [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list\n"
"'git config' [<file-option>] --get-color name [default]\n"
"'git config' [<file-option>] --get-colorbool name [stdout-is-tty]\n"
"'git config' [<file-option>] -e | --edit\n"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:29
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:33
msgid ""
"You can query/set/replace/unset options with this command. The name is "
"actually the section and the key separated by a dot, and the value will be "
"escaped."
msgstr ""
"このコマンドを使用して、オプションを照会(query)/設定(set)/置換(replace)/設定"
"解除(unset;削除)できます。名前は実際にはドットで区切られたセクションとキーで"
"あり、値はエスケープされます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:43
msgid ""
"Multiple lines can be added to an option by using the `--add` option.  If "
"you want to update or unset an option which can occur on multiple lines, a "
"`value-pattern` (which is an extended regular expression, unless the `--"
"fixed-value` option is given) needs to be given.  Only the existing values "
"that match the pattern are updated or unset.  If you want to handle the "
"lines that do *not* match the pattern, just prepend a single exclamation "
"mark in front (see also <<EXAMPLES>>), but note that this only works when "
"the `--fixed-value` option is not in use."
msgstr ""
"`--add` オプションを使用すると、オプションに複数の行を追加できます。複数行で"
"発生する可能性のあるオプションを更新または設定解除する場合は、`value-"
"pattern` ( `--fixed-value` オプションが指定されていない限り、拡張正規表現)を"
"指定する必要があります。パターンに一致する既存の値のみが更新または設定解除さ"
"れます。パターンと「一致しない」行を処理する場合は、前に1つの感嘆符(`!`)を追"
"加するだけです(<<EXAMPLES>> も参照下さい)が、ただし、これは `--fixed-value` "
"オプションが使用されていない場合のみ機能することに注意してください。 "

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:48
msgid ""
"The `--type=<type>` option instructs 'git config' to ensure that incoming "
"and outgoing values are canonicalize-able under the given <type>.  If no `--"
"type=<type>` is given, no canonicalization will be performed. Callers may "
"unset an existing `--type` specifier with `--no-type`."
msgstr ""
"`--type=<type>` オプションは 'git config' に指示して、指定の<type>の下で入力"
"値(incoming value)と出力値(outgoing value)が正規化可能であることを確認しま"
"す。 `-type=<type>` が指定されていない場合、正規化は実行されません。 呼び出し"
"元は、既に指定済の `--type` 指定子を `--no-type` で設定解除できます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:54
msgid ""
"When reading, the values are read from the system, global and repository "
"local configuration files by default, and options `--system`, `--global`, `--"
"local`, `--worktree` and `--file <filename>` can be used to tell the command "
"to read from only that location (see <<FILES>>)."
msgstr ""
"読み取り時、値はデフォルトでシステム、グローバル、リポジトリのローカル構成"
"ファイルから読み取られ、オプション `--system` 、`--global` 、 `--local` 、 "
"`--worktree` 、 `--file <filename> ` を使用して、その場所から「のみ」読み取る"
"ようにコマンドに指示できます(<<FILES>> 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:60
msgid ""
"When writing, the new value is written to the repository local configuration "
"file by default, and options `--system`, `--global`, `--worktree`, `--file "
"<filename>` can be used to tell the command to write to that location (you "
"can say `--local` but that is the default)."
msgstr ""
"書き込み時、新しい値はデフォルトでリポジトリのローカル構成ファイルに書き込ま"
"れます。オプション `--system` 、`--global` 、 `--worktree` 、`--file "
"<filename> ` を使用すれば、コマンドにその場所に書き込むよう指示できます(あな"
"たは `--local` と言うこともでき、そしてこれはデフォルトです)。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:63
msgid ""
"This command will fail with non-zero status upon error.  Some exit codes are:"
msgstr ""
"このコマンドは、エラー時にゼロ以外のステータスで失敗します。 いくつかの終了"
"コードは以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:65
msgid "The section or key is invalid (ret=1),"
msgstr "セクションキーが不正(ret=1)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:66
msgid "no section or name was provided (ret=2),"
msgstr "セクションまたは名前が与えられてない(ret=2)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:67
msgid "the config file is invalid (ret=3),"
msgstr "configファイルが不正(ret=3)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:68
msgid "the config file cannot be written (ret=4),"
msgstr "configファイルに書き込みできない(ret=4)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:69
msgid "you try to unset an option which does not exist (ret=5),"
msgstr "存在しないオプションの設定を削除(unseet)しようとしました(ret=5)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:70
msgid ""
"you try to unset/set an option for which multiple lines match (ret=5), or"
msgstr ""
"あなたは、複数の行が一致するオプションを設定(set)/削除(unset)しようとしていま"
"す(ret=5)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:71
msgid "you try to use an invalid regexp (ret=6)."
msgstr "不正な正規表現を使おうとしています(ret=6)"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:73
msgid "On success, the command returns the exit code 0."
msgstr "成功の場合、コマンドは終了コード 0 を返します。"

# $ git help --config | wc -l
# 737
#. type: Plain text
#: ../Documentation-sedout/git-config.txt:76
msgid ""
"A list of all available configuration variables can be obtained using the "
"`git help --config` command."
msgstr ""
"使用可能なすべての構成変数のリストは、 `git help --config` コマンドを使用して"
"取得できます。"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:79
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:81
#, no-wrap
msgid "`--replace-all`"
msgstr "`--replace-all`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:84
msgid ""
"Default behavior is to replace at most one line. This replaces all lines "
"matching the key (and optionally the `value-pattern`)."
msgstr ""
"デフォルトの振る舞いでは最大1行を置き換えますが、このオプションより、キー(お"
"よびオプションで `value-pattern`)に一致するすべての行が置換されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:85
#, no-wrap
msgid "`--add`"
msgstr "`--add`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:89
msgid ""
"Adds a new line to the option without altering any existing values.  This is "
"the same as providing '^$' as the `value-pattern` in `--replace-all`."
msgstr ""
"既存の値を変更せずに、オプションに新しい「行を追加」します。 これは `--"
"replace-all` の `value-pattern` として '^$' を指定しても同じ事が可能です。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:90
#, no-wrap
msgid "`--get`"
msgstr "`--get`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:94
msgid ""
"Get the value for a given key (optionally filtered by a regex matching the "
"value). Returns error code 1 if the key was not found and the last value if "
"multiple key values were found."
msgstr ""
"指定されたキーの値を取得します(オプションで、値に一致する正規表現でフィルタリ"
"ングされます)。キーが見つからなかった場合はエラーコード1を返し、複数のキー値"
"が見つかった場合は「最後の値」を返します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:95
#, no-wrap
msgid "`--get-all`"
msgstr "`--get-all`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:97
msgid "Like get, but returns all values for a multi-valued key."
msgstr ""
"`--get` と同様ですが、複数値キー(複数行;multivar)のすべての値を返します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:98
#, no-wrap
msgid "`--get-regexp`"
msgstr "`--get-regexp`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:104
msgid ""
"Like --get-all, but interprets the name as a regular expression and writes "
"out the key names.  Regular expression matching is currently case-sensitive "
"and done against a canonicalized version of the key in which section and "
"variable names are lowercased, but subsection names are not."
msgstr ""
"`--get-all` と同様ですが、名前を正規表現として解釈し、キー名を書き出します。"
"正規表現の照合では現在、大文字と小文字が区別され、セクション名と変数名が小文"
"字になっている正規化されたバージョンのキーに対して実行されますが、サブセク"
"ション名は大文字と小文字が区別されません。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:105
#, fuzzy, no-wrap
#| msgid "`--get-urlmatch name URL`"
msgid "`--get-urlmatch <name> <URL>`"
msgstr "`--get-urlmatch name URL`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:112
#, fuzzy
#| msgid ""
#| "When given a two-part name section.key, the value for section.<url>.key "
#| "whose <url> part matches the best to the given URL is returned (if no "
#| "such key exists, the value for section.key is used as a fallback).  When "
#| "given just the section as name, do so for all the keys in the section and "
#| "list them.  Returns error code 1 if no value is found."
msgid ""
"When given a two-part name section.key, the value for section.<URL>.key "
"whose <URL> part matches the best to the given URL is returned (if no such "
"key exists, the value for section.key is used as a fallback).  When given "
"just the section as name, do so for all the keys in the section and list "
"them.  Returns error code 1 if no value is found."
msgstr ""
"2つの部分からなる名前 section.key を指定すると、<url> 部分が指定したURLに最も"
"よく一致する section.<url>.key の値が返されます(そのようなキーが存在しない場"
"合は、 section.keyの値にフォールバックします)。セクションだけを名前として指定"
"した合は、当該セクション内のすべてのキー・値をリストします。値が見つからない"
"場合はエラーコード1を返します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:113
#, no-wrap
msgid "`--global`"
msgstr "`--global`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:118
msgid ""
"For writing options: write to global `~/.gitconfig` file rather than the "
"repository `.git/config`, write to `$XDG_CONFIG_HOME/git/config` file if "
"this file exists and the `~/.gitconfig` file doesn't."
msgstr ""
"オプション書き込みの場合: リポジトリの `.git/config` ではなくグローバル `~/."
"gitconfig` (${HOME}/.gitconfig) ファイルに書き込みます。`~/.gitconfig` ファイ"
"ルが存在しなくて かつ `$XDG_CONFIG_HOME/git/config` ファイルがある場合は `"
"$XDG_CONFIG_HOME/git/config` ファイルに書き込みます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:121
msgid ""
"For reading options: read only from global `~/.gitconfig` and from `"
"$XDG_CONFIG_HOME/git/config` rather than from all available files."
msgstr ""
"オプション読み取りの場合: 使用可能なすべてのファイルからではなく、グローバル "
"`~/.gitconfig` と `$XDG_CONFIG_HOME/git/config` からのみ読み取ります。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:123
#: ../Documentation-sedout/git-config.txt:133
#: ../Documentation-sedout/git-config.txt:142
#: ../Documentation-sedout/git-config.txt:161
#: ../Documentation-sedout/git-config.txt:409
msgid "See also <<FILES>>."
msgstr "<<FILES>> も参照して下さい。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:124
#, no-wrap
msgid "`--system`"
msgstr "`--system`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:128
msgid ""
"For writing options: write to system-wide `$(prefix)/etc/gitconfig` rather "
"than the repository `.git/config`."
msgstr ""
"オプション書き込みの場合: リポジトリの `.git/config` ではなくシステム全体の `"
"$(prefix)/etc/gitconfig` に書き込みます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:131
msgid ""
"For reading options: read only from system-wide `$(prefix)/etc/gitconfig` "
"rather than from all available files."
msgstr ""
"オプション読み取りの場合: 使用可能なすべてのファイルからではなく、システム全"
"体の `$(prefix)/etc/gitconfig` からのみ読み取ります。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:134
#, no-wrap
msgid "`--local`"
msgstr "`--local`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:137
msgid ""
"For writing options: write to the repository `.git/config` file.  This is "
"the default behavior."
msgstr ""
"オプションを書き込む場合: リポジトリの `.git/config` ファイルに書き込みます。"
"これがデフォルトの動作です。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:140
msgid ""
"For reading options: read only from the repository `.git/config` rather than "
"from all available files."
msgstr ""
"読み取りオプションの場合: 使用可能なすべてのファイルからではなく、リポジトリ "
"`.git/config` からのみ読み取ります。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:143
#, no-wrap
msgid "`--worktree`"
msgstr "`--worktree`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:151
msgid ""
"Similar to `--local` except that `$GIT_DIR/config.worktree` is read from or "
"written to if `extensions.worktreeConfig` is enabled. If not it's the same "
"as `--local`. Note that `$GIT_DIR` is equal to `$GIT_COMMON_DIR` for the "
"main working tree, but is of the form `$GIT_DIR/worktrees/<id>/` for other "
"working trees. See linkgit:git-worktree[1] to learn how to enable "
"`extensions.worktreeConfig`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:152
#, fuzzy, no-wrap
#| msgid "`-f config-file`"
msgid "`-f <config-file>`"
msgstr "`-f config-file`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:153
#, fuzzy, no-wrap
#| msgid "`--file config-file`"
msgid "`--file <config-file>`"
msgstr "`--file config-file`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:156
msgid ""
"For writing options: write to the specified file rather than the repository "
"`.git/config`."
msgstr ""
"オプション書き込みの場合: リポジトリの `.git/config` ではなく、指定のファイル"
"に書き込みます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:159
msgid ""
"For reading options: read only from the specified file rather than from all "
"available files."
msgstr ""
"オプション読み取りの場合: 使用可能なすべてのファイルからではなく、指定のファ"
"イルからのみ読み取ります。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:162
#, fuzzy, no-wrap
#| msgid "`--blob blob`"
msgid "`--blob <blob>`"
msgstr "`--blob blob`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:168
msgid ""
"Similar to `--file` but use the given blob instead of a file. E.g.  you can "
"use 'master:.gitmodules' to read values from the file '.gitmodules' in the "
"master branch. See \"SPECIFYING REVISIONS\" section in linkgit:"
"gitrevisions[7] for a more complete list of ways to spell blob names."
msgstr ""
"`--file` に似ていますが、ファイルの代わりに指定のブロブを使用します。例え"
"ば、 'master:.gitmodules' を使用して、masterブランチのファイル '.gitmodules' "
"から値を読み取ることができます。ブロブ名の綴りのより完全なリストについては、 "
"linkgit:gitrevisions[7] の「SPECIFYING REVISIONS」セクションを参照してくださ"
"い。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:169
#, no-wrap
msgid "`--remove-section`"
msgstr "`--remove-section`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:171
msgid "Remove the given section from the configuration file."
msgstr "指定のセクションを構成ファイルから削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:172
#, no-wrap
msgid "`--rename-section`"
msgstr "`--rename-section`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:174
msgid "Rename the given section to a new name."
msgstr "指定のセクションの名前を新しい名前に変更します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:175
#, no-wrap
msgid "`--unset`"
msgstr "`--unset`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:177
msgid "Remove the line matching the key from config file."
msgstr "キーに一致する行を構成ファイルから削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:178
#, no-wrap
msgid "`--unset-all`"
msgstr "`--unset-all`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:180
msgid "Remove all lines matching the key from config file."
msgstr "キーに一致するすべての行を構成ファイルから削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:181
#, no-wrap
msgid "`-l`"
msgstr "`-l`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:182
#, no-wrap
msgid "`--list`"
msgstr "`--list`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:184
msgid "List all variables set in config file, along with their values."
msgstr ""
"構成ファイルに「設定されている」すべての変数とその値を一覧表示します(訳注:使"
"用可能なすべての構成変数のリストは、 `git help --config`)。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:185
#, no-wrap
msgid "`--fixed-value`"
msgstr "`--fixed-value`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:190
msgid ""
"When used with the `value-pattern` argument, treat `value-pattern` as an "
"exact string instead of a regular expression. This will restrict the name/"
"value pairs that are matched to only those where the value is exactly equal "
"to the `value-pattern`."
msgstr ""
"`value-pattern` 引数と一緒に使用する場合、 `value-pattern` を正規表現ではなく"
"単なる文字列として扱います。これにより、値が `value-pattern` と完全に等しいも"
"のにのみ一致する、名前/値のペアだけに制限されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:191
#, no-wrap
msgid "`--type <type>`"
msgstr "`--type <type>`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:195
msgid ""
"'git config' will ensure that any input or output is valid under the given "
"type constraint(s), and will canonicalize outgoing values in `<type>`'s "
"canonical form."
msgstr ""
"'git config' は、入力または出力が指定された型(type)の制約の下で有効であること"
"を保証し、その型の正規形式で出力値を正規化します。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:197
msgid "Valid `<type>`'s include:"
msgstr "有効な型には以下のものがあります:"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:199
msgid "'bool': canonicalize values as either \"true\" or \"false\"."
msgstr "'bool':  値を「true」または「false」として正規化します。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:202
msgid ""
"'int': canonicalize values as simple decimal numbers. An optional suffix of "
"'k', 'm', or 'g' will cause the value to be multiplied by 1024, 1048576, or "
"1073741824 upon input."
msgstr ""
"'int' 値を単純な10進数として正規化します。オプションのサフィックス「k」また"
"「m」または「g」を使用すると、入力時に値にそれぞれ1,024または"
"1,048,576(1024^2)または1,073,741,824(1024^3)が掛け算されます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:204
msgid ""
"'bool-or-int': canonicalize according to either 'bool' or 'int', as "
"described above."
msgstr ""
"'bool-or-int': 上記のように、 'bool' または 'int' のいずれかに従って正規化し"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:208
msgid ""
"'path': canonicalize by adding a leading `~` to the value of `$HOME` and "
"`~user` to the home directory for the specified user. This specifier has no "
"effect when setting the value (but you can use `git config section.variable "
"~/` from the command line to let your shell do the expansion.)"
msgstr ""
"'path': `$HOME` の値を意味する `~` を先頭に追加し、指定のユーザのホームディレ"
"クトリを `~user` として正規化します。この `~` は値を書き込むときには効果があ"
"りません(ただし、あなたはコマンドラインから `git config section.variable ~/` "
"と実行してシェルに展開をさせることができます)。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:210
msgid ""
"'expiry-date': canonicalize by converting from a fixed or relative date-"
"string to a timestamp. This specifier has no effect when setting the value."
msgstr ""
"'expiry-date': 固定または相対の日付文字列からタイムスタンプに変換することで正"
"規化します。この指定は値を書き込むときには効果がありません。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:214
msgid ""
"'color': When getting a value, canonicalize by converting to an ANSI color "
"escape sequence. When setting a value, a sanity-check is performed to ensure "
"that the given value is canonicalize-able as an ANSI color, but it is "
"written as-is."
msgstr ""
"'color': 値を取得するときに、ANSIカラーエスケープシーケンスに変換して正規化し"
"ます。値を設定するとき、指定された値がANSIカラーとして正規化可能であることを"
"確認するために健全性チェックが実行されますが、正規化自体は行われず、そのまま"
"書き込まれます。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:216
#, no-wrap
msgid "`--bool`"
msgstr "`--bool`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:217
#, no-wrap
msgid "`--int`"
msgstr "`--int`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:218
#, no-wrap
msgid "`--bool-or-int`"
msgstr "`--bool-or-int`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:219
#, no-wrap
msgid "`--path`"
msgstr "`--path`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:220
#, no-wrap
msgid "`--expiry-date`"
msgstr "`--expiry-date`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:223
msgid ""
"Historical options for selecting a type specifier. Prefer instead `--type` "
"(see above)."
msgstr ""
"タイプ指定子を選択するための歴史的オプション。 代わりに `--type` を優先します"
"(上記参照)。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:224
#, no-wrap
msgid "`--no-type`"
msgstr "`--no-type`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:228
msgid ""
"Un-sets the previously set type specifier (if one was previously set). This "
"option requests that 'git config' not canonicalize the retrieved variable.  "
"`--no-type` has no effect without `--type=<type>` or `--<type>`."
msgstr ""
"(これ以前に設定されていた場合、)これ以前に設定された型指定子の設定を解除しま"
"す。このオプションは、「git config」が取得した変数を正規化しないように要求し"
"ます。 `--no-type` は、`--type=<type>` または `--<type>` が無い場合は何の効果"
"もありません。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:229
#, no-wrap
msgid "`-z`"
msgstr "`-z`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:230
#, no-wrap
msgid "`--null`"
msgstr "`--null`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:237
msgid ""
"For all options that output values and/or keys, always end values with the "
"null character (instead of a newline). Use newline instead as a delimiter "
"between key and value. This allows for secure parsing of the output without "
"getting confused e.g. by values that contain line breaks."
msgstr ""
"値やキーを出力するすべてのオプションで、値を(改行ではなく)常にヌルバイト(\\0)"
"で終了します。代わりに、キーと値の間の区切り文字として改行を使用します。これ"
"により、例えば、改行を含む値を混乱することなく、出力を安全にパースできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:238
#, no-wrap
msgid "`--name-only`"
msgstr "`--name-only`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:241
msgid ""
"Output only the names of config variables for `--list` or `--get-regexp`."
msgstr "`--list` または `--get-regexp` の構成変数で名前のみを出力します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:242
#, no-wrap
msgid "`--show-origin`"
msgstr "`--show-origin`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:247
msgid ""
"Augment the output of all queried config options with the origin type (file, "
"standard input, blob, command line) and the actual origin (config file path, "
"ref, or blob id if applicable)."
msgstr ""
"照会されたすべての構成オプションの出力に、その構成オプションの出処の種類(ファ"
"イル、標準入力、blob、コマンドライン)と実際の出処(設定ファイルのパス、参照、"
"または該当する場合はblobのID)を追加します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:248
#, no-wrap
msgid "`--show-scope`"
msgstr "`--show-scope`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:252
#, fuzzy
#| msgid ""
#| "Similar to `--show-origin` in that it augments the output of all queried "
#| "config options with the scope of that value (local, global, system, "
#| "command)."
msgid ""
"Similar to `--show-origin` in that it augments the output of all queried "
"config options with the scope of that value (worktree, local, global, "
"system, command)."
msgstr ""
"`--show-origin` と同様に、クエリされたすべての設定オプションの出力をその値の"
"スコープ(ローカル、グローバル、システム、コマンド)で拡張します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:253
#, fuzzy, no-wrap
#| msgid "`--get-colorbool name [stdout-is-tty]`"
msgid "`--get-colorbool <name> [<stdout-is-tty>]`"
msgstr "`--get-colorbool name [stdout-is-tty]`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:263
#, fuzzy
#| msgid ""
#| "Find the color setting for `name` (e.g. `color.diff`) and output \"true\" "
#| "or \"false\".  `stdout-is-tty` should be either \"true\" or \"false\", "
#| "and is taken into account when configuration says \"auto\".  If `stdout-"
#| "is-tty` is missing, then checks the standard output of the command "
#| "itself, and exits with status 0 if color is to be used, or exits with "
#| "status 1 otherwise.  When the color setting for `name` is undefined, the "
#| "command uses `color.ui` as fallback."
msgid ""
"Find the color setting for `<name>` (e.g. `color.diff`) and output \"true\" "
"or \"false\".  `<stdout-is-tty>` should be either \"true\" or \"false\", and "
"is taken into account when configuration says \"auto\".  If `<stdout-is-"
"tty>` is missing, then checks the standard output of the command itself, and "
"exits with status 0 if color is to be used, or exits with status 1 "
"otherwise.  When the color setting for `name` is undefined, the command uses "
"`color.ui` as fallback."
msgstr ""
"`name` の色設定(たとえば `color.diff`)を見つけて、「true」または「false」を出"
"力します。 `stdout-is-tty` は「true」または「false」のいずれかである必要があ"
"り、構成で「auto」と表示されている場合に考慮されます。 `stdout-is-tty` がない"
"場合は、コマンド自体の標準出力をチェックし、色を使用する場合はステータス0で終"
"了し、それ以外の場合はステータス1で終了します。 `name` の色設定が未定義の場"
"合、コマンドはフォールバックとして `color.ui` を使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:264
#, fuzzy, no-wrap
#| msgid "`--get-color name [default]`"
msgid "`--get-color <name> [<default>]`"
msgstr "`--get-color name [default]`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:270
msgid ""
"Find the color configured for `name` (e.g. `color.diff.new`) and output it "
"as the ANSI color escape sequence to the standard output.  The optional "
"`default` parameter is used instead, if there is no color configured for "
"`name`."
msgstr ""
"`name` (例: `color.diff.new`) に設定されている色を見つけて、ANSIカラーエス"
"ケープシーケンスとして標準出力に出力します。 `name` に色が設定されていない場"
"合は、オプションの `default` パラメータが代わりに使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:274
msgid ""
"`--type=color [--default=<default>]` is preferred over `--get-color` (but "
"note that `--get-color` will omit the trailing newline printed by `--"
"type=color`)."
msgstr ""
"`--type=color [--default=<default>]` は `--get-color` よりも優先されます(ただ"
"し、 `--get-color` は、 `--type=color` によって出力される末尾の改行を省略しま"
"す)。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:275
#, no-wrap
msgid "`-e`"
msgstr "`-e`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:276
#, no-wrap
msgid "`--edit`"
msgstr "`--edit`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:279
msgid ""
"Opens an editor to modify the specified config file; either `--system`, `--"
"global`, or repository (default)."
msgstr ""
"指定の構成ファイルを変更するためのエディタを開きます。指定できるのは、 `--"
"system` または `--global` または「リポジトリ」(指定なし;デフォルト)、のいずれ"
"かです。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:280
#, no-wrap
msgid "`--[no-]includes`"
msgstr "`--[no-]includes`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:285
msgid ""
"Respect `include.*` directives in config files when looking up values. "
"Defaults to `off` when a specific file is given (e.g., using `--file`, `--"
"global`, etc) and `on` when searching all config files."
msgstr ""
"値を検索するときは、設定ファイルの `include.*` ディレクティブを尊重します。特"
"定のファイルが指定されている場合(たとえば、 `--file` 、`--global` などを使用"
"した場合)はデフォルトで `off` になり、すべての構成ファイルを検索する場合は "
"`on` になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:286
#, no-wrap
msgid "`--default <value>`"
msgstr "`--default <value>`"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:289
msgid ""
"When using `--get`, and the requested variable is not found, behave as if "
"<value> were the value assigned to the that variable."
msgstr ""
"`--get` を使用していて、要求した変数が見つからない場合、 <value> がその変数に"
"割り当てられた値であるかのように動作します。"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:291
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:295
msgid ""
"`pager.config` is only respected when listing configuration, i.e., when "
"using `--list` or any of the `--get-*` which may return multiple results.  "
"The default is to use a pager."
msgstr ""
"`pager.config` は、構成を一覧表示する場合、つまり、 ` --list` 、または複数の"
"結果を返す可能性のある `--get-*` のいずれか、を使用する場合にのみ尊重されま"
"す。デフォルトでは pager を使用します。"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:298
#, no-wrap
msgid "FILES"
msgstr "FILES"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:302
msgid ""
"By default, 'git config' will read configuration options from multiple files:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:303
#: ../Documentation-sedout/git-config.txt:353
#, no-wrap
msgid "$(prefix)/etc/gitconfig"
msgstr "$(prefix)/etc/gitconfig"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:305
msgid "System-wide configuration file."
msgstr "システム全体(PC毎)の構成ファイル"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:306
#: ../Documentation-sedout/git-config.txt:356
#, no-wrap
msgid "$XDG_CONFIG_HOME/git/config"
msgstr "$XDG_CONFIG_HOME/git/config"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:307
#: ../Documentation-sedout/git-config.txt:358
#, no-wrap
msgid "~/.gitconfig"
msgstr "~/.gitconfig"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:311
msgid ""
"User-specific configuration files. When the XDG_CONFIG_HOME environment "
"variable is not set or empty, $HOME/.config/ is used as $XDG_CONFIG_HOME."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:314
msgid ""
"These are also called \"global\" configuration files. If both files exist, "
"both files are read in the order given above."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:315
#: ../Documentation-sedout/git-config.txt:361
#, no-wrap
msgid "$GIT_DIR/config"
msgstr "$GIT_DIR/config"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:317
msgid "Repository specific configuration file."
msgstr "リポジトリ毎の構成ファイル。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:318
#: ../Documentation-sedout/git-config.txt:364
#, no-wrap
msgid "$GIT_DIR/config.worktree"
msgstr "$GIT_DIR/config.worktree"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:321
msgid ""
"This is optional and is only searched when `extensions.worktreeConfig` is "
"present in $GIT_DIR/config."
msgstr ""
"これはオプションであり、 `extensions.worktreeConfig` が $GIT_DIR/config に存"
"在する場合にのみ検索されます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:324
#, fuzzy
#| msgid ""
#| "You may override individual configuration parameters when running any git "
#| "command by using the `-c` option. See linkgit:git[1] for details."
msgid ""
"You may also provide additional configuration parameters when running any "
"git command by using the `-c` option. See linkgit:git[1] for details."
msgstr ""
"あなたは gitコマンドを実行するとき、 `-c` オプションを使用して、個々の構成パ"
"ラメーターをオーバーライドできます。詳細については linkgit:git[1] を参照して"
"ください。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:330
#, fuzzy
#| msgid ""
#| "If no further options are given, all reading options will read all of "
#| "these files that are available. If the global or the system-wide "
#| "configuration file are not available they will be ignored. If the "
#| "repository configuration file is not available or readable, 'git config' "
#| "will exit with a non-zero error code. However, in neither case will an "
#| "error message be issued."
msgid ""
"Options will be read from all of these files that are available. If the "
"global or the system-wide configuration files are missing or unreadable they "
"will be ignored. If the repository configuration file is missing or "
"unreadable, 'git config' will exit with a non-zero error code. An error "
"message is produced if the file is unreadable, but not if it is missing."
msgstr ""
"それ以上のオプションが指定されていない場合、すべての読み取りオプションは、使"
"用可能なこれらのファイルをすべて読み取ります。グローバルまたはシステム全体の"
"構成ファイルが使用できない場合、それらは無視されます。リポジトリ設定ファイル"
"が利用できないか読み取り可能でない場合、「git config」はゼロ以外のエラーコー"
"ドで終了します。 ただし、どちらの場合もエラーメッセージは発行されません。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:334
msgid ""
"The files are read in the order given above, with last value found taking "
"precedence over values read earlier.  When multiple values are taken then "
"all values of a key from all files will be used."
msgstr ""
"ファイルは上記の順序で読み取られ、「最後」に見つかった値が前に読み取った値よ"
"りも優先されます。なお、複数値(multiple values)を取得すると、すべてのファイル"
"のキーのすべての値が使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:338
#, fuzzy
#| msgid ""
#| "All writing options will per default write to the repository specific "
#| "configuration file. Note that this also affects options like `--replace-"
#| "all` and `--unset`. *'git config' will only ever change one file at a "
#| "time*."
msgid ""
"By default, options are only written to the repository specific "
"configuration file. Note that this also affects options like `--replace-all` "
"and `--unset`. *'git config' will only ever change one file at a time*."
msgstr ""
"すべての書き込みオプションは、デフォルトではリポジトリ固有の構成ファイルに書"
"き込みます。これは、 `--replace-all` や `--unset` などのオプションにも影響す"
"ることに注意してください。 ※ `git config` は一度に1つのファイルのみを変更しま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:343
msgid ""
"You can limit which configuration sources are read from or written to by "
"specifying the path of a file with the `--file` option, or by specifying a "
"configuration scope with `--system`, `--global`, `--local`, or `--"
"worktree`.  For more, see <<OPTIONS>> above."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-config.txt:346
#, no-wrap
msgid "SCOPES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:350
msgid ""
"Each configuration source falls within a configuration scope. The scopes are:"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:351
#, fuzzy, no-wrap
#| msgid "`--system`"
msgid "system"
msgstr "`--system`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:354
#, fuzzy, no-wrap
#| msgid "`--global`"
msgid "global"
msgstr "`--global`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:359
#, fuzzy, no-wrap
#| msgid "`--local`"
msgid "local"
msgstr "`--local`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:362
#, fuzzy, no-wrap
#| msgid "`--worktree`"
msgid "worktree"
msgstr "`--worktree`"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:365
#, no-wrap
msgid "command"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:368
msgid ""
"GIT_CONFIG_{COUNT,KEY,VALUE} environment variables (see <<ENVIRONMENT>> "
"below)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:370
msgid "the `-c` option"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:373
msgid ""
"With the exception of 'command', each scope corresponds to a command line "
"option: `--system`, `--global`, `--local`, `--worktree`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:378
msgid ""
"When reading options, specifying a scope will only read options from the "
"files within that scope. When writing options, specifying a scope will write "
"to the files within that scope (instead of the repository specific "
"configuration file). See <<OPTIONS>> above for a complete description."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:382
msgid ""
"Most configuration options are respected regardless of the scope it is "
"defined in, but some options are only respected in certain scopes. See the "
"respective option's documentation for the full details."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-config.txt:384
#, fuzzy, no-wrap
#| msgid "System-wide configuration file."
msgid "Protected configuration"
msgstr "システム全体(PC毎)の構成ファイル"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:389
msgid ""
"Protected configuration refers to the 'system', 'global', and 'command' "
"scopes.  For security reasons, certain options are only respected when they "
"are specified in protected configuration, and ignored otherwise."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:394
msgid ""
"Git treats these scopes as if they are controlled by the user or a trusted "
"administrator. This is because an attacker who controls these scopes can do "
"substantial harm without using Git, so it is assumed that the user's "
"environment protects these scopes against attackers."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-config.txt:397
#, no-wrap
msgid "ENVIRONMENT"
msgstr "ENVIRONMENT"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:399
#, no-wrap
msgid "GIT_CONFIG_GLOBAL"
msgstr "GIT_CONFIG_GLOBAL"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:400
#, no-wrap
msgid "GIT_CONFIG_SYSTEM"
msgstr "GIT_CONFIG_SYSTEM"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:403
msgid ""
"Take the configuration from the given files instead from global or system-"
"level configuration. See linkgit:git[1] for details."
msgstr ""
"グローバルまたはシステムレベルの構成からではなく、指定されたファイルから構成"
"を取得します。詳細については linkgit:git[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:404
#, no-wrap
msgid "GIT_CONFIG_NOSYSTEM"
msgstr "GIT_CONFIG_NOSYSTEM"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:407
msgid ""
"Whether to skip reading settings from the system-wide $(prefix)/etc/"
"gitconfig file. See linkgit:git[1] for details."
msgstr ""
"システム全体(PC毎)の $(prefix)/etc/gitconfig ファイルからの設定の読み取りをス"
"キップするかどうか。詳細については linkgit:git[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:410
#, no-wrap
msgid "GIT_CONFIG_COUNT"
msgstr "GIT_CONFIG_COUNT"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:411
#, no-wrap
msgid "GIT_CONFIG_KEY_<n>"
msgstr "GIT_CONFIG_KEY_<n>"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:412
#, no-wrap
msgid "GIT_CONFIG_VALUE_<n>"
msgstr "GIT_CONFIG_VALUE_<n>"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:421
msgid ""
"If GIT_CONFIG_COUNT is set to a positive number, all environment pairs "
"GIT_CONFIG_KEY_<n> and GIT_CONFIG_VALUE_<n> up to that number will be added "
"to the process's runtime configuration. The config pairs are zero-indexed. "
"Any missing key or value is treated as an error. An empty GIT_CONFIG_COUNT "
"is treated the same as GIT_CONFIG_COUNT=0, namely no pairs are processed. "
"These environment variables will override values in configuration files, but "
"will be overridden by any explicit options passed via `git -c`."
msgstr ""
"GIT_CONFIG_COUNTが正の数に設定されている場合、その数までのすべての環境ペア "
"GIT_CONFIG_KEY_<n> と GIT_CONFIG_VALUE_<n> がプロセスのランタイム構成に追加さ"
"れます。構成ペアはゼロインデックスです。キーまたは値が欠落している場合は、エ"
"ラーとして扱われます。空のGIT_CONFIG_COUNTは、GIT_CONFIG_COUNT=0と同じように"
"扱われます。つまり、ペアは処理されません。これらの環境変数は構成ファイルの値"
"をオーバーライドしますが、 `git -c` を介して渡された明示的なオプションによっ"
"てオーバーライドされます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:425
msgid ""
"This is useful for cases where you want to spawn multiple git commands with "
"a common configuration but cannot depend on a configuration file, for "
"example when writing scripts."
msgstr ""
"これは、共通の構成で複数のgitコマンドを生成したいが、スクリプトを作成する場合"
"など、構成ファイルに依存できない場合に役立ちます。"

#. type: Labeled list
#: ../Documentation-sedout/git-config.txt:426
#, no-wrap
msgid "GIT_CONFIG"
msgstr "GIT_CONFIG"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:432
msgid ""
"If no `--file` option is provided to `git config`, use the file given by "
"`GIT_CONFIG` as if it were provided via `--file`. This variable has no "
"effect on other Git commands, and is mostly for historical compatibility; "
"there is generally no reason to use it instead of the `--file` option."
msgstr ""
"`git config` に `--file` オプションが指定されていない場合は、 `--file` を介し"
"て提供されているかのように `GIT_CONFIG` によって指定されたファイルを使用しま"
"す。この変数は他のGitコマンドには影響せず、主に歴史的な互換性のためのもので"
"す。 通常、 `--file` オプションの代わりに使用する理由はありません。"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:435
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:438
msgid "Given a .git/config like this:"
msgstr "以下の .git/config が与えられているものとします:"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:445
#, no-wrap
msgid ""
"#\n"
"# This is the config file, and\n"
"# a '#' or ';' character indicates\n"
"# a comment\n"
"#\n"
msgstr ""
"#\n"
"# This is the config file, and\n"
"# a '#' or ';' character indicates\n"
"# a comment\n"
"#\n"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:450
#, no-wrap
msgid ""
"; core variables\n"
"[core]\n"
"\t; Don't trust file modes\n"
"\tfilemode = false\n"
msgstr ""
"; core variables\n"
"[core]\n"
"\t; Don't trust file modes\n"
"\tfilemode = false\n"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:455
#, no-wrap
msgid ""
"; Our diff algorithm\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"
msgstr ""
"; Our diff algorithm\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:460
#, no-wrap
msgid ""
"; Proxy settings\n"
"[core]\n"
"\tgitproxy=proxy-command for kernel.org\n"
"\tgitproxy=default-proxy ; for all the rest\n"
msgstr ""
"; Proxy settings\n"
"[core]\n"
"\tgitproxy=proxy-command for kernel.org\n"
"\tgitproxy=default-proxy ; for all the rest\n"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:467
#, no-wrap
msgid ""
"; HTTP\n"
"[http]\n"
"\tsslVerify\n"
"[http \"https://weak.example.com\"]\n"
"\tsslVerify = false\n"
"\tcookieFile = /tmp/cookie.txt\n"
msgstr ""
"; HTTP\n"
"[http]\n"
"\tsslVerify\n"
"[http \"https://weak.example.com\"]\n"
"\tsslVerify = false\n"
"\tcookieFile = /tmp/cookie.txt\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:470
msgid "you can set the filemode to true with"
msgstr "あなたは以下のようにしてfilemodeをtrueに設定できます"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:473
#, no-wrap
msgid "% git config core.filemode true\n"
msgstr "% git config core.filemode true\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:478
msgid ""
"The hypothetical proxy command entries actually have a postfix to discern "
"what URL they apply to. Here is how to change the entry for kernel.org to "
"\"ssh\"."
msgstr ""
"とある架空のプロキシコマンドエントリで、末尾が kernel.org である行を、 '\"ssh"
"\" for kernel.org' に置換するには"

# $ git config --add core.gitproxy '"proxy-command" for example.com'
# $ git config --add core.gitproxy '"http" for kernel.org'
# $ git config --add core.gitproxy '"https" for kernel.org'
#
# $ git config core.gitproxy
# "https" for kernel.org
#
# $ git config --get-all core.gitproxy
# "proxy-command" for example.com
# "http" for kernel.org
# "https" for kernel.org
#
# $ cat .git/config 
# [core]
#         repositoryformatversion = 0
#         filemode = true
#         bare = false
#         logallrefupdates = true
#         gitproxy = \"proxy-command\" for example.com
#         gitproxy = \"http\" for kernel.org
#         gitproxy = \"https\" for kernel.org
#
# $ git config core.gitproxy '"ssh" for kernel.org' 'for kernel.org$'
# warning: core.gitproxy has multiple values
#
# ※warningであるが、置換は実行されない
#
# $ git config --get-all core.gitproxy
# "proxy-command" for example.com
# "http" for kernel.org
# "https" for kernel.org
#
# $ git config --unset core.gitproxy '^"https"'
# $ git config --get-all core.gitproxy
# "proxy-command" for example.com
# "http" for kernel.org
#
# $ git config core.gitproxy '"ssh" for kernel.org' 'for kernel.org$'
#
# ※正確に1行に合致する場合は警告無しで実行される
#
# $ git config --get-all core.gitproxy
# "proxy-command" for example.com
# "ssh" for kernel.org
#
# $ git config -l
# core.editor=emacs
# merge.tool=meld
# user.name=kuma35
# user.email=sindobook@gmail.com
# alias.proof=log --grep=proofreading --pretty=oneline --name-only
# alias.unstage=reset HEAD --
# core.gitproxy="proxy-command" for example.com
# core.repositoryformatversion=0
# core.filemode=true
# core.bare=false
# core.logallrefupdates=true
# core.gitproxy="ssh" for kernel.org
#
# ※必ずしも連続しているとは限らない。定義順。よって grep するのが吉。
#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:481
#, no-wrap
msgid "% git config core.gitproxy '\"ssh\" for kernel.org' 'for kernel.org$'\n"
msgstr "% git config core.gitproxy '\"ssh\" for kernel.org' 'for kernel.org$'\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:484
msgid ""
"This makes sure that only the key/value pair for kernel.org is replaced."
msgstr "これにより、kernel.orgのキーと値のペアのみが置き換えられます。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:486
msgid "To delete the entry for renames, do"
msgstr "renamesのエントリを削除するには"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:489
#, no-wrap
msgid "% git config --unset diff.renames\n"
msgstr "% git config --unset diff.renames\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:493
msgid ""
"If you want to delete an entry for a multivar (like core.gitproxy above), "
"you have to provide a regex matching the value of exactly one line."
msgstr ""
"マルチ変数(multivar)(上記のcore.gitproxyなど)のエントリを削除する場合は、正確"
"に1行の値に一致する正規表現を指定する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:495
msgid "To query the value for a given key, do"
msgstr "特定のキーの値を照会するには、次のようにします。"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:498
#, no-wrap
msgid "% git config --get core.filemode\n"
msgstr "% git config --get core.filemode\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:501
msgid "or"
msgstr "または"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:504
#, no-wrap
msgid "% git config core.filemode\n"
msgstr "% git config core.filemode\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:507
msgid "or, to query a multivar:"
msgstr "また、マルチ変数(multivar)の照会は:"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:510
#, no-wrap
msgid "% git config --get core.gitproxy \"for kernel.org$\"\n"
msgstr "% git config --get core.gitproxy \"for kernel.org$\"\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:513
msgid "If you want to know all the values for a multivar, do:"
msgstr "マルチ変数のすべての値を知りたい場合は、次のようにします:"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:516
#, no-wrap
msgid "% git config --get-all core.gitproxy\n"
msgstr "% git config --get-all core.gitproxy\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:520
msgid ""
"If you like to live dangerously, you can replace *all* core.gitproxy by a "
"new one with"
msgstr ""
"あなたが危険極まりない人生を送りたい場合は、以下のようにして core.gitproxy の"
"「全て」を新しいものに置き換えることができます。"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:523
#, no-wrap
msgid "% git config --replace-all core.gitproxy ssh\n"
msgstr "% git config --replace-all core.gitproxy ssh\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:527
msgid ""
"However, if you really only want to replace the line for the default proxy, "
"i.e. the one without a \"for ...\" postfix, do something like this:"
msgstr ""
"しかし、あなたが本当にデフォルトプロキシの行、つまり「for ...」の接尾辞のない"
"行だけを置き換えたい場合は、次のようにします:"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:530
#, no-wrap
msgid "% git config core.gitproxy ssh '! for '\n"
msgstr "% git config core.gitproxy ssh '! for '\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:533
msgid "To actually match only values with an exclamation mark, you have to"
msgstr "感嘆符(`!`)と実際に一致させるには、以下のことを行う必要があります。"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:536
#, no-wrap
msgid "% git config section.key value '[!]'\n"
msgstr "% git config section.key value '[!]'\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:539
msgid "To add a new proxy, without altering any of the existing ones, use"
msgstr ""
"既存のプロキシを変更せずに新しいプロキシを追加するには、以下を使用します。"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:542
#, no-wrap
msgid "% git config --add core.gitproxy '\"proxy-command\" for example.com'\n"
msgstr "% git config --add core.gitproxy '\"proxy-command\" for example.com'\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:546
msgid ""
"An example to use customized color from the configuration in your script:"
msgstr "あなたのスクリプトで構成からカスタマイズされた色を使う例:"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:552
#, no-wrap
msgid ""
"#!/bin/sh\n"
"WS=$(git config --get-color color.diff.whitespace \"blue reverse\")\n"
"RESET=$(git config --get-color \"\" \"reset\")\n"
"echo \"${WS}your whitespace color or blue reverse${RESET}\"\n"
msgstr ""
"#!/bin/sh\n"
"WS=$(git config --get-color color.diff.whitespace \"blue reverse\")\n"
"RESET=$(git config --get-color \"\" \"reset\")\n"
"echo \"${WS}your whitespace color or blue reverse${RESET}\"\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:556
msgid ""
"For URLs in `https://weak.example.com`, `http.sslVerify` is set to false, "
"while it is set to `true` for all others:"
msgstr ""
"URL が `https://weak.example.com` の場合、 `http.sslVerify` はfalseに設定さ"
"れ、他のすべてのURLでは `true` に設定されます:"

# https://www.klab.com/jp/blog/tech/2015/1033121546.html
# ; HTTP
# [http]
#     sslVerify
# [http "https://weak.example.com"]
#     sslVerify = false
#     cookieFile = /tmp/cookie.txt
#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:565
#, no-wrap
msgid ""
"% git config --type=bool --get-urlmatch http.sslverify https://good.example.com\n"
"true\n"
"% git config --type=bool --get-urlmatch http.sslverify https://weak.example.com\n"
"false\n"
"% git config --get-urlmatch http https://weak.example.com\n"
"http.cookieFile /tmp/cookie.txt\n"
"http.sslverify false\n"
msgstr ""
"% git config --type=bool --get-urlmatch http.sslverify https://good.example.com\n"
"true\n"
"% git config --type=bool --get-urlmatch http.sslverify https://weak.example.com\n"
"false\n"
"% git config --get-urlmatch http https://weak.example.com\n"
"http.cookieFile /tmp/cookie.txt\n"
"http.sslverify false\n"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:570
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:575
msgid ""
"When using the deprecated `[section.subsection]` syntax, changing a value "
"will result in adding a multi-line key instead of a change, if the "
"subsection is given with at least one uppercase character. For example when "
"the config looks like"
msgstr ""
"非推奨の `[section.subsection]` 構文を使用する場合、サブセクションに少なくと"
"も1つの大文字が指定されていると、値を変更すると、変更ではなく複数行のキーが追"
"加されます。たとえば、設定が以下のようになっている場合"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:579
#, no-wrap
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
msgstr ""
"  [section.subsection]\n"
"    key = value1\n"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:582
msgid "and running `git config section.Subsection.key value2` will result in"
msgstr ""
"`git config section.Subsection.key value2` を実行すると、以下のようになりま"
"す。"

#. type: delimited block -
#: ../Documentation-sedout/git-config.txt:587
#, no-wrap
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
"    key = value2\n"
msgstr ""
"  [section.subsection]\n"
"    key = value1\n"
"    key = value2\n"

#. type: Title -
#: ../Documentation-sedout/git-config.txt:591
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-config.txt:592
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"

#~ msgid ""
#~ "Similar to `--local` except that `.git/config.worktree` is read from or "
#~ "written to if `extensions.worktreeConfig` is present. If not it's the "
#~ "same as `--local`."
#~ msgstr ""
#~ "`--local` と似ていますが、 `extensions.worktreeConfig` が存在する場合、 `."
#~ "git/config.worktree` が読み書きされる点が異なります。`extensions."
#~ "worktreeConfig` が存在しない場合は `--local` と同じです。"

#~ msgid ""
#~ "If not set explicitly with `--file`, there are four files where 'git "
#~ "config' will search for configuration options:"
#~ msgstr ""
#~ "`--file` で明示的に設定されていない場合、 'git config' が構成オプションを"
#~ "検索する以下の4つのファイルがあります:"

#~ msgid ""
#~ "Second user-specific configuration file. If $XDG_CONFIG_HOME is not set "
#~ "or empty, `$HOME/.config/git/config` will be used. Any single-valued "
#~ "variable set in this file will be overwritten by whatever is in `~/."
#~ "gitconfig`.  It is a good idea not to create this file if you sometimes "
#~ "use older versions of Git, as support for this file was added fairly "
#~ "recently."
#~ msgstr ""
#~ "2番目のユーザー固有の構成ファイルです。 $XDG_CONFIG_HOME が設定されていな"
#~ "いか空の場合 `$HOME/.config/git/config` が使用されます。このファイルに設定"
#~ "されている単一値の変数は、 `~/.gitconfig` にあるものによって上書きされま"
#~ "す。このファイルのサポートはごく最近追加されたため、古いバージョンのGitを"
#~ "使用することがある場合は、このファイルを作成しないことをお勧めします。"

#~ msgid ""
#~ "User-specific configuration file. Also called \"global\" configuration "
#~ "file."
#~ msgstr ""
#~ "ユーザー毎の構成ファイル。グローバル(global)構成ファイルとも呼ばれる。"

#~ msgid ""
#~ "You can override these rules using the `--global`, `--system`, `--local`, "
#~ "`--worktree`, and `--file` command-line options; see <<OPTIONS>> above."
#~ msgstr ""
#~ "これらのルールは、 `--global` と` --system` と `--local` と` --worktree` "
#~ "と `--file` コマンドラインオプションを使用してオーバーライドできます。上記"
#~ "の <<OPTIONS>> を参照してください。"
