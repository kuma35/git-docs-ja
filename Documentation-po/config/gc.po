# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation/config/gc.txt:1
#, no-wrap
msgid "gc.aggressiveDepth"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:6
msgid ""
"The depth parameter used in the delta compression algorithm used by 'git gc "
"--aggressive'.  This defaults to 50, which is the default for the `--depth` "
"option when `--aggressive` isn't in use."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:9
msgid ""
"See the documentation for the `--depth` option in linkgit:git-repack[1] for "
"more details."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:10
#, no-wrap
msgid "gc.aggressiveWindow"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:15
msgid ""
"The window size parameter used in the delta compression algorithm used by "
"'git gc --aggressive'.  This defaults to 250, which is a much more "
"aggressive window size than the default `--window` of 10."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:18
msgid ""
"See the documentation for the `--window` option in linkgit:git-repack[1] for "
"more details."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:19
#, no-wrap
msgid "gc.auto"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:25
msgid ""
"When there are approximately more than this many loose objects in the "
"repository, `git gc --auto` will pack them.  Some Porcelain commands use "
"this command to perform a light-weight garbage collection from time to "
"time.  The default value is 6700."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:30
msgid ""
"Setting this to 0 disables not only automatic packing based on the number of "
"loose objects, but any other heuristic `git gc --auto` will otherwise use to "
"determine if there's work to do, such as `gc.autoPackLimit`."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:31
#, no-wrap
msgid "gc.autoPackLimit"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:37
msgid ""
"When there are more than this many packs that are not marked with `*.keep` "
"file in the repository, `git gc --auto` consolidates them into one larger "
"pack.  The default value is 50.  Setting this to 0 disables it.  Setting "
"`gc.auto` to 0 will also disable this."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:40
msgid ""
"See the `gc.bigPackThreshold` configuration variable below. When in use, "
"it'll affect how the auto pack limit works."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:41
#, no-wrap
msgid "gc.autoDetach"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:44
msgid ""
"Make `git gc --auto` return immediately and run in background if the system "
"supports it. Default is true."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:45
#, no-wrap
msgid "gc.bigPackThreshold"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:51
msgid ""
"If non-zero, all packs larger than this limit are kept when `git gc` is "
"run. This is very similar to `--keep-largest-pack` except that all packs "
"that meet the threshold are kept, not just the largest pack. Defaults to "
"zero. Common unit suffixes of 'k', 'm', or 'g' are supported."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:56
msgid ""
"Note that if the number of kept packs is more than gc.autoPackLimit, this "
"configuration variable is ignored, all packs except the base pack will be "
"repacked. After this the number of packs should go below gc.autoPackLimit "
"and gc.bigPackThreshold should be respected again."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:61
msgid ""
"If the amount of memory estimated for `git repack` to run smoothly is not "
"available and `gc.bigPackThreshold` is not set, the largest pack will also "
"be excluded (this is the equivalent of running `git gc` with "
"`--keep-largest-pack`)."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:62
#, no-wrap
msgid "gc.writeCommitGraph"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:68
msgid ""
"If true, then gc will rewrite the commit-graph file when linkgit:git-gc[1] "
"is run. When using `git gc --auto` the commit-graph will be updated if "
"housekeeping is required. Default is true. See linkgit:git-commit-graph[1] "
"for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:69
#, no-wrap
msgid "gc.logExpiry"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:75
msgid ""
"If the file gc.log exists, then `git gc --auto` will print its content and "
"exit with status zero instead of running unless that file is more than "
"'gc.logExpiry' old.  Default is \"1.day\".  See `gc.pruneExpire` for more "
"ways to specify its value."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:76
#, no-wrap
msgid "gc.packRefs"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:83
msgid ""
"Running `git pack-refs` in a repository renders it unclonable by Git "
"versions prior to 1.5.1.2 over dumb transports such as HTTP.  This variable "
"determines whether 'git gc' runs `git pack-refs`. This can be set to "
"`notbare` to enable it within all non-bare repos or it can be set to a "
"boolean value.  The default is `true`."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:84
#, no-wrap
msgid "gc.pruneExpire"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:92
msgid ""
"When 'git gc' is run, it will call 'prune --expire 2.weeks.ago'.  Override "
"the grace period with this config variable.  The value \"now\" may be used "
"to disable this grace period and always prune unreachable objects "
"immediately, or \"never\" may be used to suppress pruning.  This feature "
"helps prevent corruption when 'git gc' runs concurrently with another "
"process writing to the repository; see the \"NOTES\" section of "
"linkgit:git-gc[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:93
#, no-wrap
msgid "gc.worktreePruneExpire"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:100
msgid ""
"When 'git gc' is run, it calls 'git worktree prune --expire 3.months.ago'.  "
"This config variable can be used to set a different grace period. The value "
"\"now\" may be used to disable the grace period and prune "
"`$GIT_DIR/worktrees` immediately, or \"never\" may be used to suppress "
"pruning."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:101
#, no-wrap
msgid "gc.reflogExpire"
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:102
#, no-wrap
msgid "gc.<pattern>.reflogExpire"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:109
msgid ""
"'git reflog expire' removes reflog entries older than this time; defaults to "
"90 days. The value \"now\" expires all entries immediately, and \"never\" "
"suppresses expiration altogether. With \"<pattern>\" (e.g.  \"refs/stash\") "
"in the middle the setting applies only to the refs that match the <pattern>."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:110
#, no-wrap
msgid "gc.reflogExpireUnreachable"
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:111
#, no-wrap
msgid "gc.<pattern>.reflogExpireUnreachable"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:119
msgid ""
"'git reflog expire' removes reflog entries older than this time and are not "
"reachable from the current tip; defaults to 30 days. The value \"now\" "
"expires all entries immediately, and \"never\" suppresses expiration "
"altogether.  With \"<pattern>\" (e.g. \"refs/stash\")  in the middle, the "
"setting applies only to the refs that match the <pattern>."
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:125
msgid ""
"These types of entries are generally created as a result of using `git "
"commit --amend` or `git rebase` and are the commits prior to the amend or "
"rebase occurring.  Since these changes are not part of the current project "
"most users will want to expire them sooner, which is why the default is more "
"aggressive than `gc.reflogExpire`."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:126
#, no-wrap
msgid "gc.rerereResolved"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:131
msgid ""
"Records of conflicted merge you resolved earlier are kept for this many days "
"when 'git rerere gc' is run.  You can also use more human-readable "
"\"1.month.ago\", etc.  The default is 60 days.  See linkgit:git-rerere[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/gc.txt:132
#, no-wrap
msgid "gc.rerereUnresolved"
msgstr ""

#. type: Plain text
#: ../Documentation/config/gc.txt:136
msgid ""
"Records of conflicted merge you have not resolved are kept for this many "
"days when 'git rerere gc' is run.  You can also use more human-readable "
"\"1.month.ago\", etc.  The default is 15 days.  See linkgit:git-rerere[1]."
msgstr ""
