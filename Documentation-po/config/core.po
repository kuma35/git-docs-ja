# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 05:36+0900\n"
"PO-Revision-Date: 2022-01-11 15:53+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:1
#, no-wrap
msgid "core.fileMode"
msgstr "core.fileMode"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:4
msgid ""
"Tells Git if the executable bit of files in the working tree is to be "
"honored."
msgstr "作業ツリー内のファイルの実行可能ビットを尊重するかどうかをGitに通知します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:11
msgid ""
"Some filesystems lose the executable bit when a file that is marked as "
"executable is checked out, or checks out a non-executable file with "
"executable bit on.  linkgit:git-clone[1] or linkgit:git-init[1] probe the "
"filesystem to see if it handles the executable bit correctly and this "
"variable is automatically set as necessary."
msgstr "一部のファイルシステムでは、実行可能としてマークされたファイルがチェックアウトされるか、実行可能ビットがオンになっている実行不可能なファイルをチェックアウトすると、実行可能ビットを失います。 linkgit:git-clone[1] または linkgit:git-init[1] は、ファイルシステムを調査して、実行可能ビットを正しく処理し、この変数が必要に応じて自動的に設定されるかどうかを確認します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:20
msgid ""
"A repository, however, may be on a filesystem that handles the filemode "
"correctly, and this variable is set to 'true' when created, but later may be "
"made accessible from another environment that loses the filemode (e.g. "
"exporting ext4 via CIFS mount, visiting a Cygwin created repository with Git "
"for Windows or Eclipse).  In such a case it may be necessary to set this "
"variable to 'false'.  See linkgit:git-update-index[1]."
msgstr "リポジトリはファイルモードを正しく処理するファイルシステム上にある可能性があり、この変数は作成時に「true」に設定されますが、後でファイルモードを失う別の環境からアクセスできるようになる可能性があります(たとえば、CIFSマウントを介したext4のエクスポート。CygwinがGit for WindowsまたはEclipseでリポジトリを作成た時など)。このような場合、この変数を「false」に設定する必要がある場合があります。 linkgit:git-update-index[1] を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:22
msgid ""
"The default is true (when core.filemode is not specified in the config file)."
msgstr "(設定ファイルでcore.filemodeが指定されていない場合、)デフォルトはtrueです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:23
#, no-wrap
msgid "core.hideDotFiles"
msgstr "core.hideDotFiles"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:28
msgid ""
"(Windows-only) If true, mark newly-created directories and files whose name "
"starts with a dot as hidden.  If 'dotGitOnly', only the `.git/` directory is "
"hidden, but no other files starting with a dot.  The default mode is "
"'dotGitOnly'."
msgstr "(Windowsのみ)trueの場合、名前がドットで始まる、新しく作成されたディレクトリと新しく作成されたファイルを非表示としてマークします。 'dotGitOnly' の場合、  `.git/` ディレクトリのみが非表示になり、ドットで始まる他のファイルは非表示になりません。デフォルトのモードは「dotGitOnly」です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:29
#, no-wrap
msgid "core.ignoreCase"
msgstr "core.ignoreCase"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:36
msgid ""
"Internal variable which enables various workarounds to enable Git to work "
"better on filesystems that are not case sensitive, like APFS, HFS+, FAT, "
"NTFS, etc. For example, if a directory listing finds \"makefile\" when Git "
"expects \"Makefile\", Git will assume it is really the same file, and "
"continue to remember it as \"Makefile\"."
msgstr "APFS、HFS+、FAT、NTFSなどの大文字と小文字を区別しないファイルシステムでGitをより適切に機能させるためのさまざまな回避策を可能にする内部変数。たとえば、Gitが「Makefile」を予期しているときにディレクトリリストで「makefile」が見つかった場合、Git それは実際には同じファイルであると想定し、「Makefile」として記憶し続けます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:40
msgid ""
"The default is false, except linkgit:git-clone[1] or linkgit:git-init[1] "
"will probe and set core.ignoreCase true if appropriate when the repository "
"is created."
msgstr "デフォルトはfalseですが、 linkgit:git-clone[1] または linkgit:git-init[1] は、リポジトリの作成時に必要に応じてcore.ignoreCaseを調査してtrueに設定します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:43
msgid ""
"Git relies on the proper configuration of this variable for your operating "
"and file system. Modifying this value may result in unexpected behavior."
msgstr "あなたのオペレーティングシステムとファイルシステムに関して、Gitは、この変数の適切な構成に依存しています。この値を変更すると、予期しない動作が発生する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:44
#, no-wrap
msgid "core.precomposeUnicode"
msgstr "core.precomposeUnicode"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:52
msgid ""
"This option is only used by Mac OS implementation of Git.  When core."
"precomposeUnicode=true, Git reverts the unicode decomposition of filenames "
"done by Mac OS. This is useful when sharing a repository between Mac OS and "
"Linux or Windows.  (Git for Windows 1.7.10 or higher is needed, or Git under "
"cygwin 1.7).  When false, file names are handled fully transparent by Git, "
"which is backward compatible with older versions of Git."
msgstr "このオプションは、GitのMacOS実装でのみ使用されます。 core.precomposeUnicode=true の場合、GitはMacOSによって行われたファイル名のUnicode分解(unicode decomposition)を元に戻します。これは、MacOSとLinuxまたはWindowsの間でリポジトリを共有する場合に便利です。 (Git for Windows 1.7.10以降、または Git under cygwin 1.7 が必要です)。 falseの場合、ファイル名はGitによって完全に透過的に処理されます。これは、古いバージョンのGitとの下位互換性があります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:53
#, no-wrap
msgid "core.protectHFS"
msgstr "core.protectHFS"

# https://ja.wikipedia.org/wiki/HFS_Plus
# HFS+（Hierarchical File System Plus）またはMac OS拡張フォーマットは、
# Classic Mac OS及びmacOSで利用されていた主要な32ビットファイルシステムである。
# このファイルシステムはiPodでも使用されていた。
# 開発中、Appleはこのファイルシステムを "Sequoia" と名付けていた[2]。
# HFSからを代替する形で導入されAPFSによって代替された。
#. type: Plain text
#: ../Documentation-sedout/config/core.txt:57
msgid ""
"If set to true, do not allow checkout of paths that would be considered "
"equivalent to `.git` on an HFS+ filesystem.  Defaults to `true` on Mac OS, "
"and `false` elsewhere."
msgstr "trueに設定されている場合、 HFS+ ファイルシステムで `.git` と同等と見なされるパスのチェックアウトを許可しないでください。デフォルトはMacOSでは `true` 、それ以外の場合は `false` です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:58
#, no-wrap
msgid "core.protectNTFS"
msgstr "core.protectNTFS"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:63
msgid ""
"If set to true, do not allow checkout of paths that would cause problems "
"with the NTFS filesystem, e.g. conflict with 8.3 \"short\" names.  Defaults "
"to `true` on Windows, and `false` elsewhere."
msgstr "trueに設定されている場合、NTFSファイルシステムで問題を引き起こす可能性のあるパスのチェックアウトを許可しないでください。 例えば、 8.3 の「短い」名前と競合します。デフォルトは、Windowsでは「true」、それ以外の場合は「false」です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:64
#, no-wrap
msgid "core.fsmonitor"
msgstr "core.fsmonitor"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:70
msgid ""
"If set, the value of this variable is used as a command which will identify "
"all files that may have changed since the requested date/time. This "
"information is used to speed up git by avoiding unnecessary processing of "
"files that have not changed.  See the \"fsmonitor-watchman\" section of "
"linkgit:githooks[5]."
msgstr "設定されている場合、この変数の値は、要求された日時以降に変更された可能性のあるすべてのファイルを識別するコマンドとして使用されます。この情報は、変更されていないファイルの不要な処理を回避することにより、gitを高速化するために使用されます。 linkgit:githooks[5] の「fsmonitor-watchman」セクションを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:71
#, no-wrap
msgid "core.fsmonitorHookVersion"
msgstr "core.fsmonitorHookVersion"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:81
msgid ""
"Sets the version of hook that is to be used when calling fsmonitor.  There "
"are currently versions 1 and 2. When this is not set, version 2 will be "
"tried first and if it fails then version 1 will be tried. Version 1 uses a "
"timestamp as input to determine which files have changes since that time but "
"some monitors like watchman have race conditions when used with a "
"timestamp.  Version 2 uses an opaque string so that the monitor can return "
"something that can be used to determine what files have changed without race "
"conditions."
msgstr "fsmonitorを呼び出すときに使用されるフックのバージョンを設定します。現在、バージョン1と2があります。これが設定されていない場合、バージョン2が最初に試行され、失敗した場合はバージョン1が試行されます。 バージョン1は、入力としてtimpstampを使用して、それ以降に変更があったファイルを判別しますが、watchmanなどの一部のモニターでは、timestampを使用すると競合状態になります。バージョン2はopaque stringを使用しているため、モニターは競合状態なしで変更されたファイルを判別するために使用できるものを返すことができます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:82
#, no-wrap
msgid "core.trustctime"
msgstr "core.trustctime"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:88
msgid ""
"If false, the ctime differences between the index and the working tree are "
"ignored; useful when the inode change time is regularly modified by "
"something outside Git (file system crawlers and some backup systems).  See "
"linkgit:git-update-index[1]. True by default."
msgstr "falseの場合、インデックスと作業ツリー間のctimeの違いは無視されます。iノードの変更時刻がGitの外部の何か(ファイルシステムクローラーおよび一部のバックアップシステム)によって定期的に変更される場合に役立ちます。 linkgit:git-update-index[1] を参照してください。デフォルトではtrueです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:89
#, no-wrap
msgid "core.splitIndex"
msgstr "core.splitIndex"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:92
msgid ""
"If true, the split-index feature of the index will be used.  See linkgit:git-"
"update-index[1]. False by default."
msgstr "trueの場合、インデックスの分割インデックス機能が使用されます。 linkgit:git-update-index[1] を参照してください。 デフォルトではfalseです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:93
#, no-wrap
msgid "core.untrackedCache"
msgstr "core.untrackedCache"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:103
msgid ""
"Determines what to do about the untracked cache feature of the index. It "
"will be kept, if this variable is unset or set to `keep`. It will "
"automatically be added if set to `true`. And it will automatically be "
"removed, if set to `false`. Before setting it to `true`, you should check "
"that mtime is working properly on your system.  See linkgit:git-update-"
"index[1]. `keep` by default, unless `feature.manyFiles` is enabled which "
"sets this setting to `true` by default."
msgstr "インデックスの追跡されていないモノのキャッシュ機能をどうするかを決定します。この変数が設定されていない(unset)か、 `keep` に設定されている場合、キャッシュが保持されます。 `true`に設定すると、自動的に追加されます。 また、 `false` に設定すると、自動的に削除されます。 `true` に設定する前に、mtimeがシステムで正しく機能していることを確認する必要があります。 linkgit:git-update-index[1] を参照してください。 この設定をデフォルトで `true` に設定する `feature.manyFiles` が有効になっていない限り、デフォルトは `keep` です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:104
#, no-wrap
msgid "core.checkStat"
msgstr "core.checkStat"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:114
msgid ""
"When missing or is set to `default`, many fields in the stat structure are "
"checked to detect if a file has been modified since Git looked at it.  When "
"this configuration variable is set to `minimal`, sub-second part of mtime "
"and ctime, the uid and gid of the owner of the file, the inode number (and "
"the device number, if Git was compiled to use it), are excluded from the "
"check among these fields, leaving only the whole-second part of mtime (and "
"ctime, if `core.trustCtime` is set) and the filesize to be checked."
msgstr "core.checkStat が設定されていないか `default` に設定されている場合、Gitがファイルを調べてからファイルが変更されたかどうかを検出するために、stat構造体の多くのフィールドがチェックされます。この構成変数が `minimal` に設定されている場合、mtimeとctimeの1秒未満の部分、ファイルの所有者のuidとgid、iノード番号(およびGitがそれを使用するようにコンパイルされている場合はデバイス番号も)はチェック対象から除外され、mtimeの2分の1の部分(および `core.trustCtime` が設定されている場合はctime)とファイルサイズチェックのみがチェック対象として残ります。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:119
msgid ""
"There are implementations of Git that do not leave usable values in some "
"fields (e.g. JGit); by excluding these fields from the comparison, the "
"`minimal` mode may help interoperability when the same repository is used by "
"these other systems at the same time."
msgstr "(JGitなど)一部のフィールドに使用可能な値を残さないGitの実装があります。これらのフィールドを比較から除外することにより、 `minimal` モードは、同じリポジトリがこれらの他のシステムによって同時に使用される場合の相互運用性に役立つ可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:120
#, no-wrap
msgid "core.quotePath"
msgstr "core.quotePath"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:134
msgid ""
"Commands that output paths (e.g. 'ls-files', 'diff'), will quote \"unusual\" "
"characters in the pathname by enclosing the pathname in double-quotes and "
"escaping those characters with backslashes in the same way C escapes control "
"characters (e.g.  `\\t` for TAB, `\\n` for LF, `\\\\` for backslash) or "
"bytes with values larger than 0x80 (e.g. octal `\\302\\265` for \"micro\" in "
"UTF-8).  If this variable is set to false, bytes higher than 0x80 are not "
"considered \"unusual\" any more. Double-quotes, backslash and control "
"characters are always escaped regardless of the setting of this variable.  A "
"simple space character is not considered \"unusual\".  Many commands can "
"output pathnames completely verbatim using the `-z` option. The default "
"value is true."
msgstr "パスを出力するコマンド(例: 'ls-files' 、 'diff')は、パス名を二重引用符で囲み(`\"...\"`)、Cが制御文字をエスケープするのと同じ方法でそれらの文字をバックスラッシュ(`\\`)でエスケープすることにより、パス名の「異常な」文字をクォートします(例: TABの場合は `\\t` 、LFの場合は `\\n` 、バックスラッシュの場合は `\\\\` )、または0x80より大きい値のバイト(たとえば、UTF-8の \"micro\" の場合は8進数 `\\302\\265`)。この変数がfalseに設定されている場合、0x80を超えるバイトは「異常」とは見なされなくなります。この変数の設定に関係なく、二重引用符(`\"`)、バックスラッシュ(`\\`)、および制御文字は常にエスケープされます。単純なスペース文字は「異常」とは見なされません。多くのコマンドは、 `-z` オプションを使用してパス名を完全にそのままで出力できます。デフォルト値はtrueです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:135
#, no-wrap
msgid "core.eol"
msgstr "core.eol"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:145
msgid ""
"Sets the line ending type to use in the working directory for files that are "
"marked as text (either by having the `text` attribute set, or by having "
"`text=auto` and Git auto-detecting the contents as text).  Alternatives are "
"'lf', 'crlf' and 'native', which uses the platform's native line ending.  "
"The default value is `native`.  See linkgit:gitattributes[5] for more "
"information on end-of-line conversion. Note that this value is ignored if "
"`core.autocrlf` is set to `true` or `input`."
msgstr "作業ディレクトリ内で、( `text` 属性を設定するか、`text=auto` とGitがコンテンツをテキストとして自動検出することにより)テキストとしてマークされたファイルが使用する行末タイプを設定します。 代替手段は、 `lf` と  `crlf` と プラットフォームの生来の行末を使用する `native` があります。デフォルト値は `native` です。行末変換の詳細については、 linkgit:gitattributes[5] を参照してください。注意: `core.autocrlf` が `true` または `input` に設定されている場合、この値は無視されることに注意してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:146
#, no-wrap
msgid "core.safecrlf"
msgstr "core.safecrlf"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:156
msgid ""
"If true, makes Git check if converting `CRLF` is reversible when end-of-line "
"conversion is active.  Git will verify if a command modifies a file in the "
"work tree either directly or indirectly.  For example, committing a file "
"followed by checking out the same file should yield the original file in the "
"work tree.  If this is not the case for the current setting of `core."
"autocrlf`, Git will reject the file.  The variable can be set to \"warn\", "
"in which case Git will only warn about an irreversible conversion but "
"continue the operation."
msgstr "trueの場合、行末変換がアクティブなときに `CRLF` の変換が可逆的かどうかをGitにチェックさせます。 Gitは、コマンドが作業ツリー内のファイルを直接または間接的に変更するかどうかを確認します。たとえば、あるファイルをコミットしてから同じファイルをチェックアウトすると、作業ツリーに元のファイルが生成されます。この操作が `core.autocrlf` の現在の設定に当てはまらない場合、Gitはそのファイルを拒否します。変数を `warn` に設定でき、その場合、Gitは不可逆的な変換についてのみ警告はしますが、操作を続行します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:165
msgid ""
"CRLF conversion bears a slight chance of corrupting data.  When it is "
"enabled, Git will convert CRLF to LF during commit and LF to CRLF during "
"checkout.  A file that contains a mixture of LF and CRLF before the commit "
"cannot be recreated by Git.  For text files this is the right thing to do: "
"it corrects line endings such that we have only LF line endings in the "
"repository.  But for binary files that are accidentally classified as text "
"the conversion can corrupt data."
msgstr "CRLF変換には、データが破損する可能性がわずかにあります。有効にすると、Gitはコミット時にCRLFをLFに変換し、チェックアウト時にLFをCRLFに変換します。コミット前にLFとCRLFが混在しているファイルは、Gitでは復元できません。リポジトリにLF行末のみが含まれるように行末を修正するのは、テキストファイルの場合は正しい操作です。しかし、誤ってテキストとして分類されたバイナリファイルの場合、変換によってデータが破損する可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:172
msgid ""
"If you recognize such corruption early you can easily fix it by setting the "
"conversion type explicitly in .gitattributes.  Right after committing you "
"still have the original file in your work tree and this file is not yet "
"corrupted.  You can explicitly tell Git that this file is binary and Git "
"will handle the file appropriately."
msgstr "あなたがこのような破損を早期に認識した場合は、 .gitattributes で変換タイプを明示的に設定することで簡単に修正できます。コミットした直後は、作業ツリーに元のファイルが残っており、このファイルはまだ破損していません。 このファイルはバイナリファイルなのだからと、Gitがファイルを適切に処理することをGitに明示的に伝えることができます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:179
msgid ""
"Unfortunately, the desired effect of cleaning up text files with mixed line "
"endings and the undesired effect of corrupting binary files cannot be "
"distinguished.  In both cases CRLFs are removed in an irreversible way.  For "
"text files this is the right thing to do because CRLFs are line endings, "
"while for binary files converting CRLFs corrupts data."
msgstr "残念ながら、行末が混在するテキストファイルをクリーンアップするという望ましい効果と、バイナリファイルを破損するという望ましくない効果を区別することはできません。どちらの場合も、CRLFは元に戻せない方法で削除されます。テキストファイルの場合、CRLFは行末であるため、これは正しいことですが、バイナリファイルの場合、CRLFを変換するとデータが破損します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:190
msgid ""
"Note, this safety check does not mean that a checkout will generate a file "
"identical to the original file for a different setting of `core.eol` and "
"`core.autocrlf`, but only for the current one.  For example, a text file "
"with `LF` would be accepted with `core.eol=lf` and could later be checked "
"out with `core.eol=crlf`, in which case the resulting file would contain "
"`CRLF`, although the original file contained `LF`.  However, in both work "
"trees the line endings would be consistent, that is either all `LF` or all "
"`CRLF`, but never mixed.  A file with mixed line endings would be reported "
"by the `core.safecrlf` mechanism."
msgstr "注意: この安全性チェックは、チェックアウトによって、 `core.eol` と `core.autocrlf` の異なる設定に対して元のファイルと同じファイルが生成されることを意味するのではなく、現在のファイルに対してのみ生成されることに注意してください。 たとえば、 `LF` を含むテキストファイルは `core.eol=lf` で受け入れられ、後で ` core.eol=crlf` でチェックアウトできます。この場合、結果のファイルには `CRLF` が含まれますが、 元のファイルには `LF`が含まれていました。 ただし、両方の作業ツリーで、行末は一貫しています。つまり、すべて `LF` または、 すべて `CRLF` のいずれかですが、混合されることはありません。行末が混在するファイルは、 `core.safecrlf` メカニズムによって報告されます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:191
#, no-wrap
msgid "core.autocrlf"
msgstr "core.autocrlf"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:198
msgid ""
"Setting this variable to \"true\" is the same as setting the `text` "
"attribute to \"auto\" on all files and core.eol to \"crlf\".  Set to true if "
"you want to have `CRLF` line endings in your working directory and the "
"repository has LF line endings.  This variable can be set to 'input', in "
"which case no output conversion is performed."
msgstr "この変数を「true」に設定することは、すべてのファイルで「text」属性を「auto」に設定し、core.eolを「crlf」に設定することと同じです。 作業ディレクトリに `CRLF` 行末があり、リポジトリにLF行末がある場合は、trueに設定します。 この変数は「input」に設定できます。この場合、出力変換は実行されません。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:199
#, no-wrap
msgid "core.checkRoundtripEncoding"
msgstr "core.checkRoundtripEncoding"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:204
msgid ""
"A comma and/or whitespace separated list of encodings that Git performs "
"UTF-8 round trip checks on if they are used in an `working-tree-encoding` "
"attribute (see linkgit:gitattributes[5]).  The default value is `SHIFT-JIS`."
msgstr "`working-tree-encoding` 属性で使用された場合に Git が UTF-8 のラウンドトリップチェックを行うエンコーディングの、カンマや空白で区切られたリスト(linkgit:gitattributes[5] を参照)。デフォルト値は `SHIFT-JIS` です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:205
#, no-wrap
msgid "core.symlinks"
msgstr "core.symlinks"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:211
msgid ""
"If false, symbolic links are checked out as small plain files that contain "
"the link text. linkgit:git-update-index[1] and linkgit:git-add[1] will not "
"change the recorded type to regular file. Useful on filesystems like FAT "
"that do not support symbolic links."
msgstr "falseの場合、シンボリックリンクは、リンクテキストを含む小さなプレーンファイルとしてチェックアウトされます。 linkgit:git-update-index[1] と linkgit:git-add[1] は、記録されたタイプを通常のファイルに変更しません。シンボリックリンクをサポートしないFATのようなファイルシステムで役立ちます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:215
msgid ""
"The default is true, except linkgit:git-clone[1] or linkgit:git-init[1] will "
"probe and set core.symlinks false if appropriate when the repository is "
"created."
msgstr "デフォルトは true ですが、linkgit:git-clone[1] や linkgit:git-init[1] はリポジトリの作成時に core.symlinks を調査して必要に応じて core.symlinks を false に設定します。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:216
#, no-wrap
msgid "core.gitProxy"
msgstr "core.gitProxy"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:224
msgid ""
"A \"proxy command\" to execute (as 'command host port') instead of "
"establishing direct connection to the remote server when using the Git "
"protocol for fetching. If the variable value is in the \"COMMAND for DOMAIN"
"\" format, the command is applied only on hostnames ending with the "
"specified domain string. This variable may be set multiple times and is "
"matched in the given order; the first match wins."
msgstr "フェッチにGitプロトコルを使用する場合、リモートサーバーへの直接接続を確立する代わりに(「コマンドホストポート」として)実行する「プロキシコマンド」。変数値が「COMMAND for DOMAIN」形式の場合、コマンドは、指定されたドメイン文字列で終わるホスト名にのみ適用されます。この変数は複数回設定でき、指定された順序で照合されます。最初にマッチしたものが採用されます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:228
msgid ""
"Can be overridden by the `GIT_PROXY_COMMAND` environment variable (which "
"always applies universally, without the special \"for\" handling)."
msgstr "`GIT_PROXY_COMMAND` 環境変数(特別な「for」処理なしで常に普遍的に適用されます)によってオーバーライドできます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:233
msgid ""
"The special string `none` can be used as the proxy command to specify that "
"no proxy be used for a given domain pattern.  This is useful for excluding "
"servers inside a firewall from proxy use, while defaulting to a common proxy "
"for external domains."
msgstr "特別な文字列 `none` をプロキシコマンドとして使用して、特定のドメインパターンにプロキシを使用しないように指定できます。これは、ファイアウォール内のサーバをプロキシの使用から除外する一方で、外部ドメインには共通のプロキシをデフォルトで使用する場合に便利です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:234
#, no-wrap
msgid "core.sshCommand"
msgstr "core.sshCommand"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:240
msgid ""
"If this variable is set, `git fetch` and `git push` will use the specified "
"command instead of `ssh` when they need to connect to a remote system. The "
"command is in the same form as the `GIT_SSH_COMMAND` environment variable "
"and is overridden when the environment variable is set."
msgstr "この変数が設定されている場合、 `git fetch` と `git push` は、リモートシステムに接続する必要があるときに、 `ssh` の代わりに指定したコマンドを使用します。このコマンドは `GIT_SSH_COMMAND` 環境変数と同じ形式であり、環境変数が設定されると上書きされます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:241
#, no-wrap
msgid "core.ignoreStat"
msgstr "core.ignoreStat"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:245
msgid ""
"If true, Git will avoid using lstat() calls to detect if files have changed "
"by setting the \"assume-unchanged\" bit for those tracked files which it has "
"updated identically in both the index and working tree."
msgstr "trueの場合、Gitは lstat() 呼び出しを使用して、インデックスと作業ツリーの両方で同じように更新された追跡ファイルの「assume-unchanged」ビットを設定することにより、ファイルが変更されたかどうかを検出することを回避します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:250
msgid ""
"When files are modified outside of Git, the user will need to stage the "
"modified files explicitly (e.g. see 'Examples' section in linkgit:git-update-"
"index[1]).  Git will not normally detect changes to those files."
msgstr "ファイルがGitの外部で変更される場合、ユーザーは変更されたファイルを明示的にステージングする必要があります(たとえば、 linkgit:git-update-index[1] の「Examples」セクションを参照)。 Gitは通常、これらのファイルへの変更を検出しません。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:253
msgid ""
"This is useful on systems where lstat() calls are very slow, such as CIFS/"
"Microsoft Windows."
msgstr "これは、 CIFS/Microsoft Windows など、 lstat() 呼び出しが非常に遅いシステムで役立ちます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:255
msgid "False by default."
msgstr "false がデフォルトです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:256
#, no-wrap
msgid "core.preferSymlinkRefs"
msgstr "core.preferSymlinkRefs"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:261
msgid ""
"Instead of the default \"symref\" format for HEAD and other symbolic "
"reference files, use symbolic links.  This is sometimes needed to work with "
"old scripts that expect HEAD to be a symbolic link."
msgstr "HEADおよびその他のシンボリック参照ファイルのデフォルトの「symref」形式の代わりに、シンボリックリンクを使用します。これは、HEADがシンボリックリンクであることを期待する古いスクリプトを操作するために必要になる場合があります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:262
#, no-wrap
msgid "core.alternateRefsCommand"
msgstr "core.alternateRefsCommand"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:268
msgid ""
"When advertising tips of available history from an alternate, use the shell "
"to execute the specified command instead of linkgit:git-for-each-ref[1]. The "
"first argument is the absolute path of the alternate. Output must contain "
"one hex object id per line (i.e., the same as produced by `git for-each-ref "
"--format='%(objectname)'`)."
msgstr "alternateから利用可能な履歴のヒントをアドバタイズする場合は、 linkgit:git-for-each-ref[1] の代わりに、シェルを使用して指定されたコマンドを実行します。最初の引数は、alternateの絶対パスです。出力には、1行に1つの16進オブジェクトIDが含まれている必要があります(つまり、 `git for-each-ref --format='%(objectname)'` によって生成されたものと同じある必要があります)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:272
msgid ""
"Note that you cannot generally put `git for-each-ref` directly into the "
"config value, as it does not take a repository path as an argument (but you "
"can wrap the command above in a shell script)."
msgstr "注意: 通常、 あなたは `git for-each-ref` をconfig値に直接入れることはできません。これは、リポジトリパスを引数として受け取らないためです(ただし、あなたは上記のコマンドをシェルスクリプトでラップすることはできます)。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:273
#, no-wrap
msgid "core.alternateRefsPrefixes"
msgstr "core.alternateRefsPrefixes"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:279
msgid ""
"When listing references from an alternate, list only references that begin "
"with the given prefix. Prefixes match as if they were given as arguments to "
"linkgit:git-for-each-ref[1]. To list multiple prefixes, separate them with "
"whitespace. If `core.alternateRefsCommand` is set, setting `core."
"alternateRefsPrefixes` has no effect."
msgstr "alternateからの参照を一覧表示する場合は、指定のプレフィックスで始まる参照のみを一覧表示します。プレフィックスは linkgit:git-for-each-ref[1] への引数として指定されたかのようにマッチングします。複数のプレフィックスを一覧表示するには、それらを空白で区切ります。 `core.alternateRefsCommand` が設定されている場合、 `core.alternateRefsPrefixes` を設定しても効果ありません。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:280
#, no-wrap
msgid "core.bare"
msgstr "core.bare"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:285
msgid ""
"If true this repository is assumed to be 'bare' and has no working directory "
"associated with it.  If this is the case a number of commands that require a "
"working directory will be disabled, such as linkgit:git-add[1] or linkgit:"
"git-merge[1]."
msgstr "trueの場合、このリポジトリは「ベア」(bare;ベアリポジトリ)であると見なされ、作業ディレクトリは関連付けられていません。この場合、 linkgit:git-add[1] や linkgit:git-merge[1] など、作業ディレクトリを必要とする多くのコマンドが無効になります。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:290
msgid ""
"This setting is automatically guessed by linkgit:git-clone[1] or linkgit:git-"
"init[1] when the repository was created.  By default a repository that ends "
"in \"/.git\" is assumed to be not bare (bare = false), while all other "
"repositories are assumed to be bare (bare"
msgstr "この設定は、リポジトリの作成時に linkgit:git-clone[1] または linkgit:git-init[1] によって自動的に推測されます。 デフォルトでは、 `/.git` で終わるリポジトリはベアではないと見なされ(bare = false)、他のすべてのリポジトリはベアであると見なされます(bare "

# 行頭に ~ が来てしまっているので po4a が type: Title = としてしまっているが分割ミスである。
# po4a-translate後に = を補うので、それ前提で訳語からは = を外して記述する。
#
# 原文:
# false), while all other repositories are assumed to be bare (bare
# = true).
#. type: Title =
#: ../Documentation-sedout/config/core.txt:290
#, no-wrap
msgid "true)."
msgstr "true)。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:292
#, no-wrap
msgid "core.worktree"
msgstr "core.worktree"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:305
msgid ""
"Set the path to the root of the working tree.  If `GIT_COMMON_DIR` "
"environment variable is set, core.worktree is ignored and not used for "
"determining the root of working tree.  This can be overridden by the "
"`GIT_WORK_TREE` environment variable and the `--work-tree` command-line "
"option.  The value can be an absolute path or relative to the path to the ."
"git directory, which is either specified by --git-dir or GIT_DIR, or "
"automatically discovered.  If --git-dir or GIT_DIR is specified but none of "
"--work-tree, GIT_WORK_TREE and core.worktree is specified, the current "
"working directory is regarded as the top level of your working tree."
msgstr "作業ツリーのルートへのパスを設定します。 `GIT_COMMON_DIR` 環境変数が設定されている場合、 core.worktree は無視され、作業ツリーのルートを決定するために使用されません。core.worktree は `GIT_WORK_TREE` 環境変数と `--work-tree` コマンドラインオプションで上書きできます。値は、絶対パスまたは `.git` ディレクトリへの相対パスにすることができます。これは、 `--git-dir` または GIT_DIR 環境変数で指定されるか、`--git-dir` や GIT_DIR 環境変数の指定が無い場合は自動的に検出されます。`--work-tree` と GIT_WORK_TREE と core.worktree のいずれも指定されていない場合、現在の作業ディレクトリが作業ツリーの最上位と見なされます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:315
msgid ""
"Note that this variable is honored even when set in a configuration file in "
"a \".git\" subdirectory of a directory and its value differs from the latter "
"directory (e.g. \"/path/to/.git/config\" has core.worktree set to \"/"
"different/path\"), which is most likely a misconfiguration.  Running Git "
"commands in the \"/path/to\" directory will still use \"/different/path\" as "
"the root of the work tree and can cause confusion unless you know what you "
"are doing (e.g. you are creating a read-only snapshot of the same index to a "
"location different from the repository's usual working tree)."
msgstr "注意: この変数は、ディレクトリの `.git｀ サブディレクトリ内の構成ファイルに設定されている場合でも適用され、その値は前者のディレクトリとは異なることに注意してください(たとえば、 `/path/to/` ディレクトリの `.git` サブディレクトリ内の構成ファイル `/path/to/.git/config` 内の core.worktree が `/different/path` に設定されていたとする)、これはおそらく設定ミスです。あなたが `/path/to` ディレクトリでGitコマンドを実行すると、引き続き `/different/path` が作業ツリーのルートとして使用され、あなたが何をしているのか分かっている(たとえば、リポジトリの通常の作業ツリーとは異なる場所に同じインデックスの読み取り専用スナップショットを作成している)のでない限り混乱を招く可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:316
#, no-wrap
msgid "core.logAllRefUpdates"
msgstr "core.logAllRefUpdates"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:327
msgid ""
"Enable the reflog. Updates to a ref <ref> is logged to the file \"`$GIT_DIR/"
"logs/<ref>`\", by appending the new and old SHA-1, the date/time and the "
"reason of the update, but only when the file exists.  If this configuration "
"variable is set to `true`, missing \"`$GIT_DIR/logs/<ref>`\" file is "
"automatically created for branch heads (i.e. under `refs/heads/`), remote "
"refs (i.e. under `refs/remotes/`), note refs (i.e. under `refs/notes/`), and "
"the symbolic ref `HEAD`.  If it is set to `always`, then a missing reflog is "
"automatically created for any ref under `refs/`."
msgstr "reflogを有効にします。新旧のSHA-1の追加や、日付/時刻・理由の更新による、refである <ref> の更新は、ファイル `$GIT_DIR/logs/<ref>` が存在する場合のみ、そのファイルにロギングされます。この構成変数が `true` に設定されている場合、欠落している `$GIT_DIR/logs/<ref>` ファイルがブランチヘッド(つまり、 `refs/heads/` 下)、リモートref(つまり、 refs/ 下)、note refs(つまり、 `refs/notes/` 下)、およびシンボリックref `HEAD` 。 `always`に設定されている場合、欠落しているreflogは、 `refs/` 下のすべてのrefに対して自動的に作成されます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:330
msgid ""
"This information can be used to determine what commit was the tip of a "
"branch \"2 days ago\"."
msgstr "この情報を使用して、「2日前」(2 days ago)にブランチの先端であったコミットを判別できます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:334
msgid ""
"This value is true by default in a repository that has a working directory "
"associated with it, and false by default in a bare repository."
msgstr "この値は、作業ディレクトリが関連付けられているリポジトリではデフォルトでtrueになり、ベアリポジトリではデフォルトでfalseになります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:335
#, no-wrap
msgid "core.repositoryFormatVersion"
msgstr "core.repositoryFormatVersion"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:338
msgid "Internal variable identifying the repository format and layout version."
msgstr "リポジトリの形式とレイアウトのバージョンを識別する内部変数。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:339
#, no-wrap
msgid "core.sharedRepository"
msgstr "core.sharedRepository"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:353
msgid ""
"When 'group' (or 'true'), the repository is made shareable between several "
"users in a group (making sure all the files and objects are group-writable). "
"When 'all' (or 'world' or 'everybody'), the repository will be readable by "
"all users, additionally to being group-shareable. When 'umask' (or 'false'), "
"Git will use permissions reported by umask(2). When '0xxx', where '0xxx' is "
"an octal number, files in the repository will have this mode value. '0xxx' "
"will override user's umask value (whereas the other options will only "
"override requested parts of the user's umask value). Examples: '0660' will "
"make the repo read/write-able for the owner and group, but inaccessible to "
"others (equivalent to 'group' unless umask is e.g. '0022'). '0640' is a "
"repository that is group-readable but not group-writable.  See linkgit:git-"
"init[1]. False by default."
msgstr "'group' (または 'true' )の場合、リポジトリはグループ内の複数のユーザー間で共有可能になります(すべてのファイルとオブジェクトがグループ書き込み可能であることを確認してください)。 'all' (または 'world' または 'everybody')の場合、リポジトリはグループ共有可能であることに加えて、すべてのユーザーが読み取り可能になります。 'umask' (または 'false' )の場合、Gitは umask(2) によって報告された権限を使用します。「0xxx」(「0xxx」は8進数)の場合、リポジトリ内のファイルはこのモード値になります。「0xxx」はユーザーのumask値をオーバーライドします(他のオプションはユーザーのumask値の要求された部分のみをオーバーライドします)。例:「0660」は、所有者とグループがリポジトリを読み取り/書き込み可能にしますが、他のユーザーはアクセスできません(umaskが「0022」などでない限り、「group」と同等です)。 「0640」は、グループで読み取り可能ですが、グループで書き込み可能ではないリポジトリです。 linkgit:git-init[1] を参照してください。 デフォルトではFalseです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:354
#, no-wrap
msgid "core.warnAmbiguousRefs"
msgstr "core.warnAmbiguousRefs"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:357
msgid ""
"If true, Git will warn you if the ref name you passed it is ambiguous and "
"might match multiple refs in the repository. True by default."
msgstr "trueの場合、渡したref名があいまいでリポジトリ内の複数のrefと一致する可能性がある場合、Gitは警告を表示します。 デフォルトではtrue。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:358
#, no-wrap
msgid "core.compression"
msgstr "core.compression"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:364
msgid ""
"An integer -1..9, indicating a default compression level.  -1 is the zlib "
"default. 0 means no compression, and 1..9 are various speed/size tradeoffs, "
"9 being slowest.  If set, this provides a default to other compression "
"variables, such as `core.looseCompression` and `pack.compression`."
msgstr "デフォルトの圧縮レベルを示す整数 -1〜9。 -1はzlibのデフォルトです。0は圧縮がないことを意味し、1〜9はさまざまな速度とサイズのトレードオフであり、9が最も低速です。設定されている場合、これは `core.looseCompression` や `pack.compression` などの他の圧縮変数のデフォルトを提供します。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:365
#, no-wrap
msgid "core.looseCompression"
msgstr "core.looseCompression"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:371
msgid ""
"An integer -1..9, indicating the compression level for objects that are not "
"in a pack file. -1 is the zlib default. 0 means no compression, and 1..9 are "
"various speed/size tradeoffs, 9 being slowest.  If not set, defaults to core."
"compression.  If that is not set, defaults to 1 (best speed)."
msgstr "整数 -1〜9は、パックファイルにないオブジェクトの圧縮レベルを示します。-1はzlibのデフォルトです。0は圧縮がないことを意味し、1〜9はさまざまな速度とサイズのトレードオフであり、9が最も低速です。設定されていない場合、デフォルトは core.compression です。 これが設定されていない場合、デフォルトは1(最高速度)になります。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:372
#, no-wrap
msgid "core.packedGitWindowSize"
msgstr "core.packedGitWindowSize"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:380
msgid ""
"Number of bytes of a pack file to map into memory in a single mapping "
"operation.  Larger window sizes may allow your system to process a smaller "
"number of large pack files more quickly.  Smaller window sizes will "
"negatively affect performance due to increased calls to the operating "
"system's memory manager, but may improve performance when accessing a large "
"number of large pack files."
msgstr "1回のマッピング操作でメモリにマップするパックファイルのバイト数。ウィンドウサイズを大きくすると、システムが少数の大きなパックファイルをより迅速に処理できるようになる場合があります。ウィンドウサイズを小さくすると、オペレーティングシステムのメモリマネージャへの呼び出しが増えるため、パフォーマンスに悪影響を及ぼしますが、多数の大きなパックファイルにアクセスする場合のパフォーマンスが向上する可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:385
msgid ""
"Default is 1 MiB if NO_MMAP was set at compile time, otherwise 32 MiB on 32 "
"bit platforms and 1 GiB on 64 bit platforms.  This should be reasonable for "
"all users/operating systems.  You probably do not need to adjust this value."
msgstr "コンパイル時にNO_MMAPが設定されている場合、デフォルトは1Mバイトです。それ以外の場合、32ビットプラットフォームでは32Mバイト、64ビットプラットフォームでは1Gバイトです。これは、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。おそらくあなたはこの値を調整する必要はありません。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:387
#: ../Documentation-sedout/config/core.txt:400
#: ../Documentation-sedout/config/core.txt:413
#: ../Documentation-sedout/config/core.txt:426
msgid "Common unit suffixes of 'k', 'm', or 'g' are supported."
msgstr "'k' または 'm' または 'g' の一般的な単位接尾辞がサポートされています。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:388
#, no-wrap
msgid "core.packedGitLimit"
msgstr "core.packedGitLimit"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:393
msgid ""
"Maximum number of bytes to map simultaneously into memory from pack files.  "
"If Git needs to access more than this many bytes at once to complete an "
"operation it will unmap existing regions to reclaim virtual address space "
"within the process."
msgstr "パックファイルからメモリに同時にマップする最大バイト数。Gitが操作を完了するために一度にこれ以上のバイトにアクセスする必要がある場合、Gitは既存の領域のマップを解除して、プロセス内の仮想アドレス空間を再利用します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:398
msgid ""
"Default is 256 MiB on 32 bit platforms and 32 TiB (effectively unlimited) on "
"64 bit platforms.  This should be reasonable for all users/operating "
"systems, except on the largest projects.  You probably do not need to adjust "
"this value."
msgstr "デフォルトは、32ビットプラットフォームでは256Mバイト、64ビットプラットフォームでは32Tバイト(事実上無制限)です。これは、超巨大プロジェクトを除いて、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。あなたは、おそらくこの値を調整する必要はありません。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:401
#, no-wrap
msgid "core.deltaBaseCacheLimit"
msgstr "core.deltaBaseCacheLimit"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:407
msgid ""
"Maximum number of bytes per thread to reserve for caching base objects that "
"may be referenced by multiple deltified objects.  By storing the entire "
"decompressed base objects in a cache Git is able to avoid unpacking and "
"decompressing frequently used base objects multiple times."
msgstr "複数の削除されたオブジェクトによって参照される可能性のあるベースオブジェクトをキャッシュするために予約するスレッドあたりの最大バイト数。解凍(decompress)されたベースオブジェクト全体をキャッシュに保存することで、Gitは頻繁に使用されるベースオブジェクトを何度もアンパックおよび解凍することを回避できます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:411
msgid ""
"Default is 96 MiB on all platforms.  This should be reasonable for all users/"
"operating systems, except on the largest projects.  You probably do not need "
"to adjust this value."
msgstr "デフォルトは、すべてのプラットフォームで96Mバイトです。これは、超巨大プロジェクトを除いて、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。あなたは、おそらくこの値を調整する必要はありません。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:414
#, no-wrap
msgid "core.bigFileThreshold"
msgstr "core.bigFileThreshold"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:420
msgid ""
"Files larger than this size are stored deflated, without attempting delta "
"compression.  Storing large files without delta compression avoids excessive "
"memory usage, at the slight expense of increased disk usage. Additionally "
"files larger than this size are always treated as binary."
msgstr "このサイズより大きいファイルは、デルタ圧縮を試行せずに、デフレートして保存されます。デルタ圧縮なしで大きなファイルを保存すると、ディスク使用量が増えるというわずかな犠牲を払って、過度のメモリ使用量を回避できます。加えて、このサイズより大きいファイルは常にバイナリとして扱われます。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:424
msgid ""
"Default is 512 MiB on all platforms.  This should be reasonable for most "
"projects as source code and other text files can still be delta compressed, "
"but larger binary media files won't be."
msgstr "デフォルトは、すべてのプラットフォームで512Mバイトです。ソースコードやその他のテキストファイルは依然としてデルタ圧縮できるため、これはほとんどのプロジェクトにとって合理的ですが、より大きなバイナリメディアファイルにとっては合理的ではありません。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:427
#, no-wrap
msgid "core.excludesFile"
msgstr "core.excludesFile"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:434
msgid ""
"Specifies the pathname to the file that contains patterns to describe paths "
"that are not meant to be tracked, in addition to `.gitignore` (per-"
"directory) and `.git/info/exclude`.  Defaults to `$XDG_CONFIG_HOME/git/"
"ignore`.  If `$XDG_CONFIG_HOME` is either not set or empty, `$HOME/.config/"
"git/ignore` is used instead. See linkgit:gitignore[5]."
msgstr "`.gitignore` (ディレクトリごと)と `.git/info/exclude` に加えて、追跡されることを意図されていないパスを記述するパターンを含むファイルへのパス名を指定します。 デフォルトは `$XDG_CONFIG_HOME/git/ignore` です。 `$XDG_CONFIG_HOME` が設定されていないか空の場合、代わりに `$HOME/.config/git/ignore` が使用されます。 linkgit:gitignore[5] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:435
#, no-wrap
msgid "core.askPass"
msgstr "core.askPass"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:443
msgid ""
"Some commands (e.g. svn and http interfaces) that interactively ask for a "
"password can be told to use an external program given via the value of this "
"variable. Can be overridden by the `GIT_ASKPASS` environment variable. If "
"not set, fall back to the value of the `SSH_ASKPASS` environment variable "
"or, failing that, a simple password prompt. The external program shall be "
"given a suitable prompt as command-line argument and write the password on "
"its STDOUT."
msgstr "パスワードを対話的に要求する一部のコマンド(svnやhttpインターフェイスなど)は、この変数の値を介して指定された外部プログラムを使用するように指示できます。 `GIT_ASKPASS` 環境変数でオーバーライドできます。設定されていない場合は、 `SSH_ASKPASS` 環境変数の値にフォールバックするか、それが失敗した場合は、単純なパスワードプロンプトにフォールバックします。外部プログラムには、コマンドライン引数として適切なプロンプトが与えられ、その標準出力にパスワードを書き出す事になっています。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:444
#, no-wrap
msgid "core.attributesFile"
msgstr "core.attributesFile"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:451
msgid ""
"In addition to `.gitattributes` (per-directory) and `.git/info/attributes`, "
"Git looks into this file for attributes (see linkgit:gitattributes[5]). Path "
"expansions are made the same way as for `core.excludesFile`. Its default "
"value is `$XDG_CONFIG_HOME/git/attributes`. If `$XDG_CONFIG_HOME` is either "
"not set or empty, `$HOME/.config/git/attributes` is used instead."
msgstr "`.gitattributes` (ディレクトリごと) と `.git/info/attributes` に加えて、Gitはこのファイルで属性を調べます(linkgit:gitattributes[5] を参照)。パスの拡張は、 `core.excludesFile` の場合と同じ方法で行われます。デフォルト値は `$XDG_CONFIG_HOME/git/attributes` です。 `$XDG_CONFIG_HOME` が設定されていないか空の場合、代わりに `$HOME/.config/git/attributes` が使用されます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:452
#, no-wrap
msgid "core.hooksPath"
msgstr "core.hooksPath"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:458
msgid ""
"By default Git will look for your hooks in the `$GIT_DIR/hooks` directory. "
"Set this to different path, e.g. `/etc/git/hooks`, and Git will try to find "
"your hooks in that directory, e.g. `/etc/git/hooks/pre-receive` instead of "
"in `$GIT_DIR/hooks/pre-receive`."
msgstr "デフォルトでは、Gitは `$GIT_DIR/hooks` ディレクトリでフックを探します。これを別のパスに設定します。例えば  `/etc/git/hooks` です。そしてGitはそのディレクトリであなたのフックを見つけようとします。例えば  `$GIT_DIR/hooks/pre-receive` の代わりに `/etc/git/hooks/pre-receive` です。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:462
msgid ""
"The path can be either absolute or relative. A relative path is taken as "
"relative to the directory where the hooks are run (see the \"DESCRIPTION\" "
"section of linkgit:githooks[5])."
msgstr "パスは絶対パスでも相対パスでもかまいません。相対パスは、フックが実行されているディレクトリを基準にしたものと見なされます(linkgit:githooks[5] の「DESCRIPTION」セクションを参照)。"

# DeepL
#. type: Plain text
#: ../Documentation-sedout/config/core.txt:468
msgid ""
"This configuration variable is useful in cases where you'd like to centrally "
"configure your Git hooks instead of configuring them on a per-repository "
"basis, or as a more flexible and centralized alternative to having an `init."
"templateDir` where you've changed default hooks."
msgstr "この設定変数は、あなたのGitフックをリポジトリごとに設定するのではなく一元的に設定したい場合や、デフォルトのフックを変更した `init.templateDir` に代わるより柔軟で一元的な設定として有用です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:469
#, no-wrap
msgid "core.editor"
msgstr "core.editor"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:474
msgid ""
"Commands such as `commit` and `tag` that let you edit messages by launching "
"an editor use the value of this variable when it is set, and the environment "
"variable `GIT_EDITOR` is not set.  See linkgit:git-var[1]."
msgstr "エディタを起動してメッセージを編集できる `commit` や `tag` などのコマンドは、この変数が設定されているときにこの変数の値を使用し、環境変数 `GIT_EDITOR` は設定されていません。 linkgit:git-var[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:475
#, no-wrap
msgid "core.commentChar"
msgstr "core.commentChar"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:480
msgid ""
"Commands such as `commit` and `tag` that let you edit messages consider a "
"line that begins with this character commented, and removes them after the "
"editor returns (default '#')."
msgstr "メッセージを編集できる `commit` や `tag` などのコマンドは、この文字で始まるコメント行を考慮し、エディタから戻った後にそれらを削除します(デフォルトは `#`)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:483
msgid ""
"If set to \"auto\", `git-commit` would select a character that is not the "
"beginning character of any line in existing commit messages."
msgstr "`auto` に設定すると、 `git-commit` は、既存のコミットメッセージのどの行の先頭文字でもない文字を選択します。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:484
#, no-wrap
msgid "core.filesRefLockTimeout"
msgstr "core.filesRefLockTimeout"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:489
msgid ""
"The length of time, in milliseconds, to retry when trying to lock an "
"individual reference. Value 0 means not to retry at all; -1 means to try "
"indefinitely. Default is 100 (i.e., retry for 100ms)."
msgstr "個々の参照をロックしようとしたときに再試行する時間の長さ(ミリ秒単位)。値0は、まったく再試行しないことを意味します。 -1 は無期限に試すことを意味します。 デフォルトは100です(つまり、100ミリ秒再試行します)。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:490
#, no-wrap
msgid "core.packedRefsTimeout"
msgstr "core.packedRefsTimeout"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:495
msgid ""
"The length of time, in milliseconds, to retry when trying to lock the "
"`packed-refs` file. Value 0 means not to retry at all; -1 means to try "
"indefinitely. Default is 1000 (i.e., retry for 1 second)."
msgstr "`packed-refs` ファイルをロックしようとしたときに再試行する時間の長さ(ミリ秒単位)。値0は、まったく再試行しないことを意味します。-1は無期限に試すことを意味します。デフォルトは1000です(つまり、1秒間再試行します)。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:496
#, no-wrap
msgid "core.pager"
msgstr "core.pager"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:502
msgid ""
"Text viewer for use by Git commands (e.g., 'less').  The value is meant to "
"be interpreted by the shell.  The order of preference is the `$GIT_PAGER` "
"environment variable, then `core.pager` configuration, then `$PAGER`, and "
"then the default chosen at compile time (usually 'less')."
msgstr "Gitコマンドで使用するテキストビューア(「less」など)。値はシェルによって解釈されることを意図しています。 優先順位は、 `$GIT_PAGER` 環境変数、 `core.pager` 構成、 `$PAGER` 、そしてコンパイル時に選択されたデフォルト(通常は 'less')です。"

# LESS = FRX
# -Fと-Rと-Xオプションを指定？
#
#  -F または --quit-if-one-screen
#               最初の画面でファイル全体が表示できる場合、 less  を自動的に終了さ
#               せる。
#
#  -R または --RAW-CONTROL-CHARS
#               -r と似ているが、可能な場合には画面表示を正しく維持しようとする。
#               このオプションが有効なのは、入力が通常のテキストの場合である。 入
#               力には   ANSI  の「カラー」エスケープシーケンスが含まれていてもよ
#               い。 このシーケンスは
#
#                    ESC [ ... m
#
#               のような形式で、"..." は "m" 以外の 0 個以上の文字である。 画面の
#               状況を保つため、  全ての制御文字と ANSI カラーシーケンスは カーソ
#               ルを移動させないと仮定している。 less に "m" 以外の文字を ANSI カ
#               ラーエスケープシーケンスの終了文字として認識させることもできる。
#               そのためには、認識させたい終了文字のリストを             環境変数
#               LESSANSIENDCHARS に設定すればよい。
#
# -X または --no-init
#               端末に、termcap    初期化文字列と非初期化文字列を送れないようにす
#               る。 これは、画面をクリアするときのように非初期化文字列が不必要な
#               場合には、 望ましいことがある。
#
#. type: Plain text
#: ../Documentation-sedout/config/core.txt:516
msgid ""
"When the `LESS` environment variable is unset, Git sets it to `FRX` (if "
"`LESS` environment variable is set, Git does not change it at all).  If you "
"want to selectively override Git's default setting for `LESS`, you can set "
"`core.pager` to e.g. `less -S`.  This will be passed to the shell by Git, "
"which will translate the final command to `LESS=FRX less -S`. The "
"environment does not set the `S` option but the command line does, "
"instructing less to truncate long lines. Similarly, setting `core.pager` to "
"`less -+F` will deactivate the `F` option specified by the environment from "
"the command-line, deactivating the \"quit if one screen\" behavior of "
"`less`.  One can specifically activate some flags for particular commands: "
"for example, setting `pager.blame` to `less -S` enables line truncation only "
"for `git blame`."
msgstr "`LESS` 環境変数が設定されていない(unset)場合、Gitはそれを `FRX` に設定(set)します(`LESS` 環境変数が設定されている場合は、Gitはそれをまったく変更しません)。Gitのデフォルト設定である `LESS` を選択的にオーバーライドする場合は、 `core.pager` を、例えば `less -S` と設定できます。これはGitによってシェルに渡され、Gitは最後のコマンドを `LESS=FRX less -S` に変換します。環境変数では `S` オプションを設定しませんが、コマンドラインでは設定し、長い行を切り捨てるように指示します。同様に、 `core.pager` を `less -+F` に設定すると、環境変数によって指定された `F`オプションがコマンドラインによって非アクティブになり、 `less` の「1画面の場合は終了」動作が非アクティブになります。特定のGitコマンドに対していくつかのフラグを特に指定してアクティブにすることができます。たとえば、 `pager.blame` を `less -S` に設定すると、 `git blame` でのみページャーで行の切り捨てが有効になります。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:520
msgid ""
"Likewise, when the `LV` environment variable is unset, Git sets it to `-c`.  "
"You can override this setting by exporting `LV` with another value or "
"setting `core.pager` to `lv +c`."
msgstr "同様に、 `LV` 環境変数が設定されていない場合、Gitはそれを `-c` に設定します。この設定を上書きするには、 `LV` を別の値でエクスポートするか、 `core.pager` を `lv +c` に設定します。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:521
#, no-wrap
msgid "core.whitespace"
msgstr "core.whitespace"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:527
msgid ""
"A comma separated list of common whitespace problems to notice.  'git diff' "
"will use `color.diff.whitespace` to highlight them, and 'git apply --"
"whitespace=error' will consider them as errors.  You can prefix `-` to "
"disable any of them (e.g. `-trailing-space`):"
msgstr "注意すべき一般的な空白(whitespace)の問題のコンマ(`,`)区切りのリスト。 'gitd iff' は `color.diff.whitespace` を使用してそれらを強調表示し、 `git apply --whitespace = error` はそれらをエラーと見なします。 接頭辞 `-` を付けて、それらのいずれかを無効にすることができます(例: `-trailing-space`):"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:530
msgid ""
"`blank-at-eol` treats trailing whitespaces at the end of the line as an "
"error (enabled by default)."
msgstr "`blank-at-eol` は、行末の末尾の空白をエラーとして扱います(デフォルトで有効になっています)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:533
msgid ""
"`space-before-tab` treats a space character that appears immediately before "
"a tab character in the initial indent part of the line as an error (enabled "
"by default)."
msgstr "`space-before-tab` は、行の最初のインデント部分のタブ文字の直前に表示されるスペース文字をエラーとして扱います(デフォルトで有効になっています)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:536
msgid ""
"`indent-with-non-tab` treats a line that is indented with space characters "
"instead of the equivalent tabs as an error (not enabled by default)."
msgstr "`indent-with-non-tab` は、同等のタブではなくスペース文字でインデントされた行をエラーとして扱います(デフォルトでは有効になっていません)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:538
msgid ""
"`tab-in-indent` treats a tab character in the initial indent part of the "
"line as an error (not enabled by default)."
msgstr "`tab-in-indent` は、行の最初のインデント部分にあるタブ文字をエラーとして扱います(デフォルトでは有効になっていません)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:540
msgid ""
"`blank-at-eof` treats blank lines added at the end of file as an error "
"(enabled by default)."
msgstr "`blank-at-eof` は、ファイルの最後に追加された空白行をエラーとして扱います(デフォルトで有効になっています)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:542
msgid ""
"`trailing-space` is a short-hand to cover both `blank-at-eol` and `blank-at-"
"eof`."
msgstr "`trailing-space` は、` blank-at-eol` と `blank-at-eof` の両方をカバーする省略形です。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:546
msgid ""
"`cr-at-eol` treats a carriage-return at the end of line as part of the line "
"terminator, i.e. with it, `trailing-space` does not trigger if the character "
"before such a carriage-return is not a whitespace (not enabled by default)."
msgstr "`cr-at-eol` は、行末のキャリッジリターンをラインターミネータの一部として扱います。つまり、そのようなキャリッジリターンの前の文字が空白(a whitespace)でない場合、 `trailing-space` はトリガーされません(デフォルトでは有効になっていません)。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:549
msgid ""
"`tabwidth=<n>` tells how many character positions a tab occupies; this is "
"relevant for `indent-with-non-tab` and when Git fixes `tab-in-indent` "
"errors. The default tab width is 8. Allowed values are 1 to 63."
msgstr "`tabwidth=<n>` は、タブが占める文字数を示します。 これは、 `indent-with-non-tab` と、 Gitが `tab-in-indent` エラーを修正する場合に関連します。デフォルトのタブ幅は8です。許可される値は1〜63です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:550
#, no-wrap
msgid "core.fsyncObjectFiles"
msgstr "core.fsyncObjectFiles"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:552
msgid "This boolean will enable 'fsync()' when writing object files."
msgstr "このブール値は、オブジェクトファイルを書き込むときに 'fsync()' を有効にします。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:557
msgid ""
"This is a total waste of time and effort on a filesystem that orders data "
"writes properly, but can be useful for filesystems that do not use "
"journalling (traditional UNIX filesystems) or that only journal metadata and "
"not file contents (OS X's HFS+, or Linux ext3 with \"data=writeback\")."
msgstr "これは、データの書き込みを適切に順序付けるファイルシステムでは時間と労力の無駄ですが、ジャーナル処理を使用しないファイルシステム(伝統的なUNIXファイルシステム)や、ファイルの内容ではなくメタデータのみをジャーナル処理するファイルシステム(OS XのHFS+や、`data=writeback` な Linux ext3)で役立ちます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:558
#, no-wrap
msgid "core.preloadIndex"
msgstr "core.preloadIndex"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:560
msgid "Enable parallel index preload for operations like 'git diff'"
msgstr "'git diff' などの操作のために並列インデックスプリロードを有効にする"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:566
msgid ""
"This can speed up operations like 'git diff' and 'git status' especially on "
"filesystems like NFS that have weak caching semantics and thus relatively "
"high IO latencies.  When enabled, Git will do the index comparison to the "
"filesystem data in parallel, allowing overlapping IO's.  Defaults to true."
msgstr "これにより、特にキャッシュセマンティクスが弱く、IOレイテンシが比較的高いNFSなどのファイルシステムで、「git diff」や「git status」などの操作を高速化できます。有効にすると、Gitはファイルシステムデータとのインデックス比較を並行して実行し、重複する入出力を許可します。デフォルトはtrueです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:567
#, no-wrap
msgid "core.unsetenvvars"
msgstr "core.unsetenvvars"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:572
msgid ""
"Windows-only: comma-separated list of environment variables' names that need "
"to be unset before spawning any other process.  Defaults to `PERL5LIB` to "
"account for the fact that Git for Windows insists on using its own Perl "
"interpreter."
msgstr "Windowsのみ: 他のプロセスを生成する前に設定を解除する必要がある環境変数の名前のコンマ(`,`)区切りのリスト。Git for Windowsが独自のPerlインタープリターの使用を主張しているという事実を説明するために、デフォルトは `PERL5LIB` です。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:573
#, no-wrap
msgid "core.restrictinheritedhandles"
msgstr "core.restrictinheritedhandles"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:578
msgid ""
"Windows-only: override whether spawned processes inherit only standard file "
"handles (`stdin`, `stdout` and `stderr`) or all handles. Can be `auto`, "
"`true` or `false`. Defaults to `auto`, which means `true` on Windows 7 and "
"later, and `false` on older Windows versions."
msgstr "Windowsのみ: 生成されたプロセスが標準のファイルハンドル( `stdin` と `stdout` と `stderr`)のみを継承するか、すべてのハンドルを継承するかをオーバーライドします。 `auto` または `true` または `false` にすることができます。デフォルトは `auto` で、これはWindows7以降では `true` を意味し、古いバージョンのWindowsでは `false` を意味します。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:579
#, no-wrap
msgid "core.createObject"
msgstr "core.createObject"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:583
msgid ""
"You can set this to 'link', in which case a hardlink followed by a delete of "
"the source are used to make sure that object creation will not overwrite "
"existing objects."
msgstr "これを 'link' に設定できます。この場合、ハードリンク後のソース削除を、オブジェクトの作成が既存のオブジェクトが上書しないことをチェックするために使用します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:587
msgid ""
"On some file system/operating system combinations, this is unreliable.  Set "
"this config setting to 'rename' there; However, This will remove the check "
"that makes sure that existing object files will not get overwritten."
msgstr "一部のファイルシステム/オペレーティングシステムの組み合わせでは、これは信頼できませんので、この構成設定を 'rename' に設定します。ただし、これにより、既存のオブジェクトファイルが上書きされないようにするチェックが削除されます。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:588
#, no-wrap
msgid "core.notesRef"
msgstr "core.notesRef"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:593
msgid ""
"When showing commit messages, also show notes which are stored in the given "
"ref.  The ref must be fully qualified.  If the given ref does not exist, it "
"is not an error but means that no notes should be printed."
msgstr "コミットメッセージを表示するときは、指定されたrefに保存されている note も表示します。refは完全に修飾されている必要があります。指定されたrefが存在しない場合、それはエラーではありませんが、noteを印刷してはならないことを意味します。"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:596
msgid ""
"This setting defaults to \"refs/notes/commits\", and it can be overridden by "
"the `GIT_NOTES_REF` environment variable.  See linkgit:git-notes[1]."
msgstr "この設定のデフォルトは「refs/notes/commits」であり、 `GIT_NOTES_REF` 環境変数でオーバーライドできます。 linkgit:git-notes[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:597
#, no-wrap
msgid "core.commitGraph"
msgstr "core.commitGraph"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:601
msgid ""
"If true, then git will read the commit-graph file (if it exists)  to parse "
"the graph structure of commits. Defaults to true. See linkgit:git-commit-"
"graph[1] for more information."
msgstr "trueの場合、gitはcommit-graphファイル(存在する場合)を読み取り、コミットのグラフ構造をパースします。デフォルトはtrueです。詳細については、 linkgit:git-commit-graph[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:602
#, no-wrap
msgid "core.useReplaceRefs"
msgstr "core.useReplaceRefs"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:606
msgid ""
"If set to `false`, behave as if the `--no-replace-objects` option was given "
"on the command line. See linkgit:git[1] and linkgit:git-replace[1] for more "
"information."
msgstr "`false` に設定すると、コマンドラインで `--no-replace-objects` オプションが指定されたかのように振る舞います。詳細については linkgit:git[1] と linkgit:git-replace[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:607
#, no-wrap
msgid "core.multiPackIndex"
msgstr "core.multiPackIndex"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:611
msgid ""
"Use the multi-pack-index file to track multiple packfiles using a single "
"index. See linkgit:git-multi-pack-index[1] for more information. Defaults to "
"true."
msgstr "multi-pack-index ファイルを使用して、単一のインデックスを使用して複数のパックファイルを追跡します。詳細については linkgit:git-multi-pack-index[1] を参照してください。デフォルトはtrueです。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:612
#, no-wrap
msgid "core.sparseCheckout"
msgstr "core.sparseCheckout"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:615
msgid ""
"Enable \"sparse checkout\" feature. See linkgit:git-sparse-checkout[1] for "
"more information."
msgstr "「スパースチェックアウト」(sparse checkout)機能を有効にします。 詳細については、 linkgit:git-sparse-checkout[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:616
#, no-wrap
msgid "core.sparseCheckoutCone"
msgstr "core.sparseCheckoutCone"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:621
msgid ""
"Enables the \"cone mode\" of the sparse checkout feature. When the sparse-"
"checkout file contains a limited set of patterns, then this mode provides "
"significant performance advantages. See linkgit:git-sparse-checkout[1] for "
"more information."
msgstr "スパースチェックアウト機能の「コーンモード」(cone mode)を有効にします。スパースチェックアウトファイルに含まれるパターンのセットが限られている場合、このモードはパフォーマンスに大きな利点をもたらします。詳細については linkgit:git-sparse-checkout[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/config/core.txt:622
#, no-wrap
msgid "core.abbrev"
msgstr "core.abbrev"

#. type: Plain text
#: ../Documentation-sedout/config/core.txt:630
msgid ""
"Set the length object names are abbreviated to.  If unspecified or set to "
"\"auto\", an appropriate value is computed based on the approximate number "
"of packed objects in your repository, which hopefully is enough for "
"abbreviated object names to stay unique for some time.  If set to \"no\", no "
"abbreviation is made and the object names are shown in their full length.  "
"The minimum length is 4."
msgstr "オブジェクト名の省略形の長さを設定します。指定されていないか「auto」に設定されている場合、リポジトリ内のパックされたオブジェクトのおおよその数に基づいて適切な値が計算されます。それは、省略されたオブジェクト名がしばらくの間(some time)一意であるのに十分な長さです。「no」に設定すると、省略形は作成されず、オブジェクト名は完全な長さで表示されます。 最小の長さは4です。"
