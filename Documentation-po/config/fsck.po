# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2023-07-18 11:07+0900\n"
"PO-Revision-Date: 2021-12-04 17:21+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/fsck.txt:1
#, no-wrap
msgid "fsck.<msg-id>"
msgstr "fsck.<msg-id>"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:7
msgid ""
"During fsck git may find issues with legacy data which wouldn't be generated "
"by current versions of git, and which wouldn't be sent over the wire if "
"`transfer.fsckObjects` was set. This feature is intended to support working "
"with legacy repositories containing such data."
msgstr ""
"fsck中に、gitは、現在のバージョンのgitでは生成されず、 `transfer."
"fsckObjects` が設定されている場合はネットワーク経由で送信されない、レガシー"
"データの問題を検出する場合があります。この機能は、そのようなデータを含むレガ"
"シーリポジトリの操作をサポートすることを目的としています。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:11
msgid ""
"Setting `fsck.<msg-id>` will be picked up by linkgit:git-fsck[1], but to "
"accept pushes of such data set `receive.fsck.<msg-id>` instead, or to clone "
"or fetch it set `fetch.fsck.<msg-id>`."
msgstr ""
"`fsck.<msg-id>` 設定は、 linkgit:git-fsck[1] によって取得されますが、代わり"
"に、そのようなデータセット `receive.fsck.<msg-id>` のプッシュを受け入れるか、"
"または、クローンまたはフェッチのセットである `fetch.fsck.<msg-id>` を使用しま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:15
msgid ""
"The rest of the documentation discusses `fsck.*` for brevity, but the same "
"applies for the corresponding `receive.fsck.*` and `fetch.<msg-id>.*`. "
"variables."
msgstr ""
"この文書の残りの部分では、簡潔にするために `fsck.*` 変数について説明していま"
"すが、対応する `receive.fsck.*` 変数と `fetch.<msg-id>.*` 変数にも同じことが"
"当てはまります。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:21
msgid ""
"Unlike variables like `color.ui` and `core.editor` the `receive.fsck.<msg-"
"id>` and `fetch.fsck.<msg-id>` variables will not fall back on the `fsck."
"<msg-id>` configuration if they aren't set. To uniformly configure the same "
"fsck settings in different circumstances all three of them they must all set "
"to the same values."
msgstr ""
"`color.ui` や `core.editor` のような変数とは異なり、 `receive.fsck.<msg-id>` "
"と `fetch.fsck.<msg-id>` 変数は、設定されていない場合、 `fsck.<msg-id>` 構成"
"にフォールバックしません。さまざまな状況で同じfsck設定を均一に構成するには、3"
"つすべてを同じ値に設定する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:29
msgid ""
"When `fsck.<msg-id>` is set, errors can be switched to warnings and vice "
"versa by configuring the `fsck.<msg-id>` setting where the `<msg-id>` is the "
"fsck message ID and the value is one of `error`, `warn` or `ignore`. For "
"convenience, fsck prefixes the error/warning with the message ID, e.g. "
"\"missingEmail: invalid author/committer line - missing email\" means that "
"setting `fsck.missingEmail = ignore` will hide that issue."
msgstr ""
"`fsck.<msg-id>` が設定されている場合、 `fsck.<msg-id>` の値を `error` 、 "
"`warn` 、`ignore` のいずれか一つとすることにより、エラーを警告に切り替える事"
"もでき、その逆も可能です。そして `<msg-id>` の部分はメッセージIDです。便利な"
"ように、fsckはエラー/警告メッセージの前にメッセージIDを付けます。たとえば"
"「missingEmail: invalid author/committer line - missing email」は、 `fsck."
"missingEmail = ignore` を設定するとその問題が非表示になることを意味します。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:34
msgid ""
"In general, it is better to enumerate existing objects with problems with "
"`fsck.skipList`, instead of listing the kind of breakages these problematic "
"objects share to be ignored, as doing the latter will allow new instances of "
"the same breakages go unnoticed."
msgstr ""
"一般に、これらの問題のあるオブジェクトが共有する破損の種類をリストして無視す"
"るのではなく、 `fsck.skipList` に問題のある既存のオブジェクトを列挙することを"
"お勧めします。前者を実行すると、同じ破損の新しいインスタンスが見過ごされる可"
"能性があります。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:38
msgid ""
"Setting an unknown `fsck.<msg-id>` value will cause fsck to die, but doing "
"the same for `receive.fsck.<msg-id>` and `fetch.fsck.<msg-id>` will only "
"cause git to warn."
msgstr ""
"不明な `fsck.<msg-id>` 値を設定すると、fsckが停止(die)しますが、 `receive."
"fsck.<msg-id>` や `fetch.fsck.<msg-id>` に対して同じことを行うと、gitは単に警"
"告するだけです。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:41
msgid ""
"See `Fsck Messages` section of linkgit:git-fsck[1] for supported values of "
"`<msg-id>`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/fsck.txt:43
#, no-wrap
msgid "fsck.skipList"
msgstr "fsck.skipList"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:49
msgid ""
"The path to a list of object names (i.e. one unabbreviated SHA-1 per line) "
"that are known to be broken in a non-fatal way and should be ignored. On "
"versions of Git 2.20 and later comments ('#'), empty lines, and any leading "
"and trailing whitespace is ignored. Everything but a SHA-1 per line will "
"error out on older versions."
msgstr ""
"非致命的な理由により既に壊れている(broken)ことが分かっているため無視する必要"
"があるオブジェクト名(1行につき1つの省略されてないSHA-1)のリストへのパス。Git "
"2.20 以降では、コメント(`#`)文字から行末までと、空行と、先頭と末尾の空白"
"(whitespace)は無視されます。それより古いバージョンでは1行につき1つのSHA-1以外"
"は全てエラーになります。"

# https://stackoverflow.com/questions/51789520/git-corruption-unable-to-read-sha-but-git-fsck-reports-no-errors
# Git corruption "unable to read [sha]" but git fsck reports no errors
#
# corrupt object は fsck では検出できないらしい？
#
# 欠落しているblobのように見えるものを含むgitリポジトリがあります。
# git gcまたはgit repack 失敗は
# 「致命的：89a9259486af9e3f0b24f3338ec39b18a7ba39c3を読み取ることができません」
# と文句を言います。ただし、git fsckは問題を検出しません。
#
# ＞これは、古いバージョンのgitが、ワークツリーのインデックスによって実際に
# 使用されていたオブジェクトを誤って削除するというトリッキーなシナリオです。
#
#
#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:54
msgid ""
"This feature is useful when an established project should be accepted "
"despite early commits containing errors that can be safely ignored such as "
"invalid committer email addresses.  Note: corrupt objects cannot be skipped "
"with this setting."
msgstr ""
"この機能は、無効なコミッターの電子メールアドレスなど、初期のコミットにもかか"
"わらず、安全に無視できるエラーを含む、確立されたプロジェクトを受け入れる必要"
"がある場合に役立ちます。 注意: この設定では、corruptオブジェクトをスキップす"
"ることはできません。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:57
msgid ""
"Like `fsck.<msg-id>` this variable has corresponding `receive.fsck.skipList` "
"and `fetch.fsck.skipList` variants."
msgstr ""
"`fsck.<msg-id>` と同様に、この変数に対応する `receive.fsck.skipList` 派生と "
"`fetch.fsck.skipList` 派生があります。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:63
msgid ""
"Unlike variables like `color.ui` and `core.editor` the `receive.fsck."
"skipList` and `fetch.fsck.skipList` variables will not fall back on the "
"`fsck.skipList` configuration if they aren't set. To uniformly configure the "
"same fsck settings in different circumstances all three of them they must "
"all set to the same values."
msgstr ""
"`color.ui` や `core.editor` のような変数とは異なり、 `receive.fsck.skipList` "
"変数と `fetch.fsck.skipList` 変数は、設定されていない場合、 `fsck.skipList` "
"構成にフォールバックしません。さまざまな状況で同じfsck設定を均一に構成するに"
"は、3つすべてを同じ値に設定する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/config/fsck.txt:71
msgid ""
"Older versions of Git (before 2.20) documented that the object names list "
"should be sorted. This was never a requirement, the object names could "
"appear in any order, but when reading the list we tracked whether the list "
"was sorted for the purposes of an internal binary search implementation, "
"which could save itself some work with an already sorted list. Unless you "
"had a humongous list there was no reason to go out of your way to pre-sort "
"the list. After Git version 2.20 a hash implementation is used instead, so "
"there's now no reason to pre-sort the list."
msgstr ""
"古いバージョンのGit(2.20より前)では、オブジェクト名リストを並べ替える必要があ"
"ることが文書化されています。これは必須ではなく、オブジェクト名は任意の順序で"
"表示できますが、リストを読み取るときに、内部バイナリ検索実装の目的でリストが"
"並べ替えられているかどうかを追跡しました。これにより、既に並べ替えられたリス"
"トでは作業を節約できます。膨大なリストがない限り、リストを事前に並べ替える必"
"要はありませんでした。 Gitバージョン2.20以降では、代わりにハッシュ実装が使用"
"されるため、リストを事前に並べ替える必要はありません。"
