# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation/config/fsck.txt:1
#, no-wrap
msgid "fsck.<msg-id>"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:7
msgid ""
"During fsck git may find issues with legacy data which wouldn't be generated "
"by current versions of git, and which wouldn't be sent over the wire if "
"`transfer.fsckObjects` was set. This feature is intended to support working "
"with legacy repositories containing such data."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:11
msgid ""
"Setting `fsck.<msg-id>` will be picked up by linkgit:git-fsck[1], but to "
"accept pushes of such data set `receive.fsck.<msg-id>` instead, or to clone "
"or fetch it set `fetch.fsck.<msg-id>`."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:15
msgid ""
"The rest of the documentation discusses `fsck.*` for brevity, but the same "
"applies for the corresponding `receive.fsck.*` and "
"`fetch.<msg-id>.*`. variables."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:21
msgid ""
"Unlike variables like `color.ui` and `core.editor` the "
"`receive.fsck.<msg-id>` and `fetch.fsck.<msg-id>` variables will not fall "
"back on the `fsck.<msg-id>` configuration if they aren't set. To uniformly "
"configure the same fsck settings in different circumstances all three of "
"them they must all set to the same values."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:29
msgid ""
"When `fsck.<msg-id>` is set, errors can be switched to warnings and vice "
"versa by configuring the `fsck.<msg-id>` setting where the `<msg-id>` is the "
"fsck message ID and the value is one of `error`, `warn` or `ignore`. For "
"convenience, fsck prefixes the error/warning with the message ID, "
"e.g. \"missingEmail: invalid author/committer line - missing email\" means "
"that setting `fsck.missingEmail = ignore` will hide that issue."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:34
msgid ""
"In general, it is better to enumerate existing objects with problems with "
"`fsck.skipList`, instead of listing the kind of breakages these problematic "
"objects share to be ignored, as doing the latter will allow new instances of "
"the same breakages go unnoticed."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:38
msgid ""
"Setting an unknown `fsck.<msg-id>` value will cause fsck to die, but doing "
"the same for `receive.fsck.<msg-id>` and `fetch.fsck.<msg-id>` will only "
"cause git to warn."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fsck.txt:39
#, no-wrap
msgid "fsck.skipList"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:45
msgid ""
"The path to a list of object names (i.e. one unabbreviated SHA-1 per line) "
"that are known to be broken in a non-fatal way and should be ignored. On "
"versions of Git 2.20 and later comments ('#'), empty lines, and any leading "
"and trailing whitespace is ignored. Everything but a SHA-1 per line will "
"error out on older versions."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:50
msgid ""
"This feature is useful when an established project should be accepted "
"despite early commits containing errors that can be safely ignored such as "
"invalid committer email addresses.  Note: corrupt objects cannot be skipped "
"with this setting."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:53
msgid ""
"Like `fsck.<msg-id>` this variable has corresponding `receive.fsck.skipList` "
"and `fetch.fsck.skipList` variants."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:59
msgid ""
"Unlike variables like `color.ui` and `core.editor` the "
"`receive.fsck.skipList` and `fetch.fsck.skipList` variables will not fall "
"back on the `fsck.skipList` configuration if they aren't set. To uniformly "
"configure the same fsck settings in different circumstances all three of "
"them they must all set to the same values."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fsck.txt:67
msgid ""
"Older versions of Git (before 2.20) documented that the object names list "
"should be sorted. This was never a requirement, the object names could "
"appear in any order, but when reading the list we tracked whether the list "
"was sorted for the purposes of an internal binary search implementation, "
"which could save itself some work with an already sorted list. Unless you "
"had a humongous list there was no reason to go out of your way to pre-sort "
"the list. After Git version 2.20 a hash implementation is used instead, so "
"there's now no reason to pre-sort the list."
msgstr ""
