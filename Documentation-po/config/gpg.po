# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:07+0900\n"
"PO-Revision-Date: 2023-09-10 04:34+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:1
#, no-wrap
msgid "gpg.program"
msgstr "gpg.program"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:11
msgid ""
"Use this custom program instead of \"`gpg`\" found on `$PATH` when making or "
"verifying a PGP signature. The program must support the same command-line "
"interface as GPG, namely, to verify a detached signature, \"`gpg --verify "
"$signature - <$file`\" is run, and the program is expected to signal a good "
"signature by exiting with code 0, and to generate an ASCII-armored detached "
"signature, the standard input of \"`gpg -bsau $key`\" is fed with the "
"contents to be signed, and the program is expected to send the result to its "
"standard output."
msgstr ""
"PGP署名を作成または検証するときは、`$PATH` にある `gpg` の代わりにこのカスタ"
"ムプログラムを使用します。 プログラムはGPGと同じコマンドラインインターフェイ"
"スをサポートする必要があります。つまり、切り離された署名(detached signature)"
"を検証するには、 `gpg --verify $signature - <$file` が実行され、 プログラム"
"は、コード0で終了することにより、適切な署名を通知することが期待されます。PGP "
"ASCII-armor の分離署名(ASCII-armored detached signature)を生成するために、 "
"`gpg -bsau $key` の標準入力には、署名する内容が入力され、プログラムはその結果"
"を標準出力に送信することが期待されています。"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:12
#, no-wrap
msgid "gpg.format"
msgstr "gpg.format"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:15
msgid ""
"Specifies which key format to use when signing with `--gpg-sign`.  Default "
"is \"openpgp\". Other possible values are \"x509\", \"ssh\"."
msgstr ""
"`--gpg-sign` で署名するときに使用するキー形式を指定します。 デフォルトは "
"`openpgp` です。 別の可能な値は `x509` と `ssh` です。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:18
msgid ""
"See linkgit:gitformat-signature[5] for the signature format, which differs "
"based on the selected `gpg.format`."
msgstr "署名形式(signature format)については linkgit:gitformat-signature[5] を参照してください。 署名形式は選択した `gpg.format` によって異なります。"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:19
#, no-wrap
msgid "gpg.<format>.program"
msgstr "gpg.<format>.program"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:24
msgid ""
"Use this to customize the program used for the signing format you chose. "
"(see `gpg.program` and `gpg.format`) `gpg.program` can still be used as a "
"legacy synonym for `gpg.openpgp.program`. The default value for `gpg.x509."
"program` is \"gpgsm\" and `gpg.ssh.program` is \"ssh-keygen\"."
msgstr ""
"これを使用して、選択した署名形式に使用されるプログラムをカスタマイズします。 "
"( `gpg.program` と `gpg.format` 参照) `gpg.program` は、 `gpg.openpgp."
"program` の歴史的同義語として引き続き使用できます。 `gpg.x509.program` のデ"
"フォルト値は `gpgsm` で、 `gpg.ssh.program` のデフォルト値は `ssh-keygen` で"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:25
#, no-wrap
msgid "gpg.minTrustLevel"
msgstr "gpg.minTrustLevel"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:33
msgid ""
"Specifies a minimum trust level for signature verification.  If this option "
"is unset, then signature verification for merge operations require a key "
"with at least `marginal` trust.  Other operations that perform signature "
"verification require a key with at least `undefined` trust.  Setting this "
"option overrides the required trust-level for all operations.  Supported "
"values, in increasing order of significance:"
msgstr ""
"署名検証(signature verification)の最小信頼(trust)レベルを指定します。 このオ"
"プションが設定されていない場合、マージ操作の署名検証には、少なくとも "
"`marginal` 信頼(trust)のあるキーが必要です。 署名の検証を実行する他の操作に"
"は、少なくとも `undefined` の信頼を持つキーが必要です。 このオプションを設定"
"すると、すべての操作に必要な信頼レベルが上書きされます。 サポートされている値"
"は以下のとおりです(重要度の昇順):"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:35
msgid "`undefined`"
msgstr "`undefined`"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:36
msgid "`never`"
msgstr "`never`"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:37
msgid "`marginal`"
msgstr "`marginal`"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:38
msgid "`fully`"
msgstr "`fully`"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:39
msgid "`ultimate`"
msgstr "`ultimate`"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:40
#, no-wrap
msgid "gpg.ssh.defaultKeyCommand"
msgstr "gpg.ssh.defaultKeyCommand"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:48
msgid ""
"This command that will be run when user.signingkey is not set and a ssh "
"signature is requested. On successful exit a valid ssh public key prefixed "
"with `key::` is expected in the first line of its output.  This allows for a "
"script doing a dynamic lookup of the correct public key when it is "
"impractical to statically configure `user.signingKey`.  For example when "
"keys or SSH Certificates are rotated frequently or selection of the right "
"key depends on external factors unknown to git."
msgstr ""
"このコマンドは、 `user.signingkey` が設定されておらず、かつ、 ssh 署名が要求"
"されたときに実行されます。 正常に終了すると、出力の最初の行に `key::` で始ま"
"る有効な ssh 公開鍵あるものと期待します。 これにより、 `user.signingKey` を静"
"的に構成することが実際的でない場合に、スクリプトが正しい公開鍵を動的に検索"
"(lookup)できるようになります。 これはたとえば、キーまたは SSH 証明書が頻繁に"
"ローテーションされる場合や、適切なキーの選択が git にとって未知の外部要因に依"
"存する場合などです。"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:49
#, no-wrap
msgid "gpg.ssh.allowedSignersFile"
msgstr "gpg.ssh.allowedSignersFile"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:57
msgid ""
"A file containing ssh public keys which you are willing to trust.  The file "
"consists of one or more lines of principals followed by an ssh public key.  "
"e.g.: `user1@example.com,user2@example.com ssh-rsa AAAAX1...` See ssh-"
"keygen(1) \"ALLOWED SIGNERS\" for details.  The principal is only used to "
"identify the key and is available when verifying a signature."
msgstr ""
"信頼できる ssh 公開鍵を含むファイル。 このファイルは、1行以上のプリンシパル"
"(principals)とそれに続く ssh 公開鍵で構成されます。 例: `user1@example.com,"
"user2@example.com ssh-rsa AAAAX1...`  詳細については、 ssh-keygen(1) の"
"「ALLOWED SIGNERS」を参照してください。 プリンシパル(principal)は、キーを識別"
"するためにのみ使用され、署名を検証(verify)するときに使用できます。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:62
msgid ""
"SSH has no concept of trust levels like gpg does. To be able to "
"differentiate between valid signatures and trusted signatures the trust "
"level of a signature verification is set to `fully` when the public key is "
"present in the allowedSignersFile.  Otherwise the trust level is `undefined` "
"and git verify-commit/tag will fail."
msgstr ""
"SSH には、gpg のような信頼レベル(trust levels)の概念がありません。 有効な署名"
"(valid signatures)と信頼できる署名(trusted signatures)を区別できるようにする"
"ために、 allowedSignersFile に公開鍵が存在する場合、署名検証の信頼レベルは "
"`fully` に設定されます。 それ以外の場合、信頼レベルは `undefined` であり、"
"git verify-commit/tag は失敗します。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:68
msgid ""
"This file can be set to a location outside of the repository and every "
"developer maintains their own trust store. A central repository server could "
"generate this file automatically from ssh keys with push access to verify "
"the code against.  In a corporate setting this file is probably generated at "
"a global location from automation that already handles developer ssh keys."
msgstr ""
"このファイルはリポジトリ外の場所に設定でき、すべての開発者が独自の信頼ストア"
"(trust store)を維持します。 中央リポジトリ・サーバーは、コードを検証するため"
"のプッシュ・アクセスを使用して、ssh キーからこのファイルを自動的に生成できま"
"す。 おそらく、企業の設定では、このファイルは、開発者の ssh キーを既に処理し"
"ている自動化によってグローバルな場所に生成されます。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:72
msgid ""
"A repository that only allows signed commits can store the file in the "
"repository itself using a path relative to the top-level of the working "
"tree.  This way only committers with an already valid key can add or change "
"keys in the keyring."
msgstr ""
"署名付きコミットのみを許可するリポジトリは、作業ツリーの最上位からの相対パス"
"を使用して、リポジトリ自体にファイルを保存できます。 このようにして、すでに有"
"効なキーを持つコミッターのみが、キーリングのキーを追加または変更できます。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:77
msgid ""
"Since OpensSSH 8.8 this file allows specifying a key lifetime using valid-"
"after & valid-before options. Git will mark signatures as valid if the "
"signing key was valid at the time of the signature's creation. This allows "
"users to change a signing key without invalidating all previously made "
"signatures."
msgstr ""
"OpensSSH 8.8 以降、このファイルでは、valid-after および valid-before オプショ"
"ンを使用してキーの有効期間を指定できます。 署名の作成時に署名キーが有効であっ"
"た場合、Git は署名を有効としてマークします。 これにより、ユーザーは以前に作成"
"されたすべての署名を無効にすることなく、署名キーを変更できます。"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:80
msgid ""
"Using a SSH CA key with the cert-authority option (see ssh-keygen(1) "
"\"CERTIFICATES\") is also valid."
msgstr ""
"cert-authority オプション (ssh-keygen(1) の「CERTIFICATES」を参照) を指定し"
"た SSH CA 鍵の使用も有効です。"

#. type: Labeled list
#: ../Documentation-sedout/config/gpg.txt:81
#, no-wrap
msgid "gpg.ssh.revocationFile"
msgstr "gpg.ssh.revocationFile"

#. type: Plain text
#: ../Documentation-sedout/config/gpg.txt:85
msgid ""
"Either a SSH KRL or a list of revoked public keys (without the principal "
"prefix).  See ssh-keygen(1) for details.  If a public key is found in this "
"file then it will always be treated as having trust level \"never\" and "
"signatures will show as invalid."
msgstr ""
"SSH KRL または取り消された公開鍵のリスト(プリンシパル(principal)プレフィック"
"スなし)。 詳細については、 ssh-keygen(1) を参照してください。 公開鍵がこの"
"ファイルで見つかった場合、その公開鍵は常に信頼レベル `never` として扱われ、署"
"名は無効として表示されます。"
