# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-09-24 21:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/safe.txt:1
#, no-wrap
msgid "safe.bareRepository"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:4
msgid ""
"Specifies which bare repositories Git will work with. The currently "
"supported values are:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:6
msgid "`all`: Git works with all bare repositories. This is the default."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:9
msgid ""
"`explicit`: Git only works with bare repositories specified via the "
"top-level `--git-dir` command-line option, or the `GIT_DIR` environment "
"variable (see linkgit:git[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:15
msgid ""
"If you do not use bare repositories in your workflow, then it may be "
"beneficial to set `safe.bareRepository` to `explicit` in your global "
"config. This will protect you from attacks that involve cloning a repository "
"that contains a bare repository and running a Git command within that "
"directory."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:19 ../Documentation-sedout/config/safe.txt:37
msgid ""
"This config setting is only respected in protected configuration (see "
"<<SCOPES>>). This prevents the untrusted repository from tampering with this "
"value."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/safe.txt:20
#, no-wrap
msgid "safe.directory"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:28
msgid ""
"These config entries specify Git-tracked directories that are considered "
"safe even if they are owned by someone other than the current user. By "
"default, Git will refuse to even parse a Git config of a repository owned by "
"someone else, let alone run its hooks, and this config setting allows users "
"to specify exceptions, e.g. for intentionally shared repositories (see the "
"`--shared` option in linkgit:git-init[1])."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:33
msgid ""
"This is a multi-valued setting, i.e. you can add more than one directory via "
"`git config --add`. To reset the list of safe directories (e.g. to override "
"any such directories specified in the system config), add a `safe.directory` "
"entry with an empty value."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:41
msgid ""
"The value of this setting is interpolated, i.e. `~/<path>` expands to a path "
"relative to the home directory and `%(prefix)/<path>` expands to a path "
"relative to Git's (runtime) prefix."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:48
msgid ""
"To completely opt-out of this security check, set `safe.directory` to the "
"string `*`. This will allow all repositories to be treated as if their "
"directory was listed in the `safe.directory` list. If `safe.directory=*` is "
"set in system config and you want to re-enable this protection, then "
"initialize your list with an empty value before listing the repositories "
"that you deem safe."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/safe.txt:61
msgid ""
"As explained, Git only allows you to access repositories owned by yourself, "
"i.e. the user who is running Git, by default.  When Git is running as 'root' "
"in a non Windows platform that provides sudo, however, git checks the "
"SUDO_UID environment variable that sudo creates and will allow access to the "
"uid recorded as its value in addition to the id from 'root'.  This is to "
"make it easy to perform a common sequence during installation \"make && sudo "
"make install\".  A git process running under 'sudo' runs as 'root' but the "
"'sudo' command exports the environment variable to record which id the "
"original user has.  If that is not what you would prefer and want git to "
"only trust repositories that are owned by root instead, then you can remove "
"the `SUDO_UID` variable from root's environment before invoking git."
msgstr ""
