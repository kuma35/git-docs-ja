# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:43+0900\n"
"PO-Revision-Date: 2022-09-26 20:32+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/sparse.txt:1
#, no-wrap
msgid "sparse.expectFilesOutsideOfPatterns"
msgstr "sparse.expectFilesOutsideOfPatterns"

#. type: Plain text
#: ../Documentation-sedout/config/sparse.txt:12
msgid ""
"Typically with sparse checkouts, files not matching any sparsity patterns "
"are marked with a SKIP_WORKTREE bit in the index and are missing from the "
"working tree.  Accordingly, Git will ordinarily check whether files with the "
"SKIP_WORKTREE bit are in fact present in the working tree contrary to "
"expectations.  If Git finds any, it marks those paths as present by clearing "
"the relevant SKIP_WORKTREE bits.  This option can be used to tell Git that "
"such present-despite-skipped files are expected and to stop checking for "
"them."
msgstr "通常、スパース・チェックアウトでは、どのスパース・パターンとも一致しないファイルは、インデックスの SKIP_WORKTREE ビットでマークされ、作業ツリーから欠落します。 したがって、Git は通常、期待に反して SKIP_WORKTREE ビットを持つファイルが実際に作業ツリーに存在するかどうかを確認します。 Git がいずれかを見つけた場合、関連する SKIP_WORKTREE ビットをクリアすることにより、それらのパスが存在するものとしてマークします。 このオプションを使用して、そのような存在にもかかわらずスキップされたファイルが予期できることを Git に伝え、それらのチェックを停止することができます。"

#. type: Plain text
#: ../Documentation-sedout/config/sparse.txt:16
msgid ""
"The default is `false`, which allows Git to automatically recover from the "
"list of files in the index and working tree falling out of sync."
msgstr "デフォルトは `false` です。これにより、Git はインデックス内のファイルのリストと同期が取れなくなった作業ツリーから自動的に回復(recover)できます。"

#. type: Plain text
#: ../Documentation-sedout/config/sparse.txt:23
msgid ""
"Set this to `true` if you are in a setup where some external factor relieves "
"Git of the responsibility for maintaining the consistency between the "
"presence of working tree files and sparsity patterns.  For example, if you "
"have a Git-aware virtual file system that has a robust mechanism for keeping "
"the working tree and the sparsity patterns up to date based on access "
"patterns."
msgstr "何らかの外部要因で、作業ツリーファイルの存在とスパース・パターンの間の一貫性を維持するための責任をGitに負わせなくていい場合、これを `true` にセットしてください。 例えば、アクセス・パターンに基づいて作業ツリーとスパース・パターンを最新に保つための堅牢なメカニズムを持つGit認識仮想ファイルシステムを持っている場合です。"

#. type: Plain text
#: ../Documentation-sedout/config/sparse.txt:27
msgid ""
"Regardless of this setting, Git does not check for present-despite-skipped "
"files unless sparse checkout is enabled, so this config option has no effect "
"unless `core.sparseCheckout` is `true`."
msgstr "この設定にかかわらず、Gitはスパース・チェックアウトが有効になっていない限り、存在するにも関わらずスキップ(present-despite-skip)されたファイルをチェックしません。したがって、このオプションは `core.sparseCheckout` が `true` でない限り何の効果も持ちません。"
