# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation/config/fetch.txt:1
#, no-wrap
msgid "fetch.recurseSubmodules"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:12
msgid ""
"This option controls whether `git fetch` (and the underlying fetch in `git "
"pull`) will recursively fetch into populated submodules.  This option can be "
"set either to a boolean value or to 'on-demand'.  Setting it to a boolean "
"changes the behavior of fetch and pull to recurse unconditionally into "
"submodules when set to true or to not recurse at all when set to false. When "
"set to 'on-demand', fetch and pull will only recurse into a populated "
"submodule when its superproject retrieves a commit that updates the "
"submodule's reference.  Defaults to 'on-demand', or to the value of "
"'submodule.recurse' if set."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:13
#, no-wrap
msgid "fetch.fsckObjects"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:18
msgid ""
"If it is set to true, git-fetch-pack will check all fetched objects. See "
"`transfer.fsckObjects` for what's checked. Defaults to false. If not set, "
"the value of `transfer.fsckObjects` is used instead."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:19
#, no-wrap
msgid "fetch.fsck.<msg-id>"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:23
msgid ""
"Acts like `fsck.<msg-id>`, but is used by linkgit:git-fetch-pack[1] instead "
"of linkgit:git-fsck[1]. See the `fsck.<msg-id>` documentation for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:24
#, no-wrap
msgid "fetch.fsck.skipList"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:28
msgid ""
"Acts like `fsck.skipList`, but is used by linkgit:git-fetch-pack[1] instead "
"of linkgit:git-fsck[1]. See the `fsck.skipList` documentation for details."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:29
#, no-wrap
msgid "fetch.unpackLimit"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:39
msgid ""
"If the number of objects fetched over the Git native transfer is below this "
"limit, then the objects will be unpacked into loose object files. However if "
"the number of received objects equals or exceeds this limit then the "
"received pack will be stored as a pack, after adding any missing delta "
"bases.  Storing the pack from a push can make the push operation complete "
"faster, especially on slow filesystems.  If not set, the value of "
"`transfer.unpackLimit` is used instead."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:40
#, no-wrap
msgid "fetch.prune"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:44
msgid ""
"If true, fetch will automatically behave as if the `--prune` option was "
"given on the command line.  See also `remote.<name>.prune` and the PRUNING "
"section of linkgit:git-fetch[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:45
#, no-wrap
msgid "fetch.pruneTags"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:52
msgid ""
"If true, fetch will automatically behave as if the `refs/tags/*:refs/tags/*` "
"refspec was provided when pruning, if not set already. This allows for "
"setting both this option and `fetch.prune` to maintain a 1=1 mapping to "
"upstream refs. See also `remote.<name>.pruneTags` and the PRUNING section of "
"linkgit:git-fetch[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:53
#, no-wrap
msgid "fetch.output"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:57
msgid ""
"Control how ref update status is printed. Valid values are `full` and "
"`compact`. Default value is `full`. See section OUTPUT in "
"linkgit:git-fetch[1] for detail."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:58
#, no-wrap
msgid "fetch.negotiationAlgorithm"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:71
msgid ""
"Control how information about the commits in the local repository is sent "
"when negotiating the contents of the packfile to be sent by the server. Set "
"to \"skipping\" to use an algorithm that skips commits in an effort to "
"converge faster, but may result in a larger-than-necessary packfile; or set "
"to \"noop\" to not send any information at all, which will almost certainly "
"result in a larger-than-necessary packfile, but will skip the negotiation "
"step.  The default is \"default\" which instructs Git to use the default "
"algorithm that never skips commits (unless the server has acknowledged it or "
"one of its descendants). If `feature.experimental` is enabled, then this "
"setting defaults to \"skipping\".  Unknown values will cause 'git fetch' to "
"error out."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:74
msgid ""
"See also the `--negotiate-only` and `--negotiation-tip` options to "
"linkgit:git-fetch[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:75
#, no-wrap
msgid "fetch.showForcedUpdates"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:79
msgid ""
"Set to false to enable `--no-show-forced-updates` in linkgit:git-fetch[1] "
"and linkgit:git-pull[1] commands.  Defaults to true."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:80
#, no-wrap
msgid "fetch.parallel"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:84
msgid ""
"Specifies the maximal number of fetch operations to be run in parallel at a "
"time (submodules, or remotes when the `--multiple` option of "
"linkgit:git-fetch[1] is in effect)."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:86
msgid "A value of 0 will give some reasonable default. If unset, it defaults to 1."
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:89
msgid ""
"For submodules, this setting can be overridden using the "
"`submodule.fetchJobs` config setting."
msgstr ""

#. type: Labeled list
#: ../Documentation/config/fetch.txt:90
#, no-wrap
msgid "fetch.writeCommitGraph"
msgstr ""

#. type: Plain text
#: ../Documentation/config/fetch.txt:97
msgid ""
"Set to true to write a commit-graph after every `git fetch` command that "
"downloads a pack-file from a remote. Using the `--split` option, most "
"executions will create a very small commit-graph file on top of the existing "
"commit-graph file(s). Occasionally, these files will merge and the write may "
"take longer. Having an updated commit-graph file helps performance of many "
"Git commands, including `git merge-base`, `git push -f`, and `git log "
"--graph`. Defaults to false."
msgstr ""
