# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 05:36+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:1
#, no-wrap
msgid "push.default"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:8
msgid ""
"Defines the action `git push` should take if no refspec is given (whether "
"from the command-line, config, or elsewhere).  Different values are well-"
"suited for specific workflows; for instance, in a purely central workflow (i."
"e. the fetch source is equal to the push destination), `upstream` is "
"probably what you want.  Possible values are:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:14
msgid ""
"`nothing` - do not push anything (error out) unless a refspec is given. This "
"is primarily meant for people who want to avoid mistakes by always being "
"explicit."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:18
msgid ""
"`current` - push the current branch to update a branch with the same name on "
"the receiving end.  Works in both central and non-central workflows."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:24
msgid ""
"`upstream` - push the current branch back to the branch whose changes are "
"usually integrated into the current branch (which is called `@{upstream}`).  "
"This mode only makes sense if you are pushing to the same repository you "
"would normally pull from (i.e. central workflow)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:26
msgid "`tracking` - This is a deprecated synonym for `upstream`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:28
msgid "`simple` - pushes the current branch with the same name on the remote."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:32
msgid ""
"If you are working on a centralized workflow (pushing to the same repository "
"you pull from, which is typically `origin`), then you need to configure an "
"upstream branch with the same name."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:35
msgid ""
"This mode is the default since Git 2.0, and is the safest option suited for "
"beginners."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:42
msgid ""
"`matching` - push all branches having the same name on both ends.  This "
"makes the repository you are pushing to remember the set of branches that "
"will be pushed out (e.g. if you always push 'maint' and 'master' there and "
"no other branches, the repository you push to will have these two branches, "
"and your local 'maint' and 'master' will be pushed there)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:52
msgid ""
"To use this mode effectively, you have to make sure _all_ the branches you "
"would push out are ready to be pushed out before running 'git push', as the "
"whole point of this mode is to allow you to push all of the branches in one "
"go.  If you usually finish work on only one branch and push out the result, "
"while other branches are unfinished, this mode is not for you.  Also this "
"mode is not suitable for pushing into a shared central repository, as other "
"people may add new branches there, or update the tip of existing branches "
"outside your control."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:55
msgid ""
"This used to be the default, but not since Git 2.0 (`simple` is the new "
"default)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:58
#, no-wrap
msgid "push.followTags"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:62
msgid ""
"If set to true enable `--follow-tags` option by default.  You may override "
"this configuration at time of push by specifying `--no-follow-tags`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:63
#, no-wrap
msgid "push.gpgSign"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:71
msgid ""
"May be set to a boolean value, or the string 'if-asked'. A true value causes "
"all pushes to be GPG signed, as if `--signed` is passed to linkgit:git-"
"push[1]. The string 'if-asked' causes pushes to be signed if the server "
"supports it, as if `--signed=if-asked` is passed to 'git push'. A false "
"value may override a value from a lower-priority config file. An explicit "
"command-line flag always overrides this config option."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:72
#, no-wrap
msgid "push.pushOption"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:76
msgid ""
"When no `--push-option=<option>` argument is given from the command line, "
"`git push` behaves as if each <value> of this variable is given as `--push-"
"option=<value>`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:81
msgid ""
"This is a multi-valued variable, and an empty value can be used in a higher "
"priority configuration file (e.g. `.git/config` in a repository) to clear "
"the values inherited from a lower priority configuration files (e.g. `$HOME/."
"gitconfig`)."
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/config/push.txt:85
#, no-wrap
msgid "Example:\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/config/push.txt:89
#, no-wrap
msgid ""
"/etc/gitconfig\n"
"  push.pushoption = a\n"
"  push.pushoption = b\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/config/push.txt:92
#, no-wrap
msgid ""
"~/.gitconfig\n"
"  push.pushoption = c\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/config/push.txt:96
#, no-wrap
msgid ""
"repo/.git/config\n"
"  push.pushoption =\n"
"  push.pushoption = b\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/config/push.txt:98
#, no-wrap
msgid "This will result in only b (a and c are cleared).\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:101
#, no-wrap
msgid "push.recurseSubmodules"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:116
msgid ""
"Make sure all submodule commits used by the revisions to be pushed are "
"available on a remote-tracking branch. If the value is 'check' then Git will "
"verify that all submodule commits that changed in the revisions to be pushed "
"are available on at least one remote of the submodule. If any commits are "
"missing, the push will be aborted and exit with non-zero status. If the "
"value is 'on-demand' then all submodules that changed in the revisions to be "
"pushed will be pushed. If on-demand was not able to push all necessary "
"revisions it will also be aborted and exit with non-zero status. If the "
"value is 'no' then default behavior of ignoring submodules when pushing is "
"retained. You may override this configuration at time of push by specifying "
"'--recurse-submodules=check|on-demand|no'.  If not set, 'no' is used by "
"default, unless 'submodule.recurse' is set (in which case a 'true' value "
"means 'on-demand')."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:117
#, no-wrap
msgid "push.useForceIfIncludes"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:122
msgid ""
"If set to \"true\", it is equivalent to specifying `--force-if-includes` as "
"an option to linkgit:git-push[1] in the command line. Adding `--no-force-if-"
"includes` at the time of push overrides this configuration setting."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/config/push.txt:123
#, no-wrap
msgid "push.negotiate"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/config/push.txt:128
msgid ""
"If set to \"true\", attempt to reduce the size of the packfile sent by "
"rounds of negotiation in which the client and the server attempt to find "
"commits in common. If \"false\", Git will rely solely on the server's ref "
"advertisement to find commits in common."
msgstr ""
