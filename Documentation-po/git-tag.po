# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-tag.txt:2
#, no-wrap
msgid "git-tag(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:7
msgid "git-tag - Create, list, delete or verify a tag object signed with GPG"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:20
#, no-wrap
msgid ""
"'git tag' [-a | -s | -u <keyid>] [-f] [-m <msg> | -F <file>] [-e]\n"
"\t<tagname> [<commit> | <object>]\n"
"'git tag' -d <tagname>...\n"
"'git tag' [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>]\n"
"\t[--points-at <object>] [--column[=<options>] | --no-column]\n"
"\t[--create-reflog] [--sort=<key>] [--format=<format>]\n"
"\t[--merged <commit>] [--no-merged <commit>] [<pattern>...]\n"
"'git tag' -v [--format=<format>] <tagname>...\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:22
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:26
msgid ""
"Add a tag reference in `refs/tags/`, unless `-d/-l/-v` is given to delete, "
"list or verify tags."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:28
msgid "Unless `-f` is given, the named tag must not yet exist."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:33
msgid ""
"If one of `-a`, `-s`, or `-u <keyid>` is passed, the command creates a 'tag' "
"object, and requires a tag message.  Unless `-m <msg>` or `-F <file>` is "
"given, an editor is started for the user to type in the tag message."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:36
msgid ""
"If `-m <msg>` or `-F <file>` is given and `-a`, `-s`, and `-u <keyid>` are "
"absent, `-a` is implied."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:39
msgid ""
"Otherwise, a tag reference that points directly at the given object (i.e., a "
"lightweight tag) is created."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:45
msgid ""
"A GnuPG signed tag object will be created when `-s` or `-u <keyid>` is "
"used.  When `-u <keyid>` is not used, the committer identity for the current "
"user is used to find the GnuPG key for signing. \tThe configuration variable "
"`gpg.program` is used to specify custom GnuPG binary."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:51
msgid ""
"Tag objects (created with `-a`, `-s`, or `-u`) are called \"annotated\" "
"tags; they contain a creation date, the tagger name and e-mail, a tagging "
"message, and an optional GnuPG signature. Whereas a \"lightweight\" tag is "
"simply a name for an object (usually a commit object)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:56
msgid ""
"Annotated tags are meant for release while lightweight tags are meant for "
"private or temporary object labels. For this reason, some git commands for "
"naming objects (like `git describe`) will ignore lightweight tags by default."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:59
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:60
#, no-wrap
msgid "`-a`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:61
#, no-wrap
msgid "`--annotate`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:63
msgid "Make an unsigned, annotated tag object"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:64
#, no-wrap
msgid "`-s`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:65
#, no-wrap
msgid "`--sign`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:70
msgid ""
"Make a GPG-signed tag, using the default e-mail address's key.  The default "
"behavior of tag GPG-signing is controlled by `tag.gpgSign` configuration "
"variable if it exists, or disabled otherwise.  See linkgit:git-config[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:71
#, no-wrap
msgid "`--no-sign`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:74
msgid ""
"Override `tag.gpgSign` configuration variable that is set to force each and "
"every tag to be signed."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:75
#, no-wrap
msgid "`-u <keyid>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:76
#, no-wrap
msgid "`--local-user=<keyid>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:78
msgid "Make a GPG-signed tag, using the given key."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:79
#, no-wrap
msgid "`-f`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:80
#, no-wrap
msgid "`--force`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:82
msgid "Replace an existing tag with the given name (instead of failing)"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:83
#, no-wrap
msgid "`-d`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:84
#, no-wrap
msgid "`--delete`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:86
msgid "Delete existing tags with the given names."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:87
#, no-wrap
msgid "`-v`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:88
#, no-wrap
msgid "`--verify`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:90
msgid "Verify the GPG signature of the given tag names."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:91
#, no-wrap
msgid "`-n<num>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:94
msgid ""
"<num> specifies how many lines from the annotation, if any, are printed when "
"using -l. Implies `--list`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:98
msgid ""
"The default is not to print any annotation lines.  If no number is given to "
"`-n`, only the first line is printed.  If the tag is not annotated, the "
"commit message is displayed instead."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:99
#, no-wrap
msgid "`-l`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:100
#, no-wrap
msgid "`--list`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:103
msgid ""
"List tags. With optional `<pattern>...`, e.g. `git tag --list 'v-*'`, list "
"only the tags that match the pattern(s)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:107
msgid ""
"Running \"git tag\" without arguments also lists all tags. The pattern is a "
"shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be "
"given; if any of them matches, the tag is shown."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:111
msgid ""
"This option is implicitly supplied if any other list-like option such as `--"
"contains` is provided. See the documentation for each of those options for "
"details."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:112
#, no-wrap
msgid "`--sort=<key>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:124
msgid ""
"Sort based on the key given.  Prefix `-` to sort in descending order of the "
"value. You may use the --sort=<key> option multiple times, in which case the "
"last key becomes the primary key. Also supports \"version:refname\" or \"v:"
"refname\" (tag names are treated as versions). The \"version:refname\" sort "
"order can also be affected by the \"versionsort.suffix\" configuration "
"variable.  The keys supported are the same as those in `git for-each-ref`.  "
"Sort order defaults to the value configured for the `tag.sort` variable if "
"it exists, or lexicographic order otherwise. See linkgit:git-config[1]."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:125
#, no-wrap
msgid "`--color[=<when>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:129
msgid ""
"Respect any colors specified in the `--format` option. The `<when>` field "
"must be one of `always`, `never`, or `auto` (if `<when>` is absent, behave "
"as if `always` was given)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:130
#, no-wrap
msgid "`-i`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:131
#, no-wrap
msgid "`--ignore-case`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:133
msgid "Sorting and filtering tags are case insensitive."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:134
#, no-wrap
msgid "`--column[=<options>]`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:135
#, no-wrap
msgid "`--no-column`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:139
msgid ""
"Display tag listing in columns. See configuration variable `column.tag` for "
"option syntax. `--column` and `--no-column` without options are equivalent "
"to 'always' and 'never' respectively."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:141
msgid ""
"This option is only applicable when listing tags without annotation lines."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:142
#, no-wrap
msgid "`--contains [<commit>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:145
msgid ""
"Only list tags which contain the specified commit (HEAD if not specified). "
"Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:146
#, no-wrap
msgid "`--no-contains [<commit>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:149
msgid ""
"Only list tags which don't contain the specified commit (HEAD if not "
"specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:150
#, no-wrap
msgid "`--merged [<commit>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:153
msgid ""
"Only list tags whose commits are reachable from the specified commit (`HEAD` "
"if not specified)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:154
#, no-wrap
msgid "`--no-merged [<commit>]`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:157
msgid ""
"Only list tags whose commits are not reachable from the specified commit "
"(`HEAD` if not specified)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:158
#, no-wrap
msgid "`--points-at <object>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:161
msgid ""
"Only list tags of the given object (HEAD if not specified). Implies `--list`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:162
#, no-wrap
msgid "`-m <msg>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:163
#, no-wrap
msgid "`--message=<msg>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:169
msgid ""
"Use the given tag message (instead of prompting).  If multiple `-m` options "
"are given, their values are concatenated as separate paragraphs.  Implies `-"
"a` if none of `-a`, `-s`, or `-u <keyid>` is given."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:170
#, no-wrap
msgid "`-F <file>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:171
#, no-wrap
msgid "`--file=<file>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:176
msgid ""
"Take the tag message from the given file.  Use '-' to read the message from "
"the standard input.  Implies `-a` if none of `-a`, `-s`, or `-u <keyid>` is "
"given."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:177
#, no-wrap
msgid "`-e`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:178
#, no-wrap
msgid "`--edit`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:182
msgid ""
"The message taken from file with `-F` and command line with `-m` are usually "
"used as the tag message unmodified.  This option lets you further edit the "
"message taken from these sources."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:183
#, no-wrap
msgid "`--cleanup=<mode>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:189
msgid ""
"This option sets how the tag message is cleaned up.  The '<mode>' can be one "
"of 'verbatim', 'whitespace' and 'strip'.  The 'strip' mode is default. The "
"'verbatim' mode does not change message at all, 'whitespace' removes just "
"leading/trailing whitespace lines and 'strip' removes both whitespace and "
"commentary."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:190
#, no-wrap
msgid "`--create-reflog`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:196
msgid ""
"Create a reflog for the tag. To globally enable reflogs for tags, see `core."
"logAllRefUpdates` in linkgit:git-config[1].  The negated form `--no-create-"
"reflog` only overrides an earlier `--create-reflog`, but currently does not "
"negate the setting of `core.logAllRefUpdates`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:197
#, no-wrap
msgid "`--format=<format>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:202
msgid ""
"A string that interpolates `%(fieldname)` from a tag ref being shown and the "
"object it points at.  The format is the same as that of linkgit:git-for-each-"
"ref[1].  When unspecified, defaults to `%(refname:strip=2)`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:203
#, no-wrap
msgid "<tagname>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:208
msgid ""
"The name of the tag to create, delete, or describe.  The new tag name must "
"pass all checks defined by linkgit:git-check-ref-format[1].  Some of these "
"checks may restrict the characters allowed in a tag name."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:209
#, no-wrap
msgid "<commit>"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-tag.txt:210
#, no-wrap
msgid "<object>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:213
msgid ""
"The object that the new tag will refer to, usually a commit.  Defaults to "
"HEAD."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:215
#, no-wrap
msgid "CONFIGURATION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:220
msgid ""
"By default, 'git tag' in sign-with-default mode (-s) will use your committer "
"identity (of the form `Your Name <your@email.address>`) to find a key.  If "
"you want to use a different default key, you can specify it in the "
"repository configuration as follows:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:224
#, no-wrap
msgid ""
"[user]\n"
"    signingKey = <gpg-keyid>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:229
msgid ""
"`pager.tag` is only respected when listing tags, i.e., when `-l` is used or "
"implied. The default is to use a pager.  See linkgit:git-config[1]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:231
#, no-wrap
msgid "DISCUSSION"
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-tag.txt:234
#, no-wrap
msgid "On Re-tagging"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:238
msgid ""
"What should you do when you tag a wrong commit and you would want to re-tag?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:241
msgid ""
"If you never pushed anything out, just re-tag it. Use \"-f\" to replace the "
"old one. And you're done."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:245
msgid ""
"But if you have pushed things out (or others could just read your repository "
"directly), then others will have already seen the old tag. In that case you "
"can do one of two things:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:252
msgid ""
"The sane thing.  Just admit you screwed up, and use a different name. Others "
"have already seen one tag-name, and if you keep the same name, you may be in "
"the situation that two people both have \"version X\", but they actually "
"have 'different' \"X\"'s.  So just call it \"X.1\" and be done with it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:257
msgid ""
"The insane thing.  You really want to call the new version \"X\" too, 'even "
"though' others have already seen the old one. So just use 'git tag -f' "
"again, as if you hadn't already published the old one."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:262
msgid ""
"However, Git does *not* (and it should not) change tags behind users back. "
"So if somebody already got the old tag, doing a 'git pull' on your tree "
"shouldn't just make them overwrite the old one."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:269
msgid ""
"If somebody got a release tag from you, you cannot just change the tag for "
"them by updating your own one. This is a big security issue, in that people "
"MUST be able to trust their tag-names.  If you really want to do the insane "
"thing, you need to just fess up to it, and tell people that you messed up. "
"You can do that by making a very public announcement saying:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:273
#, no-wrap
msgid ""
"Ok, I messed up, and I pushed out an earlier version tagged as X. I\n"
"then fixed something, and retagged the *fixed* tree as X again.\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:276
#, no-wrap
msgid ""
"If you got the wrong tag, and want the new one, please delete\n"
"the old one and fetch the new one by doing:\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:279
#, no-wrap
msgid ""
"\tgit tag -d X\n"
"\tgit fetch origin tag X\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:281
#, no-wrap
msgid "to get my updated tag.\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:283
#, no-wrap
msgid "You can test which tag you have by doing\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:285
#, no-wrap
msgid "\tgit rev-parse X\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:287
#, no-wrap
msgid "which should return 0123456789abcdef.. if you have the new version.\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:289
#, no-wrap
msgid "Sorry for the inconvenience.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:294
msgid ""
"Does this seem a bit complicated? It *should* be. There is no way that it "
"would be correct to just \"fix\" it automatically.  People need to know that "
"their tags might have been changed."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-tag.txt:297
#, no-wrap
msgid "On Automatic following"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:302
msgid ""
"If you are following somebody else's tree, you are most likely using remote-"
"tracking branches (eg. `refs/remotes/origin/master`).  You usually want the "
"tags from the other end."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:309
msgid ""
"On the other hand, if you are fetching because you would want a one-shot "
"merge from somebody else, you typically do not want to get tags from there.  "
"This happens more often for people near the toplevel but not limited to "
"them.  Mere mortals when pulling from each other do not necessarily want to "
"automatically get private anchor point tags from the other person."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:314
msgid ""
"Often, \"please pull\" messages on the mailing list just provide two pieces "
"of information: a repo URL and a branch name; this is designed to be easily "
"cut&pasted at the end of a 'git fetch' command line:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:317
#, no-wrap
msgid "Linus, please pull from\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:319
#, no-wrap
msgid "\tgit://git..../proj.git master\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:321
#, no-wrap
msgid "to get the following updates...\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:324
msgid "becomes:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:327
#, no-wrap
msgid "$ git pull git://git..../proj.git master\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:331
msgid ""
"In such a case, you do not want to automatically follow the other person's "
"tags."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:339
msgid ""
"One important aspect of Git is its distributed nature, which largely means "
"there is no inherent \"upstream\" or \"downstream\" in the system.  On the "
"face of it, the above example might seem to indicate that the tag namespace "
"is owned by the upper echelon of people and that tags only flow downwards, "
"but that is not the case.  It only shows that the usage pattern determines "
"who are interested in whose tags."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:351
msgid ""
"A one-shot pull is a sign that a commit history is now crossing the boundary "
"between one circle of people (e.g. \"people who are primarily interested in "
"the networking part of the kernel\") who may have their own set of tags (e."
"g. \"this is the third release candidate from the networking group to be "
"proposed for general consumption with 2.6.21 release\") to another circle of "
"people (e.g. \"people who integrate various subsystem improvements\").  The "
"latter are usually not interested in the detailed tags used internally in "
"the former group (that is what \"internal\" means).  That is why it is "
"desirable not to follow tags automatically in this case."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:357
msgid ""
"It may well be that among networking people, they may want to exchange the "
"tags internal to their group, but in that workflow they are most likely "
"tracking each other's progress by having remote-tracking branches.  Again, "
"the heuristic to automatically follow such tags is a good thing."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-tag.txt:360
#, no-wrap
msgid "On Backdating Tags"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:367
msgid ""
"If you have imported some changes from another VCS and would like to add "
"tags for major releases of your work, it is useful to be able to specify the "
"date to embed inside of the tag object; such data in the tag object affects, "
"for example, the ordering of tags in the gitweb interface."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:371
msgid ""
"To set the date used in future tag objects, set the environment variable "
"GIT_COMMITTER_DATE (see the later discussion of possible values; the most "
"common form is \"YYYY-MM-DD HH:MM\")."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:373
msgid "For example:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-tag.txt:376
#, no-wrap
msgid "$ GIT_COMMITTER_DATE=\"2006-10-02 10:31\" git tag -s v1.0.1\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:381
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:386
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:389
msgid "linkgit:git-check-ref-format[1].  linkgit:git-config[1]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-tag.txt:391
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-tag.txt:392
msgid "Part of the linkgit:git[1] suite"
msgstr ""
