# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:06+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/technical/protocol-common.txt:2
#, no-wrap
msgid "Documentation Common to Pack and Http Protocols"
msgstr ""

#. type: Title -
#: ../Documentation/technical/protocol-common.txt:5
#, no-wrap
msgid "ABNF Notation"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:9
msgid ""
"ABNF notation as described by RFC 5234 is used within the protocol "
"documents, except the following replacement core rules are used:"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:11
#, no-wrap
msgid "  HEXDIG    =  DIGIT / \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:14
msgid "We also define the following common rules:"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:18
#, no-wrap
msgid ""
"  NUL       =  %x00\n"
"  zero-id   =  40*\"0\"\n"
"  obj-id    =  40*(HEXDIGIT)\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:21
#, no-wrap
msgid ""
"  refname  =  \"HEAD\"\n"
"  refname /=  \"refs/\" <see discussion below>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:26
msgid ""
"A refname is a hierarchical octet string beginning with \"refs/\" and not "
"violating the 'git-check-ref-format' command's validation rules.  More "
"specifically, they:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:30
msgid ""
"They can include slash `/` for hierarchical (directory)  grouping, but no "
"slash-separated component can begin with a dot `.`."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:34
msgid ""
"They must contain at least one `/`. This enforces the presence of a category "
"like `heads/`, `tags/` etc. but the actual names are not restricted."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:36
msgid "They cannot have two consecutive dots `..` anywhere."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:41
msgid ""
"They cannot have ASCII control characters (i.e. bytes whose values are lower "
"than \\040, or \\177 `DEL`), space, tilde `~`, caret `^`, colon `:`, "
"question-mark `?`, asterisk `*`, or open bracket `[` anywhere."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:43
msgid "They cannot end with a slash `/` or a dot `.`."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:45
msgid "They cannot end with the sequence `.lock`."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:47
msgid "They cannot contain a sequence `@{`."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:49
msgid "They cannot contain a `\\\\`."
msgstr ""

#. type: Title -
#: ../Documentation/technical/protocol-common.txt:52
#, no-wrap
msgid "pkt-line Format"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:55
msgid "Much (but not all) of the payload is described around pkt-lines."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:60
msgid ""
"A pkt-line is a variable length binary string.  The first four bytes of the "
"line, the pkt-len, indicates the total length of the line, in hexadecimal.  "
"The pkt-len includes the 4 bytes used to contain the length's hexadecimal "
"representation."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:63
msgid ""
"A pkt-line MAY contain binary data, so implementors MUST ensure pkt-line "
"parsing/formatting routines are 8-bit clean."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:69
msgid ""
"A non-binary line SHOULD BE terminated by an LF, which if present MUST be "
"included in the total length. Receivers MUST treat pkt-lines with non-binary "
"data the same whether or not they contain the trailing LF (stripping the LF "
"if present, and not complaining when it is missing)."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:73
msgid ""
"The maximum length of a pkt-line's data component is 65516 bytes.  "
"Implementations MUST NOT send pkt-line whose length exceeds 65520 (65516 "
"bytes of payload + 4 bytes of length data)."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:75
msgid "Implementations SHOULD NOT send an empty pkt-line (\"0004\")."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:79
msgid ""
"A pkt-line with a length field of 0 (\"0000\"), called a flush-pkt, is a "
"special case and MUST be handled differently than an empty pkt-line "
"(\"0004\")."
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:82
#, no-wrap
msgid "  pkt-line     =  data-pkt / flush-pkt\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:86
#, no-wrap
msgid ""
"  data-pkt     =  pkt-len pkt-payload\n"
"  pkt-len      =  4*(HEXDIG)\n"
"  pkt-payload  =  (pkt-len - 4)*(OCTET)\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:88
#, no-wrap
msgid "  flush-pkt    = \"0000\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/protocol-common.txt:91
msgid "Examples (as C-style strings):"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/protocol-common.txt:99
#, no-wrap
msgid ""
"  pkt-line          actual value\n"
"  ---------------------------------\n"
"  \"0006a\\n\"         \"a\\n\"\n"
"  \"0005a\"           \"a\"\n"
"  \"000bfoobar\\n\"    \"foobar\\n\"\n"
"  \"0004\"            \"\"\n"
msgstr ""
