# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 05:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/bitmap-format.txt:2
#, no-wrap
msgid "GIT bitmap v1 format"
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:4
#, no-wrap
msgid "Pack and multi-pack bitmaps"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:9
msgid ""
"Bitmaps store reachability information about the set of objects in a "
"packfile, or a multi-pack index (MIDX). The former is defined obviously, and "
"the latter is defined as the union of objects in packs contained in the MIDX."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:12
msgid ""
"A bitmap may belong to either one pack, or the repository's multi-pack index "
"(if it exists). A repository may have at most one bitmap."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:14
msgid "An object is uniquely described by its bit position within a bitmap:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:16
msgid "If the bitmap belongs to a packfile, the __n__th bit corresponds to"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:19
msgid ""
"the __n__th object in pack order. For a function `offset` which maps objects "
"to their byte offset within a pack, pack order is defined as follows:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:21
#, no-wrap
msgid "o1 <= o2 <==> offset(o1) <= offset(o2)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:23
msgid "If the bitmap belongs to a MIDX, the __n__th bit corresponds to the"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:26
msgid ""
"__n__th object in MIDX order. With an additional function `pack` which maps "
"objects to the pack they were selected from by the MIDX, MIDX order is "
"defined as follows:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:28
#, no-wrap
msgid "o1 <= o2 <==> pack(o1) <= pack(o2) /\\ offset(o1) <= offset(o2)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:31
msgid ""
"The ordering between packs is done according to the MIDX's .rev file.  "
"Notably, the preferred pack sorts ahead of all other packs."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:35
msgid ""
"The on-disk representation (described below) of a bitmap is the same "
"regardless of whether or not that bitmap belongs to a packfile or a MIDX. "
"The only difference is the interpretation of the bits, which is described "
"above."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:39
msgid ""
"Certain bitmap extensions are supported (see: Appendix B). No extensions are "
"required for bitmaps corresponding to packfiles. For bitmaps that correspond "
"to MIDXs, both the bit-cache and rev-cache extensions are required."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:40
#, no-wrap
msgid "On-disk format"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:43
msgid "A header appears at the beginning:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:45
#, no-wrap
msgid "4-byte signature: {'B', 'I', 'T', 'M'}\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:47
msgid "2-byte version number (network byte order)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:49
#, no-wrap
msgid ""
"The current implementation only supports version 1\n"
"of the bitmap index (the same one as JGit).\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:51
msgid "2-byte flags (network byte order)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:53
#, no-wrap
msgid "The following flags are supported:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:55
msgid "BITMAP_OPT_FULL_DAG (0x1) REQUIRED"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:63
msgid ""
"This flag must always be present. It implies that the bitmap index has been "
"generated for a packfile or multi-pack index (MIDX) with full closure (i.e. "
"where every single object in the packfile/MIDX can find its parent links "
"inside the same packfile/MIDX). This is a requirement for the bitmap index "
"format, also present in JGit, that greatly reduces the complexity of the "
"implementation."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:65
msgid "BITMAP_OPT_HASH_CACHE (0x4)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:69
msgid ""
"If present, the end of the bitmap file contains `N` 32-bit name-hash values, "
"one per object in the pack/MIDX. The format and meaning of the name-hash is "
"described below."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:71
msgid "4-byte entry count (network byte order)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:73
#, no-wrap
msgid "The total count of entries (bitmapped commits) in this bitmap index.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:75
msgid "20-byte checksum"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:78
#, no-wrap
msgid ""
"The SHA1 checksum of the pack/MIDX this bitmap index\n"
"belongs to.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:80
msgid "4 EWAH bitmaps that act as type indexes"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:84
#, no-wrap
msgid ""
"Type indexes are serialized after the hash cache in the shape\n"
"of four EWAH bitmaps stored consecutively (see Appendix A for\n"
"the serialization format of an EWAH bitmap).\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:87
msgid ""
"There is a bitmap for each Git object type, stored in the following order:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:89
msgid "Commits"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:90
msgid "Trees"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:91
msgid "Blobs"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:92
msgid "Tags"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:95
#, no-wrap
msgid ""
"In each bitmap, the `n`th bit is set to true if the `n`th object\n"
"in the packfile or multi-pack index is of that type.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:99
msgid ""
"The obvious consequence is that the OR of all 4 bitmaps will result in a "
"full set (all bits set), and the AND of all 4 bitmaps will result in an "
"empty bitmap (no bits set)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:101
msgid "N entries with compressed bitmaps, one for each indexed commit"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:104
#, no-wrap
msgid ""
"Where `N` is the total amount of entries in this bitmap index.\n"
"Each entry contains the following:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:106
msgid "4-byte object position (network byte order)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:109
#, no-wrap
msgid ""
"The position **in the index for the packfile or\n"
"multi-pack index** where the bitmap for this commit is\n"
"found.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:111
msgid "1-byte XOR-offset"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:116
#, no-wrap
msgid ""
"The xor offset used to compress this bitmap. For an entry\n"
"in position `x`, a XOR offset of `y` means that the actual\n"
"bitmap representing this commit is composed by XORing the\n"
"bitmap for this entry with the bitmap in entry `x-y` (i.e.\n"
"the bitmap `y` entries before this one).\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:120
msgid ""
"Note that this compression can be recursive. In order to XOR this entry with "
"a previous one, the previous entry needs to be decompressed first, and so on."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:126
msgid ""
"The hard-limit for this offset is 160 (an entry can only be xor'ed against "
"one of the 160 entries preceding it). This number is always positive, and "
"hence entries are always xor'ed with **previous** bitmaps, not bitmaps that "
"will come afterwards in the index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:128
msgid "1-byte flags for this bitmap"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:131
#, no-wrap
msgid ""
"At the moment the only available flag is `0x1`, which hints\n"
"that this bitmap can be re-used when rebuilding bitmap indexes\n"
"for the repository.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:133
msgid "The compressed bitmap itself, see Appendix A."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:134
#, no-wrap
msgid "Appendix A: Serialization format for an EWAH bitmap"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:139
msgid ""
"Ewah bitmaps are serialized in the same protocol as the JAVAEWAH library, "
"making them backwards compatible with the JGit implementation:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:141
msgid "4-byte number of bits of the resulting UNCOMPRESSED bitmap"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:143
msgid "4-byte number of words of the COMPRESSED bitmap, when stored"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:145
msgid "N x 8-byte words, as specified by the previous field"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:147
#, no-wrap
msgid "This is the actual content of the compressed bitmap.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:149
msgid "4-byte position of the current RLW for the compressed"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:150
#, no-wrap
msgid "bitmap\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:153
msgid ""
"All words are stored in network byte order for their corresponding sizes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:157
msgid ""
"The compressed bitmap is stored in a form of run-length encoding, as "
"follows.  It consists of a concatenation of an arbitrary number of chunks.  "
"Each chunk consists of one or more 64-bit words"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:159
#, no-wrap
msgid "     H  L_1  L_2  L_3 .... L_M\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:162
msgid ""
"H is called RLW (run length word).  It consists of (from lower to higher "
"order bits):"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:164
msgid "1 bit: the repeated bit B"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:166
msgid "32 bits: repetition count K (unsigned)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:168
msgid "31 bits: literal word count M (unsigned)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:170
msgid "The bitstream represented by the above chunk is then:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:172
msgid "K repetitions of B"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:176
msgid ""
"The bits stored in `L_1` through `L_M`.  Within a word, bits at lower order "
"come earlier in the stream than those at higher order."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:180
msgid ""
"The next word after `L_M` (if any) must again be a RLW, for the next chunk.  "
"For efficient appending to the bitstream, the EWAH stores a pointer to the "
"last RLW in the stream."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:182
#, no-wrap
msgid "Appendix B: Optional Bitmap Sections"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:186
msgid ""
"These sections may or may not be present in the `.bitmap` file; their "
"presence is indicated by the header flags section described above."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/technical/bitmap-format.txt:188
#, no-wrap
msgid "Name-hash cache"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:196
msgid ""
"If the BITMAP_OPT_HASH_CACHE flag is set, the end of the bitmap contains a "
"cache of 32-bit values, one per object in the pack/MIDX. The value at "
"position `i` is the hash of the pathname at which the `i`th object (counting "
"in index or multi-pack index order) in the pack/MIDX can be found.  This can "
"be fed into the delta heuristics to compare objects with similar pathnames."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:198
msgid "The hash algorithm used is:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:203
#, no-wrap
msgid ""
"    hash = 0;\n"
"    while ((c = *name++))\n"
"\t    if (!isspace(c))\n"
"\t\t    hash = (hash >> 2) + (c << 24);\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:207
msgid ""
"Note that this hashing scheme is tied to the BITMAP_OPT_HASH_CACHE flag.  If "
"implementations want to choose a different hashing scheme, they are free to "
"do so, but MUST allocate a new header flag (because comparing hashes made "
"under two different schemes would be pointless)."
msgstr ""
