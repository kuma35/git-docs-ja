# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-08-03 03:54+0900\n"
"PO-Revision-Date: 2022-08-05 16:29+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/bitmap-format.txt:2
#, no-wrap
msgid "GIT bitmap v1 format"
msgstr "GIT bitmap v1 format"

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:4
#, no-wrap
msgid "Pack and multi-pack bitmaps"
msgstr "Pack and multi-pack bitmaps"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:9
msgid ""
"Bitmaps store reachability information about the set of objects in a "
"packfile, or a multi-pack index (MIDX). The former is defined obviously, and "
"the latter is defined as the union of objects in packs contained in the MIDX."
msgstr "ビットマップは、オブジェクトのセットに関する到達可能性情報をパックファイルまたはマルチパック インデックス (MIDX) に格納します。 前者の定義は明白であり、後者は MIDX に含まれるパック内のオブジェクトの結合として定義されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:12
msgid ""
"A bitmap may belong to either one pack, or the repository's multi-pack index "
"(if it exists). A repository may have at most one bitmap."
msgstr "ビットマップは、1 つのパックまたはリポジトリのマルチパック インデックス (存在する場合) のいずれかに属します。 リポジトリには、最大で 1 つのビットマップを含めることができます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:14
msgid "An object is uniquely described by its bit position within a bitmap:"
msgstr "オブジェクトは、ビットマップ内のビット位置によって一意に記述されます:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:19
msgid ""
"If the bitmap belongs to a packfile, the __n__th bit corresponds to the "
"__n__th object in pack order. For a function `offset` which maps objects to "
"their byte offset within a pack, pack order is defined as follows:"
msgstr "ビットマップがパックファイルに属している場合、__n__ 番目のビットはパック順で __n__ 番目のオブジェクトに対応します。 オブジェクトをパック内のバイト オフセットにマップする関数 `offset` の場合、パックの順序は以下のように定義されます:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:21
#, no-wrap
msgid "o1 <= o2 <==> offset(o1) <= offset(o2)\n"
msgstr "o1 <= o2 <==> offset(o1) <= offset(o2)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:26
msgid ""
"If the bitmap belongs to a MIDX, the __n__th bit corresponds to the __n__th "
"object in MIDX order. With an additional function `pack` which maps objects "
"to the pack they were selected from by the MIDX, MIDX order is defined as "
"follows:"
msgstr "ビットマップが MIDX に属する場合、__n__ 番目のビットは MIDX 順で __n__ 番目のオブジェクトに対応します。 オブジェクトを MIDX によって選択されたパックにマップする追加関数「pack」を使用すると、MIDX の順序は以下のように定義されます:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:28
#, no-wrap
msgid "o1 <= o2 <==> pack(o1) <= pack(o2) /\\ offset(o1) <= offset(o2)\n"
msgstr "o1 <= o2 <==> pack(o1) <= pack(o2) /\\ offset(o1) <= offset(o2)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:31
msgid ""
"The ordering between packs is done according to the MIDX's .rev file.  "
"Notably, the preferred pack sorts ahead of all other packs."
msgstr "パック間の順序付けは、MIDX の .rev ファイルに従って行われます。 特に、優先パックは他のすべてのパックよりも先にソートされます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:35
msgid ""
"The on-disk representation (described below) of a bitmap is the same "
"regardless of whether or not that bitmap belongs to a packfile or a MIDX. "
"The only difference is the interpretation of the bits, which is described "
"above."
msgstr "ビットマップのディスク上の表現 (後述) は、そのビットマップがパックファイルまたは MIDX に属しているかどうかに関係なく同じです。 唯一の違いは、上記で説明したビットの解釈です。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:39
msgid ""
"Certain bitmap extensions are supported (see: Appendix B). No extensions are "
"required for bitmaps corresponding to packfiles. For bitmaps that correspond "
"to MIDXs, both the bit-cache and rev-cache extensions are required."
msgstr "特定のビットマップ拡張がサポートされています (付録 B を参照)。 パックファイルに対応するビットマップには拡張子は必要ありません。 MIDX に対応するビットマップの場合、bit-cache 拡張と rev-cache 拡張の両方が必要です。"

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:40
#, no-wrap
msgid "On-disk format"
msgstr "On-disk format"

#. type: Title ===
#: ../Documentation-sedout/technical/bitmap-format.txt:42
#, no-wrap
msgid "A header appears at the beginning:"
msgstr "ヘッダーから始まります:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:45
msgid "4-byte signature: {'B', 'I', 'T', 'M'}"
msgstr "4バイト シグネチャ: {'B', 'I', 'T', 'M'}"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:47
msgid "2-byte version number (network byte order)"
msgstr "2バイト バージョン番号(ネットワークバイトオーダー)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:50
msgid ""
"The current implementation only supports version 1 of the bitmap index (the "
"same one as JGit)."
msgstr "現在の実装では、ビットマップ インデックスのバージョン 1 のみがサポートされています(JGitも同一)。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:52
msgid "2-byte flags (network byte order)"
msgstr "2バイト フラグ達 (ネットワークバイトオーダー)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:54
msgid "The following flags are supported:"
msgstr "以下のフラグがサポートされています:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:56
msgid "BITMAP_OPT_FULL_DAG (0x1) REQUIRED"
msgstr "BITMAP_OPT_FULL_DAG (0x1) 必須"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:65
msgid ""
"This flag must always be present. It implies that the bitmap index has been "
"generated for a packfile or multi-pack index (MIDX) with full closure (i.e. "
"where every single object in the packfile/MIDX can find its parent links "
"inside the same packfile/MIDX). This is a requirement for the bitmap index "
"format, also present in JGit, that greatly reduces the complexity of the "
"implementation."
msgstr "このフラグは常に存在する必要があります。 これは、パックファイルまたはマルチパックインデックス (MIDX) のビットマップ インデックスが完全閉鎖(closure)(つまり、 パックファイル/MIDX 内のすべての単一オブジェクトが 同一 パックファイル/MIDX 内に親リンクを見つけることができる)で生成されたことを意味します。 これは、JGit にも存在するビットマップ インデックス形式の要件であり、実装の複雑さを大幅に軽減します。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:67
msgid "BITMAP_OPT_HASH_CACHE (0x4)"
msgstr "BITMAP_OPT_HASH_CACHE (0x4)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:72
msgid ""
"If present, the end of the bitmap file contains `N` 32-bit name-hash values, "
"one per object in the pack/MIDX. The format and meaning of the name-hash is "
"described below."
msgstr "存在する場合、ビットマップ ファイルの末尾には、パック/MIDX 内のオブジェクトごとに 1 つの 32 ビットの名前ハッシュ値(Nとする)が含まれます。 name-hash の形式と意味については後述します。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:74
msgid "4-byte entry count (network byte order)"
msgstr "4バイト エントリ数(ネットワークバイトオーダー)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:76
msgid "The total count of entries (bitmapped commits) in this bitmap index."
msgstr "このビットマップ インデックス内のエントリ(ビットマップ化したコミット)の総数。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:78
msgid "20-byte checksum"
msgstr "20バイト チェックサム"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:81
msgid "The SHA1 checksum of the pack/MIDX this bitmap index belongs to."
msgstr "このビットマップ インデックスが属する パック/MIDX の SHA1 チェックサム。"

#. type: Title ===
#: ../Documentation-sedout/technical/bitmap-format.txt:82
#, no-wrap
msgid "4 EWAH bitmaps that act as type indexes"
msgstr "型インデックスとして機能する 4 つの EWAH ビットマップ"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:87
msgid ""
"Type indexes are serialized after the hash cache in the shape of four EWAH "
"bitmaps stored consecutively (see Appendix A for the serialization format of "
"an EWAH bitmap)."
msgstr "タイプ インデックスは、ハッシュ キャッシュの後ろに、連続して格納された 4 つの EWAH ビットマップの形でシリアル化されます (EWAH ビットマップのシリアル化形式については、付録 A を参照してください)。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:90
msgid ""
"There is a bitmap for each Git object type, stored in the following order:"
msgstr "Git オブジェクト タイプごとにビットマップがあり、以下の順序で格納されます:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:92
msgid "Commits"
msgstr "Commits"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:93
msgid "Trees"
msgstr "Trees"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:94
msgid "Blobs"
msgstr "Blobs"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:95
msgid "Tags"
msgstr "Tags"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:98
msgid ""
"In each bitmap, the `n`th bit is set to true if the `n`th object in the "
"packfile or multi-pack index is of that type."
msgstr "各ビットマップでは、パックファイルまたはマルチパック インデックスの n 番目のオブジェクトがそのタイプの場合、n 番目のビットが true に設定されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:102
msgid ""
"The obvious consequence is that the OR of all 4 bitmaps will result in a "
"full set (all bits set), and the AND of all 4 bitmaps will result in an "
"empty bitmap (no bits set)."
msgstr "よって、 4 つのビットマップすべての OR はフル セット (すべてのビット セット) になり、4 つのビットマップすべての AND は空のビットマップ (ビット セットなし) になります。"

#. type: Title ===
#: ../Documentation-sedout/technical/bitmap-format.txt:103
#, no-wrap
msgid "N entries with compressed bitmaps, one for each indexed commit"
msgstr "インデックス付きコミットごとに 1 つずつの、圧縮されたビットマップを含む N エントリ"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:107
msgid ""
"Where `N` is the total amount of entries in this bitmap index.  Each entry "
"contains the following:"
msgstr "「N」は、このビットマップ インデックス内のエントリの合計量です。 各エントリには以下のものが含まれます:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:109
msgid "4-byte object position (network byte order)"
msgstr "4バイト オブジェクト位置(ネットワークバイトオーダー)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:113
msgid ""
"The position **in the index for the packfile or multi-pack index** where the "
"bitmap for this commit is found."
msgstr "このコミットのビットマップが見つかった「パックファイルまたはマルチパックインデックス内」の位置。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:115
msgid "1-byte XOR-offset"
msgstr "1バイト XORオフセット"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:121
msgid ""
"The xor offset used to compress this bitmap. For an entry in position `x`, a "
"XOR offset of `y` means that the actual bitmap representing this commit is "
"composed by XORing the bitmap for this entry with the bitmap in entry `x-y` "
"(i.e.  the bitmap `y` entries before this one)."
msgstr "このビットマップの圧縮に使用される xor オフセット。 位置 `x` のエントリの場合、`y` という XOR オフセットは、このコミットを表す実際のビットマップが、エントリ `x-y` のビットマップ (つまり、このエントリより前のビットマップ `y` エントリ) との XOR によって構成されることを意味します。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:125
msgid ""
"Note that this compression can be recursive. In order to XOR this entry with "
"a previous one, the previous entry needs to be decompressed first, and so on."
msgstr "注意: この圧縮は再帰的に行うことができることに注意してください。 このエントリを前のエントリと XOR するには、前のエントリを最初に解凍する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:131
msgid ""
"The hard-limit for this offset is 160 (an entry can only be xor'ed against "
"one of the 160 entries preceding it). This number is always positive, and "
"hence entries are always xor'ed with **previous** bitmaps, not bitmaps that "
"will come afterwards in the index."
msgstr "このオフセットのハード リミットは 160 です (エントリは、その前の 160 エントリの 1 つに対してのみ xor できます)。 この数は常に正であるため、エントリは常に **前の** ビットマップと xor 演算されます。後でインデックスに追加されるビットマップではありません。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:133
msgid "1-byte flags for this bitmap"
msgstr "1バイト このビットマップのフラグ達"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:137
msgid ""
"At the moment the only available flag is `0x1`, which hints that this bitmap "
"can be re-used when rebuilding bitmap indexes for the repository."
msgstr "現時点で使用可能なフラグは「0x1」のみです。これは、リポジトリのビットマップ インデックスを再構築するときに、このビットマップを再利用できることを示唆しています。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:139
msgid "The compressed bitmap itself, see Appendix A."
msgstr "圧縮されたビットマップ自体については、付録 A を参照してください。"

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:140
#, no-wrap
msgid "Appendix A: Serialization format for an EWAH bitmap"
msgstr "付録 A: EWAH ビットマップのシリアル化形式"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:145
msgid ""
"Ewah bitmaps are serialized in the same protocol as the JAVAEWAH library, "
"making them backwards compatible with the JGit implementation:"
msgstr "Ewah ビットマップは JAVAEWAH ライブラリと同じプロトコルでシリアル化されるため、JGit 実装と下位互換性があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:147
msgid "4-byte number of bits of the resulting UNCOMPRESSED bitmap"
msgstr "4バイト 結果の非圧縮ビットマップのビット数"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:148
msgid "4-byte number of words of the COMPRESSED bitmap, when stored"
msgstr "4バイト 保存時の「圧縮」ビットマップのワード数"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:149
msgid "N x 8-byte words, as specified by the previous field"
msgstr "N × 8バイト ワード。Nは前のフィールドで指定されたとおり"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:151
msgid "This is the actual content of the compressed bitmap."
msgstr "これは、圧縮されたビットマップの実際の内容です。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:153
msgid "4-byte position of the current RLW for the compressed\tbitmap"
msgstr "4バイト 圧縮されたビットマップの現在の RLW の位置"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:156
msgid ""
"All words are stored in network byte order for their corresponding sizes."
msgstr "すべてのワードは、対応するサイズのネットワークバイトオーダーで格納されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:160
msgid ""
"The compressed bitmap is stored in a form of run-length encoding, as "
"follows.  It consists of a concatenation of an arbitrary number of chunks.  "
"Each chunk consists of one or more 64-bit words"
msgstr "圧縮されたビットマップは、以下のようにランレングス エンコーディングの形式で格納されます。 これは、任意の数のチャンクの連結で構成されます。 各チャンクは 1 つ以上の 64 ビット ワードで構成されます"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:162
#, no-wrap
msgid "     H  L_1  L_2  L_3 .... L_M\n"
msgstr "     H  L_1  L_2  L_3 .... L_M\n"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:165
msgid ""
"H is called RLW (run length word).  It consists of (from lower to higher "
"order bits):"
msgstr "H は RLW (run length word)と呼ばれる。 それは（下位ビットから上位ビットへの順番で)で構成されています:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:167
msgid "1 bit: the repeated bit B"
msgstr "1 bit: 繰り返しビット B"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:168
msgid "32 bits: repetition count K (unsigned)"
msgstr "32 bits: 繰り返し回数 K (unsigned)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:169
msgid "31 bits: literal word count M (unsigned)"
msgstr "31 bits: literal word count M (unsigned)"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:171
msgid "The bitstream represented by the above chunk is then:"
msgstr "上記のチャンクで表されるビットストリームは以下のようになります:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:173
msgid "K repetitions of B"
msgstr "B の K 回の繰り返し"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:176
msgid ""
"The bits stored in `L_1` through `L_M`.  Within a word, bits at lower order "
"come earlier in the stream than those at higher order."
msgstr "`L_1` 〜 `L_M` に格納されているビット。 ワード内では、下位のビットが上位のビットよりもストリーム内で先に到着します。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:180
msgid ""
"The next word after `L_M` (if any) must again be a RLW, for the next chunk.  "
"For efficient appending to the bitstream, the EWAH stores a pointer to the "
"last RLW in the stream."
msgstr "`L_M` の後の次のワード (存在する場合) は、次のチャンクの RLW でなければなりません。 ビットストリームに効率的に追加するために、EWAH はストリーム内の最後の RLW へのポインターを格納します。"

#. type: Title ==
#: ../Documentation-sedout/technical/bitmap-format.txt:182
#, no-wrap
msgid "Appendix B: Optional Bitmap Sections"
msgstr "Appendix B: Optional Bitmap Sections"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:186
msgid ""
"These sections may or may not be present in the `.bitmap` file; their "
"presence is indicated by the header flags section described above."
msgstr "これらのセクションは、 `.bitmap`  ファイルに存在する場合と存在しない場合があります。 それらの存在は、上記のヘッダー フラグ セクションによって示されます。"

#. type: Title -
#: ../Documentation-sedout/technical/bitmap-format.txt:188
#, no-wrap
msgid "Name-hash cache"
msgstr "Name-hash cache"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:196
msgid ""
"If the BITMAP_OPT_HASH_CACHE flag is set, the end of the bitmap contains a "
"cache of 32-bit values, one per object in the pack/MIDX. The value at "
"position `i` is the hash of the pathname at which the `i`th object (counting "
"in index or multi-pack index order) in the pack/MIDX can be found.  This can "
"be fed into the delta heuristics to compare objects with similar pathnames."
msgstr "BITMAP_OPT_HASH_CACHE フラグが設定されている場合、ビットマップの末尾には、pack/MIDX 内のオブジェクトごとに 1 つずつ、32 ビット値のキャッシュが含まれます。 位置 `i` の値は、パック/MIDX 内の `i` 番目のオブジェクト (インデックスまたはマルチパック インデックス順でカウント) が見つかるパス名のハッシュです。 これをデルタ ヒューリスティックに入力して、同様のパス名を持つオブジェクトを比較できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:198
msgid "The hash algorithm used is:"
msgstr "使用されるハッシュ アルゴリズムは以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:203
#, no-wrap
msgid ""
"    hash = 0;\n"
"    while ((c = *name++))\n"
"\t    if (!isspace(c))\n"
"\t\t    hash = (hash >> 2) + (c << 24);\n"
msgstr ""
"    hash = 0;\n"
"    while ((c = *name++))\n"
"\t    if (!isspace(c))\n"
"\t\t    hash = (hash >> 2) + (c << 24);\n"

#. type: Plain text
#: ../Documentation-sedout/technical/bitmap-format.txt:207
msgid ""
"Note that this hashing scheme is tied to the BITMAP_OPT_HASH_CACHE flag.  If "
"implementations want to choose a different hashing scheme, they are free to "
"do so, but MUST allocate a new header flag (because comparing hashes made "
"under two different schemes would be pointless)."
msgstr "注意: このハッシュ スキームは、BITMAP_OPT_HASH_CACHE フラグに関連付けられていることに注意してください。 実装が別のハッシュ スキームを選択する場合は、自由に選択できますが、新しいヘッダー フラグを割り当てなければなりません (2 つの異なるスキームで作成されたハッシュを比較しても意味がないため)。"
