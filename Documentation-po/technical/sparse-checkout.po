# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:06+0900\n"
"PO-Revision-Date: 2023-07-18 14:04+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:2
msgid "Table of contents:"
msgstr "目次:"

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:4
#: ../Documentation-sedout/technical/sparse-checkout.txt:17
#, no-wrap
msgid "Terminology"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:5
#: ../Documentation-sedout/technical/sparse-checkout.txt:95
#, no-wrap
msgid "Purpose of sparse-checkouts"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:6
#: ../Documentation-sedout/technical/sparse-checkout.txt:258
#, no-wrap
msgid "Usecases of primary concern"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:7
msgid "Oversimplified mental models (\"Cliff Notes\" for this document!)"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:8
#: ../Documentation-sedout/technical/sparse-checkout.txt:316
#, no-wrap
msgid "Desired behavior"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:9
#: ../Documentation-sedout/technical/sparse-checkout.txt:547
#, no-wrap
msgid "Behavior classes"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:10
#: ../Documentation-sedout/technical/sparse-checkout.txt:614
#, no-wrap
msgid "Subcommand-dependent defaults"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:11
#: ../Documentation-sedout/technical/sparse-checkout.txt:754
#, no-wrap
msgid "Sparse specification vs. sparsity patterns"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:12
#: ../Documentation-sedout/technical/sparse-checkout.txt:826
#, no-wrap
msgid "Implementation Questions"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:13
#: ../Documentation-sedout/technical/sparse-checkout.txt:897
#, no-wrap
msgid "Implementation Goals/Plans"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:14
#: ../Documentation-sedout/technical/sparse-checkout.txt:925
#, no-wrap
msgid "Known bugs"
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:15
#: ../Documentation-sedout/technical/sparse-checkout.txt:1055
#, no-wrap
msgid "Reference Emails"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:25
#, no-wrap
msgid ""
"cone mode: one of two modes for specifying the desired subset of files\n"
"\tin a sparse-checkout.  In cone-mode, the user specifies\n"
"\tdirectories (getting both everything under that directory as\n"
"\twell as everything in leading directories), while in non-cone\n"
"\tmode, the user specifies gitignore-style patterns.  Controlled\n"
"\tby the --[no-]cone option to sparse-checkout init|set.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:32
#, no-wrap
msgid ""
"SKIP_WORKTREE: When tracked files do not match the sparse specification "
"and\n"
"\tare removed from the working tree, the file in the index is marked\n"
"\twith a SKIP_WORKTREE bit.  Note that if a tracked file has the\n"
"\tSKIP_WORKTREE bit set but the file is later written by the user to\n"
"\tthe working tree anyway, the SKIP_WORKTREE bit will be cleared at\n"
"\tthe beginning of any subsequent Git operation.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:38
#, no-wrap
msgid ""
"\tMost sparse checkout users are unaware of this implementation\n"
"\tdetail, and the term should generally be avoided in user-facing\n"
"\tdescriptions and command flags.  Unfortunately, prior to the\n"
"\t`sparse-checkout` subcommand this low-level detail was exposed,\n"
"\tand as of time of writing, is still exposed in various places.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:44
#, no-wrap
msgid ""
"sparse-checkout: a subcommand in git used to reduce the files present in\n"
"\tthe working tree to a subset of all tracked files.  Also, the\n"
"\tname of the file in the $GIT_DIR/info directory used to track\n"
"\tthe sparsity patterns corresponding to the user's desired\n"
"\tsubset.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:46
msgid "sparse cone: see cone mode"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:54
#, no-wrap
msgid ""
"sparse directory: An entry in the index corresponding to a directory, "
"which\n"
"\tappears in the index instead of all the files under that directory\n"
"\tthat would normally appear.  See also sparse-index.  Something that\n"
"\tcan cause confusion is that the \"sparse directory\" does NOT match\n"
"\tthe sparse specification, i.e. the directory is NOT present in the\n"
"\tworking tree.  May be renamed in the future (e.g. to \"skipped\n"
"\tdirectory\").\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:62
#, no-wrap
msgid ""
"sparse index: A special mode for sparse-checkout that also makes the\n"
"\tindex sparse by recording a directory entry in lieu of all the\n"
"\tfiles underneath that directory (thus making that a \"skipped\n"
"\tdirectory\" which unfortunately has also been called a \"sparse\n"
"\tdirectory\"), and does this for potentially multiple\n"
"\tdirectories.  Controlled by the --[no-]sparse-index option to\n"
"\tinit|set|reapply.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:72
#, no-wrap
msgid ""
"sparsity patterns: patterns from $GIT_DIR/info/sparse-checkout used to\n"
"\tdefine the set of files of interest.  A warning: It is easy to\n"
"\tover-use this term (or the shortened \"patterns\" term), for two\n"
"\treasons: (1) users in cone mode specify directories rather than\n"
"\tpatterns (their directories are transformed into patterns, but\n"
"\tusers may think you are talking about non-cone mode if you use the\n"
"\tword \"patterns\"), and (b) the sparse specification might\n"
"\ttransiently differ in the working tree or index from the sparsity\n"
"\tpatterns (see \"Sparse specification vs. sparsity patterns\").\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:78
#, no-wrap
msgid ""
"sparse specification: The set of paths in the user's area of focus.  This\n"
"\tis typically just the tracked files that match the sparsity\n"
"\tpatterns, but the sparse specification can temporarily differ and\n"
"\tinclude additional files.  (See also \"Sparse specification\n"
"\tvs. sparsity patterns\")\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:81
msgid ""
"When working with history, the sparse specification is exactly the set of "
"files matching the sparsity patterns."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:84
msgid ""
"When interacting with the working tree, the sparse specification is the set "
"of tracked files with a clear SKIP_WORKTREE bit or tracked files present in "
"the working copy."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:87
msgid ""
"When modifying or showing results from the index, the sparse specification "
"is the set of files with a clear SKIP_WORKTREE bit or that differ in the "
"index from HEAD."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:89
msgid ""
"If working with the index and the working copy, the sparse specification is "
"the union of the paths from above."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:93
#, no-wrap
msgid ""
"vivifying: When a command restores a tracked file to the working tree (and\n"
"\thopefully also clears the SKIP_WORKTREE bit in the index for that\n"
"\tfile), this is referred to as \"vivifying\" the file.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:99
msgid "sparse-checkouts exist to allow users to work with a subset of their files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:105
msgid ""
"You can think of sparse-checkouts as subdividing \"tracked\" files into two "
"categories -- a sparse subset, and all the rest.  Implementationally, we "
"mark \"all the rest\" in the index with a SKIP_WORKTREE bit and leave them "
"out of the working tree.  The SKIP_WORKTREE files are still tracked, just "
"not present in the working tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:115
msgid ""
"In the past, sparse-checkouts were defined by \"SKIP_WORKTREE means the file "
"is missing from the working tree but pretend the file contents match "
"HEAD\".  That was not only bogus (it actually meant the file missing from "
"the working tree matched the index rather than HEAD), but it was also a "
"low-level detail which only provided decent behavior for a few commands.  "
"There were a surprising number of ways in which that guiding principle gave "
"command results that violated user expectations, and as such was a bad "
"mental model.  However, it persisted for many years and may still be found "
"in some corners of the code base."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:122
msgid ""
"Anyway, the idea of \"working with a subset of files\" is simple enough, but "
"there are multiple different high-level usecases which affect how some Git "
"subcommands should behave.  Further, even if we only considered one of those "
"usecases, sparse-checkouts can modify different subcommands in over a half "
"dozen different ways.  Let's start by considering the high level usecases:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:124
#, no-wrap
msgid "  A) Users are _only_ interested in the sparse portion of the repo\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:127
#, no-wrap
msgid ""
"  A*) Users are _only_ interested in the sparse portion of the repo\n"
"      that they have downloaded so far\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:129
#, no-wrap
msgid "  B) Users want a sparse working tree, but are working in a larger whole\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:135
#, no-wrap
msgid ""
"  C) sparse-checkout is a behind-the-scenes implementation detail allowing\n"
"     Git to work with a specially crafted in-house virtual file system;\n"
"     users are actually working with a \"full\" working tree that is\n"
"     lazily populated, and sparse-checkout helps with the lazy population\n"
"     piece.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:137
msgid "It may be worth explaining each of these in a bit more detail:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:140
#, no-wrap
msgid ""
"  (Behavior A) Users are _only_ interested in the sparse portion of the "
"repo\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:147
msgid ""
"These folks might know there are other things in the repository, but don't "
"care.  They are uninterested in other parts of the repository, and only want "
"to know about changes within their area of interest.  Showing them other "
"files from history (e.g. from diff/log/grep/etc.)  is a usability annoyance, "
"potentially a huge one since other changes in history may dwarf the changes "
"they are interested in."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:159
msgid ""
"Some of these users also arrive at this usecase from wanting to use partial "
"clones together with sparse checkouts (in a way where they have downloaded "
"blobs within the sparse specification) and do disconnected development.  Not "
"only do these users generally not care about other parts of the repository, "
"but consider it a blocker for Git commands to try to operate on those.  If "
"commands attempt to access paths in history outside the sparsity "
"specification, then the partial clone will attempt to download additional "
"blobs on demand, fail, and then fail the user's command.  (This may be "
"unavoidable in some cases, e.g. when `git merge` has non-trivial changes to "
"reconcile outside the sparse specification, but we should limit how often "
"users are forced to connect to the network.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:165
msgid ""
"Also, even for users using partial clones that do not mind being always "
"connected to the network, the need to download blobs as side-effects of "
"various other commands (such as the printed diffstat after a merge or pull) "
"can lead to worries about local repository size growing unnecessarily[10]."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:168
#, no-wrap
msgid ""
"  (Behavior A*) Users are _only_ interested in the sparse portion of the "
"repo\n"
"      that they have downloaded so far (a variant on the first usecase)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:178
msgid ""
"This variant is driven by folks who using partial clones together with "
"sparse checkouts and do disconnected development (so far sounding like a "
"subset of behavior A users) and doing so on very large repositories.  The "
"reason for yet another variant is that downloading even just the blobs "
"through history within their sparse specification may be too much, so they "
"only download some.  They would still like operations to succeed without "
"network connectivity, though, so things like `git log -S${SEARCH_TERM} -p` "
"or `git grep ${SEARCH_TERM} OLDREV ` would need to be prepared to provide "
"partial results that depend on what happens to have been downloaded."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:182
msgid ""
"This variant could be viewed as Behavior A with the sparse specification for "
"history querying operations modified from \"sparsity patterns\" to "
"\"sparsity patterns limited to the blobs we have already downloaded\"."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:185
#, no-wrap
msgid ""
"  (Behavior B) Users want a sparse working tree, but are working in a\n"
"      larger whole\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:187
msgid "Stolee described this usecase this way[11]:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:197
msgid ""
"\"I'm also focused on users that know that they are a part of a larger "
"whole. They know they are operating on a large repository but focus on what "
"they need to contribute their part. I expect multiple \"roles\" to use very "
"different, almost disjoint parts of the codebase. Some other \"architect\" "
"users operate across the entire tree or hop between different sections of "
"the codebase as necessary. In this situation, I'm wary of scoping too many "
"features to the sparse-checkout definition, especially \"git log,\" as it "
"can be too confusing to have their view of the codebase depend on your "
"\"point of view.\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:208
msgid ""
"People might also end up wanting behavior B due to complex inter-project "
"dependencies.  The initial attempts to use sparse-checkouts usually involve "
"the directories you are directly interested in plus what those directories "
"depend upon within your repository.  But there's a monkey wrench here: if "
"you have integration tests, they invert the hierarchy: to run integration "
"tests, you need not only what you are interested in and its in-tree "
"dependencies, you also need everything that depends upon what you are "
"interested in or that depends upon one of your dependencies...AND you need "
"all the in-tree dependencies of that expanded group.  That can easily change "
"your sparse-checkout into a nearly dense one."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:222
msgid ""
"Naturally, that tends to kill the benefits of sparse-checkouts.  There are a "
"couple solutions to this conundrum: either avoid grabbing in-repo "
"dependencies (maybe have built versions of your in-repo dependencies pulled "
"from a CI cache somewhere), or say that users shouldn't run integration "
"tests directly and instead do it on the CI server when they submit a code "
"review.  Or do both.  Regardless of whether you stub out your in-repo "
"dependencies or stub out the things that depend upon you, there is certainly "
"a reason to want to query and be aware of those other stubbed-out parts of "
"the repository, particularly when the dependencies are complex or change "
"relatively frequently.  Thus, for such uses, sparse-checkouts can be used to "
"limit what you directly build and modify, but these users do not necessarily "
"want their sparse checkout paths to limit their queries of versions in "
"history."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:231
msgid ""
"Some people may also be interested in behavior B over behavior A simply as a "
"performance workaround: if they are using non-cone mode, then they have to "
"deal with its inherent quadratic performance problems.  In that mode, every "
"operation that checks whether paths match the sparsity specification can be "
"expensive.  As such, these users may only be willing to pay for those "
"expensive checks when interacting with the working copy, and may prefer "
"getting \"unrelated\" results from their history queries over having slow "
"commands."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:234
#, no-wrap
msgid ""
"  (Behavior C) sparse-checkout is an implementational detail supporting a\n"
"\t       special VFS.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:249
msgid ""
"This usecase goes slightly against the traditional definition of "
"sparse-checkout in that it actually tries to present a full or dense "
"checkout to the user.  However, this usecase utilizes the same underlying "
"technical underpinnings in a new way which does provide some performance "
"advantages to users.  The basic idea is that a company can have an in-house "
"Git-aware Virtual File System which pretends all files are present in the "
"working tree, by intercepting all file system accesses and using those to "
"fetch and write accessed files on demand via partial clones.  The VFS uses "
"sparse-checkout to prevent Git from writing or paying attention to many "
"files, and manually updates the sparse checkout patterns itself based on "
"user access and modification of files in the working tree.  See commit "
"ecc7c8841d (\"repo_read_index: add config to expect files outside sparse "
"patterns\", 2022-02-25) and the link at [17] for a more detailed description "
"of such a VFS."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:256
msgid ""
"The biggest difference here is that users are completely unaware that the "
"sparse-checkout machinery is even in use.  The sparse patterns are not "
"specified by the user but rather are under the complete control of the VFS "
"(and the patterns are updated frequently and dynamically by it).  The user "
"will perceive the checkout as dense, and commands should thus behave as if "
"all files are present."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:263
msgid ""
"Most of the rest of this document will focus on Behavior A and Behavior B.  "
"Some notes about the other two cases and why we are not focusing on them:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:265
#, no-wrap
msgid "  (Behavior A*)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:272
msgid ""
"Supporting this usecase is estimated to be difficult and a lot of work.  "
"There are no plans to implement it currently, but it may be a potential "
"future alternative.  Knowing about the existence of additional alternatives "
"may affect our choice of command line flags (e.g. if we need tri-state or "
"quad-state flags rather than just binary flags), so it was still important "
"to at least note."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:277
msgid ""
"Further, I believe the descriptions below for Behavior A are probably still "
"valid for this usecase, with the only exception being that it redefines the "
"sparse specification to restrict it to already-downloaded blobs.  The hard "
"part is in making commands capable of respecting that modified definition."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:279
#, no-wrap
msgid "  (Behavior C)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:289
msgid ""
"This usecase violates some of the early sparse-checkout documented "
"assumptions (since files marked as SKIP_WORKTREE will be displayed to users "
"as present in the working tree).  That violation may mean various "
"sparse-checkout related behaviors are not well suited to this usecase and we "
"may need tweaks -- to both documentation and code -- to handle it.  However, "
"this usecase is also perhaps the simplest model to support in that "
"everything behaves like a dense checkout with a few exceptions (e.g. branch "
"checkouts and switches write fewer things, knowing the VFS will lazily write "
"the rest on an as-needed basis)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:292
msgid ""
"Since there is no publically available VFS-related code for folks to try, "
"the number of folks who can test such a usecase is limited."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:301
msgid ""
"The primary reason to note the Behavior C usecase is that as we fix things "
"to better support Behaviors A and B, there may be additional places where we "
"need to make tweaks allowing folks in this usecase to get the original "
"non-sparse treatment.  For an example, see ecc7c8841d (\"repo_read_index: "
"add config to expect files outside sparse patterns\", 2022-02-25).  The "
"secondary reason to note Behavior C, is so that folks taking advantage of "
"Behavior C do not assume they are part of the Behavior B camp and propose "
"patches that break things for the real Behavior B folks."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/technical/sparse-checkout.txt:303
#, no-wrap
msgid "Oversimplified mental models"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:306
msgid "An oversimplification of the differences in the above behaviors is:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:314
#, no-wrap
msgid ""
"  Behavior A: Restrict worktree and history operations to sparse "
"specification\n"
"  Behavior B: Restrict worktree operations to sparse specification; have "
"any\n"
"\t      history operations work across all files\n"
"  Behavior C: Do not restrict either worktree or history operations to the\n"
"\t      sparse specification...with the exception of branch checkouts or\n"
"\t      switches which avoid writing files that will match the index so\n"
"\t      they can later lazily be populated instead.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:326
msgid ""
"As noted previously, despite the simple idea of just working with a subset "
"of files, there are a range of different behavioral changes that need to be "
"made to different subcommands to work well with such a feature.  See "
"[1,2,3,4,5,6,7,8,9,10] for various examples.  In particular, at [2], we saw "
"that mere composition of other commands that individually worked correctly "
"in a sparse-checkout context did not imply that the higher level command "
"would work correctly; it sometimes requires further tweaks.  So, "
"understanding these differences can be beneficial."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:328
msgid "Commands behaving the same regardless of high-level use-case"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:330
msgid "commands that only look at files within the sparsity specification"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:332
#: ../Documentation-sedout/technical/sparse-checkout.txt:622
msgid "diff (without --cached or REVISION arguments)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:333
#: ../Documentation-sedout/technical/sparse-checkout.txt:623
msgid "grep (without --cached or REVISION arguments)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:334
#: ../Documentation-sedout/technical/sparse-checkout.txt:621
msgid "diff-files"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:338
msgid ""
"commands that restore files to the working tree that match sparsity "
"patterns, and remove unmodified files that don't match those patterns:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:340
#: ../Documentation-sedout/technical/sparse-checkout.txt:624
msgid "switch"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:341
#: ../Documentation-sedout/technical/sparse-checkout.txt:625
msgid "checkout (the switch-like half)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:342
#: ../Documentation-sedout/technical/sparse-checkout.txt:977
msgid "read-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:343
msgid "reset --hard"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:347
msgid ""
"commands that write conflicted files to the working tree, but otherwise will "
"omit writing files to the working tree that do not match the sparsity "
"patterns:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:349
#: ../Documentation-sedout/technical/sparse-checkout.txt:636
msgid "merge"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:350
#: ../Documentation-sedout/technical/sparse-checkout.txt:637
msgid "rebase"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:351
#: ../Documentation-sedout/technical/sparse-checkout.txt:638
msgid "cherry-pick"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:352
#: ../Documentation-sedout/technical/sparse-checkout.txt:639
msgid "revert"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:354
msgid "`am` and `apply --cached` should probably be in this section but"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:355
msgid "are buggy (see the \"Known bugs\" section below)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:358
#, no-wrap
msgid ""
"The behavior for these commands somewhat depends upon the merge\n"
"strategy being used:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:359
#, no-wrap
msgid "`ort` behaves as described above\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:360
#, no-wrap
msgid "`recursive` tries to not vivify files unnecessarily, but does sometimes\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:361
#, no-wrap
msgid "vivify files without conflicts.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:362
#, no-wrap
msgid "`octopus` and `resolve` will always vivify any file changed in the merge\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:363
#, no-wrap
msgid "relative to the first parent, which is rather suboptimal.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:371
#, no-wrap
msgid ""
"It is also important to note that these commands WILL update the index\n"
"outside the sparse specification relative to when the operation began,\n"
"BUT these commands often make a commit just before or after such that\n"
"by the end of the operation there is no change to the index outside the\n"
"sparse specification.  Of course, if the operation hits conflicts or\n"
"does not make a commit, then these operations clearly can modify the\n"
"index outside the sparse specification.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:376
msgid ""
"Finally, it is important to note that at least the first four of these "
"commands also try to remove differences between the sparse specification and "
"the sparsity patterns (much like the commands in the previous section)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:378
msgid "commands that always ignore sparsity since commits must be full-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:380
#: ../Documentation-sedout/technical/sparse-checkout.txt:654
msgid "archive"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:381
#: ../Documentation-sedout/technical/sparse-checkout.txt:655
msgid "bundle"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:382
#: ../Documentation-sedout/technical/sparse-checkout.txt:656
msgid "commit"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:383
#: ../Documentation-sedout/technical/sparse-checkout.txt:657
msgid "format-patch"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:384
#: ../Documentation-sedout/technical/sparse-checkout.txt:658
msgid "fast-export"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:385
#: ../Documentation-sedout/technical/sparse-checkout.txt:659
msgid "fast-import"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:386
#: ../Documentation-sedout/technical/sparse-checkout.txt:660
msgid "commit-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:389
msgid ""
"commands that write any modified file to the working tree (conflicted or "
"not, and whether those paths match sparsity patterns or not):"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:391
#: ../Documentation-sedout/technical/sparse-checkout.txt:662
msgid "stash"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:392
msgid "apply (without `--index` or `--cached`)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:394
msgid "Commands that may slightly differ for behavior A vs. behavior B:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:398
#, no-wrap
msgid ""
"Commands in this category behave mostly the same between the two\n"
"behaviors, but may differ in verbosity and types of warning and error\n"
"messages.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:400
msgid "commands that make modifications to which files are tracked:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:401
#: ../Documentation-sedout/technical/sparse-checkout.txt:685
msgid "add"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:402
#: ../Documentation-sedout/technical/sparse-checkout.txt:686
msgid "rm"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:403
#: ../Documentation-sedout/technical/sparse-checkout.txt:687
msgid "mv"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:404
#: ../Documentation-sedout/technical/sparse-checkout.txt:688
msgid "update-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:409
#, no-wrap
msgid ""
"The fact that files can move between the 'tracked' and 'untracked'\n"
"categories means some commands will have to treat untracked files\n"
"differently.  But if we have to treat untracked files differently,\n"
"then additional commands may also need changes:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:411
#: ../Documentation-sedout/technical/sparse-checkout.txt:689
msgid "status"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:412
msgid "clean"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:417
#, no-wrap
msgid ""
"In particular, `status` may need to report any untracked files outside\n"
"the sparsity specification as an erroneous condition (especially to\n"
"avoid the user trying to `git add` them, forcing `git add` to display\n"
"an error).\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:420
msgid ""
"It's not clear to me exactly how (or even if) `clean` would change, but it's "
"the other command that also affects untracked files."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:424
msgid ""
"`update-index` may be slightly special.  Its --[no-]skip-worktree flag may "
"need to ignore the sparse specification by its nature.  Also, its current "
"--[no-]ignore-skip-worktree-entries default is totally bogus."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:426
msgid "commands for manually tweaking paths in both the index and the working tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:427
msgid "`restore`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:428
msgid "the restore-like half of `checkout`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:432
#, no-wrap
msgid ""
"These commands should be similar to add/rm/mv in that they should\n"
"only operate on the sparse specification by default, and require a\n"
"special flag to operate on all files.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:435
msgid ""
"Also, note that these commands currently have a number of issues (see the "
"\"Known bugs\" section below)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:437
msgid "Commands that significantly differ for behavior A vs. behavior B:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:439
msgid "commands that query history"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:440
#: ../Documentation-sedout/technical/sparse-checkout.txt:721
msgid "diff (with --cached or REVISION arguments)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:441
#: ../Documentation-sedout/technical/sparse-checkout.txt:722
msgid "grep (with --cached or REVISION arguments)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:442
#: ../Documentation-sedout/technical/sparse-checkout.txt:723
msgid "show (when given commit arguments)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:443
msgid "blame (only matters when one or more -C flags are passed)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:444
#: ../Documentation-sedout/technical/sparse-checkout.txt:725
msgid "and annotate"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:445
#: ../Documentation-sedout/technical/sparse-checkout.txt:726
msgid "log"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:446
msgid "whatchanged"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:447
#: ../Documentation-sedout/technical/sparse-checkout.txt:728
msgid "ls-files"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:448
#: ../Documentation-sedout/technical/sparse-checkout.txt:729
msgid "diff-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:449
#: ../Documentation-sedout/technical/sparse-checkout.txt:730
msgid "diff-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:450
#: ../Documentation-sedout/technical/sparse-checkout.txt:731
msgid "ls-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:456
#, no-wrap
msgid ""
"Note: for log and whatchanged, revision walking logic is unaffected\n"
"but displaying of patches is affected by scoping the command to the\n"
"sparse-checkout.  (The fact that revision walking is unaffected is\n"
"why rev-list, shortlog, show-branch, and bisect are not in this\n"
"list.)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:460
msgid ""
"ls-files may be slightly special in that e.g. `git ls-files -t` is often "
"used to see what is sparse and what is not.  Perhaps -t should always work "
"on the full tree?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:462
msgid "Commands I don't know how to classify"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:464
msgid "range-diff"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:466
#, no-wrap
msgid "Is this like `log` or `format-patch`?\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:468
msgid "cherry"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:470
#, no-wrap
msgid "See range-diff\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:472
msgid "Commands unaffected by sparse-checkouts"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:474
msgid "shortlog"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:475
msgid "show-branch"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:476
msgid "rev-list"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:477
msgid "bisect"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:479
msgid "branch"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:480
msgid "describe"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:481
msgid "fetch"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:482
msgid "gc"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:483
msgid "init"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:484
msgid "maintenance"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:485
msgid "notes"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:486
msgid "pull (merge & rebase have the necessary changes)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:487
msgid "push"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:488
msgid "submodule"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:489
msgid "tag"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:491
msgid "config"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:492
msgid "filter-branch (works in separate checkout without sparse-checkout setup)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:493
msgid "pack-refs"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:494
msgid "prune"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:495
msgid "remote"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:496
msgid "repack"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:497
msgid "replace"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:499
msgid "bugreport"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:500
msgid "count-objects"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:501
msgid "fsck"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:502
msgid "gitweb"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:503
msgid "help"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:504
msgid "instaweb"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:505
msgid ""
"merge-tree (doesn't touch worktree or index, and merges always compute "
"full-tree)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:506
msgid "rerere"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:507
msgid "verify-commit"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:508
msgid "verify-tag"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:510
msgid "commit-graph"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:511
msgid "hash-object"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:512
msgid "index-pack"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:513
msgid "mktag"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:514
msgid "mktree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:515
msgid "multi-pack-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:516
msgid "pack-objects"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:517
msgid "prune-packed"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:518
msgid "symbolic-ref"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:519
msgid "unpack-objects"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:520
msgid "update-ref"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:521
msgid "write-tree (operates on index, possibly optimized to use sparse dir entries)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:523
msgid "for-each-ref"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:524
msgid "get-tar-commit-id"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:525
msgid "ls-remote"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:526
msgid "merge-base (merges are computed full tree, so merge base should be too)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:527
msgid "name-rev"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:528
msgid "pack-redundant"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:529
msgid "rev-parse"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:530
msgid "show-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:531
msgid "show-ref"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:532
msgid "unpack-file"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:533
msgid "var"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:534
msgid "verify-pack"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:536
msgid "<Everything under 'Interacting with Others' in 'git help --all'>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:537
msgid "<Everything under 'Low-level...Syncing' in 'git help --all'>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:538
msgid "<Everything under 'Low-level...Internal Helpers' in 'git help --all'>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:539
msgid "<Everything under 'External commands' in 'git help --all'>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:541
msgid "Commands that might be affected, but who cares?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:543
msgid "merge-file"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:544
msgid "merge-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:545
msgid "gitk?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:550
msgid "From the above there are a few classes of behavior:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:552
msgid "\"restrict\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:555
#, no-wrap
msgid ""
"Commands in this class only read or write files in the working tree\n"
"within the sparse specification.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:561
msgid ""
"When moving to a new commit (e.g. switch, reset --hard), these commands may "
"update index files outside the sparse specification as of the start of the "
"operation, but by the end of the operation those index files will match HEAD "
"again and thus those files will again be outside the sparse specification."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:565
msgid ""
"When paths are explicitly specified, these paths are intersected with the "
"sparse specification and will only operate on such paths.  (e.g. `git "
"restore [--staged] -- '*.png'`, `git reset -p -- '*.md'`)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:573
msgid ""
"Some of these commands may also attempt, at the end of their operation, to "
"cull transient differences between the sparse specification and the sparsity "
"patterns (see \"Sparse specification vs. sparsity patterns\" for details, "
"but this basically means either removing unmodified files not matching the "
"sparsity patterns and marking those files as SKIP_WORKTREE, or vivifying "
"files that match the sparsity patterns and marking those files as "
"!SKIP_WORKTREE)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:575
msgid "\"restrict modulo conflicts\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:578
#, no-wrap
msgid ""
"Commands in this class generally behave like the \"restrict\" class,\n"
"except that:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:579
#, no-wrap
msgid "they will ignore the sparse specification and write files with\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:581
#, no-wrap
msgid ""
"conflicts to the working tree (thus temporarily expanding the\n"
"sparse specification to include such files.)\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:582
#, no-wrap
msgid "they are grouped with commands which move to a new commit, since\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:590
#, no-wrap
msgid ""
"they often create a commit and then move to it, even though we\n"
"know there are many exceptions to moving to the new commit.  (For\n"
"example, the user may rebase a commit that becomes empty, or have\n"
"a cherry-pick which conflicts, or a user could run `merge\n"
"--no-commit`, and we also view `apply --index` kind of like `am\n"
"--no-commit`.)  As such, these commands can make changes to index\n"
"files outside the sparse specification, though they'll mark such\n"
"files with SKIP_WORKTREE.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:592
msgid "\"restrict also specially applied to untracked files\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:600
#, no-wrap
msgid ""
"Commands in this class generally behave like the \"restrict\" class,\n"
"except that they have to handle untracked files differently too, often\n"
"because these commands are dealing with files changing state between\n"
"'tracked' and 'untracked'.  Often, this may mean printing an error\n"
"message if the command had nothing to do, but the arguments may have\n"
"referred to files whose tracked-ness state could have changed were it\n"
"not for the sparsity patterns excluding them.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:602
msgid "\"no restrict\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:604
#, no-wrap
msgid "Commands in this class ignore the sparse specification entirely.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:606
msgid "\"restrict or no restrict dependent upon behavior A vs. behavior B\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:612
#, no-wrap
msgid ""
"Commands in this class behave like \"no restrict\" for folks in the\n"
"behavior B camp, and like \"restrict\" for folks in the behavior A camp.\n"
"However, when behaving like \"restrict\" a warning of some sort might be\n"
"provided that history queries have been limited by the sparse-checkout\n"
"specification.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:618
msgid ""
"Note that we have different defaults depending on the command for the "
"desired behavior :"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:620
msgid "Commands defaulting to \"restrict\":"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:626
msgid "reset (<commit>)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:628
msgid "restore"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:629
msgid "checkout (the restore-like half)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:630
msgid "checkout-index"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:631
msgid "reset (with pathspec)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:633
#, no-wrap
msgid "This behavior makes sense; these interact with the working tree.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:635
msgid "Commands defaulting to \"restrict modulo conflicts\":"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:641
msgid "am"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:642
msgid "apply --index (which is kind of like an `am --no-commit`)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:644
msgid "read-tree (especially with -m or -u; is kind of like a --no-commit merge)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:645
msgid "reset (<tree-ish>, due to similarity to read-tree)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:649
#, no-wrap
msgid ""
"These also interact with the working tree, but require slightly\n"
"different behavior either so that (a) conflicts can be resolved or (b)\n"
"because they are kind of like a merge-without-commit operation.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:651
msgid "(See also the \"Known bugs\" section below regarding `am` and `apply`)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:653
msgid "Commands defaulting to \"no restrict\":"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:663
msgid "apply (without `--index`)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:666
#, no-wrap
msgid ""
"These have completely different defaults and perhaps deserve the most\n"
"detailed explanation:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:674
msgid ""
"In the case of commands in the first group (format-patch, fast-export, "
"bundle, archive, etc.), these are commands for communicating history, which "
"will be broken if they restrict to a subset of the repository.  As such, "
"they operate on full paths and have no `--restrict` option for overriding.  "
"Some of these commands may take paths for manually restricting what is "
"exported, but it needs to be very explicit."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:677
msgid ""
"In the case of stash, it needs to vivify files to avoid losing the user's "
"changes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:682
msgid ""
"In the case of apply without `--index`, that command needs to update the "
"working tree without the index (or the index without the working tree if "
"`--cached` is passed), and if we restrict those updates to the sparse "
"specification then we'll lose changes from the user."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:684
msgid ""
"Commands defaulting to \"restrict also specially applied to untracked "
"files\":"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:690
msgid "clean (?)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:693
#, no-wrap
msgid ""
"Our original implementation for the first three of these commands was\n"
"\"no restrict\", but it had some severe usability issues:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:694
#, no-wrap
msgid "`git add <somefile>` if honored and outside the sparse\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:698
#, no-wrap
msgid ""
"specification, can result in the file randomly disappearing later\n"
"when some subsequent command is run (since various commands\n"
"automatically clean up unmodified files outside the sparse\n"
"specification).\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:699
#, no-wrap
msgid "`git rm '*.jpg'` could very negatively surprise users if it deletes\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:700
#, no-wrap
msgid "files outside the range of the user's interest.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:701
#, no-wrap
msgid "`git mv` has similar surprises when moving into or out of the cone,\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:702
#, no-wrap
msgid "so best to restrict by default\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:710
#, no-wrap
msgid ""
"So, we switched `add` and `rm` to default to \"restrict\", which made\n"
"usability problems much less severe and less frequent, but we still got\n"
"complaints because commands like:\n"
"git add <file-outside-sparse-specification>\n"
"git rm <file-outside-sparse-specification>\n"
"would silently do nothing.  We should instead print an error in those\n"
"cases to get usability right.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:713
msgid ""
"update-index needs to be updated to match, and status and maybe clean also "
"need to be updated to specially handle untracked paths."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:716
msgid ""
"There may be a difference in here between behavior A and behavior B in terms "
"of verboseness of errors or additional warnings."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:719
msgid ""
"Commands falling under \"restrict or no restrict dependent upon behavior A "
"vs. behavior B\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:724
msgid "blame (only matters when one or more -C flags passed)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:727
msgid "and variants: shortlog, gitk, show-branch, whatchanged, rev-list"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:734
#, no-wrap
msgid ""
"For now, we default to behavior B for these, which want a default of\n"
"\"no restrict\".\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:742
msgid ""
"Note that two of these commands -- diff and grep -- also appeared in a "
"different list with a default of \"restrict\", but only when limited to "
"searching the working tree.  The working tree vs. history distinction is "
"fundamental in how behavior B operates, so this is expected.  Note, though, "
"that for diff and grep with --cached, when doing \"restrict\" behavior, the "
"difference between sparse specification and sparsity patterns is important "
"to handle."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:752
msgid ""
"\"restrict\" may make more sense as the long term default for these[12].  "
"Also, supporting \"restrict\" for these commands might be a fair amount of "
"work to implement, meaning it might be implemented over multiple releases.  "
"If that behavior were the default in the commands that supported it, that "
"would force behavior B users to need to learn to slowly add additional flags "
"to their commands, depending on git version, to get the behavior they want.  "
"That gradual switchover would be painful, so we should avoid it at least "
"until it's fully implemented."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:759
msgid ""
"In a well-behaved situation, the sparse specification is given directly by "
"the $GIT_DIR/info/sparse-checkout file.  However, it can transiently diverge "
"for a few reasons:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:761
msgid "needing to resolve conflicts (merging will vivify conflicted files)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:762
msgid "running Git commands that implicitly vivify files (e.g. \"git stash apply\")"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:764
msgid ""
"running Git commands that explicitly vivify files (e.g. \"git checkout "
"--ignore-skip-worktree-bits FILENAME\")"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:766
msgid ""
"other commands that write to these files (perhaps a user copies it from "
"elsewhere)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:771
msgid ""
"For the last item, note that we do automatically clear the SKIP_WORKTREE bit "
"for files that are present in the working tree.  This has been true since "
"82386b4496 (\"Merge branch 'en/present-despite-skipped'\", 2022-03-09)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:773
msgid "However, such a situation is transient because:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:777
msgid ""
"Such transient differences can and will be automatically removed as a "
"side-effect of commands which call unpack_trees() (checkout, merge, reset, "
"etc.)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:780
msgid ""
"Users can also request such transient differences be corrected via running "
"`git sparse-checkout reapply`.  Various places recommend running that "
"command."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:782
msgid ""
"Additional commands are also welcome to implicitly fix these differences; we "
"may add more in the future."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:788
msgid ""
"While we avoid dropping unstaged changes or files which have conflicts, we "
"otherwise aggressively try to fix these transient differences.  If users "
"want these differences to persist, they should run the `set` or `add` "
"subcommands of `git sparse-checkout` to reflect their intended sparse "
"specification."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:792
msgid ""
"However, when we need to do a query on history restricted to the \"relevant "
"subset of files\" such a transiently expanded sparse specification is "
"ignored.  There are a couple reasons for this:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:794
msgid "The behavior wanted when doing something like"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:798
msgid ""
"git grep expression REVISION is roughly what the users would expect from git "
"checkout REVISION && git grep expression (modulo a \"REVISION:\" prefix), "
"which has a couple ramifications:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:801
msgid ""
"REVISION may have paths not in the current index, so there is no path we can "
"consult for a SKIP_WORKTREE setting for those paths."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:807
msgid ""
"Since `checkout` is one of those commands that tries to remove transient "
"differences in the sparse specification, it makes sense to use the corrected "
"sparse specification (i.e. $GIT_DIR/info/sparse-checkout) rather than "
"attempting to consult SKIP_WORKTREE anyway."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:811
msgid ""
"So, a transiently expanded (or restricted) sparse specification applies to "
"the working tree, but not to history queries where we always use the "
"sparsity patterns.  (See [16] for an early discussion of this.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:824
msgid ""
"Similar to a transiently expanded sparse specification of the working tree "
"based on additional files being present in the working tree, we also need to "
"consider additional files being modified in the index.  In particular, if "
"the user has staged changes to files (relative to HEAD) that do not match "
"the sparsity patterns, and the file is not present in the working tree, we "
"still want to consider the file part of the sparse specification if we are "
"specifically performing a query related to the index (e.g. git diff --cached "
"[REVISION], git diff-index [REVISION], git restore --staged "
"--source=REVISION -- PATHS, etc.)  Note that a transiently expanded sparse "
"specification for the index usually only matters under behavior A, since "
"under behavior B index operations are lumped with history and tend to "
"operate full-tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:830
msgid ""
"Do the options --scope={sparse,all} sound good to others? Are there better "
"options?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:831
msgid "Names in use, or appearing in patches, or previously suggested:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:832
msgid "--sparse/--dense"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:833
msgid "--ignore-skip-worktree-bits"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:834
msgid "--ignore-skip-worktree-entries"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:835
msgid "--ignore-sparsity"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:836
msgid "--[no-]restrict-to-sparse-paths"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:837
msgid "--full-tree/--sparse-tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:838
msgid "--[no-]restrict"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:839
msgid "--scope={sparse,all}"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:840
msgid "--focus/--unfocus"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:841
msgid "--limit/--unlimited"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:842
msgid "Rationale making me lean slightly towards --scope={sparse,all}:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:843
msgid "We want a name that works for many commands, so we need a name that"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:844
msgid "does not conflict"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:845
msgid "We know that we have more than two possible usecases, so it is best"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:846
msgid "to avoid a flag that appears to be binary."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:847
msgid "--scope={sparse,all} isn't overly long and seems relatively"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:848
msgid "explanatory"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:849
msgid "`--sparse`, as used in add/rm/mv, is totally backwards for"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:853
msgid ""
"grep/log/etc.  Changing the meaning of `--sparse` for these commands would "
"fix the backwardness, but possibly break existing scripts.  Using a new name "
"pairing would allow us to treat `--sparse` in these commands as a deprecated "
"alias."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:854
msgid "There is a different `--sparse`/`--dense` pair for commands using"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:855
msgid "revision machinery, so using that naming might cause confusion"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:856
msgid "There is also a `--sparse` in both pack-objects and show-branch, which"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:857
msgid "don't conflict but do suggest that `--sparse` is overloaded"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:858
msgid "The name --ignore-skip-worktree-bits is a double negative, is"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:863
msgid ""
"quite a mouthful, refers to an implementation detail that many users may not "
"be familiar with, and we'd need a negation for it which would probably be "
"even more ridiculously long.  (But we can make --ignore-skip-worktree-bits a "
"deprecated alias for --no-restrict.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:872
msgid ""
"If a config option is added (sparse.scope?) what should the values and "
"description be? \"sparse\" (behavior A), \"worktree-sparse-history-dense\" "
"(behavior B), \"dense\" (behavior C)? There's a risk of confusion, because "
"even for Behaviors A and B we want some commands to be full-tree and others "
"to operate sparsely, so the wording may need to be more tied to the usecases "
"and somehow explain that.  Also, right now, the primary difference we are "
"focusing is just the history-querying commands (log/diff/grep).  Previous "
"config suggestion here: [13]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:878
msgid ""
"Is `--no-expand` a good alias for ls-files's `--sparse` option? (`--sparse` "
"does not map to either `--scope=sparse` or `--scope=all`, because in "
"non-cone mode it does nothing and in cone-mode it shows the sparse directory "
"entries which are technically outside the sparse specification)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:880
msgid "Under Behavior A:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:882
msgid ""
"Does ls-files' `--no-expand` override the default `--scope=all`, or does it "
"need an extra flag?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:883
msgid "Does ls-files' `-t` option imply `--scope=all`?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:884
msgid "Does update-index's `--[no-]skip-worktree` option imply `--scope=all`?"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:895
msgid ""
"sparse-checkout: once behavior A is fully implemented, should we take an "
"interim measure to ease people into switching the default? Namely, if folks "
"are not already in a sparse checkout, then require `sparse-checkout "
"init/set` to take a "
"`--set-scope=(sparse|worktree-sparse-history-dense|dense)` flag (which would "
"set sparse.scope according to the setting given), and throw an error if the "
"flag is not provided? That error would be a great place to warn folks that "
"the default may change in the future, and get them used to specifying what "
"they want so that the eventual default switch is seamless for them."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:900
msgid "Get buy-in on this document in general."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:902
msgid "Figure out answers to the 'Implementation Questions' sections (above)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:904
msgid "Fix bugs in the 'Known bugs' section (below)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:907
msgid ""
"Provide some kind of method for backfilling the blobs within the sparse "
"specification in a partial clone"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:909
#, no-wrap
msgid ""
"[Below here is kind of spitballing since the first two haven't been "
"resolved]\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:913
msgid ""
"update-index: flip the default to --no-ignore-skip-worktree-entries, nuke "
"this stupid \"Oh, there's a bug? Let me add a flag to let users request that "
"they not trigger this bug.\" flag"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:915
msgid "Flags & Config"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:916
msgid "Make `--sparse` in add/rm/mv a deprecated alias for `--scope=all`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:918
msgid ""
"Make `--ignore-skip-worktree-bits` in checkout-index/checkout/restore a "
"deprecated aliases for `--scope=all`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:920
msgid "Create config option (sparse.scope?), tie it to the \"Cliff notes\" overview"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:924
msgid ""
"Add --scope=sparse (and --scope=all) flag to each of the history querying "
"commands.  IMPORTANT: make sure diff machinery changes don't mess with "
"format-patch, fast-export, etc."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:929
msgid ""
"This list used to be a lot longer (see e.g. [1,2,3,4,5,6,7,8,9]), but we've "
"been working on it."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:932
msgid ""
"Behavior A is not well supported in Git.  (Behavior B didn't used to be "
"either, but was the easier of the two to implement.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:934
msgid "am and apply:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:940
#, no-wrap
msgid ""
"apply, without `--index` or `--cached`, relies on files being present\n"
"in the working copy, and also writes to them unconditionally.  As\n"
"such, it should first check for the files' presence, and if found to\n"
"be SKIP_WORKTREE, then clear the bit and vivify the paths, then do\n"
"its work.  Currently, it just throws an error.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:945
msgid ""
"apply, with either `--cached` or `--index`, will not preserve the "
"SKIP_WORKTREE bit.  This is fine if the file has conflicts, but otherwise "
"SKIP_WORKTREE bits should be preserved for --cached and probably also for "
"--index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:952
msgid ""
"am, if there are no conflicts, will vivify files and fail to preserve the "
"SKIP_WORKTREE bit.  If there are conflicts and `-3` is not specified, it "
"will vivify files and then complain the patch doesn't apply.  If there are "
"conflicts and `-3` is specified, it will vivify files and then complain that "
"those vivified files would be overwritten by merge."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:954
msgid "reset --hard:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:957
#, no-wrap
msgid ""
"reset --hard provides confusing error message (works correctly, but\n"
"misleads the user into believing it didn't):\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:972
#, no-wrap
msgid ""
"$ touch addme\n"
"$ git add addme\n"
"$ git ls-files -t\n"
"H addme\n"
"H tracked\n"
"S tracked-but-maybe-skipped\n"
"$ git reset --hard                           # usually works great\n"
"error: Path 'addme' not uptodate; will not remove from working tree.\n"
"HEAD is now at bdbbb6f third\n"
"$ git ls-files -t\n"
"H tracked\n"
"S tracked-but-maybe-skipped\n"
"$ ls -1\n"
"tracked\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:975
msgid ""
"`git reset --hard` DID remove addme from the index and the working tree, "
"contrary to the error message, but in line with how reset --hard should "
"behave."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:981
#, no-wrap
msgid ""
"`read-tree` doesn't apply the 'SKIP_WORKTREE' bit to *any* of the\n"
"entries it reads into the index, resulting in all your files suddenly\n"
"appearing to be \"deleted\".\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:983
msgid "Checkout, restore:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:985
#, no-wrap
msgid "These command do not handle path & revision arguments appropriately:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1010
#, no-wrap
msgid ""
"$ ls\n"
"tracked\n"
"$ git ls-files -t\n"
"H tracked\n"
"S tracked-but-maybe-skipped\n"
"$ git status --porcelain\n"
"$ git checkout -- '*skipped'\n"
"error: pathspec '*skipped' did not match any file(s) known to git\n"
"$ git ls-files -- '*skipped'\n"
"tracked-but-maybe-skipped\n"
"$ git checkout HEAD -- '*skipped'\n"
"error: pathspec '*skipped' did not match any file(s) known to git\n"
"$ git ls-tree HEAD | grep skipped\n"
"100644 blob "
"276f5a64354b791b13840f02047738c77ad0584f\ttracked-but-maybe-skipped\n"
"$ git status --porcelain\n"
"$ git checkout HEAD~1 -- '*skipped'\n"
"$ git ls-files -t\n"
"H tracked\n"
"H tracked-but-maybe-skipped\n"
"$ git status --porcelain\n"
"M  tracked-but-maybe-skipped\n"
"$ git checkout HEAD -- '*skipped'\n"
"$ git status --porcelain\n"
"$\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1014
msgid ""
"Note that checkout without a revision (or restore --staged) fails to find a "
"file to restore from the index, even though ls-files shows such a file "
"certainly exists."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1018
msgid ""
"Similar issues occur with HEAD (--source=HEAD in restore's case), but "
"suddenly works when HEAD~1 is specified.  And then after that it will work "
"with HEAD specified, even though it didn't before."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1020
msgid "Directories are also an issue:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1025
msgid ""
"$ git sparse-checkout set nomatches $ git status On branch main You are in a "
"sparse checkout with 0% of tracked files present."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1034
msgid ""
"nothing to commit, working tree clean $ git checkout .  error: pathspec '.' "
"did not match any file(s) known to git $ git checkout HEAD~1 .  Updated 1 "
"path from 58916d9 $ git ls-files -t S tracked H tracked-but-maybe-skipped"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1036
msgid "checkout and restore --staged, continued:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1040
#, no-wrap
msgid ""
"These commands do not correctly scope operations to the sparse\n"
"specification, and make it worse by not setting important SKIP_WORKTREE\n"
"bits:\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1046
msgid ""
"$ git restore --source OLDREV --staged outside-sparse-cone/ $ git status "
"--porcelain MD outside-sparse-cone/file1 MD outside-sparse-cone/file2 MD "
"outside-sparse-cone/file3"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1050
msgid ""
"We can add a --scope=all mode to `git restore` to let it operate outside the "
"sparse specification, but then it will be important to set the SKIP_WORKTREE "
"bits appropriately."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1052
msgid "Performance issues; see:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1053
msgid "https://lore.kernel.org/git/CABPp-BEkJQoKZsQGCYioyga_uoDQ6iBeW+FKr8JhyuuTMK1RDw@mail.gmail.com/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1058
msgid "Emails that detail various bugs we've had in sparse-checkout:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1081
#, no-wrap
msgid ""
"[1] (Original descriptions of behavior A & behavior B)\n"
"    "
"https://lore.kernel.org/git/CABPp-BGJ_Nvi5TmgriD9Bh6eNXE2EDq2f8e8QKXAeYG3BxZafA@mail.gmail.com/\n"
"[2] (Fix stash applications in sparse checkouts; bugs from behavioral "
"differences)\n"
"    "
"https://lore.kernel.org/git/ccfedc7140dbf63ba26a15f93bd3885180b26517.1606861519.git.gitgitgadget@gmail.com/\n"
"[3] (Present-despite-skipped entries)\n"
"    "
"https://lore.kernel.org/git/11d46a399d26c913787b704d2b7169cafc28d639.1642175983.git.gitgitgadget@gmail.com/\n"
"[4] (Clone --no-checkout interaction)\n"
"    "
"https://lore.kernel.org/git/pull.801.v2.git.git.1591324899170.gitgitgadget@gmail.com/ "
"(clone --no-checkout)\n"
"[5] (The need for update_sparsity() and avoiding `read-tree -mu HEAD`)\n"
"    "
"https://lore.kernel.org/git/3a1f084641eb47515b5a41ed4409a36128913309.1585270142.git.gitgitgadget@gmail.com/\n"
"[6] (SKIP_WORKTREE is advisory, not mandatory)\n"
"    "
"https://lore.kernel.org/git/844306c3e86ef67591cc086decb2b760e7d710a3.1585270142.git.gitgitgadget@gmail.com/\n"
"[7] (`worktree add` should copy sparsity settings from current worktree)\n"
"    "
"https://lore.kernel.org/git/c51cb3714e7b1d2f8c9370fe87eca9984ff4859f.1644269584.git.gitgitgadget@gmail.com/\n"
"[8] (Avoid negative surprises in add, rm, and mv)\n"
"    "
"https://lore.kernel.org/git/cover.1617914011.git.matheus.bernardino@usp.br/\n"
"    "
"https://lore.kernel.org/git/pull.1018.v4.git.1632497954.gitgitgadget@gmail.com/\n"
"[9] (Move from out-of-cone to in-cone)\n"
"    "
"https://lore.kernel.org/git/20220630023737.473690-6-shaoxuan.yuan02@gmail.com/\n"
"    "
"https://lore.kernel.org/git/20220630023737.473690-4-shaoxuan.yuan02@gmail.com/\n"
"[10] (Unnecessarily downloading objects outside sparse specification)\n"
"     "
"https://lore.kernel.org/git/CAOLTT8QfwOi9yx_qZZgyGa8iL8kHWutEED7ok_jxwTcYT_hf9Q@mail.gmail.com/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1084
#, no-wrap
msgid ""
"[11] (Stolee's comments on high-level usecases)\n"
"     "
"https://lore.kernel.org/git/1a1e33f6-3514-9afc-0a28-5a6b85bd8014@gmail.com/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1086
msgid "[12] Others commenting on eventually switching default to behavior A:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1087
msgid "https://lore.kernel.org/git/xmqqh719pcoo.fsf@gitster.g/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1088
msgid "https://lore.kernel.org/git/xmqqzgeqw0sy.fsf@gitster.g/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1089
msgid "https://lore.kernel.org/git/a86af661-cf58-a4e5-0214-a67d3a794d7e@github.com/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1091
msgid "[13] Previous config name suggestion and description"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1092
msgid "https://lore.kernel.org/git/CABPp-BE6zW0nJSStcVU=_DoDBnPgLqOR8pkTXK3dW11=T01OhA@mail.gmail.com/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1095
#, no-wrap
msgid ""
"[14] Tangential issue: switch to cone mode as default sparse specification "
"mechanism:\n"
"  "
"https://lore.kernel.org/git/a1b68fd6126eb341ef3637bb93fedad4309b36d0.1650594746.git.gitgitgadget@gmail.com/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1097
msgid "[15] Lengthy email on grep behavior, covering what should be searched:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1098
msgid "https://lore.kernel.org/git/CABPp-BGVO3QdbfE84uF_3QDF0-y2iHHh6G5FAFzNRfeRitkuHw@mail.gmail.com/"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1102
#, no-wrap
msgid ""
"[16] Email explaining sparsity patterns vs. SKIP_WORKTREE and history "
"operations,\n"
"     search for the parenthetical comment starting \"We do not check\".\n"
"    "
"https://lore.kernel.org/git/CABPp-BFsCPPNOZ92JQRJeGyNd0e-TCW-LcLyr0i_+VSQJP+GCg@mail.gmail.com/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/technical/sparse-checkout.txt:1103
msgid ""
"[17] "
"https://lore.kernel.org/git/20220207190320.2960362-1-jonathantanmy@google.com/"
msgstr ""
