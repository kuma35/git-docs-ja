# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 05:35+0900\n"
"PO-Revision-Date: 2022-02-28 08:02+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/pack-heuristics.txt:2
#, no-wrap
msgid "Concerning Git's Packing Heuristics"
msgstr "Concerning Git's Packing Heuristics"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:5
#, no-wrap
msgid "        Oh, here's a really stupid question:\n"
msgstr "        こいつぁ、まったく馬鹿げた質問だけどな:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:9
#, no-wrap
msgid ""
"                  Where do I go\n"
"               to learn the details\n"
"\t    of Git's packing heuristics?\n"
msgstr ""
"                  Gitの\n"
"               パッキングヒューリスティックの\n"
"\t    詳細はどこいきゃ確認できるんだい？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:11
msgid "Be careful what you ask!"
msgstr "実に興味深い質問だね！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:14
msgid ""
"Followers of the Git, please open the Git IRC Log and turn to February 10, "
"2006."
msgstr "Gitのフォロワーは、Git IRCログを開いて、2006年2月10日を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:18
msgid ""
"It's a rare occasion, and we are joined by the King Git Himself, Linus "
"Torvalds (linus).  Nathaniel Smith, (njs`), has the floor and seeks "
"enlightenment.  Others are present, but silent."
msgstr "珍しいことに、King Git自身、Linus Torvalds（linus）が参加しています。 ナサニエル・スミス（njs`）は床を持っており、悟りを求めています。 他の人々は存在しますが、沈黙しています。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:20
msgid "Let's listen in!"
msgstr "諸君聞き給え！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:26
#, no-wrap
msgid ""
"    <njs`> Oh, here's a really stupid question -- where do I go to\n"
"\tlearn the details of Git's packing heuristics?  google avails\n"
"        me not, reading the source didn't help a lot, and wading\n"
"        through the whole mailing list seems less efficient than any\n"
"        of that.\n"
msgstr ""
"    <njs`> ええっと、本当にアホな質問するけど、\n"
"\\tGitのパッキングヒューリスティックの詳細はどこで確認すりゃいいんだい？\n"
"        ググっても分からんし、\n"
"        ソースを読んでも役に立たんかったし、\n"
"        そしてメーリングリスト全体を探し歩くなんてやりたくもない。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:32
msgid ""
"It is a bold start! A plea for help combined with a simultaneous tri-part "
"attack on some of the tried and true mainstays in the quest for "
"enlightenment.  Brash accusations of google being useless. Hubris! Maligning "
"the source.  Heresy! Disdain for the mailing list archives.  Woe."
msgstr "大胆な語り口です！ 助けを乞う振りして探求者を三段構えで攻撃しています。グーグルが役に立たないという大げさな非難！ソースの自信たっぷりな悪用！ありがたーいメーリングリストのアーカイブを軽蔑する異端者！ 災いあれ"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:35
#, no-wrap
msgid ""
"    <pasky> yes, the packing-related delta stuff is somewhat\n"
"        mysterious even for me ;)\n"
msgstr ""
"    <pasky> ええ、パッキング関連のデルタとかは\n"
"        私にとってさえちょっぴり神秘的です ;)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:37
msgid "Ah! Modesty after all."
msgstr "ひたすら謙虚だぬ。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:42
#, no-wrap
msgid ""
"    <linus> njs, I don't think the docs exist. That's something where\n"
"\t I don't think anybody else than me even really got involved.\n"
"\t Most of the rest of Git others have been busy with (especially\n"
"\t Junio), but packing nobody touched after I did it.\n"
msgstr ""
"    <linus> njs、ドキュメントは存在しないと思うわ。\n"
"\t それは私以外の誰も実際に関与した事が無いと思う。\n"
"\t Gitの他のほとんど（特にJunio）は活発で忙しいですが、\n"
"\t 私がそれを行った後、誰も触れませんでした。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:46
msgid ""
"It's cryptic, yet vague.  Linus in style for sure.  Wise men interpret this "
"as an apology.  A few argue it is merely a statement of fact."
msgstr "不可解であいまいですが、これは確かにLinusスタイルです。賢人はこれを謝罪と解釈します。ごくわずかの人々は、それは単なる事実の陳述であると主張します。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:49
#, no-wrap
msgid ""
"    <njs`> I guess the next step is \"read the source again\", but I\n"
"        have to build up a certain level of gumption first :-)\n"
msgstr ""
"    <njs`> 次のステップは「ソースをもう一度読む」ことだと思うけどな。\n"
"        しかし、私は最初に、ある程度の強迫観念を惹起しなければなるまいて :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:51
msgid "Indeed! On both points."
msgstr "それはそう！ 両方の点で。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:53
#, no-wrap
msgid "    <linus> The packing heuristic is actually really really simple.\n"
msgstr "    <linus> パッキングヒューリスティックは実際には本当に本当に単純なんだぜぃ。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:55
msgid "Bait..."
msgstr "誘います誘います！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:57
#, no-wrap
msgid "    <linus> But strange.\n"
msgstr "    <linus> でもオカシイ。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:59
msgid "And switch.  That ought to do it!"
msgstr "そして手のひら返し。それでこそLinus！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:61
#, no-wrap
msgid "    <linus> Remember: Git really doesn't follow files. So what it does is\n"
msgstr "    <linus> 思い出しな。Gitは実際にはファイルを追跡しねぇのよ。だからGitがすることは、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:62
#, no-wrap
msgid "generate a list of all objects\n"
msgstr "全部のオブジェクトのリストを生成するじゃろ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:63
#, no-wrap
msgid "sort the list according to magic heuristics\n"
msgstr "そのリストを魔法のヒューリスティックに従ってソートするんじゃ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:65
#, no-wrap
msgid ""
"walk the list, using a sliding window, seeing if an object\n"
"can be diffed against another object in the window\n"
msgstr ""
"スライディングウィンドウを使用してリストを散歩し、\n"
"ウィンドウ内の別のオブジェクトに対してオブジェクトを比較できるかどうかを確認するんじゃ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:66
#, no-wrap
msgid "write out the list in recency order\n"
msgstr "そんでもって最近の順序でリストを書き出す\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:68
msgid "The traditional understatement:"
msgstr "伝統的でおとなしい表現:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:71
#, no-wrap
msgid ""
"    <njs`> I suspect that what I'm missing is the precise definition of\n"
"        the word \"magic\"\n"
msgstr ""
"    <njs`> 私が見逃しているのは「魔法」という言葉の\n"
"        正確な定義だと思います\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:73
msgid "The traditional insight:"
msgstr "伝統的な洞察:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:75
#, no-wrap
msgid "    <pasky> yes\n"
msgstr "    <pasky> そうだな\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:77
msgid "And Babel-like confusion flowed."
msgstr "そして、バベルの塔のような混乱が起こりました。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:79
#, no-wrap
msgid "    <njs`> oh, hmm, and I'm not sure what this sliding window means either\n"
msgstr "    <njs`> ああ、うーん、このスライディングウィンドウの意味も分からんわ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:82
#, no-wrap
msgid ""
"    <pasky> iirc, it appeared to me to be just the sha1 of the object\n"
"        when reading the code casually ...\n"
msgstr ""
"    <pasky> iirc、コードを何気なく読んでいると、\n"
"        オブジェクトのsha1にすぎないように見えたけどね…\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:84
#, no-wrap
msgid "        ... which simply doesn't sound as a very good heuristics, though ;)\n"
msgstr "        …単純に、非常に優れたヒューリスティック、には見えないけどなぁ ;)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:87
#, no-wrap
msgid ""
"    <njs`> .....and recency order.  okay, I think it's clear I didn't\n"
"       even realize how much I wasn't realizing :-)\n"
msgstr ""
"    <njs`> …そして最新の順序。さて、私は自分がどれだけ気づいていないのかさえ\n"
"       気づいていなかったのは明らかだと思います :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:89
msgid "Ah, grasshopper! And thus the enlightenment begins anew."
msgstr "新しい跳躍の時です！そしてこうして悟りはまた新たに始まります。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:93
#, no-wrap
msgid ""
"    <linus> The \"magic\" is actually in theory totally arbitrary.\n"
"        ANY order will give you a working pack, but no, it's not\n"
"\tordered by SHA-1.\n"
msgstr ""
"    <linus> 「魔法」は理論的には完全に恣意的です。\n"
"        どの順番でも作業パックが提供されますが、\n"
"        SHA-1順ではありません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:97
#, no-wrap
msgid ""
"        Before talking about the ordering for the sliding delta\n"
"        window, let's talk about the recency order. That's more\n"
"        important in one way.\n"
msgstr ""
"        スライディングデルタウィンドウの順序について説明する前に、\n"
"        最新の順序について説明しましょう。\n"
"        それはある意味でより重要です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:101
#, no-wrap
msgid ""
"    <njs`> Right, but if all you want is a working way to pack things\n"
"        together, you could just use cat and save yourself some\n"
"        trouble...\n"
msgstr ""
"    <njs`> しかり。物をパックする作業方法だけが必要な場合は、\n"
"        catを使用するだけで、\n"
"        問題を回避できます…\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:103
msgid "Waaait for it...."
msgstr "しばーしお待ち下さい…"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:107
#, no-wrap
msgid ""
"    <linus> The recency ordering (which is basically: put objects\n"
"        _physically_ into the pack in the order that they are\n"
"        \"reachable\" from the head) is important.\n"
msgstr ""
"    <linus> 最新の順序付け(recency ordering)\n"
"        (基本的には、オブジェクトを、ヘッドから「到達可能」な順序で、「物理的に」パックに入れる)\n"
"        が重要です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:109
#, no-wrap
msgid "    <njs`> okay\n"
msgstr "    <njs`> そりゃ分かるよ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:115
#, no-wrap
msgid ""
"    <linus> It's important because that's the thing that gives packs\n"
"        good locality. It keeps the objects close to the head (whether\n"
"        they are old or new, but they are _reachable_ from the head)\n"
"        at the head of the pack. So packs actually have absolutely\n"
"        _wonderful_ IO patterns.\n"
msgstr ""
"    <linus> それがパックに良い局所性を与えるものなので、それは重要です。\n"
"        パックの先頭でオブジェクトをヘッドの近く\n"
"        (古いものでも新しいものでも、ヘッドから「到達可能」です）に保ちます。\n"
"        そうすることで、パックには実際に絶対に\n"
"        「素晴らしい」IOパターンがあります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:117
msgid "Read that again, because it is important."
msgstr "ここ重要。もう一度じっくり読め"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:121
#, no-wrap
msgid ""
"    <linus> But recency ordering is totally useless for deciding how\n"
"        to actually generate the deltas, so the delta ordering is\n"
"        something else.\n"
msgstr ""
"    <linus> ただし、最新の順序付けは、\n"
"        実際にデルタを生成する方法を決定するのにまったく役に立たないため、\n"
"        デルタの順序付けは別のものです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:123
#, no-wrap
msgid "        The delta ordering is (wait for it):\n"
msgstr "        解説しよう！デルタ順位付け(delta ordering)とは！:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:126
#, no-wrap
msgid ""
"first sort by the \"basename\" of the object, as defined by\n"
"the name the object was _first_ reached through when\n"
"generating the object list\n"
msgstr ""
"オブジェクトリストを生成するときに、\n"
"「最初に」到達した名前で定義される、\n"
"オブジェクトの「ベース名」で最初に並べ替えます\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:127
#, no-wrap
msgid "within the same basename, sort by size of the object\n"
msgstr "同じベース名内で、オブジェクトのサイズで並べ替えます\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:128
#, no-wrap
msgid "but always sort different types separately (commits first).\n"
msgstr "ただし、常に異なるタイプを個別に並べ替えます(コミットが最初です)。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:130
#, no-wrap
msgid "That's not exactly it, but it's very close.\n"
msgstr "正確には違いますが、ほぼこんな感じです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:132
msgid "<njs`> The \"_first_ reached\" thing is not too important, just you"
msgstr "<njs`> 「最初に到達した」ことはそれほど重要ではありません。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:134
#, no-wrap
msgid ""
"need some way to break ties since the same objects may be\n"
"reachable many ways, yes?\n"
msgstr ""
"同じオブジェクトにさまざまな方法で到達できる可能性があるため、\n"
"関係を解消するための何らかの方法が必要だってだけよ？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:136
msgid "And as if to clarify:"
msgstr "そこをkwsk:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:142
#, no-wrap
msgid ""
"    <linus> The point is that it's all really just any random\n"
"        heuristic, and the ordering is totally unimportant for\n"
"        correctness, but it helps a lot if the heuristic gives\n"
"        \"clumping\" for things that are likely to delta well against\n"
"        each other.\n"
msgstr ""
"    <linus> 重要なのは、\n"
"        それはすべて実際にはランダムなヒューリスティックであり、\n"
"        順序付けは正確さにとってまったく重要ではないということですが、\n"
"        ヒューリスティックが互いにうまくデルタする可能性のあるものに「凝集」(clumping)を与える場合、\n"
"        それは大いに役立ちます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:147
msgid ""
"It is an important point, so secretly, I did my own research and have "
"included my results below.  To be fair, it has changed some over time.  And "
"through the magic of Revisionistic History, I draw upon this entry from The "
"Git IRC Logs on my father's birthday, March 1:"
msgstr "重要なポイントなので、こっそり自分で調べて、その結果を以下にまとめました。 公平を期すために言うと、それは時間とともにいくらか変化しました。そして、リビジョン履歴魔法を使って、私の父の誕生日である3月1日のGit IRCLogsからの以下のエントリを呼び寄せました:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:150
#, no-wrap
msgid ""
"    <gitster> The quote from the above linus should be rewritten a\n"
"        bit (wait for it):\n"
msgstr ""
"    <gitster> 上記のlinusからの引用は、\n"
"        少し書き直す必要があります:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:151
#, no-wrap
msgid "first sort by type.  Different objects never delta with\n"
msgstr "最初にタイプでソートします。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:152
#, no-wrap
msgid "each other.\n"
msgstr "異なるオブジェクトが互いにデルタすることはありません。<\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:155
#, no-wrap
msgid ""
"then sort by filename/dirname.  hash of the basename\n"
"occupies the top BITS_PER_INT-DIR_BITS bits, and bottom\n"
"DIR_BITS are for the hash of leading path elements.\n"
msgstr ""
"次に、ファイル名/ディレクトリ名で並べ替えます。\n"
"ベース名のハッシュは先頭からBITS_PER_INT〜DIR_BITSビットを占め、\n"
"末尾のDIR_BITSは先頭のパス要素のハッシュ用です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:158
#, no-wrap
msgid ""
"then if we are doing \"thin\" pack, the objects we are _not_\n"
"going to pack but we know about are sorted earlier than\n"
"other objects.\n"
msgstr ""
"次に、「薄い」パッキングを実行している場合、\n"
"パックしないオブジェクトは、\n"
"他のオブジェクトよりも早くソートされます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:159
#, no-wrap
msgid "and finally sort by size, larger to smaller.\n"
msgstr "そして最後に、サイズで大きいものから小さいものへと並べ替えます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:163
msgid ""
"In one swell-foop, clarification and obscurification! Nonetheless, "
"authoritative.  Cryptic, yet concise.  It even solicits notions of quotes "
"from The Source Code.  Clearly, more study is needed."
msgstr "1つのうねりで、明確化と不明瞭化！ それにもかかわらず、権威があります。 不可解でありながら簡潔。 ソースコードからの引用の概念さえも求めます。 明らかに、さらなる研究が必要です。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:165
#, no-wrap
msgid "    <gitster> That's the sort order.  What this means is:\n"
msgstr "    <gitster> これがソート順です。これが意味することは:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:166
#, no-wrap
msgid "we do not delta different object types.\n"
msgstr "異なるオブジェクトタイプをデルタ化することはありません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:167
#, no-wrap
msgid "we prefer to delta the objects with the same full path, but\n"
msgstr "同じフルパスでオブジェクトをデルタ化することを好みますが、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:168
#, no-wrap
msgid "allow files with the same name from different directories.\n"
msgstr "異なるディレクトリからの同じ名前のファイルを許可します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:169
#, no-wrap
msgid "we always prefer to delta against objects we are not going\n"
msgstr "送信しないオブジェクトがある場合は、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:170
#, no-wrap
msgid "to send, if there are some.\n"
msgstr "それに対してデルタすることを常に好みます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:171
#, no-wrap
msgid "we prefer to delta against larger objects, so that we have\n"
msgstr "大きなオブジェクトに対してデルタすることを好むので、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:172
#, no-wrap
msgid "lots of removals.\n"
msgstr "多くの削除があります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:175
msgid ""
"The penultimate rule is for \"thin\" packs.  It is used when the other side "
"is known to have such objects."
msgstr "最後から2番目のルールは「薄い」パッキング用です。他の側にそのようなオブジェクトがあることがわかっている場合に使用されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:178
msgid ""
"There it is again. \"Thin\" packs.  I'm thinking to myself, \"What is a "
"'thin' pack?\" So I ask:"
msgstr "再び登場しました「薄い」パック(Thin packs)。 「薄いパックとは？」と思いました。 だから私は尋ねます:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:180
#, no-wrap
msgid "    <jdl> What is a \"thin\" pack?\n"
msgstr "    <jdl> 薄いパックって何？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:183
#, no-wrap
msgid ""
"    <gitster> Use of --objects-edge to rev-list as the upstream of\n"
"        pack-objects.  The pack transfer protocol negotiates that.\n"
msgstr ""
"    <gitster> pack-objectsの上流として、 `--objects-edge` を伴って rev-listを実行します。\n"
"        パック転送プロトコルはそれをネゴシエートします。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:185
msgid "Woo hoo! Cleared that _right_ up!"
msgstr "わぉ！一瞬でクリアしちゃいましたよ！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:187
#, no-wrap
msgid "    <gitster> There are two directions - push and fetch.\n"
msgstr "    <gitster> 2つの方向があります。プッシュとフェッチです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:190
msgid ""
"There! Did you see it? It is not '\"push\" and \"pull\"'! How often the "
"confusion has started here.  So casually mentioned, too!"
msgstr "まぁ奥様みました？ プッシュとプルじゃございませんことよ！ ここで混乱が始まることがいかに多いことか。 さりげに、こんなことにも言及しています！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:195
#, no-wrap
msgid ""
"    <gitster> For push, git-send-pack invokes git-receive-pack on the\n"
"        other end.  The receive-pack says \"I have up to these commits\".\n"
"        send-pack looks at them, and computes what are missing from\n"
"        the other end.  So \"thin\" could be the default there.\n"
msgstr ""
"    <gitster> プッシュのために、git-send-packは相手側でgit-receive-packを呼び出します。\n"
"        receive-packには、「I have up to these commits」(これらのコミットまであります)と書かれています。\n"
"        send-packはそれらを調べ、相手側から欠落しているものを計算します。\n"
"        したがって、「薄い」がデフォルトになる可能性があります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:199
#, no-wrap
msgid ""
"        In the other direction, fetch, git-fetch-pack and\n"
"        git-clone-pack invokes git-upload-pack on the other end\n"
"\t(via ssh or by talking to the daemon).\n"
msgstr ""
"        他の向きでは、fetchとgit-fetch-packとgit-clone-packが、\n"
"        相手側でgit-upload-packを呼び出します\n"
"\t(sshを介して、またはデーモンと通信します)。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:205
#, no-wrap
msgid ""
"\tThere are two cases: fetch-pack with -k and clone-pack is one,\n"
"        fetch-pack without -k is the other.  clone-pack and fetch-pack\n"
"        with -k will keep the downloaded packfile without expanded, so\n"
"        we do not use thin pack transfer.  Otherwise, the generated\n"
"        pack will have delta without base object in the same pack.\n"
msgstr ""
"        2つのケースがあります: `-k` を伴ったfetch-pack と clone-pack がひとつ、 `-k` なしの fetch-pack でもうひとつです。\n"
"        `-k` を伴ったfetch-pack と clone-pack は、\n"
"        ダウンロードされたパックファイルを展開せずに保持するため、\n"
"        薄いパック転送(thin pack transfer)は使用しません。\n"
"        それ以外の場合、生成されたパックには、\n"
"        同じパック内にベースオブジェクトのないデルタが含まれます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:209
#, no-wrap
msgid ""
"        But fetch-pack without -k will explode the received pack into\n"
"        individual objects, so we automatically ask upload-pack to\n"
"        give us a thin pack if upload-pack supports it.\n"
msgstr ""
"        ただし、 `-k` を伴わないfetch-packは、受信したパックを個々のオブジェクトに分解するため、\n"
"        upload-packがサポートしている場合は、\n"
"        upload-packに薄いパック(thin pack)を提供するように自動的に問合せます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:211
msgid "OK then."
msgstr "然り。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:213
msgid "Uh."
msgstr "それからどうした"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:215
msgid "Let's return to the previous conversation still in progress."
msgstr "閑話休題。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:220
#, no-wrap
msgid ""
"    <njs`> and \"basename\" means something like \"the tail of end of\n"
"        path of file objects and dir objects, as per basename(3), and\n"
"        we just declare all commit and tag objects to have the same\n"
"        basename\" or something?\n"
msgstr ""
"    <njs`> そして「basename」は、「basename(3)に従って、\n"
"        ファイルオブジェクトとdirオブジェクトのパスの終わりの末尾であり、\n"
"        すべてのcommitオブジェクトとtagオブジェクトが同じbasenameを持つように宣言する」\n"
"        などの意味です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:222
msgid "Luckily, that too is a point that gitster clarified for us!"
msgstr "幸いなことに、それもgitsterが私たちに明らかにしたポイントです！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:228
msgid ""
"If I might add, the trick is to make files that _might_ be similar be "
"located close to each other in the hash buckets based on their file names.  "
"It used to be that \"foo/Makefile\", \"bar/baz/quux/Makefile\" and \"Makefile"
"\" all landed in the same bucket due to their common basename, \"Makefile\". "
"However, now they land in \"close\" buckets."
msgstr "付け加えると、そのトリックは、ファイル名に基づいて、類似している可能性のあるファイルをハッシュバケット内で互いに近くに配置することです。以前は、「foo/Makefile」と「bar/baz/quux/Makefile」と「Makefile」は、共通のベース名「Makefile」のすべて同じバケットに配置されていました。しかし、今では「近い」バケツに着地します。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:233
msgid ""
"The algorithm allows not just for the _same_ bucket, but for _close_ buckets "
"to be considered delta candidates.  The rationale is essentially that files, "
"like Makefiles, often have very similar content no matter what directory "
"they live in."
msgstr "このアルゴリズムでは、「同じバケット」だけでなく、「近いバケット」もデルタ候補と見なすことができます。理論的根拠として、Makefilesのようなファイルは、どのディレクトリにあるかに関係なく、非常によく似たコンテンツを持っていることが多いということです。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:238
#, no-wrap
msgid ""
"    <linus> I played around with different delta algorithms, and with\n"
"        making the \"delta window\" bigger, but having too big of a\n"
"        sliding window makes it very expensive to generate the pack:\n"
"        you need to compare every object with a _ton_ of other objects.\n"
msgstr ""
"    <linus> さまざまなデルタアルゴリズムを試し、\n"
"        「デルタウィンドウ」を大きくしましたが、スライディングウィンドウが大きすぎると、\n"
"        パックの生成に非常にコストがかかります。\n"
"        すべてのオブジェクトを他の大量のオブジェクトと比較する必要があります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:245
#, no-wrap
msgid ""
"        There are a number of other trivial heuristics too, which\n"
"        basically boil down to \"don't bother even trying to delta this\n"
"        pair\" if we can tell before-hand that the delta isn't worth it\n"
"        (due to size differences, where we can take a previous delta\n"
"        result into account to decide that \"ok, no point in trying\n"
"        that one, it will be worse\").\n"
msgstr ""
"        他にも多くの些細なヒューリスティックがありますが、\n"
"        デルタが価値がないことを事前に知ることができれば\n"
"        (サイズの違いにより、以前のデルタ結果を考慮に入れて、\n"
"        「わかりました。それを試してみても意味がありません。\n"
"        悪化する」と判断できます)、\n"
"        基本的に「このペアをデルタにするのは割に合わない」に要約されます。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:250
#, no-wrap
msgid ""
"        End result: packing is actually very size efficient. It's\n"
"        somewhat CPU-wasteful, but on the other hand, since you're\n"
"        really only supposed to do it maybe once a month (and you can\n"
"        do it during the night), nobody really seems to care.\n"
msgstr ""
"        最終結果: パッキングは実際には非常にサイズ効率が良いです。\n"
"        CPUパワーをいくらか浪費する一方で、\n"
"        実際には月に1回しか実行しないことになっているため(夜間に実行できます)、\n"
"        誰も気にしません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:253
msgid ""
"Nice Engineering Touch, there.  Find when it doesn't matter, and proclaim it "
"a non-issue.  Good style too!"
msgstr "素敵な技術者的手際です。それが問題ではない時間を見つけて、それを問題ではないと宣言します。まったく良いやり方です！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:258
#, no-wrap
msgid ""
"    <njs`> So, just to repeat to see if I'm following, we start by\n"
"        getting a list of the objects we want to pack, we sort it by\n"
"        this heuristic (basically lexicographically on the tuple\n"
"        (type, basename, size)).\n"
msgstr ""
"    <njs`> それじゃあ、繰り返しになるけど、私がついていけてるか確認するために、\n"
"        パックするオブジェクトのリストを取得することから始め、\n"
"        このヒューリスティックでソートします\n"
"        (基本的にタプル(タイプ, ベース名, サイズ)で辞書式順序)。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:262
#, no-wrap
msgid ""
"        Then we walk through this list, and calculate a delta of\n"
"        each object against the last n (tunable parameter) objects,\n"
"        and pick the smallest of these deltas.\n"
msgstr ""
"        次に、このリストを調べて、\n"
"        (調整可能なパラメーターである)最後のn個のオブジェクトに対する各オブジェクトのデルタを計算し、\n"
"        これらのデルタの最小のものを選択します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:264
msgid "Vastly simplified, but the essence is there!"
msgstr "大幅に簡素化されていますが、本質はコレです！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:266
#, no-wrap
msgid "    <linus> Correct.\n"
msgstr "    <linus> その通りだ。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:270
#, no-wrap
msgid ""
"    <njs`> And then once we have picked a delta or fulltext to\n"
"        represent each object, we re-sort by recency, and write them\n"
"        out in that order.\n"
msgstr ""
"    <njs`> 次に、各オブジェクトを表すデルタまたはフルテキスト(fulltext)を選択したら、\n"
"        最新性で再並替え(re-sort by recency)して、\n"
"        その順序で書き出します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:272
#, no-wrap
msgid "    <linus> Yup. Some other small details:\n"
msgstr "    <linus> <linus>うん。それで、その他の細々を言うと:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:274
msgid "And of course there is the \"Other Shoe\" Factor too."
msgstr "そしてもちろん、linusならダメ押し言うよね。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:277
#, no-wrap
msgid ""
"    <linus> - We limit the delta depth to another magic value (right\n"
"        now both the window and delta depth magic values are just \"10\")\n"
msgstr ""
"    <linus> - デルタ深度を別のマジック値に制限します\n"
"        (現在、ウィンドウとデルタ深度のマジック値はどちらも「10」です)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:282
#, no-wrap
msgid ""
"    <njs`> Hrm, my intuition is that you'd end up with really _bad_ IO\n"
"        patterns, because the things you want are near by, but to\n"
"        actually reconstruct them you may have to jump all over in\n"
"        random ways.\n"
msgstr ""
"    <njs`> うーん、私の直感では、必要なものが近くにあるため、\n"
"        マヂで悪いIOパターンになってしまう気がします。\n"
"        実際にそれらを再構築するには、\n"
"        ランダムな方法でジャンプする必要があるかもしれません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:287
#, no-wrap
msgid ""
"    <linus> - When we write out a delta, and we haven't yet written\n"
"        out the object it is a delta against, we write out the base\n"
"        object first.  And no, when we reconstruct them, we actually\n"
"        get nice IO patterns, because:\n"
msgstr ""
"    <linus> - デルタを書き出すにあたって、\n"
"        デルタであるオブジェクトをまだ書き出していない場合、最初にベースオブジェクトを書き出します。\n"
"        しかし、それらを再構築すると、実際には優れたIOパターンが得られます。\n"
"        理由は以下のとおりです:\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:288
#, no-wrap
msgid "larger objects tend to be \"more recent\" (Linus' law: files grow)\n"
msgstr "大きなオブジェクトは「より最近」になる傾向があります(リーナスの法則:ファイル達は成長します)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:290
#, no-wrap
msgid ""
"we actively try to generate deltas from a larger object to a\n"
"smaller one\n"
msgstr ""
"大きなオブジェクトから小さなオブジェクトへのデルタの生成を\n"
"積極的に試みます\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:292
#, no-wrap
msgid ""
"this means that the top-of-tree very seldom has deltas\n"
"(i.e. deltas in _practice_ are \"backwards deltas\")\n"
msgstr ""
"これは、ツリーの最上位にデルタがほとんどないことを意味します\n"
"(つまり、実際のデルタは「後方デルタ」(backwards deltas)です）\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:296
msgid ""
"Again, we should reread that whole paragraph.  Not just because Linus has "
"slipped Linus's Law in there on us, but because it is important.  Let's make "
"sure we clarify some of the points here:"
msgstr "繰り返しますが、我々はこの段落全体を読み直す必要があります。Linusの法則を私たちにぬるりと滑り込ませたからだけでなく、それは重要だからです。ここでいくつかのポイントを明確にしましょう:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:299
#, no-wrap
msgid ""
"    <njs`> So the point is just that in practice, delta order and\n"
"        recency order match each other quite well.\n"
msgstr ""
"    <njs`> つまり、実際には、\n"
"        デルタの順序と最近の順序は非常によく一致しているということです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:302
#, no-wrap
msgid ""
"    <linus> Yes. There's another nice side to this (and yes, it was\n"
"\tdesigned that way ;):\n"
msgstr ""
"    <linus> ええそうです。これには別の良い面があります\n"
"\t(そして、それは以下のように設計されました):\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:303
#, no-wrap
msgid "the reason we generate deltas against the larger object is\n"
msgstr "大きなオブジェクトに対してデルタを生成する理由は、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:304
#, no-wrap
msgid "actually a big space saver too!\n"
msgstr "実際には大きなスペース節約にもなります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:306
#, no-wrap
msgid "<njs`> Hmm, but your last comment (if \"we haven't yet written out\n"
msgstr "<njs`> うーん、でもあなたの最後のコメント（「デルタであるオブジェクトをまだ書き出していない場合は、\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:311
#, no-wrap
msgid ""
"the object it is a delta against, we write out the base object\n"
"first\"), seems like it would make these facts mostly\n"
"irrelevant because even if in practice you would not have to\n"
"wander around much, in fact you just brute-force say that in\n"
"the cases where you might have to wander, don't do that :-)\n"
msgstr ""
"最初にベースオブジェクトを書き出す」）は、\n"
"これらの事実をほとんど無関係にするようです。\n"
"実際には、あまり歩き回る必要はありません。\n"
"実際、歩き回らなければならない場合は、\n"
"そうしないでくださいとチカラずくで言います :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:313
msgid "<linus> Yes and no. Notice the rule: we only write out the base"
msgstr "<linus> 答えは、イエスでもありノーでもある。ルールに注意してください。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:317
#, no-wrap
msgid ""
"object first if the delta against it was more recent.  That\n"
"means that you can actually have deltas that refer to a base\n"
"object that is _not_ close to the delta object, but that only\n"
"happens when the delta is needed to generate an _old_ object.\n"
msgstr ""
"最初にベースオブジェクトを書き出すのは、それに対するデルタがより最近のものである場合のみです。\n"
"つまり、実際には、\n"
"デルタオブジェクトに近くないベースオブジェクトを参照するデルタを持つことができますが、\n"
"これは、古いオブジェクトを生成するためにデルタが必要な場合にのみ発生します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:319
msgid "<linus> See?"
msgstr "<linus> お分かり？"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:321
msgid "Yeah, no.  I missed that on the first two or three readings myself."
msgstr "ごめん。私は最初の2、3回読み込んだ時は見逃してました。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:327
#, no-wrap
msgid ""
"    <linus> This keeps the front of the pack dense. The front of the\n"
"        pack never contains data that isn't relevant to a \"recent\"\n"
"        object.  The size optimization comes from our use of xdelta\n"
"        (but is true for many other delta algorithms): removing data\n"
"        is cheaper (in size) than adding data.\n"
msgstr ""
"    <linus> これにより、パックの前側が密になります。\n"
"        パックの前側には、「最近の」オブジェクトに関連しないデータが含まれることはありません。\n"
"        サイズの最適化は、xdeltaの使用に由来します\n"
"        (ただし、他の多くのデルタアルゴリズムにも当てはまります)。\n"
"        データの削除は、データの追加よりも(サイズ的に)安価です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:331
#, no-wrap
msgid ""
"        When you remove data, you only need to say \"copy bytes n--m\".\n"
"\tIn contrast, in a delta that _adds_ data, you have to say \"add\n"
"        these bytes: 'actual data goes here'\"\n"
msgstr ""
"\tデータを削除するときは、「バイトn--mをコピー」と言うだけで済みます。\n"
"\t対照的に、データを追加するデルタでは、\n"
"\t「これらのバイトを追加します： '実際のデータはここにあります'」と言わなければなりません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:333
msgid "njs` has quit: Read error: 104 (Connection reset by peer)"
msgstr "njs` が退出しました: Read error: 104 (Connection reset by peer)"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:335
#, no-wrap
msgid "<linus> Uhhuh. I hope I didn't blow njs` mind.\n"
msgstr "<linus> うーん。 njsが逝ったのは私のせいじゃないよね？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:337
msgid "njs` has joined channel #git"
msgstr "njs` が channel #git に入室しました。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:339
#, no-wrap
msgid "<pasky> :)\n"
msgstr "<pasky> :)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:341
msgid "The silent observers are amused.  Of course."
msgstr "もちろん皆そう思ってるよ。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:343
msgid "And as if njs` was expected to be omniscient:"
msgstr "そして、まるで njs が全知であると期待されたかのように:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:345
#, no-wrap
msgid "    <linus> njs - did you miss anything?\n"
msgstr "    <linus> njs、何か見逃しましたか？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:350
msgid ""
"OK, I'll spell it out.  That's Geek Humor.  If njs` was not actually "
"connected for a little bit there, how would he know if missed anything while "
"he was disconnected? He's a benevolent dictator with a sense of humor! Well "
"noted!"
msgstr "OK、詳しく説明します。それはオタクのユーモアです。 njs が実際に少しの間接続されていなかった場合、切断中に何かを逃したかどうかをどうやって知ることができますか？彼はユーモアのセンスのある慈悲深い独裁者です！よくいうよｗｗｗ"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:352
#, no-wrap
msgid "    <njs`> Stupid router.  Or gremlins, or whatever.\n"
msgstr "    <njs`> クソルーターめ、グレムリンめ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:354
msgid "It's a cheap shot at Cisco.  Take 'em when you can."
msgstr "これはCiscoの安っぽいショットです。 そんなもん捨てちまえ"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:357
#, no-wrap
msgid ""
"    <njs`> Yes and no. Notice the rule: we only write out the base\n"
"        object first if the delta against it was more recent.\n"
msgstr ""
"    <njs`> イエスもありノーでもある。ルールに注意してください。\n"
"    最初にベースオブジェクトを書き出すのは、それに対するデルタがより最近のものである場合のみです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:363
#, no-wrap
msgid ""
"        I'm getting lost in all these orders, let me re-read :-)\n"
"\tSo the write-out order is from most recent to least recent?\n"
"        (Conceivably it could be the opposite way too, I'm not sure if\n"
"        we've said) though my connection back at home is logging, so I\n"
"        can just read what you said there :-)\n"
msgstr ""
"\t私はこれらすべての順番で迷子になっています、再読させてください:-)\n"
"\tそれで、書き込みの順番は新しいものから順にということですよね？\n"
"\t(おそらく逆の方法かもしれませんが、私たちが言ったかどうかはわかりません）\n"
"\t自宅に戻ったら私の接続はログに記録されているので、\n"
"\tそこであなたが言ったことを読むことができるでしょう :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:366
msgid ""
"And for those of you paying attention, the Omniscient Trick has just been "
"detailed!"
msgstr "そして、気にしている人のために、全知全能トリックが詳細に説明されました！"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:368
#, no-wrap
msgid "    <linus> Yes, we always write out most recent first\n"
msgstr "    <linus> そうだよ。常に最新のものを最初に書きます\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:371
#, no-wrap
msgid ""
"    <njs`> And, yeah, I got the part about deeper-in-history stuff\n"
"        having worse IO characteristics, one sort of doesn't care.\n"
msgstr ""
"    <njs`> そして、ええっと、歴史の深いものはIOの特性が悪くなる、\n"
"    という部分は理解できましたが、ある種、気にならないものです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:375
#, no-wrap
msgid ""
"    <linus> With the caveat that if the \"most recent\" needs an older\n"
"        object to delta against (hey, shrinking sometimes does\n"
"        happen), we write out the old object with the delta.\n"
msgstr ""
"    <linus> 「最新の」オブジェクトがデルタ化するために\n"
"        古いオブジェクトを必要とする場合(しばしば縮小が起こる)、\n"
"        我々はデルタを伴って古いオブジェクトを書き出します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:377
#, no-wrap
msgid "    <njs`> (if only it happened more...)\n"
msgstr "    <njs`> (それがもっともっと起こったら…)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:381
#, no-wrap
msgid ""
"    <linus> Anyway, the pack-file could easily be denser still, but\n"
"\tbecause it's used both for streaming (the Git protocol) and\n"
"        for on-disk, it has a few pessimizations.\n"
msgstr ""
"    <linus> とにかく、パックファイルはさらに簡単に高密度になる可能性がありますが、\n"
"\tストリーミング(Gitプロトコル)とディスク上の操作での両方に使用されるため、\n"
"\tちょいとばかり冗長でパフォーマンスが良くありません(it has a few pessimizations)。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:384
msgid ""
"Actually, it is a made-up word. But it is a made-up word being used as setup "
"for a later optimization, which is a real word:"
msgstr "実は、これは造語なんです。しかしこれは後の最適化のための設定として使われる造語で、現実の言葉なのです:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:390
#, no-wrap
msgid ""
"    <linus> In particular, while the pack-file is then compressed,\n"
"        it's compressed just one object at a time, so the actual\n"
"        compression factor is less than it could be in theory. But it\n"
"        means that it's all nice random-access with a simple index to\n"
"        do \"object name->location in packfile\" translation.\n"
msgstr ""
"    <linus> 特に、pack-fileは圧縮されますが、\n"
"        一度に1つのオブジェクトだけが圧縮されるため、実際の圧縮率は理論上の圧縮率よりも低くなります。\n"
"        しかし、それは、「オブジェクト名→パックファイル内の場所」の変換を行うための、\n"
"        単純なインデックスを使用した、\n"
"        すべてにおいて優れたランダムアクセスであることを意味します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:393
#, no-wrap
msgid ""
"    <njs`> I'm assuming the real win for delta-ing large->small is\n"
"        more homogeneous statistics for gzip to run over?\n"
msgstr ""
"    <njs`> 大→小 をデルタ化することの本当の勝利は、\n"
"        gzipが実行されるより均一な統計であると思いませんか？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:396
#, no-wrap
msgid ""
"        (You have to put the bytes in one place or another, but\n"
"        putting them in a larger blob wins on compression)\n"
msgstr ""
"        (あなたはバイトをどこかに配置する必要がありますが、\n"
"        より大きなブロブに配置すると、圧縮が優先されます)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:400
#, no-wrap
msgid ""
"        Actually, what is the compression strategy -- each delta\n"
"        individually gzipped, the whole file gzipped, somewhere in\n"
"        between, no compression at all, ....?\n"
msgstr ""
"        実際、圧縮戦略とは何でしょうか -- 各デルタは個別にgzipで圧縮され、\n"
"        ファイル全体がgzipで圧縮され、\n"
"        その間のどこかでは圧縮はまったく行われませんが…？\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:402
#, no-wrap
msgid "        Right.\n"
msgstr "        正しい。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:404
msgid "Reality IRC sets in.  For example:"
msgstr "現実のIRCが始まります。例:"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:408
#, no-wrap
msgid ""
"    <pasky> I'll read the rest in the morning, I really have to go\n"
"        sleep or there's no hope whatsoever for me at the today's\n"
"        exam... g'nite all.\n"
msgstr ""
"    <pasky> 残りは朝に読みます、私は本当に眠らなければなりません、\n"
"        さもなければ今日の試験で私には何の希望もありません…\n"
"        皆さんお休みなさい。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:410
msgid "Heh."
msgstr "ありゃりゃ。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:412
#, no-wrap
msgid "    <linus> pasky: g'nite\n"
msgstr "    <linus> pasky: おやすみ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:414
#, no-wrap
msgid "    <njs`> pasky: 'luck\n"
msgstr "    <njs`> pasky: グッドラック\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:418
#, no-wrap
msgid ""
"    <linus> Right: large->small matters exactly because of compression\n"
"        behaviour. If it was non-compressed, it probably wouldn't make\n"
"        any difference.\n"
msgstr ""
"    <linus> 正しい: 圧縮動作のために、大きい→小さい ことが問題になります。\n"
"        圧縮されていない場合は、\n"
"        おそらく違いはありません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:420
#, no-wrap
msgid "    <njs`> yeah\n"
msgstr "    <njs`> うんうん。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:424
#, no-wrap
msgid ""
"    <linus> Anyway: I'm not even trying to claim that the pack-files\n"
"        are perfect, but they do tend to have a nice balance of\n"
"        density vs ease-of use.\n"
msgstr ""
"    <linus> とにかく：パックファイルが完璧だと主張するつもりはありませんが、\n"
"        それは密度と使いやすさのバランスが\n"
"        うまく取れている傾向があります。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:428
msgid ""
"Gasp! OK, saved.  That's a fair Engineering trade off.  Close call! In fact, "
"Linus reflects on some Basic Engineering Fundamentals, design options, etc."
msgstr "うほっ！保存しますた。これは、エンジニアリングの公正なトレードオフです。 危機一髪！ 実際、Linusは、いくつかの基本的なエンジニアリングの基礎、設計オプションなどを反映しています。"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:431
#, no-wrap
msgid ""
"    <linus> More importantly, they allow Git to still _conceptually_\n"
"        never deal with deltas at all, and be a \"whole object\" store.\n"
msgstr ""
"    <linus> さらに重要なことは、Gitが概念的にデルタをまったく処理せず、\n"
"        「オブジェクト全体」のストアになることを可能にすることです。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:436
#, no-wrap
msgid ""
"        Which has some problems (we discussed bad huge-file\n"
"\tbehaviour on the Git lists the other day), but it does mean\n"
"\tthat the basic Git concepts are really really simple and\n"
"        straightforward.\n"
msgstr ""
"        これにはいくつかの問題があります\n"
"        (先日、Gitメーリングリストで\n"
"        巨大ファイルの良くない振る舞いについて説明しました)が、\n"
"        基本的なGitの概念が本当に単純で素直であることを意味します。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:438
#, no-wrap
msgid "        It's all been quite stable.\n"
msgstr "        それはすべて非常に安定しています。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:442
#, no-wrap
msgid ""
"        Which I think is very much a result of having very simple\n"
"        basic ideas, so that there's never any confusion about what's\n"
"        going on.\n"
msgstr ""
"        これは非常に単純な基本的な考え方の結果であると私は思います。\n"
"        そのため、\n"
"        何が起こっているのかについて混乱することはありません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:446
#, no-wrap
msgid ""
"        Bugs happen, but they are \"simple\" bugs. And bugs that\n"
"        actually get some object store detail wrong are almost always\n"
"        so obvious that they never go anywhere.\n"
msgstr ""
"        バグは発生しますが、それらは「単純な」バグです。\n"
"        また、オブジェクトストアの詳細を実際に間違えるバグは、\n"
"        ほとんどの場合非常に明白であるため、見間違えようがありません。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:448
#, no-wrap
msgid "    <njs`> Yeah.\n"
msgstr "    <njs`> ああ。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:450
msgid "Nuff said."
msgstr "それはもうおなかいっぱいだよ"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:454
#, no-wrap
msgid ""
"    <linus> Anyway.  I'm off for bed. It's not 6AM here, but I've got\n"
"\t three kids, and have to get up early in the morning to send\n"
"\t them off. I need my beauty sleep.\n"
msgstr ""
"    <linus> とにかく。 私は寝る。まだ午前6時ではありませんが、\n"
"\t  私には3人の子供がいて、子供らを送り出すために早朝に起きなければなりません。\n"
"\t  私には素晴らしい睡眠が必要です。\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:456
#, no-wrap
msgid "    <njs`> :-)\n"
msgstr "    <njs`> :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:459
#, no-wrap
msgid ""
"    <njs`> appreciate the infodump, I really was failing to find the\n"
"\tdetails on Git packs :-)\n"
msgstr ""
"    <njs`> <njs`> infodumpに感謝します、\n"
"\t私は本当にGitパックの詳細を見つけることができませんでした :-)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/pack-heuristics.txt:460
msgid "And now you know the rest of the story."
msgstr "そして今や、あなたは物語の顛末を知ったのです。"
