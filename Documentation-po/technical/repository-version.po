# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 05:35+0900\n"
"PO-Revision-Date: 2021-11-27 07:03+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#: ../Documentation-sedout/technical/repository-version.txt:1
#, no-wrap
msgid "Git Repository Format Versions"
msgstr "Git Repository Format Versions"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:10
msgid ""
"Every git repository is marked with a numeric version in the `core."
"repositoryformatversion` key of its `config` file. This version specifies "
"the rules for operating on the on-disk repository data. An implementation of "
"git which does not understand a particular version advertised by an on-disk "
"repository MUST NOT operate on that repository; doing so risks not only "
"producing wrong results, but actually losing data."
msgstr "すべてのgitリポジトリは、その `config` ファイルの` core.repositoryformatversion` 数値のバージョンが印されています。この数値のバージョンは、ディスク上のリポジトリデータを操作するためのルールを指定します。 ディスク上のリポジトリから告知された特定のバージョンを理解しないgitの実装は、そのリポジトリで動作してはなりません。それを動作させと、間違った結果を生み出すだけでなく、実際にデータを失うリスクがあります。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:13
msgid ""
"Because of this rule, version bumps should be kept to an absolute minimum. "
"Instead, we generally prefer these strategies:"
msgstr "このルールのため、バージョンアップは最小限に抑える必要があります。代わりに、我々は一般的に以下の戦略を好みます:"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:17
msgid ""
"bumping format version numbers of individual data files (e.g., index, "
"packfiles, etc). This restricts the incompatibilities only to those files."
msgstr "個々のデータファイル(インデックス、パックファイルなど)のフォーマットバージョン番号をバージョンアップします。これにより、非互換性がそれらのファイルのみに制限されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:21
msgid ""
"introducing new data that gracefully degrades when used by older clients (e."
"g., pack bitmap files are ignored by older clients, which simply do not take "
"advantage of the optimization they provide)."
msgstr "古いクライアントで使用すると正常に機能制限される(gracefully degrade)新しいデータを導入します(たとえば、パックビットマップファイルは古いクライアントでは無視され、提供される最適化を利用しません)。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:26
msgid ""
"A whole-repository format version bump should only be part of a change that "
"cannot be independently versioned. For instance, if one were to change the "
"reachability rules for objects, or the rules for locking refs, that would "
"require a bump of the repository format version."
msgstr "リポジトリ全体の形式のバージョンアップは、個別にバージョン管理できない部分だけにするべきです。たとえば、オブジェクトの到達可能性ルール、またはrefをロックするためのルールを変更する場合、リポジトリ形式バージョンのバージョンアップが必要になります。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:31
msgid ""
"Note that this applies only to accessing the repository's disk contents "
"directly. An older client which understands only format `0` may still "
"connect via `git://` to a repository using format `1`, as long as the server "
"process understands format `1`."
msgstr "注意: これは、リポジトリのディスクコンテンツに直接アクセスする場合にのみ適用されることに注意してください。 フォーマット `0` のみを理解する古いクライアントは、サーバープロセスがフォーマット `1` を理解している限り、フォーマット `1` を使用して `git://` を介してリポジトリに接続できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:39
msgid ""
"The preferred strategy for rolling out a version bump (whether whole "
"repository or for a single file) is to teach git to read the new format, and "
"allow writing the new format with a config switch or command line option "
"(for experimentation or for those who do not care about backwards "
"compatibility with older gits). Then after a long period to allow the "
"reading capability to become common, we may switch to writing the new format "
"by default."
msgstr "バージョンアップをお披露目するための推奨される戦略(リポジトリ全体または単一ファイル)は、gitに新しい形式を読み取るように教え、(実験用または古いgitとの下位互換性については気にしないでいいように)構成スイッチまたはコマンドラインオプションを使用して新しい形式を記述できるようにすることです。その後、読み取り機能が一般的になるまでの長い期間の後、デフォルトを新しい形式の書き込みに切り替える場合があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:41
msgid "The currently defined format versions are:"
msgstr "現在定義されているフォーマットバージョンは以下のとおりです:"

#. type: Title ===
#: ../Documentation-sedout/technical/repository-version.txt:42
#, no-wrap
msgid "Version `0`"
msgstr "Version `0`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:48
msgid ""
"This is the format defined by the initial version of git, including but not "
"limited to the format of the repository directory, the repository "
"configuration file, and the object and ref storage. Specifying the complete "
"behavior of git is beyond the scope of this document."
msgstr ""
"これは、gitの初期バージョンで定義されている形式であり、リポジトリディレクトリ、リポジトリ構成ファイル、オブジェクトおよびrefストレージの形式が含まれま\n"
"すが、これらに限定されません。gitの完全な動作を記述することは、このドキュメントの役割ではありません。"

#. type: Title ===
#: ../Documentation-sedout/technical/repository-version.txt:49
#, no-wrap
msgid "Version `1`"
msgstr "Version `1`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:52
msgid "This format is identical to version `0`, with the following exceptions:"
msgstr "この形式は、以下の例外を除いて、バージョン `0`と同じです:"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:57
msgid ""
"When reading the `core.repositoryformatversion` variable, a git "
"implementation which supports version 1 MUST also read any configuration "
"keys found in the `extensions` section of the configuration file."
msgstr "`core.repositoryformatversion` 変数を読み取る場合、バージョン1をサポートするgit実装は、構成ファイルの `extensions` セクションにある構成キーも読み取る必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:62
msgid ""
"If a version-1 repository specifies any `extensions.*` keys that the running "
"git has not implemented, the operation MUST NOT proceed. Similarly, if the "
"value of any known key is not understood by the implementation, the "
"operation MUST NOT proceed."
msgstr "バージョン1リポジトリが、実行中のgitが実装していない `extensions.*` キーを指定している場合、操作の続行は禁止です。同様に、既知のキーの値が実装によって理解されない場合、操作の続行は禁止です。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:67
msgid ""
"Note that if no extensions are specified in the config file, then `core."
"repositoryformatversion` SHOULD be set to `0` (setting it to `1` provides no "
"benefit, and makes the repository incompatible with older implementations of "
"git)."
msgstr "注意: 設定ファイルに拡張機能(extension)の指定が無い場合は、 `core.repositoryformatversion` を `0` に設定する必要があります(`1`に設定してもメリットはなく、リポジトリはgitの古い実装と互換性がなくなります)。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:71
msgid ""
"This document will serve as the master list for extensions. Any "
"implementation wishing to define a new extension should make a note of it "
"here, in order to claim the name."
msgstr "このドキュメントは、拡張機能のマスターリストとして機能します。新しい拡張機能を定義したい実装は、名前を主張するために、ここにそれを書き留めておく必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:73
msgid "The defined extensions are:"
msgstr "定義されている拡張機能は以下のとおりです:"

#. type: Title ====
#: ../Documentation-sedout/technical/repository-version.txt:74
#, no-wrap
msgid "`noop`"
msgstr "`noop`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:78
msgid ""
"This extension does not change git's behavior at all. It is useful only for "
"testing format-1 compatibility."
msgstr "この拡張機能は、gitの動作をまったく変更しません。 これは、フォーマット1の互換性をテストする場合にのみ役立ちます。"

#. type: Title ====
#: ../Documentation-sedout/technical/repository-version.txt:79
#, no-wrap
msgid "`preciousObjects`"
msgstr "`preciousObjects`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:84
msgid ""
"When the config key `extensions.preciousObjects` is set to `true`, objects "
"in the repository MUST NOT be deleted (e.g., by `git-prune` or `git repack -"
"d`)."
msgstr "設定キー `extensions.preciousObjects` が `true` に設定されている場合、リポジトリ内のオブジェクトを削除してはなりません(たとえば、 `git-prune` または `git repack -d` など)。"

#. type: Title ====
#: ../Documentation-sedout/technical/repository-version.txt:85
#, no-wrap
msgid "`partialclone`"
msgstr "`partialclone`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:93
msgid ""
"When the config key `extensions.partialclone` is set, it indicates that the "
"repo was created with a partial clone (or later performed a partial fetch) "
"and that the remote may have omitted sending certain unwanted objects.  Such "
"a remote is called a \"promisor remote\" and it promises that all such "
"omitted objects can be fetched from it in the future."
msgstr "設定キー `extensions.partialclone` が設定されている場合、リポジトリが部分クローンで作成された(または後で部分フェッチを実行した)こと、およびリモートが特定の不要なオブジェクトの送信を省略した可能性があることを示します。 このようなリモートはpromisor remoteと呼ばれ、将来、このような省略されたオブジェクトをすべてフェッチできることを約束します。"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:95
msgid "The value of this key is the name of the promisor remote."
msgstr "このキーの値は、promisor remoteの名前です。"

#. type: Title ====
#: ../Documentation-sedout/technical/repository-version.txt:96
#, no-wrap
msgid "`worktreeConfig`"
msgstr "`worktreeConfig`"

#. type: Plain text
#: ../Documentation-sedout/technical/repository-version.txt:102
msgid ""
"If set, by default \"git config\" reads from both \"config\" and \"config."
"worktree\" file from GIT_DIR in that order. In multiple working directory "
"mode, \"config\" file is shared while \"config.worktree\" is per-working "
"directory (i.e., it's in GIT_COMMON_DIR/worktrees/<id>/config.worktree)"
msgstr "設定されている場合、デフォルトでは、「git config」はGIT_DIRの「config」ファイルと「config.worktree」ファイルの両方からこの順序で読み取ります。複数の作業ディレクトリモードでは、「config.worktree」が作業ディレクトリごとにある間（つまり、 GIT_COMMON_DIR/worktrees/<id>/config.worktree にあります)、「config」ファイルは共有されます。"
