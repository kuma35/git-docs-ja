# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:06+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/technical/long-running-process-protocol.txt:2
#, no-wrap
msgid "Long-running process protocol"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/long-running-process-protocol.txt:8
msgid ""
"This protocol is used when Git needs to communicate with an external process "
"throughout the entire life of a single Git command. All communication is in "
"pkt-line format (see technical/protocol-common.txt)  over standard input and "
"standard output."
msgstr ""

#. type: Title -
#: ../Documentation/technical/long-running-process-protocol.txt:10
#, no-wrap
msgid "Handshake"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/long-running-process-protocol.txt:22
msgid ""
"Git starts by sending a welcome message (for example, "
"\"git-filter-client\"), a list of supported protocol version numbers, and a "
"flush packet. Git expects to read the welcome message with \"server\" "
"instead of \"client\" (for example, \"git-filter-server\"), exactly one "
"protocol version number from the previously sent list, and a flush "
"packet. All further communication will be based on the selected version.  "
"The remaining protocol description below documents \"version=2\". Please "
"note that \"version=42\" in the example below does not exist and is only "
"there to illustrate how the protocol would look like with more than one "
"version."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/long-running-process-protocol.txt:27
msgid ""
"After the version negotiation Git sends a list of all capabilities that it "
"supports and a flush packet. Git expects to read a list of desired "
"capabilities, which must be a subset of the supported capabilities list, and "
"a flush packet as response:"
msgstr ""

#. type: delimited block -
#: ../Documentation/technical/long-running-process-protocol.txt:42
#, no-wrap
msgid ""
"packet:          git> git-filter-client\n"
"packet:          git> version=2\n"
"packet:          git> version=42\n"
"packet:          git> 0000\n"
"packet:          git< git-filter-server\n"
"packet:          git< version=2\n"
"packet:          git< 0000\n"
"packet:          git> capability=clean\n"
"packet:          git> capability=smudge\n"
"packet:          git> capability=not-yet-invented\n"
"packet:          git> 0000\n"
"packet:          git< capability=clean\n"
"packet:          git< capability=smudge\n"
"packet:          git< 0000\n"
msgstr ""

#. type: Title -
#: ../Documentation/technical/long-running-process-protocol.txt:45
#, no-wrap
msgid "Shutdown"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/long-running-process-protocol.txt:50
msgid ""
"Git will close the command pipe on exit. The filter is expected to detect "
"EOF and exit gracefully on its own. Git will wait until the filter process "
"has stopped."
msgstr ""
