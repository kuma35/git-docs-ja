# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 05:35+0900\n"
"PO-Revision-Date: 2022-08-25 09:03+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/protocol-capabilities.txt:2
#, no-wrap
msgid "Git Protocol Capabilities"
msgstr "Git Protocol Capabilities"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:7
msgid ""
"this document describes capabilities for versions 0 and 1 of the pack "
"protocol. For version 2, please refer to the link:protocol-v2.html[protocol-"
"v2] doc."
msgstr "このドキュメントでは、パックプロトコルのバージョン 0 および 1 の機能について説明します。 バージョン 2 については、 link:protocol-v2.html[protocol-v2] ドキュメントを参照してください。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:9
msgid "Servers SHOULD support all capabilities defined in this document."
msgstr "サーバーは、このドキュメントで定義されているすべての機能をサポートするべきです。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:15
msgid ""
"On the very first line of the initial server response of either receive-pack "
"and upload-pack the first reference is followed by a NUL byte and then a "
"list of space delimited server capabilities.  These allow the server to "
"declare what it can and cannot support to the client."
msgstr "receive-pack および upload-pack の最初のサーバー応答の最初の行で、最初の参照の後に NUL バイトが続き、次にスペースで区切られたサーバー機能のリストが続きます。 これらにより、サーバーはクライアントに対してサポートできるものとサポートできないものを宣言できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:19
msgid ""
"Client will then send a space separated list of capabilities it wants to be "
"in effect. The client MUST NOT ask for capabilities the server did not say "
"it supports."
msgstr "次に、クライアントは、有効にしたい機能のスペース区切りのリストを送信します。 クライアントは、サーバーがサポートしているとは言っていない機能を要求してはいけません。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:24
msgid ""
"Server MUST diagnose and abort if capabilities it does not understand was "
"sent.  Server MUST NOT ignore capabilities that client requested and server "
"advertised.  As a consequence of these rules, server MUST NOT advertise "
"capabilities it does not understand."
msgstr "サーバーは送信された機能について診断し、理解できない機能が送信された場合、中止(abort)しなければなりません。サーバーは、クライアントが要求し、かつ、サーバーが宣伝(advertise)した機能の実行を無視してはなりません。 これらのルールの結果として、サーバーは理解できない機能を宣伝してはなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:28
msgid ""
"The 'atomic', 'report-status', 'report-status-v2', 'delete-refs', 'quiet', "
"and 'push-cert' capabilities are sent and recognized by the receive-pack "
"(push to server) process."
msgstr "atomic 機能と report-status 機能と report-status-v2 機能と delete-refs 機能と quiet 機能と push-cert 機能が送信され、 receive-pack 処理(サーバーへのプッシュ処理)によって認識されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:32
msgid ""
"The 'ofs-delta' and 'side-band-64k' capabilities are sent and recognized by "
"both upload-pack and receive-pack protocols.  The 'agent' and 'session-id' "
"capabilities may optionally be sent in both protocols."
msgstr "`ofs-delta` と `side-band-64k` 機能は、 upload-pack プロトコルと receive-pack プロトコルの両方によって送信および認識されます。 agent 機能と session-id 機能は、オプションで両方のプロトコルで送信できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:35
msgid ""
"All other capabilities are only recognized by the upload-pack (fetch from "
"server) process."
msgstr "他のすべての機能は、upload-pack (サーバーからのフェッチ) 処理によってのみ認識されます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:37
#, no-wrap
msgid "multi_ack"
msgstr "multi_ack"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:42
msgid ""
"The 'multi_ack' capability allows the server to return \"ACK obj-id continue"
"\" as soon as it finds a commit that it can use as a common base, between "
"the client's wants and the client's have set."
msgstr "「multi_ack」機能により、サーバーは、クライアントの要求セットと所持しているセットの間で、共通のベースとして使用できるコミットを見つけるとすぐに「ACK obj-id continue」を返すことができます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:48
msgid ""
"By sending this early, the server can potentially head off the client from "
"walking any further down that particular branch of the client's repository "
"history.  The client may still need to walk down other branches, sending "
"have lines for those, until the server has a complete cut across the DAG, or "
"the client has said \"done\"."
msgstr "これを早期に送信することで、サーバーは、クライアントがクライアントのリポジトリ履歴の特定のブランチをさらにたどり下っていくのを防ぐことができます。 クライアントは、サーバーが DAG を完全に通過するまで、またはクライアントが「完了」と言うまで、他のブランチをたどってそれらのラインを送信する必要がある場合があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:54
msgid ""
"Without multi_ack, a client sends have lines in --date-order until the "
"server has found a common base.  That means the client will send have lines "
"that are already known by the server to be common, because they overlap in "
"time with another branch that the server hasn't found a common base on yet."
msgstr "multi_ack がない場合、サーバーが共通のベースを見つけるまで、クライアントは `--date-order` で have 行を送信します。 つまり、クライアントは、サーバーが既に共通であると認識している行を送信します。これは、サーバーがまだ共通のベースを見つけていない別のブランチと時間的に重複するためです。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:58
msgid ""
"For example suppose the client has commits in caps that the server doesn't "
"and the server has commits in lower case that the client doesn't, as in the "
"following diagram:"
msgstr "たとえば、以下の図のように、クライアントにはサーバーにない大文字で表されるのコミットがあり、サーバーにはクライアントにはない小文字で表されるコミットがあるとします:"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:60
msgid "u ---------------------- x"
msgstr "u ---------------------- x"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:61
#, no-wrap
msgid "/              +----- y\n"
msgstr "/              +----- y\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:62
#, no-wrap
msgid "/              /\n"
msgstr "/              /\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:63
#, no-wrap
msgid "a -- b -- c -- d -- E -- F\n"
msgstr "a -- b -- c -- d -- E -- F\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:64
#, no-wrap
msgid "\\\n"
msgstr "\\\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:65
#, no-wrap
msgid "Q -- R -- S\n"
msgstr "Q -- R -- S\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:73
msgid ""
"If the client wants x,y and starts out by saying have F,S, the server "
"doesn't know what F,S is.  Eventually the client says \"have d\" and the "
"server sends \"ACK d continue\" to let the client know to stop walking down "
"that line (so don't send c-b-a), but it's not done yet, it needs a base for "
"x. The client keeps going with S-R-Q, until a gets reached, at which point "
"the server has a clear base and it all ends."
msgstr "クライアントが x,y を必要としていて、最初に have F,S と言って開始した場合、サーバーは F,S が何であるかを知りません。 最終的に、クライアントは「have d」と言い、サーバーは「ACK d continue」を送信して、クライアントにそのラインをたどるのをやめるように通知します（したがって、c-b-a を送信しないでください）が、しかし、まだ完了していないため、x のベースが必要です。 クライアントは、a に到達するまで S-R-Q を続行し、到達した時点でサーバーは明確なベースを持ち、すべてが終了します。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:76
msgid ""
"Without multi_ack the client would have sent that c-b-a chain anyway, "
"interleaved with S-R-Q."
msgstr "multi_ackがなければ、クライアントは S-R-Q を差し挟んで、いずれにせよ c-b-a チェーンを送信していたでしょう。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:78
#, no-wrap
msgid "multi_ack_detailed"
msgstr "multi_ack_detailed"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:82
msgid ""
"This is an extension of multi_ack that permits client to better understand "
"the server's in-memory state. See pack-protocol.txt, section \"Packfile "
"Negotiation\" for more information."
msgstr "これは、クライアントがサーバーのメモリ内状態をよりよく理解できるようにする multi_ack の拡張です。 詳細については、 pack-protocol.txt の「Packfile Negotiation」セクションを参照してください。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:84
#, no-wrap
msgid "no-done"
msgstr "no-done"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:89
msgid ""
"This capability should only be used with the smart HTTP protocol. If "
"multi_ack_detailed and no-done are both present, then the sender is free to "
"immediately send a pack following its first \"ACK obj-id ready\" message."
msgstr "この機能は、スマート HTTP プロトコルでのみ使用するべきです。 multi_ack_detailed と no-done の両方が存在する場合、送信者は、最初の「ACK obj-id ready」メッセージに続いて、パックをすぐに自由に送信できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:94
msgid ""
"Without no-done in the smart HTTP protocol, the server session would end and "
"the client has to make another trip to send \"done\" before the server can "
"send the pack. no-done removes the last round and thus slightly reduces "
"latency."
msgstr "スマート HTTP プロトコルで no-done がないと、サーバーセッションが終了し、サーバーがパックを送信する前に、クライアントは \"done\" を送信するために別のトリップ(trip)を行う必要があります。 no-done は最後のラウンド(round)を削除するため、待ち時間がわずかに短縮されます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:96
#, no-wrap
msgid "thin-pack"
msgstr "thin-pack"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:103
msgid ""
"A thin pack is one with deltas which reference base objects not contained "
"within the pack (but are known to exist at the receiving end). This can "
"reduce the network traffic significantly, but it requires the receiving end "
"to know how to \"thicken\" these packs by adding the missing bases to the "
"pack."
msgstr "シンパックは、パック内に含まれていないベースオブジェクトを参照するデルタを持つパックです (ただし、受信側に存在することがわかっています)。 これにより、ネットワークトラフィックを大幅に削減できますが、受信側は、不足しているベースをパックに追加してこれらのパックを「厚く」する方法を知っている必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:110
msgid ""
"The upload-pack server advertises 'thin-pack' when it can generate and send "
"a thin pack. A client requests the 'thin-pack' capability when it "
"understands how to \"thicken\" it, notifying the server that it can receive "
"such a pack. A client MUST NOT request the 'thin-pack' capability if it "
"cannot turn a thin pack into a self-contained pack."
msgstr "upload-pack サーバーは、シンパックを生成して送信できる場合に「thin-pack」を宣伝(advertise)します。 クライアントは、それを「厚く」する方法を理解したときに「thin-pack」機能を要求し、そのようなパックを受信できることをサーバーに通知します。 シンパックを自己完結型パックに変換できない場合、クライアントは「thin-pack」機能を要求してはなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:115
msgid ""
"Receive-pack, on the other hand, is assumed by default to be able to handle "
"thin packs, but can ask the client not to use the feature by advertising the "
"'no-thin' capability. A client MUST NOT send a thin pack if the server "
"advertises the 'no-thin' capability."
msgstr "一方、 receive-pack はデフォルトでシンパックを処理できると想定されていますが、「no-thin」機能をアドバタイズすることで、クライアントに機能を使用しないように要求できます。 サーバーが「no-thin」機能を宣伝する場合、クライアントはシンパックを送信してはなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:121
msgid ""
"The reasons for this asymmetry are historical. The receive-pack program did "
"not exist until after the invention of thin packs, so historically the "
"reference implementation of receive-pack always understood thin packs. "
"Adding 'no-thin' later allowed receive-pack to disable the feature in a "
"backwards-compatible manner."
msgstr "この非対称性の理由は歴史的なものです。 receive-pack プログラムはシンパックが発明されるまで存在しなかったため、歴史的には receive-pack のリファレンス実装は常にシンパックを理解していました。 後で「no-thin」を追加すると、後方互換性のある方法で receive-pack が機能を無効にすることができました。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:124
#, no-wrap
msgid "side-band, side-band-64k"
msgstr "side-band, side-band-64k"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:128
msgid ""
"This capability means that server can send, and client understand "
"multiplexed progress reports and error info interleaved with the packfile "
"itself."
msgstr "この機能は、サーバーが送信できることを意味し、クライアントは、パックファイル自体に差し挟まれた多重化された進行状況レポートとエラー情報を理解します。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:131
msgid ""
"These two options are mutually exclusive. A modern client always favors "
"'side-band-64k'."
msgstr "これら 2 つのオプションは相互に排他的です。 最新のクライアントは、常に「side-band-64k」を好みます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:137
msgid ""
"Either mode indicates that the packfile data will be streamed broken up into "
"packets of up to either 1000 bytes in the case of 'side_band', or 65520 "
"bytes in the case of 'side_band_64k'. Each packet is made up of a leading 4-"
"byte pkt-line length of how much data is in the packet, followed by a 1-byte "
"stream code, followed by the actual data."
msgstr "いずれのモードも、パックファイルデータが「side_band」の場合は最大 1000 バイト、「side_band_64k」の場合は 65520 バイトのパケットに分割されてストリーミングされることを示します。 各パケットは、パケット内のデータ量を示す先頭の 4 バイトの pkt-line 長と、その後に続く 1 バイトのストリームコード、および実際のデータで構成されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:139
msgid "The stream code can be one of:"
msgstr "ストリームコードは以下のいずれか一つです:"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:143
#, no-wrap
msgid ""
" 1 - pack data\n"
" 2 - progress messages\n"
" 3 - fatal error message just before stream aborts\n"
msgstr ""
" 1 - パックデータ\n"
" 2 - 進行メッセージ\n"
" 3 - ストリームが中止(abort)される直前の致命的なエラーメッセージ\n"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:148
msgid ""
"The \"side-band-64k\" capability came about as a way for newer clients that "
"can handle much larger packets to request packets that are actually crammed "
"nearly full, while maintaining backward compatibility for the older clients."
msgstr "「side-band-64k」機能は、古いクライアントとの下位互換性を維持しながら、実際にはほぼいっぱいに詰め込まれたパケットを要求するために、はるかに大きなパケットを処理できる新しいクライアントの方法として生まれました。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:153
msgid ""
"Further, with side-band and its up to 1000-byte messages, it's actually 999 "
"bytes of payload and 1 byte for the stream code. With side-band-64k, same "
"deal, you have up to 65519 bytes of data and 1 byte for the stream code."
msgstr "さらに、 side-band とその最大 1000 バイトのメッセージを使用すると、実際には 999 バイトのペイロードと 1 バイトのストリームコードになります。 side-band-64k を使用すると、同じ取引で、最大 65519 バイトのデータと 1 バイトのストリームコードで使用できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:157
msgid ""
"The client MUST send only maximum of one of \"side-band\" and \"side- "
"band-64k\".  Server MUST diagnose it as an error if client requests both."
msgstr "クライアントは、 \"side-band\" と \"side-band-64k\" の最大値のどちらか 1 つだけ送信しなければなりません。 クライアントが両方を要求した場合、サーバーはそれをエラーとして診断しなければなりません。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:159
#, no-wrap
msgid "ofs-delta"
msgstr "ofs-delta"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:164
msgid ""
"Server can send, and client understand PACKv2 with delta referring to its "
"base by position in pack rather than by an obj-id.  That is, they can send/"
"read OBJ_OFS_DELTA (aka type 6) in a packfile."
msgstr "サーバーは送信でき、クライアントは、obj-id ではなくパック内の位置によってベースを参照するデルタを使用して PACKv2 を理解します。 つまり、パックファイルで OBJ_OFS_DELTA (別名:タイプ 6) を 送信/読み取り することができます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:166
#, no-wrap
msgid "agent"
msgstr "agent"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:178
msgid ""
"The server may optionally send a capability of the form `agent=X` to notify "
"the client that the server is running version `X`. The client may optionally "
"return its own agent string by responding with an `agent=Y` capability (but "
"it MUST NOT do so if the server did not mention the agent capability). The "
"`X` and `Y` strings may contain any printable ASCII characters except space "
"(i.e., the byte range 32 < x < 127), and are typically of the form \"package/"
"version\" (e.g., \"git/1.8.3.1\"). The agent strings are purely informative "
"for statistics and debugging purposes, and MUST NOT be used to "
"programmatically assume the presence or absence of particular features."
msgstr "サーバーは、サーバーがバージョン「X」を実行していることをクライアントに通知するために、オプションで「agent=X」の形式の機能を送信できます。 クライアントはオプションで、`agent=Y` 機能で応答することにより、独自のエージェント文字列を返すことができます (ただし、サーバーがエージェント機能について言及していない場合は、そうしてはなりません)。 `X` および `Y` 文字列には、スペースを除く任意の印刷可能な ASCII 文字 (つまり、バイト範囲 32 < x < 127) を含めることができ、通常は「パッケージ/バージョン」(「git/1.8.3.1」など) の形式になります。 エージェント文字列は、統計とデバッグの目的で純粋に情報を提供するものであり、特定の機能の有無をプログラムで想定するために使用してはなりません。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:180
#, no-wrap
msgid "object-format"
msgstr "object-format"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:186
msgid ""
"This capability, which takes a hash algorithm as an argument, indicates that "
"the server supports the given hash algorithms.  It may be sent multiple "
"times; if so, the first one given is the one used in the ref advertisement."
msgstr "ハッシュアルゴリズムを引数として取るこの機能は、サーバーが特定のハッシュ アルゴリズムをサポートしていることを示します。 複数回送信される場合があります。 その場合、最初に指定されたものは、ref 広告(ref advertisement)で使用されたものです。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:190
msgid ""
"When provided by the client, this indicates that it intends to use the given "
"hash algorithm to communicate.  The algorithm provided must be one that the "
"server supports."
msgstr "クライアントによって提供された場合、これは、クライアントが指定のハッシュアルゴリズムを使用して通信することを意図していることを示します。 提供されるアルゴリズムは、サーバーがサポートするものでなければなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:193
msgid ""
"If this capability is not provided, it is assumed that the only supported "
"algorithm is SHA-1."
msgstr "この機能が提供されていない場合、サポートされているアルゴリズムは SHA-1 だけであると見なされます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:195
#, no-wrap
msgid "symref"
msgstr "symref"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:201
msgid ""
"This parameterized capability is used to inform the receiver which symbolic "
"ref points to which ref; for example, \"symref=HEAD:refs/heads/master\" "
"tells the receiver that HEAD points to master. This capability can be "
"repeated to represent multiple symrefs."
msgstr "このパラメーター化された機能は、どのシンボリック ref がどの ref を指しているかを受信者に通知するために使用されます。 たとえば、 `symref=HEAD:refs/heads/master` は、HEAD が master を指していることをレシーバーに伝えます。 この機能を繰り返して、複数の symref を表すことができます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:204
msgid ""
"Servers SHOULD include this capability for the HEAD symref if it is one of "
"the refs being sent."
msgstr "HEAD symref が送信される参照の 1 つである場合、サーバーはこの機能を HEAD symref に含めるべきです。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:207
msgid ""
"Clients MAY use the parameters from this capability to select the proper "
"initial branch when cloning a repository."
msgstr "クライアントは、この機能のパラメーターを使用して、リポジトリのクローンを作成するときに適切な初期ブランチを選択するでしょう。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:209
#, no-wrap
msgid "shallow"
msgstr "shallow"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:214
msgid ""
"This capability adds \"deepen\", \"shallow\" and \"unshallow\" commands to "
"the fetch-pack/upload-pack protocol so clients can request shallow clones."
msgstr "この機能は、「deepen」と「shallow」と「unshallow」コマンドを fetch-pack/upload-pack プロトコルに追加して、クライアントが浅いクローン(shallow clones)を要求できるようにします。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:216
#, no-wrap
msgid "deepen-since"
msgstr "deepen-since"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:223
msgid ""
"This capability adds \"deepen-since\" command to fetch-pack/upload-pack "
"protocol so the client can request shallow clones that are cut at a specific "
"time, instead of depth. Internally it's equivalent of doing \"rev-list --max-"
"age=<timestamp>\" on the server side. \"deepen-since\" cannot be used with "
"\"deepen\"."
msgstr "この機能により、「deepen-since」コマンドが fetch-pack/upload-pack プロトコルに追加されるため、クライアントは深さではなく、特定の日時でカットされる浅いクローンを要求できます。 内部的には、サーバー側で `rev-list --max-age=<timestamp>` を実行するのと同じです。 「deepen-since」は「deepen」と併用できません。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:225
#, no-wrap
msgid "deepen-not"
msgstr "deepen-not"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:232
msgid ""
"This capability adds \"deepen-not\" command to fetch-pack/upload-pack "
"protocol so the client can request shallow clones that are cut at a specific "
"revision, instead of depth. Internally it's equivalent of doing \"rev-list --"
"not <rev>\" on the server side. \"deepen-not\" cannot be used with \"deepen"
"\", but can be used with \"deepen-since\"."
msgstr "この機能により、「deepen-not」コマンドが fetch-pack/upload-pack プロトコルに追加されるため、クライアントは深さではなく特定のリビジョンでカットされた浅いクローンを要求できます。 内部的には、サーバー側で `rev-list --not <rev>` を実行するのと同じです。 「deepen-not」は「deepen」では使用できませんが、「deepen-since」では使用できます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:234
#, no-wrap
msgid "deepen-relative"
msgstr "deepen-relative"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:239
msgid ""
"If this capability is requested by the client, the semantics of \"deepen\" "
"command is changed. The \"depth\" argument is the depth from the current "
"shallow boundary, instead of the depth from remote refs."
msgstr "この機能がクライアントによって要求された場合、「deepen」コマンドのセマンティクスが変更されます。 「深さ」引数は、リモートrefからの深さではなく、現在の浅い境界からの深さです。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:241
#, no-wrap
msgid "no-progress"
msgstr "no-progress"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:248
msgid ""
"The client was started with \"git clone -q\" or something, and doesn't want "
"that side band 2.  Basically the client just says \"I do not wish to receive "
"stream 2 on sideband, so do not send it to me, and if you did, I will drop "
"it on the floor anyway\".  However, the sideband channel 3 is still used for "
"error responses."
msgstr "クライアントは「git clone -q」などで開始され、その サイドバンド 2 は必要ありません。基本的に、クライアントは「私はサイドバンドでストリーム 2 を受信したくないので、送信しないでください。 もし送信されたら、とにかく破棄します。(I will drop it on the floor anyway)」 ただし、サイドバンド チャネル 3 はエラー応答に引き続き使用されます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:250
#, no-wrap
msgid "include-tag"
msgstr "include-tag"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:257
msgid ""
"The 'include-tag' capability is about sending annotated tags if we are "
"sending objects they point to.  If we pack an object to the client, and a "
"tag object points exactly at that object, we pack the tag object too.  In "
"general this allows a client to get all new annotated tags when it fetches a "
"branch, in a single network connection."
msgstr "「include-tag」機能は、それらが指すオブジェクトを送信する場合に、注釈付きタグを送信することに関するものです。 オブジェクトをクライアントにパックし、タグ オブジェクトがそのオブジェクトを正確に指す場合、タグオブジェクトもパックします。 一般に、これにより、クライアントは単一のネットワーク接続でブランチをフェッチするときに、すべての新しい注釈付きタグを取得できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:263
msgid ""
"Clients MAY always send include-tag, hardcoding it into a request when the "
"server advertises this capability. The decision for a client to request "
"include-tag only has to do with the client's desires for tag data, whether "
"or not a server had advertised objects in the refs/tags/* namespace."
msgstr "クライアントは、サーバーがこの機能を宣伝するときに、常に include-tag を要求にハードコーディングして送信しても構いません。 クライアントが include-tag を要求するかどうかの決定は、サーバーが `refs/tags/*` 名前空間でオブジェクトを宣伝したかどうかに関係なく、タグデータに対するクライアントの要求にのみ関係があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:266
msgid ""
"Servers MUST pack the tags if their referrant is packed and the client has "
"requested include-tags."
msgstr "サーバーは、リファラント(referrant)がパックされていて、クライアントが include-tags を要求している場合、タグをパックする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:271
msgid ""
"Clients MUST be prepared for the case where a server has ignored include-tag "
"and has not actually sent tags in the pack.  In such cases the client SHOULD "
"issue a subsequent fetch to acquire the tags that include-tag would have "
"otherwise given the client."
msgstr "クライアントは、サーバーが include-tag を無視し、パック内のタグを実際に送信していない場合に備えなければなりません。 そのような場合、クライアントは後続のフェッチを発行して、そうでなければ include-tag がクライアントに与えるタグを取得する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:274
msgid ""
"The server SHOULD send include-tag, if it supports it, regardless of whether "
"or not there are tags available."
msgstr "サーバーは、使用可能なタグがあるかどうかに関係なく、サポートしている場合、 include-tag を送信すべきです。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:276
#, no-wrap
msgid "report-status"
msgstr "report-status"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:286
msgid ""
"The receive-pack process can receive a 'report-status' capability, which "
"tells it that the client wants a report of what happened after a packfile "
"upload and reference update.  If the pushing client requests this "
"capability, after unpacking and updating references the server will respond "
"with whether the packfile unpacked successfully and if each reference was "
"updated successfully.  If any of those were not successful, it will send "
"back an error message.  See pack-protocol.txt for example messages."
msgstr "receive-pack プロセスは、「report-status」機能を受け取ることができます。これは、クライアントがパックファイルのアップロードと参照の更新後に何が起こったかのレポートを必要としていることを伝えます。 プッシュするクライアントがこの機能を要求すると、参照をアンパックして更新した後、サーバーはパックファイルが正常にアンパックされたかどうか、および各参照が正常に更新されたかどうかを応答します。 それらのいずれかが成功しなかった場合、エラーメッセージが返されます。 メッセージの例については、pack-protocol.txt を参照してください。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:288
#, no-wrap
msgid "report-status-v2"
msgstr "report-status-v2"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:297
msgid ""
"Capability 'report-status-v2' extends capability 'report-status' by adding "
"new \"option\" directives in order to support reference rewritten by the "
"\"proc-receive\" hook.  The \"proc-receive\" hook may handle a command for a "
"pseudo-reference which may create or update a reference with different name, "
"new-oid, and old-oid.  While the capability 'report-status' cannot report "
"for such case.  See pack-protocol.txt for details."
msgstr "機能「report-status-v2」は、「proc-receive」フックによって書き換えられた参照をサポートするために、新しい「option」ディレクティブを追加して機能「report-status」を拡張します。 「proc-receive」フックは、異なる名前、new-oid、および old-oid で参照を作成または更新する可能性がある疑似参照のコマンドを処理できます。 機能「report-status」ではそのような場合にレポートできません。 詳細については、 pack-protocol.txt を参照してください。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:299
#, no-wrap
msgid "delete-refs"
msgstr "delete-refs"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:306
msgid ""
"If the server sends back the 'delete-refs' capability, it means that it is "
"capable of accepting a zero-id value as the target value of a reference "
"update.  It is not sent back by the client, it simply informs the client "
"that it can be sent zero-id values to delete references."
msgstr "サーバーが「delete-refs」機能を返送する場合、それは参照更新のターゲット値としてゼロ ID 値を受け入れることができることを意味します。 クライアントから送り返されるのではなく、参照を削除するためにゼロ ID 値を送信できることをクライアントに通知するだけです。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:308
#, no-wrap
msgid "quiet"
msgstr "quiet"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:316
msgid ""
"If the receive-pack server advertises the 'quiet' capability, it is capable "
"of silencing human-readable progress output which otherwise may be shown "
"when processing the received pack. A send-pack client should respond with "
"the 'quiet' capability to suppress server-side progress reporting if the "
"local progress reporting is also being suppressed (e.g., via `push -q`, or "
"if stderr does not go to a tty)."
msgstr "receive-pack サーバーが「quiet」機能を宣伝する場合、受信したパックを処理するときに表示される可能性のある、人間が読める進行状況出力を黙らせる事ができます。 send-pack クライアントは、ローカルの進捗レポートも抑制されている場合 (たとえば、「push -q」を介して、または stderr が tty に出力されない場合)、サーバー側の進捗レポートを抑制する「quiet」機能で応答する必要があります。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:318
#, no-wrap
msgid "atomic"
msgstr "atomic"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:324
msgid ""
"If the server sends the 'atomic' capability it is capable of accepting "
"atomic pushes. If the pushing client requests this capability, the server "
"will update the refs in one atomic transaction. Either all refs are updated "
"or none."
msgstr "サーバーが「atomic」機能を送信すると、アトミック プッシュを受け入れることができます。 プッシュするクライアントがこの機能を要求すると、サーバーはたった 1 つのアトミック取引(atomic transaction)でrefを更新します。 すべてのrefが更新されるか、まったく更新されません。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:326
#, no-wrap
msgid "push-options"
msgstr "push-options"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:333
msgid ""
"If the server sends the 'push-options' capability it is able to accept push "
"options after the update commands have been sent, but before the packfile is "
"streamed. If the pushing client requests this capability, the server will "
"pass the options to the pre- and post- receive hooks that process this push "
"request."
msgstr "サーバーが「push-options」機能を送信すると、updateコマンドが送信された後、パックファイルがストリーミングされる前に、プッシュ オプションを受け入れることができます。 プッシュするクライアントがこの機能を要求すると、サーバーは、このプッシュ要求を処理する pre-receive フックと post-receive フックにオプションを渡します。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:335
#, no-wrap
msgid "allow-tip-sha1-in-want"
msgstr "allow-tip-sha1-in-want"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:342
#: ../Documentation-sedout/technical/protocol-capabilities.txt:351
msgid ""
"If the upload-pack server advertises this capability, fetch-pack may send "
"\"want\" lines with object names that exist at the server but are not "
"advertised by upload-pack. For historical reasons, the name of this "
"capability contains \"sha1\". Object names are always given using the object "
"format negotiated through the 'object-format' capability."
msgstr "upload-pack サーバーがこの機能を宣伝する場合、fetch-pack は、サーバーに存在するが、upload-pack によって宣伝されていないオブジェクト名を含む「want」行を送信する場合があります。 歴史的な理由から、この機能の名前には「sha1」が含まれています。 オブジェクト名は常に、「object-format」機能によってネゴシエートされたオブジェクトフォーマットを使用して指定されます。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:344
#, no-wrap
msgid "allow-reachable-sha1-in-want"
msgstr "allow-reachable-sha1-in-want"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:353
#, no-wrap
msgid "push-cert=<nonce>"
msgstr "push-cert=<nonce>"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:360
msgid ""
"The receive-pack server that advertises this capability is willing to accept "
"a signed push certificate, and asks the <nonce> to be included in the push "
"certificate.  A send-pack client MUST NOT send a push-cert packet unless the "
"receive-pack server advertises this capability."
msgstr "この機能を宣伝する receive-pack サーバーは、署名されたプッシュ証明書を喜んで受け入れ、<nonce> をプッシュ証明書に含めるように要求します。 send-pack クライアントは、receive-pack サーバーがこの機能を宣伝しない限り、push-cert パケットを送信してはいけません (MUST NOT)。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:362
#, no-wrap
msgid "filter"
msgstr "filter"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:368
msgid ""
"If the upload-pack server advertises the 'filter' capability, fetch-pack may "
"send \"filter\" commands to request a partial clone or partial fetch and "
"request that the server omit various objects from the packfile."
msgstr "upload-pack サーバーが「filter」機能を宣伝する場合、fetch-pack は「filter」コマンドを送信して部分クローン(partial clone)または部分フェッチ(partial fetch)を要求し、サーバーがパックファイルからさまざまなオブジェクトを省略するように要求する場合があります。"

#. type: Title -
#: ../Documentation-sedout/technical/protocol-capabilities.txt:370
#, no-wrap
msgid "session-id=<session id>"
msgstr "session-id=<session id>"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:375
msgid ""
"The server may advertise a session ID that can be used to identify this "
"process across multiple requests. The client may advertise its own session "
"ID back to the server as well."
msgstr "サーバーは、複数のリクエストでこのプロセスを識別するために使用できるセッション ID を宣伝する場合があります。 クライアントは、独自のセッション ID をサーバーに宣伝することもできます。"

#. type: Plain text
#: ../Documentation-sedout/technical/protocol-capabilities.txt:380
msgid ""
"Session IDs should be unique to a given process. They must fit within a "
"packet-line, and must not contain non-printable or whitespace characters. "
"The current implementation uses trace2 session IDs (see link:api-trace2."
"html[api-trace2] for details), but this may change and users of the session "
"ID should not rely on this fact."
msgstr "セッション ID は、特定のプロセスに対して一意である必要があります。 それらはパケット行内に収まる必要があり、印刷できない文字や空白文字を含んではなりません。 現在の実装では trace2 セッション ID を使用していますが (詳細については、link:api-trace2.html[api-trace2] を参照してください)、これは変更される可能性があり、セッション ID のユーザーはこの事実に依存しないでください。"
