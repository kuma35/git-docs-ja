# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:06+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/technical/index-format.txt:2
#, no-wrap
msgid "Git index format"
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:4
#, no-wrap
msgid "The Git index file has the following format"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:11
#, no-wrap
msgid ""
"  All binary numbers are in network byte order.\n"
"  In a repository using the traditional SHA-1, checksums and object IDs\n"
"  (object names) mentioned below are all computed using SHA-1.  Similarly,\n"
"  in SHA-256 repositories, these values are computed using SHA-256.\n"
"  Version 2 is described here unless stated otherwise.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:13
msgid "A 12-byte header consisting of"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:15
#, no-wrap
msgid "4-byte signature:\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:16
#, no-wrap
msgid "The signature is { 'D', 'I', 'R', 'C' } (stands for \"dircache\")\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:18
msgid "4-byte version number:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:19
#, no-wrap
msgid "The current supported versions are 2, 3 and 4.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:21
msgid "32-bit number of index entries."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:23
msgid "A number of sorted index entries (see below)."
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:25 ../Documentation/technical/index-format.txt:144
#, no-wrap
msgid "Extensions"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:28
#, no-wrap
msgid ""
"Extensions are identified by signature. Optional extensions can\n"
"be ignored if Git does not understand them.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:30
msgid "Git currently supports cache tree and resolve undo extensions."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:33
msgid ""
"4-byte extension signature. If the first byte is 'A'..'Z' the extension is "
"optional and can be ignored."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:35
msgid "32-bit size of the extension"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:37
msgid "Extension data"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:39
msgid "Hash checksum over the content of the index file before this checksum."
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:40
#, no-wrap
msgid "Index entry"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:46
#, no-wrap
msgid ""
"Index entries are sorted in ascending order on the name field,\n"
"interpreted as a string of unsigned bytes (i.e. memcmp() order, no\n"
"localization, no special casing of directory separator '/'). Entries\n"
"with the same name are sorted by their stage field.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:53
msgid ""
"An index entry typically represents a file. However, if sparse-checkout is "
"enabled in cone mode (`core.sparseCheckoutCone` is enabled) and the "
"`extensions.sparseIndex` extension is enabled, then the index may contain "
"entries for directories outside of the sparse-checkout definition.  These "
"entries have mode `040000`, include the `SKIP_WORKTREE` bit, and the path "
"ends in a directory separator."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:55
msgid "32-bit ctime seconds, the last time a file's metadata changed"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:56 ../Documentation/technical/index-format.txt:59 ../Documentation/technical/index-format.txt:62 ../Documentation/technical/index-format.txt:65 ../Documentation/technical/index-format.txt:68 ../Documentation/technical/index-format.txt:71 ../Documentation/technical/index-format.txt:85 ../Documentation/technical/index-format.txt:88
#, no-wrap
msgid "this is stat(2) data\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:58
msgid "32-bit ctime nanosecond fractions"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:61
msgid "32-bit mtime seconds, the last time a file's data changed"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:64
msgid "32-bit mtime nanosecond fractions"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:67
msgid "32-bit dev"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:70
msgid "32-bit ino"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:73
msgid "32-bit mode, split into (high to low bits)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:75
#, no-wrap
msgid "4-bit object type\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:77
#, no-wrap
msgid ""
"valid values in binary are 1000 (regular file), 1010 (symbolic link)\n"
"and 1110 (gitlink)\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:79
msgid "3-bit unused"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:82
msgid ""
"9-bit unix permission. Only 0755 and 0644 are valid for regular files.  "
"Symbolic links and gitlinks have value 0 in this field."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:84
msgid "32-bit uid"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:87
msgid "32-bit gid"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:90
msgid "32-bit file size"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:91
#, no-wrap
msgid "This is the on-disk size from stat(2), truncated to 32-bit.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:93
msgid "Object name for the represented object"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:95
msgid "A 16-bit 'flags' field split into (high to low bits)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:97
#, no-wrap
msgid "1-bit assume-valid flag\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:99
msgid "1-bit extended flag (must be zero in version 2)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:101
msgid "2-bit stage (during merge)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:104
msgid ""
"12-bit name length if the length is less than 0xFFF; otherwise 0xFFF is "
"stored in this field."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:107
msgid ""
"(Version 3 or later) A 16-bit field, only applicable if the \"extended "
"flag\" above is 1, split into (high to low bits)."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:109
#, no-wrap
msgid "1-bit reserved for future\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:111
msgid "1-bit skip-worktree flag (used by sparse checkout)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:113
msgid "1-bit intent-to-add flag (used by \"git add -N\")"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:115
msgid "13-bit unused, must be zero"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:117
msgid "Entry path name (variable length) relative to top level directory"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:120
#, no-wrap
msgid ""
"(without leading slash). '/' is used as path separator. The special\n"
"path components \".\", \"..\" and \".git\" (without quotes) are "
"disallowed.\n"
"Trailing slash is also disallowed.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:124
msgid ""
"The exact encoding is undefined, but the '.' and '/' characters are encoded "
"in 7-bit ASCII and the encoding cannot contain a NUL byte (iow, this is a "
"UNIX pathname)."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:126
msgid "(Version 4) In version 4, the entry path name is prefix-compressed"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:134
#, no-wrap
msgid ""
"relative to the path name for the previous entry (the very first\n"
"entry is encoded as if the path name for the previous entry is an\n"
"empty string).  At the beginning of an entry, an integer N in the\n"
"variable width encoding (the same encoding as the offset is encoded\n"
"for OFS_DELTA pack entries; see pack-format.txt) is stored, followed\n"
"by a NUL-terminated string S.  Removing N bytes from the end of the\n"
"path name for the previous entry, and replacing it with the string S\n"
"yields the path name for this entry.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:137
msgid ""
"1-8 nul bytes as necessary to pad the entry to a multiple of eight bytes "
"while keeping the name NUL-terminated."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:140
msgid "(Version 4) In version 4, the padding after the pathname does not exist."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:143
msgid ""
"Interpretation of index entries in split index mode is completely "
"different. See below for details."
msgstr ""

#. type: Title ===
#: ../Documentation/technical/index-format.txt:146
#, no-wrap
msgid "Cache tree"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:158
msgid ""
"Since the index does not record entries for directories, the cache entries "
"cannot describe tree objects that already exist in the object database for "
"regions of the index that are unchanged from an existing commit. The cache "
"tree extension stores a recursive tree structure that describes the trees "
"that already exist and completely match sections of the cache entries. This "
"speeds up tree object generation from the index for a new commit by only "
"computing the trees that are \"new\" to that commit. It also assists when "
"comparing the index to another tree, such as `HEAD^{tree}`, since sections "
"of the index can be skipped when a tree comparison demonstrates equality."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:165
msgid ""
"The recursive tree structure uses nodes that store a number of cache "
"entries, a list of subnodes, and an object ID (OID). The OID references the "
"existing tree for that node, if it is known to exist. The subnodes "
"correspond to subdirectories that themselves have cache tree nodes. The "
"number of cache entries corresponds to the number of cache entries in the "
"index that describe paths within that tree's directory."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:168
msgid ""
"The extension tracks the full directory structure in the cache tree "
"extension, but this is generally smaller than the full cache entry list."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:175
msgid ""
"When a path is updated in index, Git invalidates all nodes of the recursive "
"cache tree corresponding to the parent directories of that path. We store "
"these tree nodes as being \"invalid\" by using \"-1\" as the number of cache "
"entries. Invalid nodes still store a span of index entries, allowing Git to "
"focus its efforts when reconstructing a full cache tree."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:177
msgid "The signature for this extension is { 'T', 'R', 'E', 'E' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:180 ../Documentation/technical/index-format.txt:224
msgid "A series of entries fill the entire extension; each of which consists of:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:182
msgid "NUL-terminated path component (relative to its parent directory);"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:185
msgid ""
"ASCII decimal number of entries in the index that is covered by the tree "
"this entry represents (entry_count);"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:187
msgid "A space (ASCII 32);"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:190
msgid "ASCII decimal number that represents the number of subtrees this tree has;"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:192
msgid "A newline (ASCII 10); and"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:195
msgid ""
"Object name for the object that would result from writing this span of index "
"as a tree."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:200
#, no-wrap
msgid ""
"An entry can be in an invalidated state and is represented by having\n"
"a negative number in the entry_count field. In this case, there is no\n"
"object name and the next entry starts immediately after the newline.\n"
"When writing an invalid entry, -1 should always be used as entry_count.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:207
msgid ""
"The entries are written out in the top-down, depth-first order.  The first "
"entry represents the root level of the repository, followed by the first "
"subtree--let's call this A--of the root level (with its name relative to the "
"root level), followed by the first subtree of A (with its name relative to "
"A), and so on. The specified number of subtrees indicates when the current "
"level of the recursive stack is complete."
msgstr ""

#. type: Title ===
#: ../Documentation/technical/index-format.txt:208
#, no-wrap
msgid "Resolve undo"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:214
msgid ""
"A conflict is represented in the index as a set of higher stage entries.  "
"When a conflict is resolved (e.g. with \"git add path\"), these higher stage "
"entries will be removed and a stage-0 entry with proper resolution is added."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:219
msgid ""
"When these higher stage entries are removed, they are saved in the resolve "
"undo extension, so that conflicts can be recreated (e.g. with \"git checkout "
"-m\"), in case users want to redo a conflict resolution from scratch."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:221
msgid "The signature for this extension is { 'R', 'E', 'U', 'C' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:227
msgid ""
"NUL-terminated pathname the entry describes (relative to the root of the "
"repository, i.e. full pathname);"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:231
msgid ""
"Three NUL-terminated ASCII octal numbers, entry mode of entries in stage 1 "
"to 3 (a missing stage is represented by \"0\" in this field); and"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:234
msgid ""
"At most three object names of the entry in stages from 1 to 3 (nothing is "
"written for a missing stage)."
msgstr ""

#. type: Title ===
#: ../Documentation/technical/index-format.txt:235
#, no-wrap
msgid "Split index"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:240
#, no-wrap
msgid ""
"In split index mode, the majority of index entries could be stored\n"
"in a separate file. This extension records the changes to be made on\n"
"top of that to produce the final index.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:242
msgid "The signature for this extension is { 'l', 'i', 'n', 'k' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:244 ../Documentation/technical/index-format.txt:367 ../Documentation/technical/index-format.txt:386
msgid "The extension consists of:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:248
msgid ""
"Hash of the shared index file. The shared index file path is "
"$GIT_DIR/sharedindex.<hash>. If all bits are zero, the index does not "
"require a shared index file."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:255
msgid ""
"An ewah-encoded delete bitmap, each bit represents an entry in the shared "
"index. If a bit is set, its corresponding entry in the shared index will be "
"removed from the final index.  Note, because a delete operation changes "
"index entry positions, but we do need original positions in replace phase, "
"it's best to just mark entries for removal, then do a mass deletion after "
"replacement."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:263
msgid ""
"An ewah-encoded replace bitmap, each bit represents an entry in the shared "
"index. If a bit is set, its corresponding entry in the shared index will be "
"replaced with an entry in this index file. All replaced entries are stored "
"in sorted order in this index. The first \"1\" bit in the replace bitmap "
"corresponds to the first index entry, the second \"1\" bit to the second "
"entry and so on. Replaced entries may have empty path names to save space."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:267
#, no-wrap
msgid ""
"The remaining index entries after replaced ones will be added to the\n"
"final index. These added entries are also sorted by entry name then\n"
"stage.\n"
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:268
#, no-wrap
msgid "Untracked cache"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:273
msgid ""
"Untracked cache saves the untracked file list and necessary data to verify "
"the cache. The signature for this extension is { 'U', 'N', 'T', 'R' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:275 ../Documentation/technical/index-format.txt:337
msgid "The extension starts with"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:279
msgid ""
"A sequence of NUL-terminated strings, preceded by the size of the sequence "
"in variable width encoding. Each string describes the environment where the "
"cache can be used."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:282
msgid ""
"Stat data of $GIT_DIR/info/exclude. See \"Index entry\" section from ctime "
"field until \"file size\"."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:284
msgid "Stat data of core.excludesFile"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:286
msgid "32-bit dir_flags (see struct dir_struct)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:289
msgid "Hash of $GIT_DIR/info/exclude. A null hash means the file does not exist."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:292
msgid "Hash of core.excludesFile. A null hash means the file does not exist."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:295
msgid ""
"NUL-terminated string of per-dir exclude file name. This usually is "
"\".gitignore\"."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:299
msgid ""
"The number of following directory blocks, variable width encoding. If this "
"number is zero, the extension ends here with a following NUL."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:302
msgid "A number of directory blocks in depth-first-search order, each consists of"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:304
msgid "The number of untracked entries, variable width encoding."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:306
msgid "The number of sub-directory blocks, variable width encoding."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:308
msgid "The directory name terminated by NUL."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:310
msgid "A number of untracked file/dir names terminated by NUL."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:312
msgid "The remaining data of each directory block is grouped by type:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:315
msgid ""
"An ewah bitmap, the n-th bit marks whether the n-th directory has valid "
"untracked cache entries."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:318
msgid ""
"An ewah bitmap, the n-th bit records \"check-only\" bit of "
"read_directory_recursive() for the n-th directory."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:321
msgid ""
"An ewah bitmap, the n-th bit indicates whether hash and stat data is valid "
"for the n-th directory and exists in the next data."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:324
msgid ""
"An array of stat data. The n-th data corresponds with the n-th \"one\" bit "
"in the previous ewah bitmap."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:327
msgid ""
"An array of hashes. The n-th hash corresponds with the n-th \"one\" bit in "
"the previous ewah bitmap."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:329
msgid "One NUL."
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:330
#, no-wrap
msgid "File System Monitor cache"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:335
#, no-wrap
msgid ""
"The file system monitor cache tracks files for which the core.fsmonitor\n"
"hook has told us about changes.  The signature for this extension is\n"
"{ 'F', 'S', 'M', 'N' }.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:339
msgid "32-bit version number: the current supported versions are 1 and 2."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:342
msgid ""
"(Version 1)  64-bit time: the extension data reflects all changes through "
"the given"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:344
msgid ""
"time which is stored as the nanoseconds elapsed since midnight, January 1, "
"1970."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:349
msgid ""
"(Version 2)  A null terminated string: an opaque token defined by the file "
"system monitor application.  The extension data reflects all changes "
"relative to that token."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:351
msgid "32-bit bitmap size: the size of the CE_FSMONITOR_VALID bitmap."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:354
msgid ""
"An ewah bitmap, the n-th bit indicates whether the n-th index entry is not "
"CE_FSMONITOR_VALID."
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:355
#, no-wrap
msgid "End of Index Entry"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:361
#, no-wrap
msgid ""
"The End of Index Entry (EOIE) is used to locate the end of the variable\n"
"length index entries and the beginning of the extensions. Code can take\n"
"advantage of this to quickly locate the index extensions without having\n"
"to parse through all of the index entries.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:365
msgid ""
"Because it must be able to be loaded before the variable length cache "
"entries and other index extensions, this extension must be written last.  "
"The signature for this extension is { 'E', 'O', 'I', 'E' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:369
msgid "32-bit offset to the end of the index entries"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:371
msgid "Hash over the extension types and their sizes (but not"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:374
msgid ""
"their contents).  E.g. if we have \"TREE\" extension that is N-bytes long, "
"\"REUC\" extension that is M-bytes long, followed by \"EOIE\", then the hash "
"would be:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:376
msgid "Hash(\"TREE\" + <binary representation of N> +"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:377
#, no-wrap
msgid "\"REUC\" + <binary representation of M>)\n"
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:378
#, no-wrap
msgid "Index Entry Offset Table"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:384
msgid ""
"The Index Entry Offset Table (IEOT) is used to help address the CPU cost of "
"loading the index by enabling multi-threading the process of converting "
"cache entries from the on-disk format to the in-memory format.  The "
"signature for this extension is { 'I', 'E', 'O', 'T' }."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:388
msgid "32-bit version (currently 1)"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:390
msgid "A number of index offset entries each consisting of:"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:392
msgid "32-bit offset from the beginning of the file to the first cache entry"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:393
msgid "in this block of entries."
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:395
msgid "32-bit count of cache entries in this block"
msgstr ""

#. type: Title ==
#: ../Documentation/technical/index-format.txt:396
#, no-wrap
msgid "Sparse Directory Entries"
msgstr ""

#. type: Plain text
#: ../Documentation/technical/index-format.txt:406
#, no-wrap
msgid ""
"When using sparse-checkout in cone mode, some entire directories within\n"
"the index can be summarized by pointing to a tree object instead of the\n"
"entire expanded list of paths within that tree. An index containing such\n"
"entries is a \"sparse index\". Index format versions 4 and less were not\n"
"implemented with such entries in mind. Thus, for these versions, an\n"
"index containing sparse directory entries will include this extension\n"
"with signature { 's', 'd', 'i', 'r' }. Like the split-index extension,\n"
"tools should avoid interacting with a sparse index unless they understand\n"
"this extension.\n"
msgstr ""
