# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-10-20 17:00+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/api-parse-options.txt:2
#, no-wrap
msgid "parse-options API"
msgstr "parse-options API"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:6
msgid ""
"The parse-options API is used to parse and massage options in Git and to "
"provide a usage help with consistent look."
msgstr ""
"parse-options API(オプション解析API)は、Gitのオプションを解析(parse)および揉"
"み揉み(massage)し、一貫した外観で使用法のヘルプを提供するために使用されます。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:8
#, no-wrap
msgid "Basics"
msgstr "Basics"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:15
msgid ""
"The argument vector `argv[]` may usually contain mandatory or optional 'non-"
"option arguments', e.g. a filename or a branch, 'options', and "
"'subcommands'.  Options are optional arguments that start with a dash and "
"that allow to change the behavior of a command."
msgstr "引数ベクタ `argv[]` には通常、 必須または選択肢である、 「非オプション引数」(例えばファイル名やブランチ名)と、 「オプション群」と、 「サブコマンド群」が含まれます。 オプションは、 ダッシュ(`-`)で始まり、 コマンドの動作を変更できる選択肢の引数です。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:21
msgid ""
"There are basically three types of options: 'boolean' options, options with "
"(mandatory) 'arguments' and options with 'optional arguments' (i.e. a "
"boolean option that can be adjusted)."
msgstr ""
"オプションには、基本的に3つのタイプがあります。「ブール値」(boolean)オプショ"
"ンと、 「(必須の)引数」を含むオプションと、「オプションの引数」を含むオプショ"
"ン((つまり、調整可能なブールオプション)です。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:27
msgid ""
"There are basically two forms of options: 'Short options' consist of one "
"dash (`-`) and one alphanumeric character.  'Long options' begin with two "
"dashes (`--`) and some alphanumeric characters."
msgstr ""
"オプションには、基本的には2つの形式があります。「短いオプション」(Short "
"options)は、1つのダッシュ(`-`(\\x2d))と1つの英数字で構成されます。「長いオプ"
"ション」(Long options)は、2つのダッシュ(`--`(\\x2d\\x2d))で始まるいくつかの英"
"数字が続きます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:30
msgid ""
"Options are case-sensitive.  Please define 'lower-case long options' only."
msgstr ""
"オプションでは大文字と小文字が区別されます。長いオプションは小文字のみで定義"
"してください。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:32
msgid "The parse-options API allows:"
msgstr "parse-options APIでは、以下のことが可能です:"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:36
msgid ""
"'stuck' and 'separate form' of options with arguments.  `-oArg` is stuck, `-"
"o Arg` is separate form.  `--option=Arg` is stuck, `--option Arg` is "
"separate form."
msgstr ""
"引数付きのオプションには「串刺し形式」(stuck form)と「ばらばら形式」"
"(separate form)があります。 `-oArg` が串刺し形式(stuck)で、 `-o Arg` がばらば"
"ら形式(separate)です。 `--option=Arg` は串刺し形式(stuck)で、 `--option Arg` "
"はばらばら形式(separate)です。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:39
msgid ""
"Long options may be 'abbreviated', as long as the abbreviation is "
"unambiguous."
msgstr ""
"省略形が明確である限り、長いオプションは「省略形」(abbreviated)にすることがで"
"きます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:41
msgid "Short options may be bundled, e.g. `-a -b` can be specified as `-ab`."
msgstr ""
"短いオプションがおまとめされている事があります。例えば `-a -b` は `-ab` と指"
"定できます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:47
msgid ""
"Boolean long options can be 'negated' (or 'unset') by prepending `no-`, e.g. "
"`--no-abbrev` instead of `--abbrev`. Conversely, options that begin with `no-"
"` can be 'negated' by removing it.  Other long options can be unset (e.g., "
"set string to NULL, set integer to 0) by prepending `no-`."
msgstr ""
"ブール値の長いオプションは、「no-」を前に付けることで「否定」(または「未設"
"定」(unset))にできます。例えば `--abbrev`の代わりに `--no-abbrev` とします。 "
"逆に、 `no-` で始まるオプションは、削除することでその「否定」にできます。ま"
"た、ブール値以外の長いオプションは、`no-` を前に付けることで設定を解除(unset)"
"できます(たとえば、文字列をNULLに設定し、整数を0に設定します)。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:51
msgid ""
"Options and non-option arguments can clearly be separated using the `--` "
"option, e.g. `-a -b --option -- --this-is-a-file` indicates that `--this-is-"
"a-file` must not be processed as an option."
msgstr ""
"オプションと非オプションの引数は、 `--` オプションを使用して明確に分離できま"
"す。 `-a -b --option -- --this-is-a-file` は、 `--this-is-a-file` をオプショ"
"ンとして処理してはいけないことを示します。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:53
msgid "Subcommands are special in a couple of ways:"
msgstr "サブコマンドはいくつかの点で特別です:"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:57
msgid ""
"Subcommands only have long form, and they have no double dash prefix, no "
"negated form, and no description, and they don't take any arguments, and "
"can't be abbreviated."
msgstr "サブコマンドは長い形式のみで、かつ二重ダッシュのプレフィックスがなく、かつ否定形式がなく、かつ説明がなく、かつ引数を取らず、かつ省略できません。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:60
msgid ""
"There must be exactly one subcommand among the arguments, or zero if the "
"command has a default operation mode."
msgstr "引数の中にはサブコマンドが 1 つだけ存在する必要があります。 コマンドにデフォルトの動作モードがある場合、 (デフォルトの動作モードの時は)引数の中のサブコマンドはゼロ個でなければなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:64
msgid ""
"All arguments following the subcommand are considered to be arguments of the "
"subcommand, and, conversely, arguments meant for the subcommand may not "
"precede the subcommand."
msgstr "サブコマンドに続くすべての引数は、 サブコマンドの引数と見なされます。 逆に、 サブコマンド用の引数は、 サブコマンドの前にない場合があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:67
msgid ""
"Therefore, if the options array contains at least one subcommand and "
"`parse_options()` encounters the first dashless argument, it will either:"
msgstr "それゆえ、 options 配列に少なくとも 1 つのサブコマンドが含まれていて、 `parse_options()` が最初のダッシュなし引数に遭遇した場合 、以下のいずれかになります:"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:72
msgid ""
"stop and return, if that dashless argument is a known subcommand, setting "
"`value` to the function pointer associated with that subcommand, storing the "
"name of the subcommand in argv[0], and leaving the rest of the arguments "
"unprocessed, or"
msgstr "そのダッシュ無し引数が既知のサブコマンドである場合は処理を止めてリターンし、 そのサブコマンドに関連付けられた関数ポインタに `value` を設定し、 サブコマンドの名前を argv[0] に格納し、 残りの引数を未処理のままにします"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:76
msgid ""
"stop and return, if it was invoked with the `PARSE_OPT_SUBCOMMAND_OPTIONAL` "
"flag and that dashless argument doesn't match any subcommands, leaving "
"`value` unchanged and the rest of the arguments unprocessed, or"
msgstr "または、 `PARSE_OPT_SUBCOMMAND_OPTIONAL` フラグを指定して呼び出され、 かつ、 そのダッシュのない引数がどのサブコマンドとも一致しない場合は、 そこで処理を止めてリターンし、 `value` を変更せず、残りの引数を未処理のままにします"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:78
msgid "show error and usage, and abort."
msgstr "または、 エラーと使用法を表示し、 中止(abort)します。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:80
#, no-wrap
msgid "Steps to parse options"
msgstr "Steps to parse options"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:83
msgid "`#include \"parse-options.h\"`"
msgstr "`#include \"parse-options.h\"`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:87
msgid ""
"define a NULL-terminated `static const char * const builtin_foo_usage[]` "
"array containing alternative usage strings"
msgstr ""
"代替の使用法文字列を含むNULL終端の配列 `static const char * const "
"builtin_foo_usage[]` を定義します。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:90
msgid ""
"define `builtin_foo_options` array as described below in section 'Data "
"Structure'."
msgstr ""
"以下の「Data Structure」セクションで説明するように、 `builtin_foo_options` 配"
"列を定義します。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:93
msgid "in `cmd_foo(int argc, const char **argv, const char *prefix)` call"
msgstr ""
"`cmd_foo(int argc, const char **argv, const char *prefix)` の中で以下を呼び出"
"します。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:95
#, no-wrap
msgid "argc = parse_options(argc, argv, prefix, builtin_foo_options, builtin_foo_usage, flags);\n"
msgstr "argc = parse_options(argc, argv, prefix, builtin_foo_options, builtin_foo_usage, flags);\n"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:99
msgid ""
"`parse_options()` will filter out the processed options of `argv[]` and "
"leave the non-option arguments in `argv[]`.  `argc` is updated appropriately "
"because of the assignment."
msgstr ""
"`parse_options()` は、 `argv[]` から処理処理済オプションを除外し、オプション"
"以外の引数を `argv[]` に残します。これにより、 `argc` は適切に更新されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:105
msgid ""
"You can also pass NULL instead of a usage array as the fifth parameter of "
"parse_options(), to avoid displaying a help screen with usage info and "
"option list.  This should only be done if necessary, e.g. to implement a "
"limited parser for only a subset of the options that needs to be run before "
"the full parser, which in turn shows the full help message."
msgstr ""
"あなたは parse_options() の5番目のパラメーター(builtin_foo_usage)としてusage"
"配列の代わりにNULLを渡すこともできます。これにより、使用法情報とオプションリ"
"ストを含むヘルプ画面が表示されなくなります。これは、必要な場合のみ行う必要が"
"あります。例えば、全体のパーサーの前に実行する必要があるオプションのサブセッ"
"トに対してのみ限定されたパーサーを実装するする時です。これにより、全体の側の"
"ヘルプメッセージが表示されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:107
msgid "Flags are the bitwise-or of:"
msgstr "flagsは以下のビット論理和です:"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:108
#, no-wrap
msgid "`PARSE_OPT_KEEP_DASHDASH`"
msgstr "`PARSE_OPT_KEEP_DASHDASH`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:111
msgid "Keep the `--` that usually separates options from non-option arguments."
msgstr "通常、オプションを非オプション引数から分離する `--` を保持します。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:112
#, no-wrap
msgid "`PARSE_OPT_STOP_AT_NON_OPTION`"
msgstr "`PARSE_OPT_STOP_AT_NON_OPTION`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:116
msgid ""
"Usually the whole argument vector is massaged and reordered.  Using this "
"flag, processing is stopped at the first non-option argument."
msgstr ""
"通常は引数ベクタ全体がもみもみされ、並べ替えられます。このフラグを使用する"
"と、オプション以外の最初の引数で処理が停止します。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:117
#, no-wrap
msgid "`PARSE_OPT_KEEP_ARGV0`"
msgstr "`PARSE_OPT_KEEP_ARGV0`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:120
msgid ""
"Keep the first argument, which contains the program name.  It's removed from "
"argv[] by default."
msgstr ""
"プログラム名を含む最初の引数を保持します。デフォルトでは argv[] から削除され"
"ます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:121
#, no-wrap
msgid "`PARSE_OPT_KEEP_UNKNOWN_OPT`"
msgstr "`PARSE_OPT_KEEP_UNKNOWN_OPT`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:134
msgid ""
"Keep unknown options instead of erroring out.  This doesn't work for all "
"combinations of arguments as users might expect it to do.  E.g. if the first "
"argument in `--unknown --known` takes a value (which we can't know), the "
"second one is mistakenly interpreted as a known option.  Similarly, if "
"`PARSE_OPT_STOP_AT_NON_OPTION` is set, the second argument in `--unknown "
"value` will be mistakenly interpreted as a non-option, not as a value "
"belonging to the unknown option, the parser early.  That's why "
"parse_options() errors out if both options are set.  Note that non-option "
"arguments are always kept, even without this flag."
msgstr "エラーを発生させるのではなく、不明な引数を保持(keep)します。 これは、ユーザーが期待するように、引数のすべての組み合わせで機能するわけではありません。 例えば、`--unknown --known` の最初の引数(`--unknown`)が値をとる場合(私達はそれを知ることはできないので)、2番目の引数(`--known`)は誤って既知のオプションとして解釈されます。同様に、 `PARSE_OPT_STOP_AT_NON_OPTION` が設定されている場合、 ` --unknown value` の2番目の引数(value)は、不明なオプションに属する値ではなく、パーサーの早期に非オプションとして誤って解釈されます。そのため、両方のオプションが設定されている場合、 parse_options() はエラーになります。 注意: このフラグがなくても、 非オプション引数(non-option arguments)は常に保持されることに注意してください。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:135
#, no-wrap
msgid "`PARSE_OPT_NO_INTERNAL_HELP`"
msgstr "`PARSE_OPT_NO_INTERNAL_HELP`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:140
msgid ""
"By default, parse_options() handles `-h`, `--help` and `--help-all` "
"internally, by showing a help screen.  This option turns it off and allows "
"one to add custom handlers for these options, or to just leave them unknown."
msgstr ""
"デフォルトでは、 parse_options() は、ヘルプ画面を表示することにより、内部で "
"`-h` と `--help` と `--help-all` を処理します。 このオプションはそれをオフに"
"し、これらのオプションのカスタムハンドラーを追加したり、単にそれらを不明"
"(unknown)のままにすることができます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:141
#, no-wrap
msgid "`PARSE_OPT_SUBCOMMAND_OPTIONAL`"
msgstr "`PARSE_OPT_SUBCOMMAND_OPTIONAL`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:143
msgid "Don't error out when no subcommand is specified."
msgstr "サブコマンドが指定されていない場合でもエラーになりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:147
msgid ""
"Note that `PARSE_OPT_STOP_AT_NON_OPTION` is incompatible with subcommands; "
"while `PARSE_OPT_KEEP_DASHDASH` and `PARSE_OPT_KEEP_UNKNOWN_OPT` can only be "
"used with subcommands when combined with `PARSE_OPT_SUBCOMMAND_OPTIONAL`."
msgstr "注意: `PARSE_OPT_STOP_AT_NON_OPTION` はサブコマンドと互換性がないことに注意してください。 一方、 `PARSE_OPT_KEEP_DASHDASH` と `PARSE_OPT_KEEP_UNKNOWN_OPT` は、 `PARSE_OPT_SUBCOMMAND_OPTIONAL` と組み合わせた場合にのみサブコマンドで使用できます。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:149
#, no-wrap
msgid "Data Structure"
msgstr "Data Structure"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:154
msgid ""
"The main data structure is an array of the `option` struct, say `static "
"struct option builtin_add_options[]`.  There are some macros to easily "
"define options:"
msgstr ""
"主なデータ構造は、 option 構造体の配列、たとえば `static struct option "
"builtin_add_options[]` です。オプションを簡単に定義するためのマクロがいくつか"
"あります:"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:155
#, no-wrap
msgid "`OPT__ABBREV(&int_var)`"
msgstr "`OPT__ABBREV(&int_var)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:157
msgid "Add `--abbrev[=<n>]`."
msgstr "`--abbrev[=<n>]` を追加。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:158
#, no-wrap
msgid "`OPT__COLOR(&int_var, description)`"
msgstr "`OPT__COLOR(&int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:160
msgid "Add `--color[=<when>]` and `--no-color`."
msgstr "`--color[=<when>]` と `--no-color` を追加。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:161
#, no-wrap
msgid "`OPT__DRY_RUN(&int_var, description)`"
msgstr "`OPT__DRY_RUN(&int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:163
msgid "Add `-n, --dry-run`."
msgstr "`-n` と `--dry-run` を追加。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:164
#, no-wrap
msgid "`OPT__FORCE(&int_var, description)`"
msgstr "`OPT__FORCE(&int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:166
msgid "Add `-f, --force`."
msgstr "`-f` と `--force` を追加。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:167
#, no-wrap
msgid "`OPT__QUIET(&int_var, description)`"
msgstr "`OPT__QUIET(&int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:169
msgid "Add `-q, --quiet`."
msgstr "`-q` と `--quiet` を追加。."

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:170
#, no-wrap
msgid "`OPT__VERBOSE(&int_var, description)`"
msgstr "`OPT__VERBOSE(&int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:172
msgid "Add `-v, --verbose`."
msgstr "`-v` と `--verbose` を追加。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:173
#, no-wrap
msgid "`OPT_GROUP(description)`"
msgstr "`OPT_GROUP(description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:177
msgid ""
"Start an option group. `description` is a short string that describes the "
"group or an empty string.  Start the description with an upper-case letter."
msgstr ""
"オプショングループを開始します。 `description` は、グループを説明する短い文字"
"列または空の文字列です。説明は大文字で始めて下さい。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:178
#, no-wrap
msgid "`OPT_BOOL(short, long, &int_var, description)`"
msgstr "`OPT_BOOL(short, long, &int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:181
msgid ""
"Introduce a boolean option. `int_var` is set to one with `--option` and set "
"to zero with `--no-option`."
msgstr ""
"ブール値オプション(boolean option)を導入します。 `int_var` は `--option` で1"
"に設定され、 `--no-option` で0に設定されます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:182
#, no-wrap
msgid "`OPT_COUNTUP(short, long, &int_var, description)`"
msgstr "`OPT_COUNTUP(short, long, &int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:190
msgid ""
"Introduce a count-up option.  Each use of `--option` increments `int_var`, "
"starting from zero (even if initially negative), and `--no-option` resets it "
"to zero. To determine if `--option` or `--no-option` was encountered at all, "
"initialize `int_var` to a negative value, and if it is still negative after "
"parse_options(), then neither `--option` nor `--no-option` was seen."
msgstr ""
"カウントアップオプションを導入します。 `--option` を使用するたびに、 "
"`int_var` がゼロから開始してインクリメントされます。 `--no-option` はそれをゼ"
"ロにリセットします(初期値が負数の場合でも、それをゼロにセットします)。 `--"
"option` または `--no-option` がまったく検出されなかったかどうかを判断するに"
"は、 `int_var` を負の値に初期化し、 parse_options() 後も負の値である場合は、 "
"`--option` も `--no-option` 見当たらなかったということになります。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:191
#, no-wrap
msgid "`OPT_BIT(short, long, &int_var, description, mask)`"
msgstr "`OPT_BIT(short, long, &int_var, description, mask)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:194
msgid ""
"Introduce a boolean option.  If used, `int_var` is bitwise-ored with `mask`."
msgstr ""
"ブール値オプション(boolean option)を導入します。使用する場合、 `int_var` は "
"`mask` とビット論理和(or)を取ります。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:195
#, no-wrap
msgid "`OPT_NEGBIT(short, long, &int_var, description, mask)`"
msgstr "`OPT_NEGBIT(short, long, &int_var, description, mask)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:198
msgid ""
"Introduce a boolean option.  If used, `int_var` is bitwise-anded with the "
"inverted `mask`."
msgstr ""
"ブール値オプション(boolean option)を導入します。使用する場合、 `int_var` は "
"`mask` の反転とビット論理積(and)を取ります。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:199
#, no-wrap
msgid "`OPT_SET_INT(short, long, &int_var, description, integer)`"
msgstr "`OPT_SET_INT(short, long, &int_var, description, integer)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:203
msgid ""
"Introduce an integer option.  `int_var` is set to `integer` with `--option`, "
"and reset to zero with `--no-option`."
msgstr ""
"整数オプションを導入します。 `int_var`は `--option` で整数に設定され、 `--no-"
"option` でゼロにリセットされます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:204
#, no-wrap
msgid "`OPT_STRING(short, long, &str_var, arg_str, description)`"
msgstr "`OPT_STRING(short, long, &str_var, arg_str, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:207
msgid ""
"Introduce an option with string argument.  The string argument is put into "
"`str_var`."
msgstr ""
"文字列引数を持つオプションを導入します。 文字列引数は `str_var` に入れられま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:208
#, no-wrap
msgid "`OPT_STRING_LIST(short, long, &struct string_list, arg_str, description)`"
msgstr "`OPT_STRING_LIST(short, long, &struct string_list, arg_str, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:212
msgid ""
"Introduce an option with string argument.  The string argument is stored as "
"an element in `string_list`.  Use of `--no-option` will clear the list of "
"preceding values."
msgstr ""
"文字列引数を持つオプションを導入します。文字列引数は、要素として "
"`string_list` に格納されます。 `--no-option` を使用すると、先行する値のリスト"
"がクリアされます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:213
#, no-wrap
msgid "`OPT_INTEGER(short, long, &int_var, description)`"
msgstr "`OPT_INTEGER(short, long, &int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:216
msgid ""
"Introduce an option with integer argument.  The integer is put into "
"`int_var`."
msgstr "整数引数のオプションを導入します。 整数は `int_var` に入れられます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:217
#, no-wrap
msgid "`OPT_MAGNITUDE(short, long, &unsigned_long_var, description)`"
msgstr "`OPT_MAGNITUDE(short, long, &unsigned_long_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:222
msgid ""
"Introduce an option with a size argument. The argument must be a non-"
"negative integer and may include a suffix of 'k', 'm' or 'g' to scale the "
"provided value by 1024, 1024^2 or 1024^3 respectively.  The scaled value is "
"put into `unsigned_long_var`."
msgstr ""
"サイズ引数付きのオプションを導入します。引数は負でない整数である必要があり、"
"提供された値をそれぞれ `1024` 、`1024^2` 、`1024^3` でスケーリングするため"
"に、 `k` 、 `m` 、 `g` の接尾辞を含めることができます。 スケーリングされた値"
"が `unsigned_long_var` に入れられます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:223
#, no-wrap
msgid "`OPT_EXPIRY_DATE(short, long, &timestamp_t_var, description)`"
msgstr "`OPT_EXPIRY_DATE(short, long, &timestamp_t_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:226
msgid ""
"Introduce an option with expiry date argument, see `parse_expiry_date()`.  "
"The timestamp is put into `timestamp_t_var`."
msgstr ""
"有効期限引数付きのオプションを導入します。 `parse_expiry_date()` を参照してく"
"ださい。タイムスタンプは `timestamp_t_var` に入れられます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:227
#, no-wrap
msgid "`OPT_CALLBACK(short, long, &var, arg_str, description, func_ptr)`"
msgstr "`OPT_CALLBACK(short, long, &var, arg_str, description, func_ptr)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:232
msgid ""
"Introduce an option with argument.  The argument will be fed into the "
"function given by `func_ptr` and the result will be put into `var`.  See "
"'Option Callbacks' below for a more elaborate description."
msgstr ""
"引数付きのオプションを導入します。 引数は `func_ptr` で指定された関数に入力さ"
"れ、結果は `var` に入れられます。より詳細な説明については、以下の「Option "
"Callbacks」を参照してください。"

# diff.c
#
# 		OPT_FILENAME('O', NULL, &options->orderfile,
# 			     N_("control the order in which files appear in the output")),
#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:233
#, no-wrap
msgid "`OPT_FILENAME(short, long, &var, description)`"
msgstr "`OPT_FILENAME(short, long, &var, description)`"

# run_builtin():prefixにはGIT_DIRとかとかセットされる
#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:237
msgid ""
"Introduce an option with a filename argument.  The filename will be prefixed "
"by passing the filename along with the prefix argument of `parse_options()` "
"to `prefix_filename()`."
msgstr ""
"ファイル名引数を持つオプションを導入します。`parse_options()` の prefix 引数"
"を、ファイル名とともに `prefix_filename()` に渡すことでファイル名の前に付けフ"
"ルパスにします。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:238
#, no-wrap
msgid "`OPT_NUMBER_CALLBACK(&var, description, func_ptr)`"
msgstr "`OPT_NUMBER_CALLBACK(&var, description, func_ptr)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:245
msgid ""
"Recognize numerical options like -123 and feed the integer as if it was an "
"argument to the function given by `func_ptr`.  The result will be put into "
"`var`.  There can be only one such option definition.  It cannot be negated "
"and it takes no arguments.  Short options that happen to be digits take "
"precedence over it."
msgstr ""
"`-123` などの数値オプションを認識し、 `func_ptr` で指定された関数の引数である"
"かのように整数を入力します。結果は `var` に入れられます。 そのようなオプショ"
"ン定義は1つだけ可能です。否定することはできず、引数も取りません。 たまたま数"
"字である短いオプションあった場合、これよりも優先されます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:246
#, no-wrap
msgid "`OPT_COLOR_FLAG(short, long, &int_var, description)`"
msgstr "`OPT_COLOR_FLAG(short, long, &int_var, description)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:254
msgid ""
"Introduce an option that takes an optional argument that can have one of "
"three values: \"always\", \"never\", or \"auto\".  If the argument is not "
"given, it defaults to \"always\".  The `--no-` form works like `--"
"long=never`; it cannot take an argument.  If \"always\", set `int_var` to 1; "
"if \"never\", set `int_var` to 0; if \"auto\", set `int_var` to 1 if stdout "
"is a tty or a pager, 0 otherwise."
msgstr ""
"「always」、「never」、または「auto」の3つの値のいずれかを持つことができるオ"
"プションの引数を取るオプションを導入します。引数が指定されていない場合、デ"
"フォルトで「always」になります。 `--no-` 形式は `--long=never` のように機能し"
"ます。引数を取ることはできません。「always」の場合は `int_var` を1に設定しま"
"す。 「never」の場合は `int_var` を0に設定します。 「auto」の場合、stdoutが"
"ttyまたはページャーの場合は `int_var` を1に設定し、それ以外の場合は0に設定し"
"ます。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:255
#, no-wrap
msgid "`OPT_NOOP_NOARG(short, long)`"
msgstr "`OPT_NOOP_NOARG(short, long)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:259
msgid ""
"Introduce an option that has no effect and takes no arguments.  Use it to "
"hide deprecated options that are still to be recognized and ignored silently."
msgstr ""
"効果がなく、引数をとらないオプションを導入します。これを使用して、まだ認識さ"
"れるが無視される非推奨のオプションを隠します。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:260
#, no-wrap
msgid "`OPT_PASSTHRU(short, long, &char_var, arg_str, description, flags)`"
msgstr "`OPT_PASSTHRU(short, long, &char_var, arg_str, description, flags)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:266
msgid ""
"Introduce an option that will be reconstructed into a char* string, which "
"must be initialized to NULL. This is useful when you need to pass the "
"command-line option to another command. Any previous value will be "
"overwritten, so this should only be used for options where the last one "
"specified on the command line wins."
msgstr ""
"char* 文字列に再構築されるオプションを導入します。これはNULLに初期化する必要"
"があります。これは、コマンドラインオプションを別のコマンドに渡す必要がある場"
"合に役立ちます。以前の値は上書きされるため、これは、コマンドラインで最後に指"
"定された値が優先されるタイプのオプションにのみ使用する必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:267
#, no-wrap
msgid "`OPT_PASSTHRU_ARGV(short, long, &strvec_var, arg_str, description, flags)`"
msgstr "`OPT_PASSTHRU_ARGV(short, long, &strvec_var, arg_str, description, flags)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:272
msgid ""
"Introduce an option where all instances of it on the command-line will be "
"reconstructed into a strvec. This is useful when you need to pass the "
"command-line option, which can be specified multiple times, to another "
"command."
msgstr ""
"コマンドライン上のすべての実体がstrvecに再構築されるオプションを導入します。"
"これは、複数回指定できるコマンドラインオプションを別のコマンドに渡す必要があ"
"る場合に便利です。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:273
#, no-wrap
msgid "`OPT_CMDMODE(short, long, &int_var, description, enum_val)`"
msgstr "`OPT_CMDMODE(short, long, &int_var, description, enum_val)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:280
msgid ""
"Define an \"operation mode\" option, only one of which in the same group of "
"\"operating mode\" options that share the same `int_var` can be given by the "
"user. `int_var` is set to `enum_val` when the option is used, but an error "
"is reported if other \"operating mode\" option has already set its value to "
"the same `int_var`.  In new commands consider using subcommands instead."
msgstr "「操作モード」オプションを定義します。同じ `int_var` を共有する「操作モード」オプションの同じグループ内の1つだけをユーザーが指定できます。オプションを使用すると、 `enum_val` は `int_var` に設定されますが、他の操作モードオプションがすでに同じ `int_var` に値を設定している場合は、エラーが報告されます。 新しいコマンドでは、代わりにサブコマンドを使用することを検討してください。"

#. type: Labeled list
#: ../Documentation-sedout/technical/api-parse-options.txt:281
#, no-wrap
msgid "`OPT_SUBCOMMAND(long, &fn_ptr, subcommand_fn)`"
msgstr "`OPT_SUBCOMMAND(long, &fn_ptr, subcommand_fn)`"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:284
msgid ""
"Define a subcommand.  `subcommand_fn` is put into `fn_ptr` when this "
"subcommand is used."
msgstr "サブコマンドを定義します。 このサブコマンドを使用する場合は、 fn_ptr に subcommand_fn を入れます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:286
msgid "The last element of the array must be `OPT_END()`."
msgstr "配列の最後の要素は `OPT_END()` でなければなりません。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:288
msgid "If not stated otherwise, interpret the arguments as follows:"
msgstr "特に明記されていない限り、引数を以下のように解釈(interpret)します:"

# bulitin/add.c:
# static struct option builtin_add_options[] = {
# 	OPT__DRY_RUN(&show_only, N_("dry run")),
# 	OPT__VERBOSE(&verbose, N_("be verbose")),
# 	OPT_GROUP(""),
# 	OPT_BOOL('i', "interactive", &add_interactive, N_("interactive picking")),
# 	OPT_BOOL('p', "patch", &patch_interactive, N_("select hunks interactively")),
# 	OPT_BOOL('e', "edit", &edit_interactive, N_("edit current diff and apply")),
# 	OPT__FORCE(&ignored_too, N_("allow adding otherwise ignored files"), 0),
# 	OPT_BOOL('u', "update", &take_worktree_changes, N_("update tracked files")),
# 	OPT_BOOL(0, "renormalize", &add_renormalize, N_("renormalize EOL of tracked files (implies -u)")),
# 	OPT_BOOL('N', "intent-to-add", &intent_to_add, N_("record only the fact that the path will be added later")),
# 	OPT_BOOL('A', "all", &addremove_explicit, N_("add changes from all tracked and untracked files")),
# 	OPT_CALLBACK_F(0, "ignore-removal", &addremove_explicit,
# 	  NULL /* takes no arguments */,
# 	  N_("ignore paths removed in the working tree (same as --no-all)"),
# 	  PARSE_OPT_NOARG, ignore_removal_cb),
# 	OPT_BOOL( 0 , "refresh", &refresh_only, N_("don't add, only refresh the index")),
# 	OPT_BOOL( 0 , "ignore-errors", &ignore_add_errors, N_("just skip files which cannot be added because of errors")),
# 	OPT_BOOL( 0 , "ignore-missing", &ignore_missing, N_("check if - even missing - files are ignored in dry run")),
# 	OPT_STRING(0, "chmod", &chmod_arg, "(+|-)x",
# 		   N_("override the executable bit of the listed files")),
# 	OPT_HIDDEN_BOOL(0, "warn-embedded-repo", &warn_on_embedded_repo,
# 			N_("warn when adding an embedded repository")),
# 	OPT_HIDDEN_BOOL(0, "legacy-stash-p", &legacy_stash_p,
# 			N_("backend for `git stash -p`")),
# 	OPT_PATHSPEC_FROM_FILE(&pathspec_from_file),
# 	OPT_PATHSPEC_FILE_NUL(&pathspec_file_nul),
# 	OPT_END(),
# };
#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:291
msgid ""
"`short` is a character for the short option (e.g. `'e'` for `-e`, use `0` to "
"omit),"
msgstr ""
"`short` はshortオプションのキャラクタです(たとえば、` -e` の場合は 'e' 、省略"
"するには 0 (zero) を使用します)"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:294
msgid ""
"`long` is a string for the long option (e.g. `\"example\"` for `--example`, "
"use `NULL` to omit),"
msgstr ""
"`long` はlongオプションの文字列です(たとえば、 ` --example` の場合は "
"\"example\"  、省略するには NULL を使用します)"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:296
msgid "`int_var` is an integer variable,"
msgstr "`int_var` は整数変数です"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:298
msgid "`str_var` is a string variable (`char *`),"
msgstr "`str_var` は文字列変数です( `char *` )"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:302
msgid ""
"`arg_str` is the string that is shown as argument (e.g. `\"branch\"` will "
"result in `<branch>`).  If set to `NULL`, three dots (`...`) will be "
"displayed."
msgstr ""
"`arg_str` は、引数として表示される文字列です(たとえば、 \"branch\" は "
"`<branch>` になります)。 NULL に設定すると、3つのドット( `...` )が表示されま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:306
msgid ""
"`description` is a short string to describe the effect of the option.  It "
"shall begin with a lower-case letter and a full stop (`.`) shall be omitted "
"at the end."
msgstr ""
"`description` は、オプションの効果を説明する短い文字列です。小文字で始まり、"
"最後のピリオド(`.`)を省略します。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:308
#, no-wrap
msgid "Option Callbacks"
msgstr "Option Callbacks"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:311
msgid "The function must be defined in this form:"
msgstr "関数は以下の形式で定義する必要があります:"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:313
#, no-wrap
msgid "\tint func(const struct option *opt, const char *arg, int unset)\n"
msgstr "\tint func(const struct option *opt, const char *arg, int unset)\n"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:315
msgid "The callback mechanism is as follows:"
msgstr "コールバックメカニズムは以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:322
msgid ""
"Inside `func`, the only interesting member of the structure given by `opt` "
"is the void pointer `opt->value`.  `*opt->value` will be the value that is "
"saved into `var`, if you use `OPT_CALLBACK()`.  For example, do `*(unsigned "
"long *)opt->value = 42;` to get 42 into an `unsigned long` variable."
msgstr ""
"`func` 内で、 `opt` によって与えられる構造体の唯一の興味深いメンバーは voidポ"
"インタ `opt->value` です。 `*opt->value` は、`OPT_CALLBACK()` を使用した場"
"合、 `var` に保存される値になります。 たとえば、 `*(unsigned long *)opt-"
">value = 42;` を実行して、42を unsigned long 変数に入れます。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:325
msgid ""
"Return value `0` indicates success and non-zero return value will invoke "
"`usage_with_options()` and, thus, die."
msgstr ""
"戻り値 0 は成功を示し、ゼロ以外の戻り値は `usage_with_options()`を呼び出し、"
"そして die します。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:327
msgid "If the user negates the option, `arg` is `NULL` and `unset` is 1."
msgstr ""
"ユーザーがオプションを「否定」した場合、 arg は NULL であり、 unset は 1 で"
"す。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:329
#, no-wrap
msgid "Sophisticated option parsing"
msgstr "Sophisticated option parsing"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:335
msgid ""
"If you need, for example, option callbacks with optional arguments or "
"without arguments at all, or if you need other special cases, that are not "
"handled by the macros above, you need to specify the members of the `option` "
"structure manually."
msgstr ""
"たとえば、オプションの引数がある、または引数がまったくないオプションのコール"
"バックが必要な場合、または上記のマクロで処理されない他の特殊なケースが必要な"
"場合は、option 構造体のメンバーを手動で指定する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:338
msgid ""
"This is not covered in this document, but well documented in `parse-options."
"h` itself."
msgstr ""
"それはこの文書ではカバーされていませんが、 parse-options.h 自体に十分に文書化"
"されています。"

#. type: Title -
#: ../Documentation-sedout/technical/api-parse-options.txt:340
#, no-wrap
msgid "Examples"
msgstr "Examples"

# t/helper/test-parse-options.c
#. type: Plain text
#: ../Documentation-sedout/technical/api-parse-options.txt:349
msgid ""
"See `test-parse-options.c` and `builtin/add.c`, `builtin/clone.c`, `builtin/"
"commit.c`, `builtin/fetch.c`, `builtin/fsck.c`, `builtin/rm.c` for real-"
"world examples."
msgstr ""
"`test-parse-options.c` を参照して下さい。 実例は、 `builtin/add.c` 、 "
"`builtin/clone.c` 、 `builtin/commit.c` 、 `builtin/fetch.c` 、 `builtin/"
"fsck.c` 、 `builtin/rm.c` を参照して下さい。"
