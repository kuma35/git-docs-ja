# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-07-15 05:18+0900\n"
"PO-Revision-Date: 2022-07-21 00:43+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/technical/directory-rename-detection.txt:2
#, no-wrap
msgid "Directory rename detection"
msgstr "Directory rename detection"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:8
msgid ""
"Rename detection logic in diffcore-rename that checks for renames of "
"individual files is also aggregated there and then analyzed in either merge-"
"ort or merge-recursive for cases where combinations of renames indicate that "
"a full directory has been renamed."
msgstr "個別のファイルの名前変更をチェックする diffcore-rename の名前変更検出ロジックもディレクトリ名前変更検出ロジックに集約され、そして、 merge-ort または merge-recursive で名前変更の組み合わせがディレクトリ全体の名前変更を示しているケースについて分析されます。"

#. type: Title -
#: ../Documentation-sedout/technical/directory-rename-detection.txt:10
#, no-wrap
msgid "Scope of abilities"
msgstr "Scope of abilities"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:13
msgid "It is perhaps easiest to start with an example:"
msgstr "例から始めるのがおそらく最も簡単です:"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:17
msgid ""
"When all of x/a, x/b and x/c have moved to z/a, z/b and z/c, it is likely "
"that x/d added in the meantime would also want to move to z/d by taking the "
"hint that the entire directory 'x' moved to 'z'."
msgstr "x/a 、x/b 、x/c のすべてが z/a 、 z/b 、z/c に移動した場合、ディレクトリ `x` 全体が `z` に移動したことをヒントにして、 `z/d` に移動したくなる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:19
msgid "More interesting possibilities exist, though, such as:"
msgstr "ただし、以下のようなさらに興味深い可能性があります:"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:23
msgid ""
"one side of history renames x -> z, and the other renames some file to x/e, "
"causing the need for the merge to do a transitive rename so that the rename "
"ends up at z/e."
msgstr "履歴の一方では x→z に名前変更され、もう一方のファイルの名前は x/e に変更されるため、名前の変更が z/e になるように、マージで他動的(transitive)な名前変更を行う必要があります。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:26
msgid ""
"one side of history renames x -> z, but also renames all files within x.  "
"For example, x/a -> z/alpha, x/b -> z/bravo, etc."
msgstr "履歴の片側は x → z と名前変更しますが、x内のすべてのファイルの名前も変更します。 たとえば、 x/a → z/alpha 、x/b → z/bravo などです。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:29
msgid ""
"both 'x' and 'y' being merged into a single directory 'z', with a directory "
"rename being detected for both x->z and y->z."
msgstr "`x` と `y` の両方が単一のディレクトリ `z` にマージされ、ディレクトリの名前変更が x→z と y→z の両方で検出されます。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:33
msgid ""
"not all files in a directory being renamed to the same location; i.e. "
"perhaps most the files in 'x' are now found under 'z', but a few are found "
"under 'w'."
msgstr "ディレクトリ内のすべてのファイルが同じ場所に名前変更されているわけではありません。 つまり、おそらく `x` 内のほとんどのファイルは `z` の下にありますが、いくつかは `w` の下にあります。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:38
msgid ""
"a directory being renamed, which also contained a subdirectory that was "
"renamed to some entirely different location.  (And perhaps the inner "
"directory itself contained inner directories that were renamed to yet other "
"locations)."
msgstr "名前が変更されているディレクトリ。これには、まったく別の場所に名前が変更されたサブディレクトリも含まれています。 (そして、おそらく内部ディレクトリ自体には、さらに他の場所に名前が変更された内部ディレクトリが含まれていました)。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:41
msgid ""
"combinations of the above; see t/t6423-merge-rename-directories.sh for "
"various interesting cases."
msgstr "上記の組み合わせ。さまざまな興味深いケースについては、 t/t6423-merge-rename-directories.sh を参照してください。"

#. type: Title -
#: ../Documentation-sedout/technical/directory-rename-detection.txt:43
#, no-wrap
msgid "Limitations -- applicability of directory renames"
msgstr "Limitations -- applicability of directory renames"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:49
msgid ""
"In order to prevent edge and corner cases resulting in either conflicts that "
"cannot be represented in the index or which might be too complex for users "
"to try to understand and resolve, a couple basic rules limit when directory "
"rename detection applies:"
msgstr "インデックスで表すことができない、またはユーザーが理解して解決しようとするのに複雑すぎる可能性のある競合が発生する境界ギリギリのケース(edge case)とめったに発生しない厄介なケース(corner case)を防ぐために、ディレクトリ名変更の検出が適用される場合の基本的なルール制限は、以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:53
msgid ""
"If a given directory still exists on both sides of a merge, we do not "
"consider it to have been renamed."
msgstr "特定のディレクトリがマージの両側にまだ存在する場合、名前が変更されたとは見なされません。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:57
msgid ""
"If a subset of to-be-renamed files have a file or directory in the way (or "
"would be in the way of each other), \"turn off\" the directory rename for "
"those specific sub-paths and report the conflict to the user."
msgstr "名前を変更するファイルのサブセットにファイルまたはディレクトリが邪魔になっている(または互いに邪魔になる)場合は、それらの特定のサブパスのディレクトリ名を「オフ」(turn off)にして、競合をユーザーに報告します。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:61
msgid ""
"If the other side of history did a directory rename to a path that your side "
"of history renamed away, then ignore that particular rename from the other "
"side of history for any implicit directory renames (but warn the user)."
msgstr "履歴の反対側がディレクトリの名前を履歴のあなた側で別の名前に変更したパスに変更した場合、暗黙的なディレクトリの名前変更については、履歴の反対側からの特定の名前変更を無視します(ただし、ユーザーに警告します)。"

#. type: Title -
#: ../Documentation-sedout/technical/directory-rename-detection.txt:63
#, no-wrap
msgid "Limitations -- detailed rules and testcases"
msgstr "Limitations -- detailed rules and testcases"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:68
msgid ""
"t/t6423-merge-rename-directories.sh contains extensive tests and commentary "
"which generate and explore the rules listed above.  It also lists a few "
"additional rules:"
msgstr "t/t6423-merge-rename-directories.sh には、上記ルールを生成および調査する広範なテストと解説が含まれています。 また、いくつかの追加ルールもリストされています。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:72
msgid ""
"If renames split a directory into two or more others, the directory with the "
"most renames, \"wins\"."
msgstr "名前の変更によってディレクトリが2つ以上に分割された場合、名前の変更が最も多いディレクトリが「勝ち」(wins)です。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:74
msgid ""
"Only apply implicit directory renames to directories if the other side of "
"history is the one doing the renaming."
msgstr "履歴の反対側が名前変更を行っている場合にのみ、暗黙的なディレクトリ名変更をディレクトリに適用します。"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:76
msgid ""
"Do not perform directory rename detection for directories which had no new "
"paths added to them."
msgstr "新しいパスが追加されていないディレクトリに対して、ディレクトリ名変更の検出を実行しないでください。"

#. type: Title -
#: ../Documentation-sedout/technical/directory-rename-detection.txt:78
#, no-wrap
msgid "Limitations -- support in different commands"
msgstr "Limitations -- support in different commands"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:83
msgid ""
"Directory rename detection is supported by 'merge' and 'cherry-pick'.  Other "
"git commands which users might be surprised to see limited or no directory "
"rename detection support in:"
msgstr "ディレクトリの名前変更の検出は、「merge」および「cherry-pick」でサポートされています。 他のgitコマンドでは、ディレクトリ名の変更の検出が制限されているか、まったくサポートされていないことにユーザーは驚くかもしれません:"

#. type: Labeled list
#: ../Documentation-sedout/technical/directory-rename-detection.txt:84
#, no-wrap
msgid "diff"
msgstr "diff"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:93
msgid ""
"Folks have requested in the past that `git diff` detect directory renames "
"and somehow simplify its output.  It is not clear whether this would be "
"desirable or how the output should be simplified, so this was simply not "
"implemented.  Also, while diffcore-rename has most of the logic for "
"detecting directory renames, some of the logic is still found within merge-"
"ort and merge-recursive.  Fully supporting directory rename detection in "
"diffs would require copying or moving the remaining bits of logic to the "
"diff machinery."
msgstr "人々は過去に `git diff` がディレクトリの名前変更を検出し、どういうわけかその出力を単純化することを要求しました。 これが望ましいかどうか、または出力をどのように簡略化する必要があるかは明確ではないため、これは単に実装されませんでした。 また、diffcore-rename には、ディレクトリの名前変更を検出するためのロジックのほとんどがありますが、一部のロジックは、 merge-ort や merge-recursive 内にあります。 diffでディレクトリ名変更の検出を完全にサポートするには、ロジックの残りの少しをdiff機構にコピーまたは移動する必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/technical/directory-rename-detection.txt:94
#, no-wrap
msgid "am"
msgstr "am"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:104
msgid ""
"git-am tries to avoid a full three way merge, instead calling git-apply.  "
"That prevents us from detecting renames at all, which may defeat the "
"directory rename detection.  There is a fallback, though; if the initial git-"
"apply fails and the user has specified the -3 option, git-am will fall back "
"to a three way merge.  However, git-am lacks the necessary information to do "
"a \"real\" three way merge.  Instead, it has to use build_fake_ancestor() to "
"get a merge base that is missing files whose rename may have been important "
"to detect for directory rename detection to function."
msgstr "git-amは、git-applyを呼び出す代わりに、完全な3方向マージを回避しようとします。 これにより、名前の変更をまったく検出できなくなり、ディレクトリの名前変更の検出が無効になる可能性があります。 ただし、フォールバックがあります。 最初のgit-applyが失敗し、ユーザーが-3オプションを指定した場合、git-amは3方向マージにフォールバックします。 ただし、git-amには、「実際に」3方向マージを実行するために必要な情報がありません。 代わりに、 build_fake_ancestor() を使用して、ディレクトリ名の変更を検出するために重要である可能性のあるファイルが存在しないマージベースを取得しなければなりません。"

#. type: Labeled list
#: ../Documentation-sedout/technical/directory-rename-detection.txt:105
#, no-wrap
msgid "rebase"
msgstr "rebase"

#. type: Plain text
#: ../Documentation-sedout/technical/directory-rename-detection.txt:113
msgid ""
"Since am-based rebases work by first generating a bunch of patches (which no "
"longer record what the original commits were and thus don't have the "
"necessary info from which we can find a real merge-base), and then calling "
"git-am, this implies that am-based rebases will not always successfully "
"detect directory renames either (see the 'am' section above).  merged-based "
"rebases (rebase -m) and cherry-pick-based rebases (rebase -i) are not "
"affected by this shortcoming, and fully support directory rename detection."
msgstr "amベースのリベースは、最初に一連のパッチを生成し（元のコミットが何であったかを記録しなくなったため、実際のマージベースを見つけるために必要な情報がない）、次にgit-amを呼び出すことで機能するためです。 これは、amベースのリベースがディレクトリの名前変更を常に正常に検出するとは限らないことを意味します(上記の「am」セクションを参照)。 マージベースのリベース(`rebase -m`)およびチェリーピックベースのリベース(`rebase -i`)は、この欠点の影響を受けず、ディレクトリ名変更の検出を完全にサポートします。"
