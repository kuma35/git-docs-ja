# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 04:37+0900\n"
"PO-Revision-Date: 2022-05-06 07:22+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-fetch.txt:2
#, no-wrap
msgid "git-fetch(1)"
msgstr "git-fetch(1)"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:7
msgid "git-fetch - Download objects and refs from another repository"
msgstr "git-fetch - 別のリポジトリからオブジェクトとrefsをダウンロードします"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:16
#, no-wrap
msgid ""
"'git fetch' [<options>] [<repository> [<refspec>...]]\n"
"'git fetch' [<options>] <group>\n"
"'git fetch' --multiple [<options>] [(<repository> | <group>)...]\n"
"'git fetch' --all [<options>]\n"
msgstr ""
"'git fetch' [<options>] [<repository> [<refspec>...]]\n"
"'git fetch' [<options>] <group>\n"
"'git fetch' --multiple [<options>] [(<repository> | <group>)...]\n"
"'git fetch' --all [<options>]\n"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:19
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:24
msgid ""
"Fetch branches and/or tags (collectively, \"refs\") from one or more other "
"repositories, along with the objects necessary to complete their histories.  "
"Remote-tracking branches are updated (see the description of <refspec> below "
"for ways to control this behavior)."
msgstr "履歴を完成させるために必要なオブジェクトとともに、1つ以上の他のリポジトリからブランチやタグ(総称して「refs」)を取得します。 リモート追跡ブランチが更新されます(この振る舞いを制御する方法については、以下の <refspec> の説明を参照してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:32
msgid ""
"By default, any tag that points into the histories being fetched is also "
"fetched; the effect is to fetch tags that point at branches that you are "
"interested in.  This default behavior can be changed by using the --tags or "
"--no-tags options or by configuring remote.<name>.tagOpt.  By using a "
"refspec that fetches tags explicitly, you can fetch tags that do not point "
"into branches you are interested in as well."
msgstr "デフォルトでは、フェッチされている履歴を指すタグもフェッチされます。 その効果は、関心のあるブランチを指すタグをフェッチすることです。 このデフォルトの振る舞いは、 `--tags` または `--no-tags` オプションを使用するか、 remote.<name>.tagOpt を構成することで変更できます。 あなたは、タグを明示的にフェッチするrefspecを使用することで、関心のあるブランチを指していないタグもフェッチできます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:37
msgid ""
"'git fetch' can fetch from either a single named repository or URL, or from "
"several repositories at once if <group> is given and there is a remotes."
"<group> entry in the configuration file.  (See linkgit:git-config[1])."
msgstr "`git fetch` は、単一の名前付きリポジトリまたはURLから、あるいは、 <group> が指定され、かつ、構成ファイルに remotes.<group> エントリがある場合は、一度に複数のリポジトリからフェッチできます。 (linkgit:git-config[1] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:40
msgid ""
"When no remote is specified, by default the `origin` remote will be used, "
"unless there's an upstream branch configured for the current branch."
msgstr "「リモート」が指定されていない場合、現在のブランチ用にアップストリームブランチが構成されていない限り、デフォルトで `origin` リモートが使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:44
msgid ""
"The names of refs that are fetched, together with the object names they "
"point at, are written to `.git/FETCH_HEAD`.  This information may be used by "
"scripts or other git commands, such as linkgit:git-pull[1]."
msgstr "フェッチされたrefの名前は、それらが指すオブジェクト名とともに、 `.git/FETCH_HEAD` に書き込まれます。 この情報は、スクリプトまたは linkgit:git-pull[1] などの他のgitコマンドで使用される場合があります。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:46
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:51
#, no-wrap
msgid "`--stdin`"
msgstr "`--stdin`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:54
msgid ""
"Read refspecs, one per line, from stdin in addition to those provided as "
"arguments. The \"tag <name>\" format is not supported."
msgstr "引数として提供されているものに加えて、標準入力からrefspecsを1行に1つずつ読み取ります。 「tag <name>」形式はサポートされていません。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:59
#, no-wrap
msgid "CONFIGURED REMOTE-TRACKING BRANCHES[[CRTB]]"
msgstr "CONFIGURED REMOTE-TRACKING BRANCHES[[CRTB]]"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:65
msgid ""
"You often interact with the same remote repository by regularly and "
"repeatedly fetching from it.  In order to keep track of the progress of such "
"a remote repository, `git fetch` allows you to configure `remote."
"<repository>.fetch` configuration variables."
msgstr "あなたは、定期的かつ繰り返しフェッチすることで、同じリモートリポジトリとやり取りすることがよくあります。 このようなリモートリポジトリの進行状況を追跡するために、 `git fetch` では `remote.<repository>.fetch` 構成変数を構成できます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:67
msgid "Typically such a variable may look like this:"
msgstr "通常、このような変数は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:71
#, no-wrap
msgid ""
"[remote \"origin\"]\n"
"\tfetch = +refs/heads/*:refs/remotes/origin/*\n"
msgstr ""
"[remote \"origin\"]\n"
"\tfetch = +refs/heads/*:refs/remotes/origin/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:74
msgid "This configuration is used in two ways:"
msgstr "この構成は、以下の2つの方法で使用されます:"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:84
msgid ""
"When `git fetch` is run without specifying what branches and/or tags to "
"fetch on the command line, e.g. `git fetch origin` or `git fetch`, `remote."
"<repository>.fetch` values are used as the refspecs--they specify which refs "
"to fetch and which local refs to update.  The example above will fetch all "
"branches that exist in the `origin` (i.e. any ref that matches the left-hand "
"side of the value, `refs/heads/*`) and update the corresponding remote-"
"tracking branches in the `refs/remotes/origin/*` hierarchy."
msgstr "コマンドラインで取得するブランチやタグを指定せずに `git fetch` を実行した場合、例えば `git fetch origin` や `git fetch` では `remote.<repository>.fetch` の値が refspecs として使用され、取得する ref と更新するローカル ref を指定します。 上記の例では、`origin` に存在するすべてのブランチ(つまり、値の左辺 `refs/heads/*` にマッチするすべての ref)を取得し、対応するリモート追跡ブランチを `refs/remotes/origin/*` 階層にあるものに更新します。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:101
msgid ""
"When `git fetch` is run with explicit branches and/or tags to fetch on the "
"command line, e.g. `git fetch origin master`, the <refspec>s given on the "
"command line determine what are to be fetched (e.g. `master` in the example, "
"which is a short-hand for `master:`, which in turn means \"fetch the "
"'master' branch but I do not explicitly say what remote-tracking branch to "
"update with it from the command line\"), and the example command will fetch "
"_only_ the 'master' branch.  The `remote.<repository>.fetch` values "
"determine which remote-tracking branch, if any, is updated.  When used in "
"this way, the `remote.<repository>.fetch` values do not have any effect in "
"deciding _what_ gets fetched (i.e. the values are not used as refspecs when "
"the command-line lists refspecs); they are only used to decide _where_ the "
"refs that are fetched are stored by acting as a mapping."
msgstr "フェッチするブランチやタグをコマンドラインで明示的に指定して、 `git fetch` を実行した場合、 たとえば `git fetch origin master` すると、コマンドラインで指定された<refspec>が何をフェッチするかを決定し(たとえば、この例の `master`は、 `master:` の省略形で、 「 `master' ブランチを取得しますが、どのリモート追跡ブランチを更新するかはコマンドラインから明示的に指示しません」を意味します)、サンプルコマンドは「 'master' ブランチのみ」をフェッチします。 `remote.<repository>.fetch` 値は、更新されるリモート追跡ブランチがある場合はそれを決定します。 このような使い方をすると、 `remote.<repository>.fetch` 値は、「何をフェッチするか」を決定するのに効果がありません(つまり、コマンドラインにrefspecsがリストされている場合、 `remote.<repository>.fetch` 値はrefspecsとして使用されません)。 これらは、マッピングとして機能することにより、フェッチされたrefがどこに保存されるかを決定するためにのみ使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:105
msgid ""
"The latter use of the `remote.<repository>.fetch` values can be overridden "
"by giving the `--refmap=<refspec>` parameter(s) on the command line."
msgstr "後者の `remote.<repository>.fetch` 値の使用は、コマンドラインで `--refmap=<refspec>` パラメーターを指定することでオーバーライドできます。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:107
#, no-wrap
msgid "PRUNING"
msgstr "PRUNING"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:112
msgid ""
"Git has a default disposition of keeping data unless it's explicitly thrown "
"away; this extends to holding onto local references to branches on remotes "
"that have themselves deleted those branches."
msgstr "Gitには、明示的に破棄されない限り、データを保持するというデフォルトの性質があります。 これは、ブランチを削除したリモートのブランチへのローカル参照を保持することにまで及びます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:118
msgid ""
"If left to accumulate, these stale references might make performance worse "
"on big and busy repos that have a lot of branch churn, and e.g. make the "
"output of commands like `git branch -a --contains <commit>` needlessly "
"verbose, as well as impacting anything else that'll work with the complete "
"set of known references."
msgstr "蓄積したままにしておくと、これらの古い参照は、ブランチの撹拌が多い大きく忙しいリポジトリでパフォーマンスを低下させる可能性があります。 `git branch -a --contains <commit>` のようなコマンドの出力を不必要に冗長にし、既知の参照の完全なセットで機能する他のすべてに影響を与えます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:121
msgid ""
"These remote-tracking references can be deleted as a one-off with either of:"
msgstr "これらのリモート追跡参照は、1回限りの利用で、以下のいずれかを使用して削除できます:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:125
#, no-wrap
msgid ""
"# While fetching\n"
"$ git fetch --prune <name>\n"
msgstr ""
"# While fetching\n"
"$ git fetch --prune <name>\n"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:128
#, no-wrap
msgid ""
"# Only prune, don't fetch\n"
"$ git remote prune <name>\n"
msgstr ""
"# Only prune, don't fetch\n"
"$ git remote prune <name>\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:134
msgid ""
"To prune references as part of your normal workflow without needing to "
"remember to run that, set `fetch.prune` globally, or `remote.<name>.prune` "
"per-remote in the config. See linkgit:git-config[1]."
msgstr "あなたの通常の作業フローの一部として参照を刈り込むには、それを実行することを覚えておく必要はありません。設定で `fetch.prune` をグローバルに設定するか、 `remote.<name>.prune` をリモート毎に設定します。 linkgit:git-config[1] を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:139
msgid ""
"Here's where things get tricky and more specific. The pruning feature "
"doesn't actually care about branches, instead it'll prune local <--> remote-"
"references as a function of the refspec of the remote (see `<refspec>` and "
"<<CRTB,CONFIGURED REMOTE-TRACKING BRANCHES>> above)."
msgstr "ここで、物事がトリッキーでより具体的になります。 刈り込み機能は実際にはブランチを気にせず、代わりにリモートのrefspecの関数として `local <--> remote-references` を刈り込み( `<refspec>` および 上記 <<CRTB,CONFIGURED REMOTE-TRACKING BRANCHES>> 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:145
msgid ""
"Therefore if the refspec for the remote includes e.g. `refs/tags/*:refs/tags/"
"*`, or you manually run e.g. `git fetch --prune <name> \"refs/tags/*:refs/"
"tags/*\"` it won't be stale remote tracking branches that are deleted, but "
"any local tag that doesn't exist on the remote."
msgstr "したがって、リモートの refspec に、 たとえば `refs/tags/*:refs/tags/*` が含まれていたり、 手動でたとえば `git fetch --prune <name> \"refs/tags/*:refs/tags/*\"` を実行したりすると、削除されるのは古いリモート追跡ブランチではなく、リモートには存在しないローカルタグが削除されます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:150
msgid ""
"This might not be what you expect, i.e. you want to prune remote `<name>`, "
"but also explicitly fetch tags from it, so when you fetch from it you delete "
"all your local tags, most of which may not have come from the `<name>` "
"remote in the first place."
msgstr "これはあなたが期待したものではない可能性があります。つまり、リモート `<name>` を刈り込むだけでなく、そこからタグを明示的にフェッチするため、そこからフェッチするときに、すべてのローカルタグを削除します。 そのほとんどは、そもそも `<name>` リモートからのものではない可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:154
msgid ""
"So be careful when using this with a refspec like `refs/tags/*:refs/tags/*`, "
"or any other refspec which might map references from multiple remotes to the "
"same local namespace."
msgstr "したがって、これを `refs/tags/*:refs/tags/*` のようなrefspec、または複数のリモートからの参照を同じローカル名前空間にマップする可能性のある他のrefspecで使用する場合は注意してください。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:161
msgid ""
"Since keeping up-to-date with both branches and tags on the remote is a "
"common use-case the `--prune-tags` option can be supplied along with `--"
"prune` to prune local tags that don't exist on the remote, and force-update "
"those tags that differ. Tag pruning can also be enabled with `fetch."
"pruneTags` or `remote.<name>.pruneTags` in the config. See linkgit:git-"
"config[1]."
msgstr "リモートのブランチとタグの両方を最新に保つことはよくあることなので、 `--prune` と一緒に `--prune-tags` オプションを指定することで、リモートに存在しないローカルタグを削除し、異なるタグを強制更新することができます。 タグの刈り込みは、設定ファイルの `fetch.pruneTags` や `remote.<name>.pruneTags` で有効にすることもできます。 linkgit:git-config[1] を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:165
msgid ""
"The `--prune-tags` option is equivalent to having `refs/tags/*:refs/tags/*` "
"declared in the refspecs of the remote. This can lead to some seemingly "
"strange interactions:"
msgstr "`--prune-tags` オプションは、「リモート」のrefspecsで `refs/tags/*:refs/tags/*` を宣言するのと同じです。 これは、一見奇妙な相互作用につながる可能性があります:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:170
#, no-wrap
msgid ""
"# These both fetch tags\n"
"$ git fetch --no-tags origin 'refs/tags/*:refs/tags/*'\n"
"$ git fetch --no-tags --prune-tags origin\n"
msgstr ""
"# These both fetch tags\n"
"$ git fetch --no-tags origin 'refs/tags/*:refs/tags/*'\n"
"$ git fetch --no-tags --prune-tags origin\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:176
msgid ""
"The reason it doesn't error out when provided without `--prune` or its "
"config versions is for flexibility of the configured versions, and to "
"maintain a 1=1 mapping between what the command line flags do, and what the "
"configuration versions do."
msgstr "`--prune` またはその構成変数版なしで提供されたときにエラーにならない理由は、構成変数版の柔軟性と、コマンドラインフラグの機能と構成変数版の機能の間の 一対一 のマッピングを維持するためです。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:181
msgid ""
"It's reasonable to e.g. configure `fetch.pruneTags=true` in `~/.gitconfig` "
"to have tags pruned whenever `git fetch --prune` is run, without making "
"every invocation of `git fetch` without `--prune` an error."
msgstr "たとえば、 `~/.gitconfig` で `fetch.pruneTags=true` を構成して、 `--prune` なしで `git fetch` を呼び出すたびにエラーが発生することなく、 `git fetch --prune` が実行されるたびにタグが刈り込まれるようにします。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:185
msgid ""
"Pruning tags with `--prune-tags` also works when fetching a URL instead of a "
"named remote. These will all prune tags not found on origin:"
msgstr "`--prune-tags` によるタグの刈り込みは、名前付きリモートの代わりに URL を取得するときにも機能します。 これらはすべて、origin で見つからなかったタグを刈り込みます。"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:191
#, no-wrap
msgid ""
"$ git fetch origin --prune --prune-tags\n"
"$ git fetch origin --prune 'refs/tags/*:refs/tags/*'\n"
"$ git fetch <url of origin> --prune --prune-tags\n"
"$ git fetch <url of origin> --prune 'refs/tags/*:refs/tags/*'\n"
msgstr ""
"$ git fetch origin --prune --prune-tags\n"
"$ git fetch origin --prune 'refs/tags/*:refs/tags/*'\n"
"$ git fetch <url of origin> --prune --prune-tags\n"
"$ git fetch <url of origin> --prune 'refs/tags/*:refs/tags/*'\n"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:194
#, no-wrap
msgid "OUTPUT"
msgstr "OUTPUT"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:199
msgid ""
"The output of \"git fetch\" depends on the transport method used; this "
"section describes the output when fetching over the Git protocol (either "
"locally or via ssh) and Smart HTTP protocol."
msgstr "`git fetch` の出力は、使用する転送方法によって異なります。 このセクションでは、Gitプロトコル(ローカルまたはssh経由)およびスマートHTTPプロトコルを介してフェッチする場合の出力について説明します。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:202
msgid ""
"The status of the fetch is output in tabular form, with each line "
"representing the status of a single ref. Each line is of the form:"
msgstr "フェッチのステータスは表形式で出力され、各行は単一のrefのステータスを表します。 各行の形式は以下のとおりです:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:205
#, no-wrap
msgid " <flag> <summary> <from> -> <to> [<reason>]\n"
msgstr " <flag> <summary> <from> -> <to> [<reason>]\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:209
msgid ""
"The status of up-to-date refs is shown only if the --verbose option is used."
msgstr "最新のrefのステータスは、 `--verbose` オプションが使用されている場合にのみ表示されます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:214
msgid ""
"In compact output mode, specified with configuration variable fetch.output, "
"if either entire `<from>` or `<to>` is found in the other string, it will be "
"substituted with `*` in the other string. For example, `master -> origin/"
"master` becomes `master -> origin/*`."
msgstr "構成変数fetch.outputで指定されたコンパクト出力モードでは、他の文字列に `<from>` または `<to>` 全体が見つかった場合、他の文字列内では `*` に置き換えられます。 たとえば、 `master -> origin/master` は `master -> origin/*` になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:215
#, no-wrap
msgid "flag"
msgstr "flag"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:217
msgid "A single character indicating the status of the ref:"
msgstr "refのステータスを示す1文字:"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:217
#, no-wrap
msgid "(space)"
msgstr "(space)"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:218
msgid "for a successfully fetched fast-forward;"
msgstr "フェッチされた早送りの成功"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:218
#, no-wrap
msgid "`+`"
msgstr "`+`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:219
msgid "for a successful forced update;"
msgstr "強制更新の成功"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:219
#, no-wrap
msgid "`-`"
msgstr "`-`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:220
msgid "for a successfully pruned ref;"
msgstr "refの刈り込みの成功"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:220
#, no-wrap
msgid "`t`"
msgstr "`t`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:221
msgid "for a successful tag update;"
msgstr "タグ更新の成功"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:221
#, no-wrap
msgid "`*`"
msgstr "`*`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:222
msgid "for a successfully fetched new ref;"
msgstr "新しいrefのフェッチの成功"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:222
#, no-wrap
msgid "`!`"
msgstr "`!`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:223
msgid "for a ref that was rejected or failed to update; and"
msgstr "拒否された、または更新に失敗したref"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:223
#, no-wrap
msgid "`=`"
msgstr "`=`"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:224
msgid "for a ref that was up to date and did not need fetching."
msgstr "最新であり、フェッチする必要がなかったref"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:225
#, no-wrap
msgid "summary"
msgstr "summary"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:230
msgid ""
"For a successfully fetched ref, the summary shows the old and new values of "
"the ref in a form suitable for using as an argument to `git log` (this is "
"`<old>..<new>` in most cases, and `<old>...<new>` for forced non-fast-"
"forward updates)."
msgstr "成功裏にフェッチされたrefの場合、概要には、refの古い値と新しい値が `git log` の引数として使用するのに適した形式で表示されます(これはほとんどの場合 `<old>..<new>` であり、強制的な非早送り(non-fast-forward)更新の場合は `<old>...<new>` です)。"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:231
#, no-wrap
msgid "from"
msgstr "from"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:235
msgid ""
"The name of the remote ref being fetched from, minus its `refs/<type>/` "
"prefix. In the case of deletion, the name of the remote ref is \"(none)\"."
msgstr "フェッチ元のリモートrefの名前から、その `refs/<type>/`プレフィックスを差し引いたもの。 削除の場合、リモートrefの名前は `(none)` です。"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:236
#, no-wrap
msgid "to"
msgstr "to"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:239
msgid ""
"The name of the local ref being updated, minus its `refs/<type>/` prefix."
msgstr "更新されるローカルrefの名前から、その `refs/<type>/` プレフィックスを差し引いたもの。"

#. type: Labeled list
#: ../Documentation-sedout/git-fetch.txt:240
#, no-wrap
msgid "reason"
msgstr "reason"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:244
msgid ""
"A human-readable explanation. In the case of successfully fetched refs, no "
"explanation is needed. For a failed ref, the reason for failure is described."
msgstr "人間が読める説明。 正常にフェッチされたrefの場合、説明は必要ありません。 失敗したrefについては、失敗の理由が説明されています。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:246
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:249
msgid "Update the remote-tracking branches:"
msgstr "リモートトラッキングブランチを更新します:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:252
#, no-wrap
msgid "$ git fetch origin\n"
msgstr "$ git fetch origin\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:258
msgid ""
"The above command copies all branches from the remote refs/heads/ namespace "
"and stores them to the local refs/remotes/origin/ namespace, unless the "
"branch.<name>.fetch option is used to specify a non-default refspec."
msgstr "上記のコマンドは、 branch.<name>.fetch オプションを使用してデフォルト以外のrefspecを指定しない限り、すべてのブランチをリモート refs/heads/ 名前空間からコピーし、ローカル refs/remotes/origin/ 名前空間に格納します。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:260
msgid "Using refspecs explicitly:"
msgstr "refspecsの明示的な使用:"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:263
#, no-wrap
msgid "$ git fetch origin +seen:seen maint:tmp\n"
msgstr "$ git fetch origin +seen:seen maint:tmp\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:268
msgid ""
"This updates (or creates, as necessary) branches `seen` and `tmp` in the "
"local repository by fetching from the branches (respectively)  `seen` and "
"`maint` from the remote repository."
msgstr "これにより、リモートリポジトリからブランチ `seen` と `maint` を(それぞれ)フェッチすることにより、ローカルリポジトリでブランチ `seen` と `tmp` が更新(または必要に応じて作成)されます。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:271
msgid ""
"The `seen` branch will be updated even if it does not fast-forward, because "
"it is prefixed with a plus sign; `tmp` will not be."
msgstr "`seen` ブランチは、接頭辞にプラス記号(`+`)が付いているため、早送りしなくても更新されます。 `tmp` はそうしません。"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:274
msgid ""
"Peek at a remote's branch, without configuring the remote in your local "
"repository:"
msgstr "あなたのローカルリポジトリで「リモート」を構成せずに、リモートのブランチをちらっと見ます(peek):"

#. type: delimited block -
#: ../Documentation-sedout/git-fetch.txt:278
#, no-wrap
msgid ""
"$ git fetch git://git.kernel.org/pub/scm/git/git.git maint\n"
"$ git log FETCH_HEAD\n"
msgstr ""
"$ git fetch git://git.kernel.org/pub/scm/git/git.git maint\n"
"$ git log FETCH_HEAD\n"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:285
msgid ""
"The first command fetches the `maint` branch from the repository at `git://"
"git.kernel.org/pub/scm/git/git.git` and the second command uses `FETCH_HEAD` "
"to examine the branch with linkgit:git-log[1].  The fetched objects will "
"eventually be removed by git's built-in housekeeping (see linkgit:git-gc[1])."
msgstr "最初のコマンドは `git://git.kernel.org/pub/scm/git/git.git` のリポジトリから `maint` ブランチをフェッチし、2番目のコマンドは `FETCH_HEAD` を使用して linkgit:git-log[1] でブランチを調べます。 フェッチされたオブジェクトは、最終的にgitの組み込みの家政婦(housekeeping)によって削除されます(linkgit:git-gc[1] を参照)。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:289
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:296
msgid ""
"Using --recurse-submodules can only fetch new commits in already checked out "
"submodules right now. When e.g. upstream added a new submodule in the just "
"fetched commits of the superproject the submodule itself cannot be fetched, "
"making it impossible to check out that submodule later without having to do "
"a fetch again. This is expected to be fixed in a future Git version."
msgstr "`--recurse-submodules` を使用すると、現在、すでにチェックアウトされているサブモジュールでのみ新しいコミットをフェッチできます。 たとえば、アップストリームは、スーパープロジェクトのフェッチされたばかりのコミットに新しいサブモジュールを追加したとき、サブモジュール自体はフェッチできないため、後で再度フェッチを実行せずにそのサブモジュールをチェックアウトすることはできません。 これは、将来のGitバージョンで修正される予定です。"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:298
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:300
msgid "linkgit:git-pull[1]"
msgstr "linkgit:git-pull[1]"

#. type: Title -
#: ../Documentation-sedout/git-fetch.txt:302
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-fetch.txt:303
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
