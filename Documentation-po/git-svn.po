# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-10-10 00:41+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-svn.txt:2
#, no-wrap
msgid "git-svn(1)"
msgstr "git-svn(1)"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:7
msgid ""
"git-svn - Bidirectional operation between a Subversion repository and Git"
msgstr "git-svn - SubversionリポジトリとGit間の双方向操作"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:12
#, no-wrap
msgid "'git svn' <command> [<options>] [<arguments>]\n"
msgstr "'git svn' <command> [<options>] [<arguments>]\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:18
msgid ""
"'git svn' is a simple conduit for changesets between Subversion and Git.  It "
"provides a bidirectional flow of changes between a Subversion and a Git "
"repository."
msgstr ""
"`git svn` は、SubversionとGitの間のチェンジセットのための単純な水道管です。 "
"SubversionとGitリポジトリ間の双方向の変更フローを提供します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:23
msgid ""
"'git svn' can track a standard Subversion repository, following the common "
"\"trunk/branches/tags\" layout, with the --stdlayout option.  It can also "
"follow branches and tags in any layout with the -T/-t/-b options (see "
"options to 'init' below, and also the 'clone' command)."
msgstr ""
"`git svn` は、 `--stdlayout` オプションを使用して、一般的な「trunk/branches/"
"tags」レイアウトに従って、標準のSubversionリポジトリを追跡できます。 また、 "
"`-T`/`-t`/`-b` オプションを使用して、任意のレイアウトのブランチとタグを追跡す"
"ることもできます(以下の「initコマンド」のオプションおよび「cloneコマンド」も"
"参照してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:27
msgid ""
"Once tracking a Subversion repository (with any of the above methods), the "
"Git repository can be updated from Subversion by the 'fetch' command and "
"Subversion updated from Git by the 'dcommit' command."
msgstr ""
"(上記の方法のいずれかを使用して)Subversionリポジトリを追跡すると、Gitリポジト"
"リは「fetch」コマンドによってSubversionから更新され、Subversionは「dcommit」"
"コマンドによってGitから更新されます。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:29
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:31
#, no-wrap
msgid "'init'"
msgstr "`init`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:39
msgid ""
"Initializes an empty Git repository with additional metadata directories for "
"'git svn'.  The Subversion URL may be specified as a command-line argument, "
"or as full URL arguments to -T/-t/-b.  Optionally, the target directory to "
"operate on can be specified as a second argument.  Normally this command "
"initializes the current directory."
msgstr ""
"`git svn` の追加のメタデータディレクトリを使用して空のGitリポジトリを初期化し"
"ます。 Subversion URLは、コマンドライン引数として、または `-T`/`-t`/`-b` への"
"完全なURL引数として指定できます。 オプションで、操作するターゲットディレクト"
"リを2番目の引数として指定できます。 通常、このコマンドは現在のディレクトリを"
"初期化します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:40
#, no-wrap
msgid "-T<trunk_subdir>"
msgstr "`-T<trunk_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:41
#, no-wrap
msgid "--trunk=<trunk_subdir>"
msgstr "`--trunk=<trunk_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:42
#, no-wrap
msgid "-t<tags_subdir>"
msgstr "`-t<tags_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:43
#, no-wrap
msgid "--tags=<tags_subdir>"
msgstr "`--tags=<tags_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:44
#, no-wrap
msgid "-b<branches_subdir>"
msgstr "`-b<branches_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:45
#, no-wrap
msgid "--branches=<branches_subdir>"
msgstr "`--branches=<branches_subdir>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:46
#, no-wrap
msgid "-s"
msgstr "`-s`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:47
#, no-wrap
msgid "--stdlayout"
msgstr "`--stdlayout`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:58
msgid ""
"These are optional command-line options for init.  Each of these flags can "
"point to a relative repository path (--tags=project/tags) or a full url (--"
"tags=https://foo.org/project/tags).  You can specify more than one --tags "
"and/or --branches options, in case your Subversion repository places tags or "
"branches under multiple paths.  The option --stdlayout is a shorthand way of "
"setting trunk,tags,branches as the relative paths, which is the Subversion "
"default. If any of the other options are given as well, they take precedence."
msgstr ""
"これらは、initのコマンドラインオプションです。 これらの各フラグは、相対リポジ"
"トリパス(`-tags=project/tags`)または完全なURL(`--tags=https://foo.org/"
"project/tags`)を指すことができます。 Subversionリポジトリがタグまたはブランチ"
"を複数のパスの下に配置する場合は、複数の `--tags` および/または `--branches` "
"オプションを指定できます。 オプション `--stdlayout` は、トランク、タグ、ブラ"
"ンチを相対パスとして設定する簡単な方法です。これは、Subversionのデフォルトで"
"す。 他のオプションのいずれかが同様に指定されている場合、それらが優先されま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:58
#, no-wrap
msgid "--no-metadata"
msgstr "`--no-metadata`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:62
msgid ""
"Set the 'noMetadata' option in the [svn-remote] config.  This option is not "
"recommended, please read the 'svn.noMetadata' section of this manpage before "
"using this option."
msgstr ""
"[svn-remote] 設定で `noMetadata` オプションを設定します。 このオプションはお"
"勧めしません。このオプションを使用する前に、このマンページの「svn."
"noMetadata」セクションをお読みください。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:62
#, no-wrap
msgid "--use-svm-props"
msgstr "`--use-svm-props`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:64
msgid "Set the 'useSvmProps' option in the [svn-remote] config."
msgstr "[svn-remote]設定で `useSvmProps` オプションを設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:64
#, no-wrap
msgid "--use-svnsync-props"
msgstr "`--use-svnsync-props`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:66
msgid "Set the 'useSvnsyncProps' option in the [svn-remote] config."
msgstr "[svn-remote] 設定で `useSvnsyncProps` オプションを設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:66
#, no-wrap
msgid "--rewrite-root=<URL>"
msgstr "`--rewrite-root=<URL>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:68
msgid "Set the 'rewriteRoot' option in the [svn-remote] config."
msgstr "[svn-remote]設定で `rewriteRoot` オプションを設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:68
#, no-wrap
msgid "--rewrite-uuid=<UUID>"
msgstr "`--rewrite-uuid=<UUID>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:70
msgid "Set the 'rewriteUUID' option in the [svn-remote] config."
msgstr "[svn-remote]設定で `rewriteUUID` オプションを設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:70
#, no-wrap
msgid "--username=<user>"
msgstr "`--username=<user>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:75
msgid ""
"For transports that SVN handles authentication for (http, https, and plain "
"svn), specify the username.  For other transports (e.g. `svn+ssh://`), you "
"must include the username in the URL, e.g. `svn+ssh://foo@svn.bar.com/"
"project`"
msgstr ""
"SVNが認証を処理する転送(http や https やプレーンsvn)の場合に、ユーザー名を指"
"定します。 他の転送(例: `svn+ssh://`)の場合、URLにユーザー名を含める必要があ"
"ります。例： `svn+ssh://foo@svn.bar.com/project`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:75
#, no-wrap
msgid "--prefix=<prefix>"
msgstr "`--prefix=<prefix>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:90
msgid ""
"This allows one to specify a prefix which is prepended to the names of "
"remotes if trunk/branches/tags are specified.  The prefix does not "
"automatically include a trailing slash, so be sure you include one in the "
"argument if that is what you want.  If --branches/-b is specified, the "
"prefix must include a trailing slash.  Setting a prefix (with a trailing "
"slash) is strongly encouraged in any case, as your SVN-tracking refs will "
"then be located at \"refs/remotes/$prefix/*\", which is compatible with "
"Git's own remote-tracking ref layout (refs/remotes/$remote/*). Setting a "
"prefix is also useful if you wish to track multiple projects that share a "
"common repository.  By default, the prefix is set to 'origin/'."
msgstr ""
"これにより、トランク/ブランチ/タグ が指定されている場合に、リモートの名前の前"
"に付加される接頭辞を指定できます。 接頭辞(prefix)には自動的に末尾のスラッシュ"
"が含まれ無いため、必要に応じて引数に必ず末尾のスラッシュを含めてください。 "
"`--branches`/`-b` を指定する場合、接頭辞には末尾のスラッシュを含める必要があ"
"ります。 SVN追跡refは `refs/remotes/$prefix/*` に配置されるため、(末尾にス"
"ラッシュを付けた)接頭辞を設定することを強くお勧めします。これは、Git独自のリ"
"モート追跡refレイアウトと互換性があります(`refs/remotes/$remote/*`)。 接頭辞"
"の設定は、共通のリポジトリを共有する複数のプロジェクトを追跡する場合にも役立"
"ちます。 デフォルトでは、接頭辞は `origin/` に設定されています。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:97
msgid ""
"Before Git v2.0, the default prefix was \"\" (no prefix). This meant that "
"SVN-tracking refs were put at \"refs/remotes/*\", which is incompatible with "
"how Git's own remote-tracking refs are organized.  If you still want the old "
"default, you can get it by passing `--prefix \"\"` on the command line (`--"
"prefix=\"\"` may not work if your Perl's Getopt::Long is < v2.37)."
msgstr ""
"Git v2.0 より前は、デフォルトの接頭辞は \"\" (接頭辞無し)でした。 これは、SVN"
"追跡refが `refs/remotes/*` に配置されたことを意味します。これは、Git自体のリ"
"モート追跡refの編成方法と互換性がありません。 それでも古いデフォルトが必要な"
"場合は、コマンドラインで `--prefix \"\"` を渡すことで取得できます(Perlの "
"Getopt::Long is < v2.37 の場合、 `--prefix=\"\"` は機能しない可能性がありま"
"す)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:98
#: ../Documentation-sedout/git-svn.txt:145
#, no-wrap
msgid "--ignore-refs=<regex>"
msgstr "`--ignore-refs=<regex>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:102
msgid ""
"When passed to 'init' or 'clone' this regular expression will be preserved "
"as a config key.  See 'fetch' for a description of `--ignore-refs`."
msgstr ""
"`init` または `clone` に渡されると、この正規表現は構成キー(config key)として"
"保持されます。 `--ignore-refs` の説明については、「fetch」コマンドを参照して"
"ください。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:102
#: ../Documentation-sedout/git-svn.txt:157
#, no-wrap
msgid "--ignore-paths=<regex>"
msgstr "`--ignore-paths=<regex>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:106
msgid ""
"When passed to 'init' or 'clone' this regular expression will be preserved "
"as a config key.  See 'fetch' for a description of `--ignore-paths`."
msgstr ""
"`init` または` clone` に渡されると、この正規表現は構成キー(config key)として"
"保持されます。 `--ignore-paths` の説明については、「fetch」コマンドを参照して"
"ください。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:106
#: ../Documentation-sedout/git-svn.txt:186
#, no-wrap
msgid "--include-paths=<regex>"
msgstr "`--include-paths=<regex>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:110
msgid ""
"When passed to 'init' or 'clone' this regular expression will be preserved "
"as a config key.  See 'fetch' for a description of `--include-paths`."
msgstr ""
"`init` または `clone` に渡されると、この正規表現は構成キー(config key)として"
"保持されます。 `--include-paths` の説明については、「fetch」コマンドを参照し"
"てください。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:110
#, no-wrap
msgid "--no-minimize-url"
msgstr "`--no-minimize-url`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:121
msgid ""
"When tracking multiple directories (using --stdlayout, --branches, or --tags "
"options), git svn will attempt to connect to the root (or highest allowed "
"level) of the Subversion repository.  This default allows better tracking of "
"history if entire projects are moved within a repository, but may cause "
"issues on repositories where read access restrictions are in place.  Passing "
"`--no-minimize-url` will allow git svn to accept URLs as-is without "
"attempting to connect to a higher level directory.  This option is off by "
"default when only one URL/branch is tracked (it would do little good)."
msgstr ""
"(`--stdlayout` または `--branches` または `--tags` オプションを使用して、)複"
"数のディレクトリを追跡する場合、git svnはSubversionリポジトリのルート(または"
"許可されている最高レベル)への接続を試みます。 このデフォルトでは、プロジェク"
"ト全体がリポジトリ内で移動された場合に履歴をより適切に追跡できますが、読み取"
"りアクセス制限が設定されているリポジトリで問題が発生する可能性があります。 "
"`--no-minimize-url` を渡すと、git svnは、上位レベルのディレクトリに接続しよう"
"とせずに、URLをそのまま受け入れることができます。 このオプションは、1つの "
"URL/ブランチ のみが追跡される場合はデフォルトでオフになっています(ほとんど効"
"果ありません)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:122
#, no-wrap
msgid "'fetch'"
msgstr "`fetch`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:127
msgid ""
"Fetch unfetched revisions from the Subversion remote we are tracking.  The "
"name of the [svn-remote \"...\"] section in the $GIT_DIR/config file may be "
"specified as an optional command-line argument."
msgstr ""
"私達が追跡しているSubversionリモートからフェッチされていないリビジョンを取得"
"します。 $GIT_DIR/config ファイルの [svn-remote \"...\"] セクションの名前は、"
"オプションのコマンドライン引数として指定できます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:130
#: ../Documentation-sedout/git-svn.txt:243
msgid ""
"This automatically updates the rev_map if needed (see '$GIT_DIR/svn/\\**/."
"rev_map.*' in the FILES section below for details)."
msgstr ""
"これにより、必要に応じてrev_mapが自動的に更新されます(詳細については、以下の"
"「FILES」セクションの `$GIT_DIR/svn/\\**/.rev_map.*` を参照してください)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:131
#, no-wrap
msgid "--localtime"
msgstr "`--localtime`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:135
msgid ""
"Store Git commit times in the local time zone instead of UTC.  This makes "
"'git log' (even without --date=local) show the same times that `svn log` "
"would in the local time zone."
msgstr ""
"Gitのコミット時間をUTCではなくローカルタイムゾーンで保存します。 これにより、"
"「git log」は(`--date=local`がなくても)、「svn log」がローカルタイムゾーンで"
"表示されるのと同じ時間を表示します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:141
msgid ""
"This doesn't interfere with interoperating with the Subversion repository "
"you cloned from, but if you wish for your local Git repository to be able to "
"interoperate with someone else's local Git repository, either don't use this "
"option or you should both use it in the same local time zone."
msgstr ""
"これは、クローンを作成したSubversionリポジトリとの相互運用を妨げることはあり"
"ませんが、ローカルGitリポジトリを他の誰かのローカルGitリポジトリと相互運用で"
"きるようにする場合は、このオプションを使用しないか、両方で同一のローカルタイ"
"ムゾーンを使用する必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:142
#: ../Documentation-sedout/git-svn.txt:537
#, no-wrap
msgid "--parent"
msgstr "`--parent`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:144
msgid "Fetch only from the SVN parent of the current HEAD."
msgstr "現在のHEADのSVNの親からのみフェッチします。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:150
msgid ""
"Ignore refs for branches or tags matching the Perl regular expression. A "
"\"negative look-ahead assertion\" like `^refs/remotes/origin/(?!tags/wanted-"
"tag|wanted-branch).*$` can be used to allow only certain refs."
msgstr ""
"Perlの正規表現にマッチするブランチまたはタグのrefを無視します。 `^refs/"
"remotes/origin/(?!tags/wanted-tag|wanted-branch).*$` のような「negative look-"
"ahead assertion」(負の先読みアサーション)は、特定のrefのみを許可するために使"
"用できます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:153
#, no-wrap
msgid "config key: svn-remote.<name>.ignore-refs\n"
msgstr "config key: svn-remote.<name>.ignore-refs\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:156
msgid ""
"If the ignore-refs configuration key is set, and the command-line option is "
"also given, both regular expressions will be used."
msgstr ""
"ignore-refs 構成キーが設定されていて、コマンドラインオプションも指定されてい"
"る場合は、両方の正規表現が使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:163
msgid ""
"This allows one to specify a Perl regular expression that will cause "
"skipping of all matching paths from checkout from SVN.  The `--ignore-paths` "
"option should match for every 'fetch' (including automatic fetches due to "
"'clone', 'dcommit', 'rebase', etc) on a given repository."
msgstr ""
"これにより、SVNからのチェックアウトから一致するすべてのパスをスキップするPerl"
"正規表現を指定できます。 `--ignore-paths` オプションは、特定のリポジトリのす"
"べての `fetch` (`clone`, `dcommit`, `rebase` などによる自動フェッチを含む)に"
"マッチする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:166
#, no-wrap
msgid "config key: svn-remote.<name>.ignore-paths\n"
msgstr "config key: svn-remote.<name>.ignore-paths\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:169
msgid ""
"If the ignore-paths configuration key is set, and the command-line option is "
"also given, both regular expressions will be used."
msgstr ""
"ignore-paths 構成キーが設定されていて、コマンドラインオプションも指定されてい"
"る場合は、両方の正規表現が使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:171
msgid "Examples:"
msgstr "例:"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:173
#, no-wrap
msgid "Skip \"doc*\" directory for every fetch"
msgstr "フェッチするたびに `doc*` ディレクトリをスキップします"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:177
#, no-wrap
msgid "--ignore-paths=\"^doc\"\n"
msgstr "--ignore-paths=\"^doc\"\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:179
#, no-wrap
msgid "Skip \"branches\" and \"tags\" of first level directories"
msgstr "第1レベルのディレクトリの「branches」と「tags」をスキップします"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:183
#, no-wrap
msgid "--ignore-paths=\"^[^/]+/(?:branches|tags)\"\n"
msgstr "--ignore-paths=\"^[^/]+/(?:branches|tags)\"\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:193
msgid ""
"This allows one to specify a Perl regular expression that will cause the "
"inclusion of only matching paths from checkout from SVN.  The `--include-"
"paths` option should match for every 'fetch' (including automatic fetches "
"due to 'clone', 'dcommit', 'rebase', etc) on a given repository. `--ignore-"
"paths` takes precedence over `--include-paths`."
msgstr ""
"これにより、SVNのチェックアウトからのマッチするパスのみを含めるPerl正規表現を"
"指定できます。 `--include-paths` オプションは、特定のリポジトリのすべての "
"`fetch`(`clone`, `dcommit`, `rebase` などによる自動フェッチを含む)に一致する"
"必要があります。 `--ignore-paths` は `--include-paths` よりも優先されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:196
#, no-wrap
msgid "config key: svn-remote.<name>.include-paths\n"
msgstr "config key: svn-remote.<name>.include-paths\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:197
#, no-wrap
msgid "--log-window-size=<n>"
msgstr "`--log-window-size=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:203
msgid ""
"Fetch <n> log entries per request when scanning Subversion history.  The "
"default is 100. For very large Subversion repositories, larger values may be "
"needed for 'clone'/'fetch' to complete in reasonable time. But overly large "
"values may lead to higher memory usage and request timeouts."
msgstr ""
"Subversionの履歴をスキャンするときに、リクエストごとに<n>個のログエントリを取"
"得します。 デフォルトは100です。非常に大きなSubversionリポジトリの場合、「ク"
"ローン」/「フェッチ」 が妥当な時間で完了するには、より大きな値が必要になる場"
"合があります。 ただし、値が大きすぎると、メモリ使用量が増え、リクエストののタ"
"イムアウトが発生する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:204
#, no-wrap
msgid "'clone'"
msgstr "`clone`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:214
msgid ""
"Runs 'init' and 'fetch'.  It will automatically create a directory based on "
"the basename of the URL passed to it; or if a second argument is passed; it "
"will create a directory and work within that.  It accepts all arguments that "
"the 'init' and 'fetch' commands accept; with the exception of `--fetch-all` "
"and `--parent`.  After a repository is cloned, the 'fetch' command will be "
"able to update revisions without affecting the working tree; and the "
"'rebase' command will be able to update the working tree with the latest "
"changes."
msgstr ""
"`init` と `fetch` を実行します。 渡されたURLのベース名に基づいてディレクトリ"
"を自動的に作成します。 または2番目の引数が渡された場合はディレクトリを作成"
"し、その中で動作します。 `--fetch-all` と `--parent` を除いて、 `init` と "
"`fetch` コマンドが受け入れるすべての引数を受け入れます。 リポジトリのクローン"
"が作成されると、「fetch」コマンドは作業ツリーに影響を与えることなくリビジョン"
"を更新できるようになります。 「rebase」コマンドは、作業ツリーを最新の変更で更"
"新できるようになります。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:215
#, no-wrap
msgid "--preserve-empty-dirs"
msgstr "`--preserve-empty-dirs`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:221
msgid ""
"Create a placeholder file in the local Git repository for each empty "
"directory fetched from Subversion.  This includes directories that become "
"empty by removing all entries in the Subversion repository (but not the "
"directory itself).  The placeholder files are also tracked and removed when "
"no longer necessary."
msgstr ""
"Subversionからフェッチされた空のディレクトリごとに、ローカルGitリポジトリにプ"
"レースホルダーファイルを作成します。 これには、Subversionリポジトリ内のすべて"
"のエントリを削除することによって空になるディレクトリが含まれます(ディレクトリ"
"自体は削除されません)。 プレースホルダーファイルも追跡され、不要になったとき"
"に削除されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:222
#, no-wrap
msgid "--placeholder-filename=<filename>"
msgstr "`--placeholder-filename=<filename>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:225
msgid ""
"Set the name of placeholder files created by --preserve-empty-dirs.  "
"Default: \".gitignore\""
msgstr ""
"`--preserve-empty-dirs` によって作成されたプレースホルダーファイルの名前を設"
"定します。 デフォルトは `.gitignore` です。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:226
#, no-wrap
msgid "'rebase'"
msgstr "`rebase`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:229
msgid ""
"This fetches revisions from the SVN parent of the current HEAD and rebases "
"the current (uncommitted to SVN) work against it."
msgstr ""
"これにより、現在のHEADのSVN親からリビジョンがフェッチされ、現在の(SVNにコミッ"
"トされていない)作業がリベースされます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:233
msgid ""
"This works similarly to `svn update` or 'git pull' except that it preserves "
"linear history with 'git rebase' instead of 'git merge' for ease of "
"dcommitting with 'git svn'."
msgstr ""
"これは `svn update` または `git pull` と同様に機能しますが、 `git svn` でのコ"
"ミットを容易にするために `git merge` ではなく `git rebase` で線形履歴を保持す"
"る点が異なります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:237
msgid ""
"This accepts all options that 'git svn fetch' and 'git rebase' accept.  "
"However, `--fetch-all` only fetches from the current [svn-remote], and not "
"all [svn-remote] definitions."
msgstr ""
"これは、 `git svn fetch` や `git rebase` が受け入れるすべてのオプションを受け"
"入れます。 ただし、 `--fetch-all` は現在の[svn-remote]からのみフェッチし、す"
"べての[svn-remote]定義からフェッチするわけではありません。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:240
msgid ""
"Like 'git rebase'; this requires that the working tree be clean and have no "
"uncommitted changes."
msgstr ""
"`git rebase` と同様です。これには、作業ツリーがクリーンであり、コミットされて"
"いない変更がないことが必要です。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:244
#, no-wrap
msgid "-l"
msgstr "`-l`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:245
#, no-wrap
msgid "--local"
msgstr "`--local`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:248
msgid ""
"Do not fetch remotely; only run 'git rebase' against the last fetched commit "
"from the upstream SVN."
msgstr ""
"リモートでフェッチしないでください。 アップストリームSVNから最後にフェッチさ"
"れたコミットに対してのみ `git rebase` を実行します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:249
#, no-wrap
msgid "'dcommit'"
msgstr "`dcommit`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:254
msgid ""
"Commit each diff from the current branch directly to the SVN repository, and "
"then rebase or reset (depending on whether or not there is a diff between "
"SVN and head).  This will create a revision in SVN for each commit in Git."
msgstr ""
"現在のブランチからの各diffを直接SVNリポジトリにコミットしてから、リベースまた"
"はリセットします(SVNとヘッドの間にdiffがあるかどうかによって異なります)。 こ"
"れにより、GitのコミットごとにSVNにリビジョンが作成されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:258
msgid ""
"When an optional Git branch name (or a Git commit object name)  is specified "
"as an argument, the subcommand works on the specified branch, not on the "
"current branch."
msgstr ""
"オプションのGitブランチ名(またはGitコミットオブジェクト名)が引数として指定さ"
"れている場合、サブコマンドは現在のブランチではなく、指定されたブランチで機能"
"します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:260
msgid "Use of 'dcommit' is preferred to 'set-tree' (below)."
msgstr "`set-tree` (下記)よりも `dcommit` の使用が推奨されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:261
#, no-wrap
msgid "--no-rebase"
msgstr "`--no-rebase`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:263
msgid "After committing, do not rebase or reset."
msgstr "コミット後にリベースまたはリセットしないでください。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:263
#, no-wrap
msgid "--commit-url <URL>"
msgstr "`--commit-url <URL>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:269
msgid ""
"Commit to this SVN URL (the full path).  This is intended to allow existing "
"'git svn' repositories created with one transport method (e.g. `svn://` or "
"`http://` for anonymous read) to be reused if a user is later given access "
"to an alternate transport method (e.g. `svn+ssh://` or `https://`) for "
"commit."
msgstr ""
"このSVN URL(フルパス)にコミットします。 これは、ユーザーが後でコミット用の代"
"替転送方法(例えば `svn+ssh://` や `https://`)へのアクセスを許可された場合に、"
"ある転送方法(例えば、匿名読み取りの場合は `svn://` または `http://`)で作成さ"
"れた既存の `git svn` リポジトリを再利用できるようにすることを目的としていま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:273
#, no-wrap
msgid ""
"config key: svn-remote.<name>.commiturl\n"
"config key: svn.commiturl (overwrites all svn-remote.<name>.commiturl options)\n"
msgstr ""
"config key: svn-remote.<name>.commiturl\n"
"config key: svn.commiturl (overwrites all svn-remote.<name>.commiturl options)\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:277
msgid ""
"Note that the SVN URL of the commiturl config key includes the SVN branch.  "
"If you rather want to set the commit URL for an entire SVN repository use "
"svn-remote.<name>.pushurl instead."
msgstr ""
"注意: commiturl構成キーのSVN URLにはSVNブランチが含まれていることに注意してく"
"ださい。 SVNリポジトリ全体のコミットURLを設定する場合は、代わりに `svn-"
"remote.<name>.pushurl` を使用してください。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:280
msgid ""
"Using this option for any other purpose (don't ask) is very strongly "
"discouraged."
msgstr ""
"このオプションを他の目的(それがナニカは聞かないで下さい)で使用することは、全"
"く全然欠片もお勧めできません。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:281
#, no-wrap
msgid "--mergeinfo=<mergeinfo>"
msgstr "`--mergeinfo=<mergeinfo>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:288
msgid ""
"Add the given merge information during the dcommit (e.g. `--mergeinfo=\"/"
"branches/foo:1-10\"`). All svn server versions can store this information "
"(as a property), and svn clients starting from version 1.5 can make use of "
"it. To specify merge information from multiple branches, use a single space "
"character between the branches (`--mergeinfo=\"/branches/foo:1-10 /branches/"
"bar:3,5-6,8\"`)"
msgstr ""
"dcommit中に指定されたマージ情報を追加します(たとえば `--mergeinfo=\"/"
"branches/foo:1-10\"`)。 すべてのsvnサーバーバージョンはこの情報を(プロパティ"
"として)保存でき、バージョン1.5以降のsvnクライアントはそれを利用できます。 複"
"数のブランチからのマージ情報を指定するには、ブランチの間に単一の空白文字を使"
"用します(`--mergeinfo=\"/branches/foo:1-10 /branches/bar:3,5-6,8\"`)"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:291
#, no-wrap
msgid "config key: svn.pushmergeinfo\n"
msgstr "config key: svn.pushmergeinfo\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:296
msgid ""
"This option will cause git-svn to attempt to automatically populate the svn:"
"mergeinfo property in the SVN repository when possible. Currently, this can "
"only be done when dcommitting non-fast-forward merges where all parents but "
"the first have already been pushed into SVN."
msgstr ""
"このオプションにより、git-svnは、可能な場合、SVNリポジトリの svn:mergeinfo プ"
"ロパティに自動的にデータを入力しようとします。 現在、これは、最初の親を除くす"
"べての親がすでにSVNにプッシュされている非早送りマージをコミットする場合にのみ"
"実行できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:297
#, no-wrap
msgid "--interactive"
msgstr "`--interactive`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:301
msgid ""
"Ask the user to confirm that a patch set should actually be sent to SVN.  "
"For each patch, one may answer \"yes\" (accept this patch), \"no\" (discard "
"this patch), \"all\" (accept all patches), or \"quit\"."
msgstr ""
"パッチセットが実際にSVNに送信される必要があることを確認するようにユーザーに問"
"い合わせます。 パッチごとに、「yes」(このパッチを受け入れる)、または「no」(こ"
"のパッチを破棄する)、または「all」(すべてのパッチを受け入れる)、または"
"「quit」と答えることができます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:304
msgid ""
"'git svn dcommit' returns immediately if answer is \"no\" or \"quit\", "
"without committing anything to SVN."
msgstr ""
"`git svn dcommit` は、回答が「no」または「quit」の場合、SVNに何もコミットせず"
"に、すぐに終了します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:305
#, no-wrap
msgid "'branch'"
msgstr "`branch`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:307
msgid "Create a branch in the SVN repository."
msgstr "SVNリポジトリにブランチを作成します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:308
#, no-wrap
msgid "-m"
msgstr "`-m`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:309
#, no-wrap
msgid "--message"
msgstr "`--message`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:311
msgid "Allows to specify the commit message."
msgstr "コミットメッセージを指定できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:312
#, no-wrap
msgid "-t"
msgstr "`-t`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:313
#, no-wrap
msgid "--tag"
msgstr "`--tag`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:316
msgid ""
"Create a tag by using the tags_subdir instead of the branches_subdir "
"specified during git svn init."
msgstr ""
"`git svn init` で指定された branchs_subdir の代わりに、 tags_subdir を使用し"
"てタグを作成します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:317
#, no-wrap
msgid "-d<path>"
msgstr "`-d<path>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:318
#, no-wrap
msgid "--destination=<path>"
msgstr "`--destination=<path>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:326
msgid ""
"If more than one --branches (or --tags) option was given to the 'init' or "
"'clone' command, you must provide the location of the branch (or tag) you "
"wish to create in the SVN repository.  <path> specifies which path to use to "
"create the branch or tag and should match the pattern on the left-hand side "
"of one of the configured branches or tags refspecs.  You can see these "
"refspecs with the commands"
msgstr ""
"`init` または `clone` コマンドに複数の `--branches`(または `--tags`)オプショ"
"ンが指定されている場合は、SVNリポジトリに作成するブランチ(またはタグ)の場所を"
"指定する必要があります。 <path> はブランチやタグを作成するために使用するパス"
"を指定し、設定されたブランチやタグのrefspecsのどれかの左側のパターンに一致す"
"る必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:330
#, no-wrap
msgid ""
"git config --get-all svn-remote.<name>.branches\n"
"git config --get-all svn-remote.<name>.tags\n"
msgstr ""
"git config --get-all svn-remote.<name>.branches\n"
"git config --get-all svn-remote.<name>.tags\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:333
msgid ""
"where <name> is the name of the SVN repository as specified by the -R option "
"to 'init' (or \"svn\" by default)."
msgstr ""
"ここで、 <name> は、`init` の `-R` オプションで指定されたSVNリポジトリーの名"
"前です(またはデフォルトでは `svn`)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:334
#, no-wrap
msgid "--username"
msgstr "`--username`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:337
msgid ""
"Specify the SVN username to perform the commit as.  This option overrides "
"the 'username' configuration property."
msgstr ""
"コミットを実行するSVNユーザー名を指定します。 このオプションは、 `username` "
"構成プロパティをオーバーライドします。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:338
#, no-wrap
msgid "--commit-url"
msgstr "`--commit-url`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:343
msgid ""
"Use the specified URL to connect to the destination Subversion repository.  "
"This is useful in cases where the source SVN repository is read-only.  This "
"option overrides configuration property 'commiturl'."
msgstr ""
"指定のURLを使用して、宛先のSubversionリポジトリに接続します。 これは、ソース"
"SVNリポジトリが読み取り専用である場合に役立ちます。 このオプションは、構成プ"
"ロパティ 'commiturl' をオーバーライドします。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:345
msgid "git config --get-all svn-remote.<name>.commiturl"
msgstr "git config --get-all svn-remote.<name>.commiturl"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:347
#, no-wrap
msgid "--parents"
msgstr "`--parents`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:351
msgid ""
"Create parent folders. This parameter is equivalent to the parameter --"
"parents on svn cp commands and is useful for non-standard repository layouts."
msgstr ""
"親フォルダを作成します。 このパラメーターは、 `svn cp` コマンドの `--"
"parents` パラメーターと同等であり、非標準のリポジトリーレイアウトで役立ちま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:352
#, no-wrap
msgid "'tag'"
msgstr "`tag`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:355
msgid ""
"Create a tag in the SVN repository. This is a shorthand for 'branch -t'."
msgstr "SVNリポジトリにタグを作成します。 これは `branch -t` の省略形です。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:356
#, no-wrap
msgid "'log'"
msgstr "`log`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:359
msgid ""
"This should make it easy to look up svn log messages when svn users refer to "
"-r/--revision numbers."
msgstr ""
"これにより、svnユーザーが `-r`/`-revision` 番号を参照するときに、svnログメッ"
"セージを簡単に検索できるようになります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:361
msgid "The following features from `svn log' are supported:"
msgstr "`svn log` では以下の機能がサポートされています:"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:363
#, no-wrap
msgid "-r <n>[:<n>]"
msgstr "`-r <n>[:<n>]`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:364
#, no-wrap
msgid "--revision=<n>[:<n>]"
msgstr "`--revision=<n>[:<n>]`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:367
msgid "is supported, non-numeric args are not: HEAD, NEXT, BASE, PREV, etc ..."
msgstr "数値以外の、 HEAD, NEXT, BASE, PREV, 等 はサポートされていません。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:367
#, no-wrap
msgid "-v"
msgstr "`-v`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:368
#, no-wrap
msgid "--verbose"
msgstr "`--verbose`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:371
msgid ""
"it's not completely compatible with the --verbose output in svn log, but "
"reasonably close."
msgstr ""
"`svn log` の `--verbose` 出力と完全互換性ではありませんが、かなり近いです。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:371
#, no-wrap
msgid "--limit=<n>"
msgstr "`--limit=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:374
msgid "is NOT the same as --max-count, doesn't count merged/excluded commits"
msgstr ""
"このオプションは `--max-count` と同一ではなく、 マージされた/除外された コ"
"ミットをカウントしません"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:374
#, no-wrap
msgid "--incremental"
msgstr "`--incremental`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:376
msgid "supported"
msgstr "supported(訳注: 原文ママ)"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:379
msgid "New features:"
msgstr "新機能:"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:381
#, no-wrap
msgid "--show-commit"
msgstr "`--show-commit`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:383
msgid "shows the Git commit sha1, as well"
msgstr "Gitコミットのsha1も表示します"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:383
#, no-wrap
msgid "--oneline"
msgstr "`--oneline`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:385
msgid "our version of --pretty=oneline"
msgstr "私たちのバージョンの `--pretty=oneline`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:390
msgid ""
"SVN itself only stores times in UTC and nothing else. The regular svn client "
"converts the UTC time to the local time (or based on the TZ= environment). "
"This command has the same behaviour."
msgstr ""
"SVN自体はUTCでのみ時間を保存し、他には何も保存しません。 通常のsvnクライアン"
"トは、UTC時刻を現地時間(local time)に(または TZ= 環境変数に基づいて)変換しま"
"す。 このコマンドの振る舞いは同一です。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:392
msgid "Any other arguments are passed directly to 'git log'"
msgstr "その他の引数はすべて `git log` に直接渡されます"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:393
#, no-wrap
msgid "'blame'"
msgstr "`blame`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:400
msgid ""
"Show what revision and author last modified each line of a file. The output "
"of this mode is format-compatible with the output of `svn blame' by default. "
"Like the SVN blame command, local uncommitted changes in the working tree "
"are ignored; the version of the file in the HEAD revision is annotated. "
"Unknown arguments are passed directly to 'git blame'."
msgstr ""
"ファイルの各行を最後に変更したリビジョンと作成者を表示します。 このモードの出"
"力は、デフォルトで `svn blame` の出力と書式の互換があります。 SVN blameコマン"
"ドと同様に、作業ツリー内のローカルのコミットされていない変更は無視されます。 "
"HEADリビジョンのファイルのバージョンに注釈を付けます。 不明な引数は「git "
"blame」に直接渡されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:401
#, no-wrap
msgid "--git-format"
msgstr "`--git-format`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:406
msgid ""
"Produce output in the same format as 'git blame', but with SVN revision "
"numbers instead of Git commit hashes. In this mode, changes that haven't "
"been committed to SVN (including local working-copy edits) are shown as "
"revision 0."
msgstr ""
"`git blame` と同じ形式で出力を生成しますが、Gitコミットハッシュの代わりにSVN"
"リビジョン番号を使用します。 このモードでは、SVNにコミットされていない変更"
"(ローカルの作業コピー編集を含む)は リビジョン0 として表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:407
#, no-wrap
msgid "'find-rev'"
msgstr "`find-rev`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:412
msgid ""
"When given an SVN revision number of the form 'rN', returns the "
"corresponding Git commit hash (this can optionally be followed by a tree-ish "
"to specify which branch should be searched).  When given a tree-ish, returns "
"the corresponding SVN revision number."
msgstr ""
"`rN` の形式のSVNリビジョン番号を指定すると、対応するGitコミットハッシュを返し"
"ます(オプションで、検索するブランチを指定するためにツリーっぽい何かの後に続け"
"ることができます)。 ツリーっぽい何かの場合は、対応するSVNリビジョン番号を返し"
"ます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:413
#, no-wrap
msgid "-B"
msgstr "`-B`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:414
#, no-wrap
msgid "--before"
msgstr "`--before`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:418
msgid ""
"Don't require an exact match if given an SVN revision, instead find the "
"commit corresponding to the state of the SVN repository (on the current "
"branch) at the specified revision."
msgstr ""
"SVNリビジョンが与えられた場合、完全一致は要求しません。代わりに、指定されたリ"
"ビジョンでの(現在のブランチ上の)SVNリポジトリの状態に対応するコミットを探しま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:419
#, no-wrap
msgid "-A"
msgstr "`-A`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:420
#, no-wrap
msgid "--after"
msgstr "`--after`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:424
msgid ""
"Don't require an exact match if given an SVN revision; if there is not an "
"exact match return the closest match searching forward in the history."
msgstr ""
"SVNリビジョンが与えられた場合、完全一致を要求しません。 完全一致がない場合"
"は、履歴内で前方に検索する最も近い一致を返します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:425
#, no-wrap
msgid "'set-tree'"
msgstr "`set-tree`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:433
msgid ""
"You should consider using 'dcommit' instead of this command.  Commit "
"specified commit or tree objects to SVN.  This relies on your imported fetch "
"data being up to date.  This makes absolutely no attempts to do patching "
"when committing to SVN, it simply overwrites files with those specified in "
"the tree or commit.  All merging is assumed to have taken place "
"independently of 'git svn' functions."
msgstr ""
"あなたは、このコマンドの代わりに「dcommit」の使用を検討する必要があります。 "
"これは指定の コミットまたはツリーオブジェクト をSVNにコミットします。 これ"
"は、インポートされたフェッチデータが最新であることに依存しています。 よって、"
"SVNにコミットするときにパッチを適用する試みはまったく行われず、ツリーまたはコ"
"ミットで指定されたファイルでファイルが上書きされるだけです。 すべてのマージ"
"は、「git svn」機能とは独立して行われたと見なされます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:434
#, no-wrap
msgid "'create-ignore'"
msgstr "`create-ignore`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:439
msgid ""
"Recursively finds the svn:ignore property on directories and creates "
"matching .gitignore files. The resulting files are staged to be committed, "
"but are not committed. Use -r/--revision to refer to a specific revision."
msgstr ""
"ディレクトリの svn:ignore プロパティを再帰的に検索し、一致する .gitignore "
"ファイルを作成します。 結果のファイルはコミットされるよう、ステージングされま"
"すが、コミットは行われません。 `-r`/`-revision` を使用して、特定のリビジョン"
"を参照します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:440
#, no-wrap
msgid "'show-ignore'"
msgstr "`show-ignore`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:444
msgid ""
"Recursively finds and lists the svn:ignore property on directories.  The "
"output is suitable for appending to the $GIT_DIR/info/exclude file."
msgstr ""
"ディレクトリの `svn:ignore` プロパティを再帰的に検索して一覧表示します。 この"
"出力は、 `$GIT_DIR/info/exclude` ファイルに追加するのに適しています。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:445
#, no-wrap
msgid "'mkdirs'"
msgstr "`mkdirs`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:453
msgid ""
"Attempts to recreate empty directories that core Git cannot track based on "
"information in $GIT_DIR/svn/<refname>/unhandled.log files.  Empty "
"directories are automatically recreated when using \"git svn clone\" and "
"\"git svn rebase\", so \"mkdirs\" is intended for use after commands like "
"\"git checkout\" or \"git reset\".  (See the svn-remote.<name>.automkdirs "
"config file option for more information.)"
msgstr ""
"`$GIT_DIR/svn/<refname>/unhandled.log` ファイルの情報に基づいてコアGitが追跡"
"できない空のディレクトリを再作成しようとします。 「git svn clone」や「git "
"svn rebase」を使用すると、空のディレクトリが自動的に再作成されるため、"
"「mkdirs」は「git checkout」や「git reset」などのコマンドの後に使用することを"
"目的としています。 (詳細については、 `svn-remote.<name>.automkdirs` 構成ファ"
"イルオプションを参照してください。)"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:454
#, no-wrap
msgid "'commit-diff'"
msgstr "`commit-diff`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:463
msgid ""
"Commits the diff of two tree-ish arguments from the command-line.  This "
"command does not rely on being inside a `git svn init`-ed repository.  This "
"command takes three arguments, (a) the original tree to diff against, (b) "
"the new tree result, (c) the URL of the target Subversion repository.  The "
"final argument (URL) may be omitted if you are working from a 'git svn'-"
"aware repository (that has been `init`-ed with 'git svn').  The -r<revision> "
"option is required for this."
msgstr ""
"コマンドラインで指定された2つのツリーっぽい引数のdiffをコミットします。 この"
"コマンドは、 `git svn init` されたリポジトリ内にあることに依存していません。 "
"このコマンドは、 (a)差分する元のツリー、(b)新しいツリーの結果、(c)ターゲット"
"のSubversionリポジトリのURL、の3つの引数を取ります。 `git svn` 対応リポジトリ"
"(`git svn` で `init` されているリポジトリ)から作業している場合は、最後の引数"
"(URL)を省略できます。 これには、 `-r<revision>` オプションが必要です。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:468
msgid ""
"The commit message is supplied either directly with the `-m` or `-F` option, "
"or indirectly from the tag or commit when the second tree-ish denotes such "
"an object, or it is requested by invoking an editor (see `--edit` option "
"below)."
msgstr ""
"コミットメッセージは、  `-m` または `-F` オプションを使用して直接提供される"
"か、2番目のツリーっぽい何かがそのようなオブジェクトを示す場合はタグまたはコ"
"ミットから間接的に提供されるか、エディターを呼び出すことによって要求されます"
"(下記 `--edit` オプション参照)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:469
#, no-wrap
msgid "-m <msg>"
msgstr "`-m <msg>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:470
#, no-wrap
msgid "--message=<msg>"
msgstr "`--message=<msg>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:473
msgid ""
"Use the given `msg` as the commit message. This option disables the `--edit` "
"option."
msgstr ""
"指定された `msg` をコミットメッセージとして使用します。 このオプションは、`--"
"edit` オプションを無効にします。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:474
#, no-wrap
msgid "-F <filename>"
msgstr "`-F <filename>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:475
#, no-wrap
msgid "--file=<filename>"
msgstr "`--file=<filename>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:478
msgid ""
"Take the commit message from the given file. This option disables the `--"
"edit` option."
msgstr ""
"指定されたファイルからコミットメッセージを取得します。 このオプションは `--"
"edit` オプションを無効にします。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:479
#, no-wrap
msgid "'info'"
msgstr "`info`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:484
msgid ""
"Shows information about a file or directory similar to what `svn info' "
"provides.  Does not currently support a -r/--revision argument.  Use the --"
"url option to output only the value of the 'URL:' field."
msgstr ""
"`svn info` が提供するものと同様のファイルまたはディレクトリに関する情報を表示"
"します。 現在のところ `-r`/`-revision` 引数はサポートしていません。 `--url` "
"オプションを使用すると、「URL:」フィールドの値のみを出力します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:485
#, no-wrap
msgid "'proplist'"
msgstr "`proplist`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:489
msgid ""
"Lists the properties stored in the Subversion repository about a given file "
"or directory.  Use -r/--revision to refer to a specific Subversion revision."
msgstr ""
"特定のファイルまたはディレクトリについてSubversionリポジトリに保存されている"
"プロパティを一覧表示します。 `-r`/`-revision` を使用して、特定のSubversionリ"
"ビジョンを参照します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:490
#, no-wrap
msgid "'propget'"
msgstr "`propget`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:493
msgid ""
"Gets the Subversion property given as the first argument, for a file.  A "
"specific revision can be specified with -r/--revision."
msgstr ""
"ファイルの最初の引数として指定されたSubversionプロパティを取得します。 特定の"
"リビジョンは `-r`/`-revision` で指定できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:494
#, no-wrap
msgid "'propset'"
msgstr "`propset`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:498
msgid ""
"Sets the Subversion property given as the first argument, to the value given "
"as the second argument for the file given as the third argument."
msgstr ""
"最初の引数として与えられた Subversion のプロパティを、3番目の引数として与えら"
"れたファイルに対して2番目の引数として与えられた値に設定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:500
#: ../Documentation-sedout/git-svn.txt:540
#, no-wrap
msgid "Example:"
msgstr "例:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:503
#, no-wrap
msgid "git svn propset svn:keywords \"FreeBSD=%H\" devel/py-tipper/Makefile\n"
msgstr "git svn propset svn:keywords \"FreeBSD=%H\" devel/py-tipper/Makefile\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:507
msgid ""
"This will set the property 'svn:keywords' to 'FreeBSD=%H' for the file "
"'devel/py-tipper/Makefile'."
msgstr ""
"これにより、ファイル `devel/py-tipper/Makefile` のプロパティ `svn:keywords` "
"が `FreeBSD=%H` に設定されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:508
#, no-wrap
msgid "'show-externals'"
msgstr "`show-externals`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:511
msgid ""
"Shows the Subversion externals.  Use -r/--revision to specify a specific "
"revision."
msgstr ""
"Subversionのexternalsを表示します。  `-r`/`-revision` を使用して、特定のリビ"
"ジョンを指定します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:512
#, no-wrap
msgid "'gc'"
msgstr "`gc`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:515
msgid ""
"Compress $GIT_DIR/svn/<refname>/unhandled.log files and remove $GIT_DIR/svn/"
"<refname>/index files."
msgstr ""
"`$GIT_DIR/svn/<refname>/unhandled.log` ファイルを圧縮し、 `$GIT_DIR/svn/"
"<refname>/index` ファイル達を削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:516
#, no-wrap
msgid "'reset'"
msgstr "`reset`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:526
msgid ""
"Undoes the effects of 'fetch' back to the specified revision.  This allows "
"you to re-'fetch' an SVN revision.  Normally the contents of an SVN revision "
"should never change and 'reset' should not be necessary.  However, if SVN "
"permissions change, or if you alter your --ignore-paths option, a 'fetch' "
"may fail with \"not found in commit\" (file not previously visible) or "
"\"checksum mismatch\" (missed a modification).  If the problem file cannot "
"be ignored forever (with --ignore-paths) the only way to repair the repo is "
"to use 'reset'."
msgstr ""
"`fetch` の効果を元に戻し、指定されたリビジョンに戻します。 これにより、SVNリ"
"ビジョンを「再フェッチ」できます。 通常、SVNリビジョンの内容は決して変更され"
"るべきではなく、「リセット」は必要ありません。 ただし、SVN権限が変更された場"
"合、または `--ignore-paths` オプションを変更した場合、「フェッチ」が「not "
"found in commit」(コミットで見つかりません)(ファイルが以前に表示されなかった)"
"または「checksum mismatch」(チェックサムの不一致)(変更を見逃した)で失敗する場"
"合があります。 問題のあるファイルを永久に無視できない場合(`--ignore-pathsを使"
"用`）、リポジトリを修復する唯一の方法は「reset」を使用することです。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:531
msgid ""
"Only the rev_map and refs/remotes/git-svn are changed (see '$GIT_DIR/svn/"
"\\**/.rev_map.*' in the FILES section below for details).  Follow 'reset' "
"with a 'fetch' and then 'git reset' or 'git rebase' to move local branches "
"onto the new tree."
msgstr ""
"rev_map と `refs/remotes/git-svn` のみが変更されます(詳細については、下記"
"「ファイル」セクションの「$GIT_DIR/svn/\\**/.rev_map.*」を参照してくださ"
"い)。 `reset` の後に `fetch` を続け、次に `git reset` または `git rebase` を"
"実行して、ローカルブランチを新しいツリーに移動します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:532
#, no-wrap
msgid "-r <n>"
msgstr "`-r <n>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:533
#, no-wrap
msgid "--revision=<n>"
msgstr "`--revision=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:536
msgid ""
"Specify the most recent revision to keep.  All later revisions are discarded."
msgstr ""
"保持する最新のリビジョンを指定します。 それ以降のリビジョンはすべて破棄されま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:536
#, no-wrap
msgid "-p"
msgstr "`-p`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:540
msgid ""
"Discard the specified revision as well, keeping the nearest parent instead."
msgstr "指定のリビジョンも破棄し、代わりに最も近い親を保持します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:542
msgid ""
"Assume you have local changes in \"master\", but you need to refetch \"r2\"."
msgstr ""
"「master」にローカルの変更があると仮定しますが、あなたは「r2」を再フェッチす"
"る必要があります。"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:547
#, no-wrap
msgid ""
"    r1---r2---r3 remotes/git-svn\n"
"                \\\n"
"                 A---B master\n"
msgstr ""
"    r1---r2---r3 remotes/git-svn\n"
"                \\\n"
"                 A---B master\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:551
msgid ""
"Fix the ignore-paths or SVN permissions problem that caused \"r2\" to be "
"incomplete in the first place.  Then:"
msgstr ""
"そもそも「r2」が不完全になる原因となったignore-pathsまたはSVNパーミッションの"
"問題を修正します。 それから:"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:555
#, no-wrap
msgid ""
"git svn reset -r2 -p\n"
"git svn fetch\n"
msgstr ""
"git svn reset -r2 -p\n"
"git svn fetch\n"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:560
#, no-wrap
msgid ""
"    r1---r2'--r3' remotes/git-svn\n"
"      \\\n"
"       r2---r3---A---B master\n"
msgstr ""
"    r1---r2'--r3' remotes/git-svn\n"
"      \\\n"
"       r2---r3---A---B master\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:565
msgid ""
"Then fixup \"master\" with 'git rebase'.  Do NOT use 'git merge' or your "
"history will not be compatible with a future 'dcommit'!"
msgstr ""
"次に、「master」を「git rebase」で修正します。 「git merge」を使用してはいけ"
"ません。「git merge」を使用すると、履歴が将来の「dcommit」と互換性がなくなり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:568
#, no-wrap
msgid "git rebase --onto remotes/git-svn A^ master\n"
msgstr "git rebase --onto remotes/git-svn A^ master\n"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:573
#, no-wrap
msgid ""
"    r1---r2'--r3' remotes/git-svn\n"
"                \\\n"
"                 A'--B' master\n"
msgstr ""
"    r1---r2'--r3' remotes/git-svn\n"
"                \\\n"
"                 A'--B' master\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:576
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:578
#, no-wrap
msgid "`--shared[=(false|true|umask|group|all|world|everybody)]`"
msgstr "`--shared[=(false|true|umask|group|all|world|everybody)]`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:579
#, no-wrap
msgid "`--template=<template-directory>`"
msgstr "`--template=<template-directory>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:582
msgid ""
"Only used with the 'init' command.  These are passed directly to 'git init'."
msgstr ""
"`init` コマンドでのみ使用されます。 これらは `git init` に直接渡されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:583
#, no-wrap
msgid "`-r <arg>`"
msgstr "`-r <arg>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:584
#, no-wrap
msgid "`--revision <arg>`"
msgstr "`--revision <arg>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:586
msgid "Used with the 'fetch' command."
msgstr "`fetch` コマンドで使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:590
msgid ""
"This allows revision ranges for partial/cauterized history to be supported.  "
"$NUMBER, $NUMBER1:$NUMBER2 (numeric ranges), $NUMBER:HEAD, and BASE:$NUMBER "
"are all supported."
msgstr ""
"これにより、部分的な(partial)/一部が取り除かれた(cauterized) 履歴のリビジョン"
"範囲をサポートできます。 $NUMBER, $NUMBER1:$NUMBER2 (数値範囲) と $NUMBER:"
"HEAD と $NUMBER：HEAD と BASE:$NUMBER はすべてサポートされています。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:594
msgid ""
"This can allow you to make partial mirrors when running fetch; but is "
"generally not recommended because history will be skipped and lost."
msgstr ""
"これにより、フェッチの実行時に部分ミラーを作成できます。 ただし、履歴がスキッ"
"プされて失われるため、通常はお勧めしません。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:595
#, no-wrap
msgid "-"
msgstr "`-`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:596
#, no-wrap
msgid "`--stdin`"
msgstr "`--stdin`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:598
msgid "Only used with the 'set-tree' command."
msgstr "`set-tree` コマンドでのみ使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:602
msgid ""
"Read a list of commits from stdin and commit them in reverse order.  Only "
"the leading sha1 is read from each line, so 'git rev-list --pretty=oneline' "
"output can be used."
msgstr ""
"stdinからコミットのリストを読み取り、逆の順序でコミットします。 各行からは先"
"頭のsha1のみが読み取られるため、 `git rev-list --pretty=oneline` 出力を使用で"
"きます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:603
#, no-wrap
msgid "`--rmdir`"
msgstr "`--rmdir`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:605
#: ../Documentation-sedout/git-svn.txt:618
#: ../Documentation-sedout/git-svn.txt:629
msgid "Only used with the 'dcommit', 'set-tree' and 'commit-diff' commands."
msgstr "`dcommit` と `set-tree` と `commit-diff` コマンドでのみ使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:611
msgid ""
"Remove directories from the SVN tree if there are no files left behind.  SVN "
"can version empty directories, and they are not removed by default if there "
"are no files left in them.  Git cannot version empty directories.  Enabling "
"this flag will make the commit to SVN act like Git."
msgstr ""
"ファイルが残っていない場合は、SVNツリーからディレクトリを削除します。 SVNは空"
"のディレクトリをバージョン管理でき、ファイルが残っていない場合、デフォルトで"
"は削除されません。 Gitは空のディレクトリをバージョン管理できません。 このフラ"
"グを有効にすると、SVNへのコミットがGitのように機能します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:614
#, no-wrap
msgid "config key: svn.rmdir\n"
msgstr "config key: svn.rmdir\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:615
#, no-wrap
msgid "`-e`"
msgstr "`-e`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:616
#, no-wrap
msgid "`--edit`"
msgstr "`--edit`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:622
msgid ""
"Edit the commit message before committing to SVN.  This is off by default "
"for objects that are commits, and forced on when committing tree objects."
msgstr ""
"SVNにコミットする前に、コミットメッセージを編集します。 これは、コミットされ"
"ているオブジェクトではデフォルトでオフになっており、ツリーオブジェクトをコ"
"ミットするときには強制的にオンになります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:625
#, no-wrap
msgid "config key: svn.edit\n"
msgstr "config key: svn.edit\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:626
#, no-wrap
msgid "`-l<num>`"
msgstr "`-l<num>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:627
#, no-wrap
msgid "`--find-copies-harder`"
msgstr "`--find-copies-harder`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:632
msgid ""
"They are both passed directly to 'git diff-tree'; see linkgit:git-diff-"
"tree[1] for more information."
msgstr ""
"これらは両方とも「git diff-tree」に直接渡されます。 詳細については、 linkgit:"
"git-diff-tree[1] を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:636
#, no-wrap
msgid ""
"config key: svn.l\n"
"config key: svn.findcopiesharder\n"
msgstr ""
"config key: svn.l\n"
"config key: svn.findcopiesharder\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:637
#, no-wrap
msgid "`-A<filename>`"
msgstr "`-A<filename>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:638
#, no-wrap
msgid "`--authors-file=<filename>`"
msgstr "`--authors-file=<filename>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:641
msgid ""
"Syntax is compatible with the file used by 'git cvsimport' but an empty "
"email address can be supplied with '<>':"
msgstr ""
"構文は「git cvs import」で使用されるファイルと互換性がありますが、空の電子"
"メールアドレスを `<>` で指定できます:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:644
#, no-wrap
msgid "\tloginname = Joe User <user@example.com>\n"
msgstr "\tloginname = Joe User <user@example.com>\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:651
msgid ""
"If this option is specified and 'git svn' encounters an SVN committer name "
"that does not exist in the authors-file, 'git svn' will abort operation. The "
"user will then have to add the appropriate entry.  Re-running the previous "
"'git svn' command after the authors-file is modified should continue "
"operation."
msgstr ""
"このオプションが指定されていて、「git svn」が authors-file に存在しないSVNコ"
"ミッター名を検出した場合、「git svn」は操作を中止(abort)します。 この後、ユー"
"ザーは適切なエントリを追加する必要があります。 authors-file を変更後、 先程の"
"「git svn」コマンドを再実行すると、操作が続行されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:654
#, no-wrap
msgid "config key: svn.authorsfile\n"
msgstr "config key: svn.authorsfile\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:655
#, no-wrap
msgid "`--authors-prog=<filename>`"
msgstr "`--authors-prog=<filename>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:662
msgid ""
"If this option is specified, for each SVN committer name that does not exist "
"in the authors file, the given file is executed with the committer name as "
"the first argument.  The program is expected to return a single line of the "
"form \"Name <email>\" or \"Name <>\", which will be treated as if included "
"in the authors file."
msgstr ""
"このオプションを指定すると、authorsファイルに存在しないSVNコミッター名ごと"
"に、指定のファイルを最初の引数としてコミッター名を使用してプログラムを実行し"
"ます。プログラムは、「Name<email>」または「Name<>」の形式の1行を返すことが期"
"待されており、これは、authorsファイルに含まれているかのように扱われます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:667
msgid ""
"Due to historical reasons a relative 'filename' is first searched relative "
"to the current directory for 'init' and 'clone' and relative to the root of "
"the working tree for 'fetch'. If 'filename' is not found, it is searched "
"like any other command in '$PATH'."
msgstr ""
"歴史的な理由により、相対的な `filename` は、最初に「init」および「clone」の現"
"在のディレクトリに対して、そして、「fetch」の作業ツリーのルートに対して、相対"
"的に検索されます。 `filename` が見つからない場合は、 `$PATH` の他のコマンドと"
"同様に検索されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:670
#, no-wrap
msgid "config key: svn.authorsProg\n"
msgstr "config key: svn.authorsProg\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:671
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:672
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:675
msgid ""
"Make 'git svn' less verbose. Specify a second time to make it even less "
"verbose."
msgstr ""
"`git svn` のおしゃべりを減らします。 もう一度指定すると、おしゃべりがさらに少"
"なくなります。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:676
#, no-wrap
msgid "`-m`"
msgstr "`-m`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:677
#, no-wrap
msgid "`--merge`"
msgstr "`--merge`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:678
#, no-wrap
msgid "`-s<strategy>`"
msgstr "`-s<strategy>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:679
#, no-wrap
msgid "`--strategy=<strategy>`"
msgstr "`--strategy=<strategy>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:680
#, no-wrap
msgid "`-p`"
msgstr "`-p`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:681
#, no-wrap
msgid "`--rebase-merges`"
msgstr "`--rebase-merges`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:683
msgid "These are only used with the 'dcommit' and 'rebase' commands."
msgstr "これらは、 `dcommit` と `rebase` コマンドでのみ使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:686
msgid ""
"Passed directly to 'git rebase' when using 'dcommit' if a 'git reset' cannot "
"be used (see 'dcommit')."
msgstr ""
"「git reset」を使用できない場合、「dcommit」を使用するときに「git rebase」に"
"直接渡されます(「dcommit」コマンド参照)。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:687
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:688
#, no-wrap
msgid "`--dry-run`"
msgstr "`--dry-run`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:691
msgid ""
"This can be used with the 'dcommit', 'rebase', 'branch' and 'tag' commands."
msgstr ""
"これは、 `dcommit` と `rebase` と `branch` と `tag` コマンドで使用できます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:694
msgid ""
"For 'dcommit', print out the series of Git arguments that would show which "
"diffs would be committed to SVN."
msgstr ""
"`dcommit` の場合、どのdiffがSVNにコミットされるかを示す一連のGit引数を出力し"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:698
msgid ""
"For 'rebase', display the local branch associated with the upstream svn "
"repository associated with the current branch and the URL of svn repository "
"that will be fetched from."
msgstr ""
"`rebase` の場合、現在のブランチに関連付けられているアップストリームsvnリポジ"
"トリに関連付けられているローカルブランチと、フェッチ元のsvnリポジトリのURLを"
"表示します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:701
msgid ""
"For 'branch' and 'tag', display the urls that will be used for copying when "
"creating the branch or tag."
msgstr ""
"`branch` や `tag` の場合、ブランチまたはタグを作成するときにコピーに使用され"
"るURLを表示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:702
#, no-wrap
msgid "`--use-log-author`"
msgstr "`--use-log-author`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:706
msgid ""
"When retrieving svn commits into Git (as part of 'fetch', 'rebase', or "
"'dcommit' operations), look for the first `From:` line or `Signed-off-by` "
"trailer in the log message and use that as the author string."
msgstr ""
"(「fetch」または「rebase」または「dcommit」操作の一部として、)svnのコミットを"
"Gitに取得する場合、ログメッセージで最初の `From:` 行または `Signed-off-by` ト"
"レーラーを探し、それを著者文字列として使用します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:709
#, no-wrap
msgid "config key: svn.useLogAuthor\n"
msgstr "config key: svn.useLogAuthor\n"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:710
#, no-wrap
msgid "`--add-author-from`"
msgstr "`--add-author-from`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:716
msgid ""
"When committing to svn from Git (as part of 'set-tree' or 'dcommit' "
"operations), if the existing log message doesn't already have a `From:` or "
"`Signed-off-by` trailer, append a `From:` line based on the Git commit's "
"author string.  If you use this, then `--use-log-author` will retrieve a "
"valid author string for all commits."
msgstr ""
"(「set-tree」または「dcommit」操作の一部として)Gitからsvnにコミットするとき、"
"既存のログメッセージに `From:` または `Signed-off-by` トレーラーがまだ存在し"
"ない場合は、Gitコミットの作者文字列に基づく `From:` 行を追加します。 これを使"
"用すると `--use-log-author` はすべてのコミットに対して有効な作者文字列を取得"
"します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:719
#, no-wrap
msgid "config key: svn.addAuthorFrom\n"
msgstr "config key: svn.addAuthorFrom\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:721
#, no-wrap
msgid "ADVANCED OPTIONS"
msgstr "ADVANCED OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:723
#, no-wrap
msgid "`-i<GIT_SVN_ID>`"
msgstr "`-i<GIT_SVN_ID>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:724
#, no-wrap
msgid "`--id <GIT_SVN_ID>`"
msgstr "`--id <GIT_SVN_ID>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:729
msgid ""
"This sets GIT_SVN_ID (instead of using the environment).  This allows the "
"user to override the default refname to fetch from when tracking a single "
"URL.  The 'log' and 'dcommit' commands no longer require this switch as an "
"argument."
msgstr ""
"これにより、(環境変数を使用する代わりに) GIT_SVN_ID が設定されます。 これによ"
"り、ユーザーは単一のURLを追跡するときにフェッチするデフォルトのrefnameをオー"
"バーライドできます。 `log` コマンドと `dcommit` コマンドは、もはや引数として"
"このスイッチを必要としなくなりました。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:730
#, no-wrap
msgid "`-R<remote name>`"
msgstr "`-R<remote name>`"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:731
#, no-wrap
msgid "`--svn-remote <remote name>`"
msgstr "`--svn-remote <remote name>`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:735
msgid ""
"Specify the [svn-remote \"<remote name>\"] section to use, this allows SVN "
"multiple repositories to be tracked.  Default: \"svn\""
msgstr ""
"使用する [svn-remote \"<remote name>\"] セクションを指定します。これにより、"
"SVNの複数のリポジトリを追跡できます。 デフォルトは `svn` です。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:736
#, no-wrap
msgid "`--follow-parent`"
msgstr "`--follow-parent`"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:751
msgid ""
"This option is only relevant if we are tracking branches (using one of the "
"repository layout options --trunk, --tags, --branches, --stdlayout). For "
"each tracked branch, try to find out where its revision was copied from, and "
"set a suitable parent in the first Git commit for the branch.  This is "
"especially helpful when we're tracking a directory that has been moved "
"around within the repository.  If this feature is disabled, the branches "
"created by 'git svn' will all be linear and not share any history, meaning "
"that there will be no information on where branches were branched off or "
"merged.  However, following long/convoluted histories can take a long time, "
"so disabling this feature may speed up the cloning process. This feature is "
"enabled by default, use --no-follow-parent to disable it."
msgstr ""
"このオプションは、ブランチを追跡している場合にのみ関連します(リポジトリレイア"
"ウトオプション `--trunk`, `--tags`, `--branches`, `--stdlayout` のどれかを使"
"用)。 追跡されたブランチごとに、そのリビジョンがどこからコピーされたかを調"
"べ、ブランチの最初のGitコミットで適切な親を設定しようと試みます。 これは、リ"
"ポジトリ内で移動されたディレクトリを追跡する場合に特に役立ちます。 この機能が"
"無効になっている場合、「git svn」によって作成されたブランチはすべて線形であ"
"り、履歴を共有しません。つまり、ブランチが分岐またはマージされた場所に関する"
"情報はありません。 ただし、長い/複雑 な履歴の追跡には長い時間がかかる可能性が"
"あるため、この機能を無効にすると、クローン作成プロセスが高速化される可能性が"
"あります。 この機能はデフォルトで有効になっています。無効にするには `--no-"
"follow-parent` を使用します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:754
#, no-wrap
msgid "config key: svn.followparent\n"
msgstr "config key: svn.followparent\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:756
#, no-wrap
msgid "CONFIG FILE-ONLY OPTIONS"
msgstr "CONFIG FILE-ONLY OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:758
#, no-wrap
msgid "svn.noMetadata"
msgstr "svn.noMetadata"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:759
#, no-wrap
msgid "svn-remote.<name>.noMetadata"
msgstr "svn-remote.<name>.noMetadata"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:761
msgid "This gets rid of the 'git-svn-id:' lines at the end of every commit."
msgstr ""
"これにより、すべてのコミットの最後にある `git-svn-id:` 行が削除されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:766
msgid ""
"This option can only be used for one-shot imports as 'git svn' will not be "
"able to fetch again without metadata. Additionally, if you lose your "
"'$GIT_DIR/svn/\\**/.rev_map.*' files, 'git svn' will not be able to rebuild "
"them."
msgstr ""
"`git svn` はメタデータなしでは再度フェッチできないため、このオプションはワン"
"ショットインポートにのみ使用できます。 さらに、もし、あなたが `$GIT_DIR/svn/"
"\\**/.rev_map.*` ファイル達を失ってしまっても、 `git svn` はそれらを再構築で"
"きません。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:770
msgid ""
"The 'git svn log' command will not work on repositories using this, either.  "
"Using this conflicts with the 'useSvmProps' option for (hopefully) obvious "
"reasons."
msgstr ""
"`git svn log` コマンドは、これを使用するリポジトリ上でも機能しません。 これを"
"使用すると、 (うまくいけば)明らかな理由で `useSvmProps` オプションと競合しま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:778
msgid ""
"This option is NOT recommended as it makes it difficult to track down old "
"references to SVN revision numbers in existing documentation, bug reports, "
"and archives.  If you plan to eventually migrate from SVN to Git and are "
"certain about dropping SVN history, consider https://github.com/newren/git-"
"filter-repo[git-filter-repo] instead.  filter-repo also allows reformatting "
"of metadata for ease-of-reading and rewriting authorship info for non-\"svn."
"authorsFile\" users."
msgstr ""
"このオプションは、既存のドキュメントやバグレポートやアーカイブでSVNリビジョン"
"番号への古い参照を追跡するのが困難になるため「お勧めしません」。 最終的にSVN"
"からGitに移行することを計画していて、SVN履歴を削除することに確信がある場合"
"は、代わりに https://github.com/newren/git-filter-repo[git-filter-repo] を検"
"討してください。 filter-repoを使用すると、メタデータを再フォーマットして、"
"「svn.authorsFile」以外のユーザーの作成者情報を読みやすく書き直しやすくするこ"
"ともできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:779
#, no-wrap
msgid "svn.useSvmProps"
msgstr "svn.useSvmProps"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:780
#, no-wrap
msgid "svn-remote.<name>.useSvmProps"
msgstr "svn-remote.<name>.useSvmProps"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:783
msgid ""
"This allows 'git svn' to re-map repository URLs and UUIDs from mirrors "
"created using SVN::Mirror (or svk) for metadata."
msgstr ""
"これにより、「git svn」は、メタデータ用に `SVN::Mirror` (またはsvk)を使用して"
"作成されたミラーからリポジトリのURLとUUIDを再マップできます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:791
msgid ""
"If an SVN revision has a property, \"svm:headrev\", it is likely that the "
"revision was created by SVN::Mirror (also used by SVK).  The property "
"contains a repository UUID and a revision.  We want to make it look like we "
"are mirroring the original URL, so introduce a helper function that returns "
"the original identity URL and UUID, and use it when generating metadata in "
"commit messages."
msgstr ""
"SVNリビジョンにプロパティ「svm:headrev」がある場合、リビジョンは (SVKでも使用"
"される、) SVN::Mirror によって作成された可能性があります。 プロパティには、リ"
"ポジトリUUIDとリビジョンが含まれています。 元のURLをミラーリングしているよう"
"に見せるために、元のID URLとUUIDを返すヘルパー関数を導入し、コミットメッセー"
"ジでメタデータを生成するときに使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:792
#, no-wrap
msgid "svn.useSvnsyncProps"
msgstr "svn.useSvnsyncProps"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:793
#, no-wrap
msgid "svn-remote.<name>.useSvnsyncprops"
msgstr "svn-remote.<name>.useSvnsyncprops"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:797
msgid ""
"Similar to the useSvmProps option; this is for users of the svnsync(1) "
"command distributed with SVN 1.4.x and later."
msgstr ""
"useSvmPropsオプションと同様です。 これは、SVN 1.4.x以降で配布されている "
"svnsync(1) コマンドのユーザー向けです。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:798
#, no-wrap
msgid "svn-remote.<name>.rewriteRoot"
msgstr "svn-remote.<name>.rewriteRoot"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:804
msgid ""
"This allows users to create repositories from alternate URLs.  For example, "
"an administrator could run 'git svn' on the server locally (accessing via "
"file://) but wish to distribute the repository with a public http:// or "
"svn:// URL in the metadata so users of it will see the public URL."
msgstr ""
"これにより、ユーザーは代替URL(alternate URLs)からリポジトリを作成できます。 "
"たとえば、管理者はサーバー上で `git svn` をローカルで実行できますが(file:// "
"経由でアクセス)、メタデータに パブリック http:// または svn:// URL を含むリポ"
"ジトリを配布して、ユーザーにパブリックURLが表示されるようにします。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:805
#, no-wrap
msgid "svn-remote.<name>.rewriteUUID"
msgstr "svn-remote.<name>.rewriteUUID"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:810
msgid ""
"Similar to the useSvmProps option; this is for users who need to remap the "
"UUID manually. This may be useful in situations where the original UUID is "
"not available via either useSvmProps or useSvnsyncProps."
msgstr ""
"useSvmPropsオプションと同様です。 これは、UUIDを手動で再マップする必要がある"
"ユーザー向けです。 これは、 useSvmProps または useSvnsyncProps のいずれかを介"
"して元のUUIDを使用できない状況で役立つ場合があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:811
#, no-wrap
msgid "svn-remote.<name>.pushurl"
msgstr "svn-remote.<name>.pushurl"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:820
msgid ""
"Similar to Git's `remote.<name>.pushurl`, this key is designed to be used in "
"cases where 'url' points to an SVN repository via a read-only transport, to "
"provide an alternate read/write transport. It is assumed that both keys "
"point to the same repository. Unlike 'commiturl', 'pushurl' is a base path. "
"If either 'commiturl' or 'pushurl' could be used, 'commiturl' takes "
"precedence."
msgstr ""
"Gitの `remote.<name>.pushurl` と同様に、このキーは、 `url` が読み取り専用転送"
"(transport)を介してSVNリポジトリを指している場合に使用され、代替の 読み取り/"
"書き込み 転送を提供するように設計されています。 両方のキーが同じリポジトリを"
"指していると想定されています。 `commiturl` とは異なり、 `pushurl` はベースパ"
"スです。 `commiturl` または `pushurl` のいずれかを使用できる場合は、 "
"`commiturl` が優先されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:821
#, no-wrap
msgid "svn.brokenSymlinkWorkaround"
msgstr "svn.brokenSymlinkWorkaround"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:829
msgid ""
"This disables potentially expensive checks to workaround broken symlinks "
"checked into SVN by broken clients.  Set this option to \"false\" if you "
"track a SVN repository with many empty blobs that are not symlinks.  This "
"option may be changed while 'git svn' is running and take effect on the next "
"revision fetched.  If unset, 'git svn' assumes this option to be \"true\"."
msgstr ""
"これにより、壊れたクライアントによってSVNにチェックインされた壊れたシンボリッ"
"クリンクを回避するための潜在的に高価なチェックが無効になります。 シンボリック"
"リンクではない空のブロブが多数あるSVNリポジトリを追跡する場合は、このオプショ"
"ンを「false」に設定します。 このオプションは、「git svn」の実行中に変更され、"
"フェッチされた次のリビジョンで有効になる場合があります。 設定されていない場"
"合、「git svn」はこのオプションが「true」であると見なします。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:830
#, no-wrap
msgid "svn.pathnameencoding"
msgstr "svn.pathnameencoding"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:835
msgid ""
"This instructs git svn to recode pathnames to a given encoding.  It can be "
"used by windows users and by those who work in non-utf8 locales to avoid "
"corrupted file names with non-ASCII characters.  Valid encodings are the "
"ones supported by Perl's Encode module."
msgstr ""
"これは、パス名を特定のエンコーディングに再コード化するようにgit svnに指示しま"
"す。 Windowsユーザーおよび 非utf-8 のロケールで作業するユーザーが使用して、"
"ASCII以外の文字でファイル名が破損しないようにすることができます。 有効なエン"
"コーディングは、PerlのEncodeモジュールでサポートされているものです。"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:836
#, no-wrap
msgid "svn-remote.<name>.automkdirs"
msgstr "svn-remote.<name>.automkdirs"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:843
msgid ""
"Normally, the \"git svn clone\" and \"git svn rebase\" commands attempt to "
"recreate empty directories that are in the Subversion repository.  If this "
"option is set to \"false\", then empty directories will only be created if "
"the \"git svn mkdirs\" command is run explicitly.  If unset, 'git svn' "
"assumes this option to be \"true\"."
msgstr ""
"通常、「git svn clone」および「git svn rebase」コマンドは、Subversionリポジト"
"リにある空のディレクトリを再作成しようとします。 このオプションが「false」に"
"設定されている場合、「git svn mkdirs」コマンドが明示的に実行された場合にの"
"み、空のディレクトリが作成されます。 設定されていない場合、「git svn」はこの"
"オプションが「true」であると見なします。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:848
msgid ""
"Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and "
"useSvmProps options all affect the metadata generated and used by 'git svn'; "
"they *must* be set in the configuration file before any history is imported "
"and these settings should never be changed once they are set."
msgstr ""
"noMetadata と rewriteRoot と rewriteUUID と useSvnsyncProps とuseSvmProps オ"
"プションはすべて、「git svn」によって生成および使用されるメタデータに影響を与"
"えるためです。 これらは、履歴をインポートする前に構成ファイルで設定する必要が"
"あります。これらの設定は、一旦設定したら決して変更してはいけません。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:852
msgid ""
"Additionally, only one of these options can be used per svn-remote section "
"because they affect the 'git-svn-id:' metadata line, except for rewriteRoot "
"and rewriteUUID which can be used together."
msgstr ""
"さらに、これらのオプションは、一緒に使用できる rewriteRoot と rewriteUUID を"
"除いて、 `git-svn-id:` メタデータ行に影響を与えるため、svn-remoteセクションご"
"とに使用できるのは1つだけです。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:855
#, no-wrap
msgid "BASIC EXAMPLES"
msgstr "BASIC EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:859
msgid ""
"Tracking and contributing to the trunk of a Subversion-managed project "
"(ignoring tags and branches):"
msgstr "Subversion管理プロジェクトのtrunkの追跡と貢献(タグとブランチを無視):"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:877
#, no-wrap
msgid ""
"# Clone a repo (like git clone):\n"
"\tgit svn clone http://svn.example.com/project/trunk\n"
"# Enter the newly cloned directory:\n"
"\tcd trunk\n"
"# You should be on master branch, double-check with 'git branch'\n"
"\tgit branch\n"
"# Do some work and commit locally to Git:\n"
"\tgit commit ...\n"
"# Something is committed to SVN, rebase your local changes against the\n"
"# latest changes in SVN:\n"
"\tgit svn rebase\n"
"# Now commit your changes (that were committed previously using Git) to SVN,\n"
"# as well as automatically updating your working HEAD:\n"
"\tgit svn dcommit\n"
"# Append svn:ignore settings to the default Git exclude file:\n"
"\tgit svn show-ignore >> .git/info/exclude\n"
msgstr ""
"# リポジトリのクローン(`git clone` と同様):\n"
"\tgit svn clone http://svn.example.com/project/trunk\n"
"# 新しく複製されたディレクトリに入る:\n"
"\tcd trunk\n"
"# あなたはmasterブランチにいる必要があります。 `git branch ` で再確認\n"
"\tgit branch\n"
"# いくつかの作業を行い、ローカルでGitにコミットします:\n"
"\tgit commit ...\n"
"# 何かをSVNにコミットし、\n"
"# SVNの最新の変更に対してあなたのローカルの変更をリベースします:\n"
"\tgit svn rebase\n"
"# 次に、変更(先程はGitを使用してコミットしたもの)を\n"
"# SVNにコミットし、作業中のHEADを自動的に更新します:\n"
"\tgit svn dcommit\n"
"# svn:ignore 設定をデフォルトのGit除外ファイルに追加します:\n"
"\tgit svn show-ignore >> .git/info/exclude\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:881
msgid ""
"Tracking and contributing to an entire Subversion-managed project (complete "
"with a trunk, tags and branches):"
msgstr ""
"Subversion管理プロジェクト全体の追跡と貢献(trunkとタグとブランチを完備):"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:896
#, no-wrap
msgid ""
"# Clone a repo with standard SVN directory layout (like git clone):\n"
"\tgit svn clone http://svn.example.com/project --stdlayout --prefix svn/\n"
"# Or, if the repo uses a non-standard directory layout:\n"
"\tgit svn clone http://svn.example.com/project -T tr -b branch -t tag --prefix svn/\n"
"# View all branches and tags you have cloned:\n"
"\tgit branch -r\n"
"# Create a new branch in SVN\n"
"\tgit svn branch waldo\n"
"# Reset your master to trunk (or any other branch, replacing 'trunk'\n"
"# with the appropriate name):\n"
"\tgit reset --hard svn/trunk\n"
"# You may only dcommit to one branch/tag/trunk at a time.  The usage\n"
"# of dcommit/rebase/show-ignore should be the same as above.\n"
msgstr ""
"# 標準のSVNディレクトリレイアウトを使用してリポジトリのクローンを作成します(`git clone`と同様):\n"
"\tgit svn clone http://svn.example.com/project --stdlayout --prefix svn/\n"
"# または、標準でないディレクトリレイアウトを使うリポジトリの場合は:\n"
"\tgit svn clone http://svn.example.com/project -T tr -b branch -t tag --prefix svn/\n"
"# クローンしたすべてのブランチとタグを表示:\n"
"\tgit branch -r\n"
"# SVNに新しいブランチを作成\n"
"\tgit svn branch waldo\n"
"# masterをtrunk(または他のブランチ。`trunk` は\n"
"# 適切な名前に置き換えて下さい)にリセットします:\n"
"\tgit reset --hard svn/trunk\n"
"# 一度に1つの ブランチ/タグ/trunk にのみコミットできます。\n"
"# dcommit/rebase/show-ignore の使用法は、上記と同じである必要があります。\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:904
msgid ""
"The initial 'git svn clone' can be quite time-consuming (especially for "
"large Subversion repositories). If multiple people (or one person with "
"multiple machines) want to use 'git svn' to interact with the same "
"Subversion repository, you can do the initial 'git svn clone' to a "
"repository on a server and have each person clone that repository with 'git "
"clone':"
msgstr ""
"最初の「git svn clone」は非常に時間がかかる可能性があります(特に大規模な"
"Subversionリポジトリの場合)。 複数の人(または複数のマシンを持つ1人)が同じ"
"Subversionリポジトリと対話するために「git svn」を使用したい場合は、あなたが"
"サーバー上のリポジトリに対して最初の「git svn clone」を実行し、 `git clone` "
"で各人にそのリポジトリのクローンを作成させることができます:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:925
#, no-wrap
msgid ""
"# Do the initial import on a server\n"
"\tssh server \"cd /pub && git svn clone http://svn.example.com/project [options...]\"\n"
"# Clone locally - make sure the refs/remotes/ space matches the server\n"
"\tmkdir project\n"
"\tcd project\n"
"\tgit init\n"
"\tgit remote add origin server:/pub/project\n"
"\tgit config --replace-all remote.origin.fetch '+refs/remotes/*:refs/remotes/*'\n"
"\tgit fetch\n"
"# Prevent fetch/pull from remote Git server in the future,\n"
"# we only want to use git svn for future updates\n"
"\tgit config --remove-section remote.origin\n"
"# Create a local branch from one of the branches just fetched\n"
"\tgit checkout -b master FETCH_HEAD\n"
"# Initialize 'git svn' locally (be sure to use the same URL and\n"
"# --stdlayout/-T/-b/-t/--prefix options as were used on server)\n"
"\tgit svn init http://svn.example.com/project [options...]\n"
"# Pull the latest changes from Subversion\n"
"\tgit svn rebase\n"
msgstr ""
"# サーバーで初期インポートを実行します\n"
"\tssh server \"cd /pub && git svn clone http://svn.example.com/project [options...]\"\n"
"# ローカルでクローンします - refs/remotes/ 空間 がサーバーと一致することを確認してください\n"
"\tmkdir project\n"
"\tcd project\n"
"\tgit init\n"
"\tgit remote add origin server:/pub/project\n"
"\tgit config --replace-all remote.origin.fetch '+refs/remotes/*:refs/remotes/*'\n"
"\tgit fetch\n"
"# 今後、リモートGitサーバーからの フェッチ/プル を防止します\n"
"# 今後の更新には git svn のみを使用します\n"
"\tgit config --remove-section remote.origin\n"
"# フェッチしたブランチの1つからローカルブランチを作成します\n"
"\tgit checkout -b master FETCH_HEAD\n"
"# `git svn` をローカルで初期化します(サーバーで使用されたものと同じURLと\n"
"# `--stdlayout`/`-T`/`-b`/`-t`/`-prefix` オプションを使用してください)\n"
"\tgit svn init http://svn.example.com/project [options...]\n"
"# Subversionから最新の変更をプルする\n"
"\tgit svn rebase\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:928
#, no-wrap
msgid "REBASE VS. PULL/MERGE"
msgstr "REBASE VS. PULL/MERGE"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:934
msgid ""
"Prefer to use 'git svn rebase' or 'git rebase', rather than 'git pull' or "
"'git merge' to synchronize unintegrated commits with a 'git svn' branch. "
"Doing so will keep the history of unintegrated commits linear with respect "
"to the upstream SVN repository and allow the use of the preferred 'git svn "
"dcommit' subcommand to push unintegrated commits back into SVN."
msgstr ""
"統合されていないコミットを「git svn」ブランチと同期するには、「git pull」また"
"は「git merge」ではなく、「git svn rebase」または「git rebase」を使用すること"
"をお勧めします。 そうすることで、統合されていないコミットの履歴がアップスト"
"リームSVNリポジトリに対して線形に保たれ、優先される「git svn dcommit」サブコ"
"マンドを使用して統合されていないコミットをSVNにプッシュバックできるようになり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:942
msgid ""
"Originally, 'git svn' recommended that developers pulled or merged from the "
"'git svn' branch.  This was because the author favored `git svn set-tree B` "
"to commit a single head rather than the `git svn set-tree A..B` notation to "
"commit multiple commits. Use of 'git pull' or 'git merge' with `git svn set-"
"tree A..B` will cause non-linear history to be flattened when committing "
"into SVN and this can lead to merge commits unexpectedly reversing previous "
"commits in SVN."
msgstr ""
"当初、「git svn」は、開発者が「git svn」ブランチからプルまたはマージすること"
"を推奨していました。 これは、作成者が複数のコミットをコミットするための `git "
"svn set-tree A..B` 表記ではなく、単一のヘッドをコミットするために `git svn "
"set-tree B` を好んだためです。 「git pull」または「git merge」を、 `git svn "
"set-tree A..B` と一緒に使用すると、SVNにコミットするときに非線形履歴がフラッ"
"ト化され、これにより、マージコミットがSVNの以前のコミットを予期せず逆転させる"
"可能性があります。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:944
#, no-wrap
msgid "MERGE TRACKING"
msgstr "MERGE TRACKING"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:951
msgid ""
"While 'git svn' can track copy history (including branches and tags) for "
"repositories adopting a standard layout, it cannot yet represent merge "
"history that happened inside git back upstream to SVN users.  Therefore it "
"is advised that users keep history as linear as possible inside Git to ease "
"compatibility with SVN (see the CAVEATS section below)."
msgstr ""
"`git svn` は、標準レイアウト(standard layout)を採用しているリポジトリのコピー"
"履歴(ブランチとタグを含む)を追跡できますが、git内でSVNユーザーに戻って発生し"
"たマージ履歴を表すことはできません。 したがって、SVNとの互換性を容易にするた"
"めに、ユーザーはGit内で履歴を可能な限り線形に保つことをお勧めします(下記"
"「CAVEATS」セクション参照)。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:953
#, no-wrap
msgid "HANDLING OF SVN BRANCHES"
msgstr "HANDLING OF SVN BRANCHES"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:961
msgid ""
"If 'git svn' is configured to fetch branches (and --follow-branches is in "
"effect), it sometimes creates multiple Git branches for one SVN branch, "
"where the additional branches have names of the form 'branchname@nnn' (with "
"nnn an SVN revision number).  These additional branches are created if 'git "
"svn' cannot find a parent commit for the first commit in an SVN branch, to "
"connect the branch to the history of the other branches."
msgstr ""
"`git svn` がブランチをフェッチするように構成されている場合(そして `--follow-"
"branches` が有効な場合）、1つのSVNブランチに対して複数のGitブランチが作成され"
"ることがあり、追加のブランチの名前は `branchname@nnn`(nnn はSVNリビジョン番"
"号)形式になります。 これらの追加のブランチは、 `git svn` がSVNブランチの最初"
"のコミットの親コミットを見つけられない場合に作成され、ブランチを他のブランチ"
"の履歴に接続します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:977
msgid ""
"Normally, the first commit in an SVN branch consists of a copy operation. "
"'git svn' will read this commit to get the SVN revision the branch was "
"created from. It will then try to find the Git commit that corresponds to "
"this SVN revision, and use that as the parent of the branch. However, it is "
"possible that there is no suitable Git commit to serve as parent.  This will "
"happen, among other reasons, if the SVN branch is a copy of a revision that "
"was not fetched by 'git svn' (e.g. because it is an old revision that was "
"skipped with `--revision`), or if in SVN a directory was copied that is not "
"tracked by 'git svn' (such as a branch that is not tracked at all, or a "
"subdirectory of a tracked branch). In these cases, 'git svn' will still "
"create a Git branch, but instead of using an existing Git commit as the "
"parent of the branch, it will read the SVN history of the directory the "
"branch was copied from and create appropriate Git commits.  This is "
"indicated by the message \"Initializing parent: <branchname>\"."
msgstr ""
"通常、SVNブランチの最初のコミットはコピー操作で構成されます。 「git svn」はこ"
"のコミットを読み取り、ブランチが作成されたSVNリビジョンを取得します。次に、こ"
"のSVNリビジョンに対応するGitコミットを見つけようとし、それをブランチの親とし"
"て使用します。ただし、親として機能する適切なGitコミットがない可能性がありま"
"す。 これは、他の理由の中でも特に、SVNブランチが「git svn」によってフェッチさ"
"れなかったリビジョンのコピーである場合(たとえば、 `--revision`でスキップされ"
"た古いリビジョンであるため)、またはSVNで「git svn」によって追跡されないディレ"
"クトリがコピーされた場合(まったく追跡されていないブランチ、または追跡されたブ"
"ランチのサブディレクトリなど)に発生します。 このような場合、「git svn」は引き"
"続きGitブランチを作成しますが、ブランチの親として既存のGitコミットを使用する"
"代わりに、ブランチのコピー元のディレクトリのSVN履歴を読み取り、適切なGitコ"
"ミットを作成します。これは、 \"Initializing parent: <branchname>\" というメッ"
"セージで示されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:984
msgid ""
"Additionally, it will create a special branch named '<branchname>@<SVN-"
"Revision>', where <SVN-Revision> is the SVN revision number the branch was "
"copied from.  This branch will point to the newly created parent commit of "
"the branch.  If in SVN the branch was deleted and later recreated from a "
"different version, there will be multiple such branches with an '@'."
msgstr ""
"さらに、 `<branchname>@<SVN-Revision>` という名前の特別なブランチを作成しま"
"す。ここで、<SVN-Revision> は、ブランチのコピー元のSVNリビジョン番号です。 こ"
"のブランチは、ブランチの新しく作成された親コミットを指します。 SVNでブランチ"
"が削除され、後で別のバージョンから再作成された場合、 `@` が付いたこのようなブ"
"ランチが複数存在します。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:987
msgid ""
"Note that this may mean that multiple Git commits are created for a single "
"SVN revision."
msgstr ""
"これは、単一のSVNリビジョンに対して複数のGitコミットが作成されることを意味す"
"る場合があることに注意してください。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:997
msgid ""
"An example: in an SVN repository with a standard trunk/tags/branches layout, "
"a directory trunk/sub is created in r.100.  In r.200, trunk/sub is branched "
"by copying it to branches/. 'git svn clone -s' will then create a branch "
"'sub'. It will also create new Git commits for r.100 through r.199 and use "
"these as the history of branch 'sub'. Thus there will be two Git commits for "
"each revision from r.100 to r.199 (one containing trunk/, one containing "
"trunk/sub/). Finally, it will create a branch 'sub@200' pointing to the new "
"parent commit of branch 'sub' (i.e. the commit for r.200 and trunk/sub/)."
msgstr ""
"例: 標準の トランク/タグ/ブランチ レイアウトのSVNリポジトリでは、ディレクト"
"リ `trunk/sub` が `r.100` に作成されます。 `r.200` では、 `trunk/sub` は "
"`branchs/` にコピーすることで分岐します。 `git svn clone -s`は、ブランチ "
"`sub` を作成します。 また、 `r.100` から `r.199` までの新しいGitコミットを作"
"成し、これらをブランチ `sub` の履歴として使用します。 したがって、 `r.100` か"
"ら `r.199` までのリビジョンごとに2つのGitコミットがあります(1つは `trunk/` を"
"含み、もう1つは `trunk/sub/` を含みます)。 最後に、ブランチ `sub` の新しい親"
"コミットを指すブランチ `sub@200` を作成します(つまり、 `r.200` および `trunk/"
"sub/` のコミット)。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:999
#, no-wrap
msgid "CAVEATS"
msgstr "CAVEATS"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1007
msgid ""
"For the sake of simplicity and interoperating with Subversion, it is "
"recommended that all 'git svn' users clone, fetch and dcommit directly from "
"the SVN server, and avoid all 'git clone'/'pull'/'merge'/'push' operations "
"between Git repositories and branches.  The recommended method of exchanging "
"code between Git branches and users is 'git format-patch' and 'git am', or "
"just 'dcommit'ing to the SVN repository."
msgstr ""
"単純化とSubversionとの相互運用のために、すべての「git svn」ユーザーがSVNサー"
"バーから直接クローンを作成し、フェッチしてdcommitし、Gitリポジトリとブランチ"
"間で、すべての 「git clone」/「pull」/「merge」/「push」 操作を回避することを"
"お勧めします。Gitブランチとユーザーの間でコードを交換するための推奨される方法"
"は、「git format-patch」と「git am」、または単に「SVNリポジトリへのdcommit」"
"です。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1013
msgid ""
"Running 'git merge' or 'git pull' is NOT recommended on a branch you plan to "
"'dcommit' from because Subversion users cannot see any merges you've made.  "
"Furthermore, if you merge or pull from a Git branch that is a mirror of an "
"SVN branch, 'dcommit' may commit to the wrong branch."
msgstr ""
"「dcommit」を計画しているブランチで「git merge」または「git pull」を実行する"
"ことはお勧めしません。Subversionユーザーはあなたが行ったマージを見ることがで"
"きないからです。 さらに、SVNブランチのミラーであるGitブランチからマージまたは"
"プルすると、「dcommit」が間違ったブランチにコミットする可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1016
msgid ""
"If you do merge, note the following rule: 'git svn dcommit' will attempt to "
"commit on top of the SVN commit named in"
msgstr ""
"マージする場合は、以下のルールに注意してください: `git svn dcommit` は、以下"
"で指定されたSVNコミット上でコミットを試みます"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:1019
#, no-wrap
msgid "git log --grep=^git-svn-id: --first-parent -1\n"
msgstr "git log --grep=^git-svn-id: --first-parent -1\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1025
msgid ""
"You 'must' therefore ensure that the most recent commit of the branch you "
"want to dcommit to is the 'first' parent of the merge.  Chaos will ensue "
"otherwise, especially if the first parent is an older commit on the same SVN "
"branch."
msgstr ""
"したがって、dcommitするブランチの最新のコミットがマージの「最初の」親であるこ"
"とを確認する「必要」があります。 特に最初の親が同じSVNブランチの古いコミット"
"である場合は、混沌(chaos)になります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1030
msgid ""
"'git clone' does not clone branches under the refs/remotes/ hierarchy or any "
"'git svn' metadata, or config.  So repositories created and managed with "
"using 'git svn' should use 'rsync' for cloning, if cloning is to be done at "
"all."
msgstr ""
"`git clone` は `refs/remotes/` 階層下のブランチや `git svn` のメタデータや設"
"定をクローンしません。 そのため、`git svn` を使って作成・管理されたリポジトリ"
"のクローンを作成する場合は `rsync` を使用する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1035
msgid ""
"Since 'dcommit' uses rebase internally, any Git branches you 'git push' to "
"before 'dcommit' on will require forcing an overwrite of the existing ref on "
"the remote repository.  This is generally considered bad practice, see the "
"linkgit:git-push[1] documentation for details."
msgstr ""
"`commit` は内部でリベースを使用しているので、 `dcommit` の前に `git push` し"
"た Git ブランチは、リモートリポジトリの既存の ref を強制的に上書きする必要が"
"あります。 詳細は linkgit:git-push[1] ドキュメントを参照ください。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1040
msgid ""
"Do not use the --amend option of linkgit:git-commit[1] on a change you've "
"already dcommitted.  It is considered bad practice to --amend commits you've "
"already pushed to a remote repository for other users, and dcommit with SVN "
"is analogous to that."
msgstr ""
"すでにコミットした変更に、 linkgit:git-commit[1] の `--amend` オプションを使"
"用しないでください。 他のユーザーのためのリモートリポジトリにすでにプッシュし"
"たコミットを修正することは悪い習慣と考えられており、SVNを使用したdcommitはそ"
"れに類似しています。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1055
msgid ""
"When cloning an SVN repository, if none of the options for describing the "
"repository layout is used (--trunk, --tags, --branches, --stdlayout), 'git "
"svn clone' will create a Git repository with completely linear history, "
"where branches and tags appear as separate directories in the working copy.  "
"While this is the easiest way to get a copy of a complete repository, for "
"projects with many branches it will lead to a working copy many times larger "
"than just the trunk. Thus for projects using the standard directory "
"structure (trunk/branches/tags), it is recommended to clone with option `--"
"stdlayout`. If the project uses a non-standard structure, and/or if branches "
"and tags are not required, it is easiest to only clone one directory "
"(typically trunk), without giving any repository layout options.  If the "
"full history with branches and tags is required, the options `--trunk` / `--"
"branches` / `--tags` must be used."
msgstr ""
"SVNリポジトリのクローンを作成するときに、リポジトリレイアウトを記述するための"
"オプション(`--trunk`, `--tags`, `--branches`, `--stdlayout`)が使用されてい無"
"い場合、 `git svn clone` は完全に線形の履歴を持つGitリポジトリを作成します 、"
"ブランチとタグは作業コピーで別々のディレクトリとして表示されます。 これは完全"
"なリポジトリのコピーを取得する最も簡単な方法ですが、多くのブランチを持つプロ"
"ジェクトの場合、トランクだけの何倍ものサイズの作業コピーになります。 したがっ"
"て、標準のディレクトリ構造(trunk/branchs/tags)を使用するプロジェクトの場合、"
"オプション `--stdlayout` を使用してクローンを作成することをお勧めします。 プ"
"ロジェクトが非標準の構造を使用している場合、および/または ブランチとタグが不"
"要な場合は、リポジトリのレイアウトオプションを指定せずに、1つのディレクトリ"
"(通常はトランク)のみを複製するのが最も簡単です。 ブランチとタグを含む完全な履"
"歴が必要な場合は、オプション `--trunk`/`--branches`/`--tags` を使用する必要が"
"あります。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1062
msgid ""
"When using multiple --branches or --tags, 'git svn' does not automatically "
"handle name collisions (for example, if two branches from different paths "
"have the same name, or if a branch and a tag have the same name).  In these "
"cases, use 'init' to set up your Git repository then, before your first "
"'fetch', edit the $GIT_DIR/config file so that the branches and tags are "
"associated with different name spaces.  For example:"
msgstr ""
"複数の `--branches` または `--tags` を使用する場合、「git svn」は名前の衝突を"
"自動的に処理しません(たとえば、異なるパスからの2つのブランチが同じ名前である"
"場合、またはブランチとタグが同じ名前である場合)。 このような場合は、「init」"
"を使用してGitリポジトリを設定し、最初の「フェッチ」の前に、ブランチとタグが異"
"なる名前空間に関連付けられるように $GIT_DIR/config ファイルを編集します。 例"
"えば:"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1065
#, no-wrap
msgid ""
"\tbranches = stable/*:refs/remotes/svn/stable/*\n"
"\tbranches = debug/*:refs/remotes/svn/debug/*\n"
msgstr ""
"\tbranches = stable/*:refs/remotes/svn/stable/*\n"
"\tbranches = debug/*:refs/remotes/svn/debug/*\n"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:1067
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1076
msgid ""
"'git svn' stores [svn-remote] configuration information in the repository "
"$GIT_DIR/config file.  It is similar the core Git [remote] sections except "
"'fetch' keys do not accept glob arguments; but they are instead handled by "
"the 'branches' and 'tags' keys.  Since some SVN repositories are oddly "
"configured with multiple projects glob expansions such those listed below "
"are allowed:"
msgstr "「git svn」は、 [svn-remote] 構成情報をリポジトリ $GIT_DIR/config ファイルに保存します。 `fetch` キーがglob引数を受け入れないことを除いて、コアGitの [remote] セクションに似ています。 ただし、代わりに `branches` キーと `tags` キーによって処理されます。 一部のSVNリポジトリは、複数のプロジェクトで奇妙に構成されているため、以下にリストされているようなグロブ拡張が許可されます:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:1085
#, no-wrap
msgid ""
"[svn-remote \"project-a\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tbranches = branches/*/project-a:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/release_*:refs/remotes/project-a/branches/release_*\n"
"\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
"\ttags = tags/*/project-a:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"project-a\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tbranches = branches/*/project-a:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/release_*:refs/remotes/project-a/branches/release_*\n"
"\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
"\ttags = tags/*/project-a:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1093
#, no-wrap
msgid ""
"Keep in mind that the `*` (asterisk) wildcard of the local ref\n"
"(right of the `:`) *must* be the farthest right path component;\n"
"however the remote wildcard may be anywhere as long as it's an\n"
"independent path component (surrounded by `/` or EOL).   This\n"
"type of configuration is not automatically created by 'init' and\n"
"should be manually entered with a text-editor or using 'git config'.\n"
msgstr ""
"(`:` の右側の)ローカル参照の `*`(アスタリスク)ワイルドカードは、\n"
"最も右のパスコンポーネントである必要があることに注意してください。\n"
"ただし、リモートのワイルドカードは、独立したパスコンポーネント\n"
"(`/` または EOLで囲まれている)である限り、どこにあってもかまいません。\n"
"このタイプの構成は、 `init` によって自動的に作成されるわけではないため、\n"
"テキストエディターまたは `git config` を使用して手動で入力する必要があります。\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1095
msgid "Also note that only one asterisk is allowed per word. For example:"
msgstr ""
"また、単語ごとに1つのアスタリスク(`*`)のみが許可されていることに注意してくだ"
"さい。 例えば:"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1097
#, no-wrap
msgid "\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
msgstr "\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1099
msgid "will match branches 'release', 'rese', 're123se', however"
msgstr "ただし、これは、ブランチ `release` 、`rese` 、`re123se` とマッチします"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1101
#, no-wrap
msgid "\tbranches = branches/re*s*e:refs/remotes/project-a/branches/*\n"
msgstr "\tbranches = branches/re*s*e:refs/remotes/project-a/branches/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1103
msgid "will produce an error."
msgstr "これはエラーを発生させます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1106
msgid ""
"It is also possible to fetch a subset of branches or tags by using a comma-"
"separated list of names within braces. For example:"
msgstr ""
"中括弧(`{` , `}`)内の名前のコンマ(`,`)区切りリストを使用して、ブランチまたは"
"タグのサブセットをフェッチすることもできます。 例えば:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:1113
#, no-wrap
msgid ""
"[svn-remote \"huge-project\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/src:refs/remotes/trunk\n"
"\tbranches = branches/{red,green}/src:refs/remotes/project-a/branches/*\n"
"\ttags = tags/{1.0,2.0}/src:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"huge-project\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/src:refs/remotes/trunk\n"
"\tbranches = branches/{red,green}/src:refs/remotes/project-a/branches/*\n"
"\ttags = tags/{1.0,2.0}/src:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1116
msgid "Multiple fetch, branches, and tags keys are supported:"
msgstr "複数フェッチとブランチとタグキーがサポートされています:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:1125
#, no-wrap
msgid ""
"[svn-remote \"messy-repo\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tfetch = branches/demos/june-project-a-demo:refs/remotes/project-a/demos/june-demo\n"
"\tbranches = branches/server/*:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/demos/2011/*:refs/remotes/project-a/2011-demos/*\n"
"\ttags = tags/server/*:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"messy-repo\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tfetch = branches/demos/june-project-a-demo:refs/remotes/project-a/demos/june-demo\n"
"\tbranches = branches/server/*:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/demos/2011/*:refs/remotes/project-a/2011-demos/*\n"
"\ttags = tags/server/*:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1129
msgid ""
"Creating a branch in such a configuration requires disambiguating which "
"location to use using the -d or --destination flag:"
msgstr ""
"このような構成でブランチを作成するには、 `-d` または `--destination` フラグを"
"使用して使用する場所を明確にする必要があります:"

#. type: delimited block -
#: ../Documentation-sedout/git-svn.txt:1132
#, no-wrap
msgid "$ git svn branch -d branches/server release-2-3-0\n"
msgstr "$ git svn branch -d branches/server release-2-3-0\n"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1138
msgid ""
"Note that git-svn keeps track of the highest revision in which a branch or "
"tag has appeared. If the subset of branches or tags is changed after "
"fetching, then $GIT_DIR/svn/.metadata must be manually edited to remove (or "
"reset) branches-maxRev and/or tags-maxRev as appropriate."
msgstr ""
"git-svnは、ブランチまたはタグが出現した最高のリビジョン(highest revision)を追"
"跡することに注意してください。 フェッチ後にブランチまたはタグのサブセットが変"
"更された場合は、 `$GIT_DIR/svn/.metadata` を手動で編集して、必要に応じて "
"branches-maxRev および/または tags-maxRev を削除(またはリセット)する必要があ"
"ります。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:1140
#, no-wrap
msgid "FILES"
msgstr "FILES"

#. type: Labeled list
#: ../Documentation-sedout/git-svn.txt:1141
#, no-wrap
msgid "$GIT_DIR/svn/\\**/.rev_map.*"
msgstr "$GIT_DIR/svn/\\**/.rev_map.*"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1147
msgid ""
"Mapping between Subversion revision numbers and Git commit names.  In a "
"repository where the noMetadata option is not set, this can be rebuilt from "
"the git-svn-id: lines that are at the end of every commit (see the 'svn."
"noMetadata' section above for details)."
msgstr ""
"Subversionリビジョン番号とGitコミット名の間のマッピング。 noMetadataオプショ"
"ンが設定されていないリポジトリでは、これはすべてのコミットの最後にある `git-"
"svn-id:` 行から再構築できます(詳細については、上記「svn.noMetadata」セクショ"
"ンを参照してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1151
msgid ""
"'git svn fetch' and 'git svn rebase' automatically update the rev_map if it "
"is missing or not up to date.  'git svn reset' automatically rewinds it."
msgstr ""
"`git svn fetch` および `git svn rebase` は、rev_mapが欠落しているか最新でない"
"場合、自動的に更新します。 `git svn reset` は自動的にそれを巻き戻します。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:1153
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1157
msgid ""
"We ignore all SVN properties except svn:executable.  Any unhandled "
"properties are logged to $GIT_DIR/svn/<refname>/unhandled.log"
msgstr ""
"svn:executable を除くすべてのSVNプロパティを無視します。 未処理のプロパティは"
"すべて `$GIT_DIR/svn/<refname>/unhandled.log` に記録されます"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1164
msgid ""
"Renamed and copied directories are not detected by Git and hence not tracked "
"when committing to SVN.  I do not plan on adding support for this as it's "
"quite difficult and time-consuming to get working for all the possible "
"corner cases (Git doesn't do it, either).  Committing renamed and copied "
"files is fully supported if they're similar enough for Git to detect them."
msgstr ""
"名前変更とコピーされたディレクトリはGitによって検出されないため、SVNにコミッ"
"トするときに追跡されません。 考えられるすべてのレアケース(corner cases)に対応"
"する作業を行うのは非常に困難で時間がかかるため、これに対するサポートを追加す"
"る予定はありません(Gitもサポートしていません)。 名前変更とコピーされたファイ"
"ルのコミットは、Gitがそれらを検出するのに十分類似している場合、完全にサポート"
"されます。"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1170
msgid ""
"In SVN, it is possible (though discouraged) to commit changes to a tag "
"(because a tag is just a directory copy, thus technically the same as a "
"branch). When cloning an SVN repository, 'git svn' cannot know if such a "
"commit to a tag will happen in the future. Thus it acts conservatively and "
"imports all SVN tags as branches, prefixing the tag name with 'tags/'."
msgstr ""
"SVNでは、(推奨されていませんが)タグへの変更をコミットすることが可能です(タグ"
"は単なるディレクトリコピーであり、技術的にはブランチと同じであるため)。 SVNリ"
"ポジトリのクローンを作成する場合、「git svn」は、タグへのそのようなコミットが"
"将来発生するかどうかを知ることができません。 したがって、保守的な動作を行い、"
"すべてのSVNタグをブランチとしてインポートし、タグ名の前に `tags/` 接頭辞を付"
"けます。"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:1172
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1174
msgid "linkgit:git-rebase[1]"
msgstr "linkgit:git-rebase[1]"

#. type: Title -
#: ../Documentation-sedout/git-svn.txt:1176
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-svn.txt:1177
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
