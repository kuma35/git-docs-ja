# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-10-05 07:49+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-range-diff.txt:2
#, no-wrap
msgid "git-range-diff(1)"
msgstr "git-range-diff(1)"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:7
msgid ""
"git-range-diff - Compare two commit ranges (e.g. two versions of a branch)"
msgstr ""
"git-range-diff - 2つのコミット範囲(例: ブランチの2つのバージョン)を比較します"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:16
#, no-wrap
msgid ""
"'git range-diff' [--color=[<when>]] [--no-color] [<diff-options>]\n"
"\t[--no-dual-color] [--creation-factor=<factor>]\n"
"\t[--left-only | --right-only]\n"
"\t( <range1> <range2> | <rev1>...<rev2> | <base> <rev1> <rev2> )\n"
"\t[[--] <path>...]\n"
msgstr ""
"'git range-diff' [--color=[<when>]] [--no-color] [<diff-options>]\n"
"\t[--no-dual-color] [--creation-factor=<factor>]\n"
"\t[--left-only | --right-only]\n"
"\t( <range1> <range2> | <rev1>...<rev2> | <base> <rev1> <rev2> )\n"
"\t[[--] <path>...]\n"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:18
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:22
msgid ""
"This command shows the differences between two versions of a patch series, "
"or more generally, two commit ranges (ignoring merge commits)."
msgstr ""
"このコマンドは、パッチシリーズの2つのバージョン、またはより一般的には2つのコ"
"ミット範囲(マージコミットは無視)の違いを表示します。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:25
msgid ""
"In the presence of `<path>` arguments, these commit ranges are limited "
"accordingly."
msgstr "`<path>` 引数が存在する場合、これらのコミット範囲はそれに応じて制限されます。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:31
msgid ""
"To that end, it first finds pairs of commits from both commit ranges that "
"correspond with each other. Two commits are said to correspond when the diff "
"between their patches (i.e. the author information, the commit message and "
"the commit diff) is reasonably small compared to the patches' size. See "
"``Algorithm`` below for details."
msgstr ""
"そのために、最初に、互いに対応する両方のコミット範囲からコミットのペアを見つ"
"けます。 2つのコミットは、パッチ間の差分(つまり、作者情報、コミットメッセー"
"ジ、およびコミット差分)がパッチのサイズと比較して適度に小さい場合に一致してい"
"ると言われます。 詳細については、下記「Algorithm」を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:35
msgid ""
"Finally, the list of matching commits is shown in the order of the second "
"commit range, with unmatched commits being inserted just after all of their "
"ancestors have been shown."
msgstr ""
"最後に、一致するコミットのリストが2番目のコミット範囲の順序で表示され、すべて"
"の祖先が表示された直後に一致しないコミットが挿入されます。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:37
msgid "There are three ways to specify the commit ranges:"
msgstr "コミット範囲を指定するには、以下の3つの方法があります:"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:41
msgid ""
"`<range1> <range2>`: Either commit range can be of the form `<base>..<rev>`, "
"`<rev>^!` or `<rev>^-<n>`. See `SPECIFYING RANGES` in linkgit:"
"gitrevisions[7] for more details."
msgstr ""
"`<range1> <range2>` : どちらのコミット範囲も `<base>..<rev>` または `<rev>^!"
"` または `<rev>^-<n>` 形式にすることができます。 詳細については、 linkgit:"
"gitrevisions[7]の「SPECIFYING RANGES」を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:44
msgid ""
"`<rev1>...<rev2>`. This is equivalent to `<rev2>..<rev1> <rev1>..<rev2>`."
msgstr ""
"`<rev1>...<rev2>` : これは、 `<rev2>..<rev1> <rev1>..<rev2>` と同じです。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:47
msgid ""
"`<base> <rev1> <rev2>`: This is equivalent to `<base>..<rev1> <base>.."
"<rev2>`."
msgstr ""
"`<base> <rev1> <rev2>` : これは `<base>..<rev1> <base>..<rev2>` と同じです。"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:49
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:50
#, no-wrap
msgid "`--no-dual-color`"
msgstr "`--no-dual-color`"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:55
msgid ""
"When the commit diffs differ, `git range-diff` recreates the original diffs' "
"coloring, and adds outer -/+ diff markers with the *background* being red/"
"green to make it easier to see e.g.  when there was a change in what exact "
"lines were added."
msgstr ""
"コミットdiffが異なる場合、 `git range-diff` は元の差分の色付けを再現し、例え"
"ば、追加された正確な行に変更があったとき、背景が 赤/緑 である外側の -/+ 差分"
"マーカーを追加して見やすくします。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:63
msgid ""
"Additionally, the commit diff lines that are only present in the first "
"commit range are shown \"dimmed\" (this can be overridden using the `color."
"diff.<slot>` config setting where `<slot>` is one of `contextDimmed`, "
"`oldDimmed` and `newDimmed`), and the commit diff lines that are only "
"present in the second commit range are shown in bold (which can be "
"overridden using the config settings `color.diff.<slot>` with `<slot>` being "
"one of `contextBold`, `oldBold` or `newBold`)."
msgstr ""
"さらに、最初のコミット範囲にのみ存在するコミット差分行は「薄暗く」(dimmed)表"
"示され(これは、 `color.diff.<slot>` 構成設定を使用してオーバーライドできま"
"す。ここで、 `<slot>` は `contextDimmed` と `oldDimmed` と `newDimmed` のうち"
"の1つです)、2番目のコミット範囲にのみ存在するコミット差分行は太字(bold)で示さ"
"れています(これは、構成設定 `color.diff.<slot>` を使用してオーバーライドでき"
"ます。`<slot>` は `contextBold` または `oldBold` または `newBold` のいずれか"
"です)。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:67
msgid ""
"This is known to `range-diff` as \"dual coloring\". Use `--no-dual-color` to "
"revert to color all lines according to the outer diff markers (and "
"completely ignore the inner diff when it comes to color)."
msgstr ""
"これは `range-diff` のための「dual coloring」として知られています。 `--no-"
"dual-color` を使用すると、外側のdiffマーカーに従ってすべての行の色を反転しま"
"す(色に関しては内側のdiffを完全に無視します)。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:68
#, no-wrap
msgid "`--creation-factor=<percent>`"
msgstr "`--creation-factor=<percent>`"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:75
msgid ""
"Set the creation/deletion cost fudge factor to `<percent>`.  Defaults to 60. "
"Try a larger value if `git range-diff` erroneously considers a large change "
"a total rewrite (deletion of one commit and addition of another), and a "
"smaller one in the reverse case.  See the ``Algorithm`` section below for an "
"explanation why this is needed."
msgstr ""
"作成/削除 コストのファッジ係数を `<percent>` に設定します。 デフォルトは60で"
"す。 `git range-diff` が誤って大きな変更を全体の書き換え(1つのコミットの削除"
"と別のコミットの追加)と見なす場合は大きな値を試し、逆の場合は小さな値を試して"
"ください。 これが必要な理由の説明については、下記「Algorithm」セクションを参"
"照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:76
#, no-wrap
msgid "`--left-only`"
msgstr "`--left-only`"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:79
msgid ""
"Suppress commits that are missing from the first specified range (or the "
"\"left range\" when using the `<rev1>...<rev2>` format)."
msgstr ""
"最初に指定された範囲(または `<rev1>...<rev2>` 形式を使用する場合は「左範囲」"
"(left range)）から欠落しているコミットを隠し(suppress)ます。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:80
#, no-wrap
msgid "`--right-only`"
msgstr "`--right-only`"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:83
msgid ""
"Suppress commits that are missing from the second specified range (or the "
"\"right range\" when using the `<rev1>...<rev2>` format)."
msgstr ""
"2番目に指定された範囲(または `<rev1>...<rev2>` 形式を使用する場合は「右範囲」"
"(right range)）から欠落しているコミットを隠し(supprss)ます。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:84
#, no-wrap
msgid "`--[no-]notes[=<ref>]`"
msgstr "`--[no-]notes[=<ref>]`"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:87
msgid ""
"This flag is passed to the `git log` program (see linkgit:git-log[1]) that "
"generates the patches."
msgstr ""
"このフラグは、パッチを生成する `git log` プログラム(linkgit:git-log[1] 参照)"
"に渡されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:88
#, no-wrap
msgid "<range1> <range2>"
msgstr "<range1> <range2>"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:91
msgid ""
"Compare the commits specified by the two ranges, where `<range1>` is "
"considered an older version of `<range2>`."
msgstr ""
"2つの範囲で指定されたコミットを比較します。ここで、 `<range1>` は `<range2>` "
"の古いバージョンと見なされます。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:92
#, no-wrap
msgid "<rev1>...<rev2>"
msgstr "<rev1>...<rev2>"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:94
msgid "Equivalent to passing `<rev2>..<rev1>` and `<rev1>..<rev2>`."
msgstr "`<rev2>..<rev1>` と `<rev1>..<rev2>` を渡すのと同じです。"

#. type: Labeled list
#: ../Documentation-sedout/git-range-diff.txt:95
#, no-wrap
msgid "<base> <rev1> <rev2>"
msgstr "<base> <rev1> <rev2>"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:101
msgid ""
"Equivalent to passing `<base>..<rev1>` and `<base>..<rev2>`.  Note that "
"`<base>` does not need to be the exact branch point of the branches. "
"Example: after rebasing a branch `my-topic`, `git range-diff my-topic@{u} my-"
"topic@{1} my-topic` would show the differences introduced by the rebase."
msgstr ""
"`<base>..<rev1>` と `<base>..<rev2>` を渡すのと同じです。 `<base>` は分岐の正"
"確な分岐点である必要はないことに注意してください。 例: ブランチ `my-topic` を"
"リベースした後、 `git range-diff my-topic@{u} my-topic@{1} my-topic` は、リ"
"ベースによって導入された違いを示します。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:108
msgid ""
"`git range-diff` also accepts the regular diff options (see linkgit:git-"
"diff[1]), most notably the `--color=[<when>]` and `--no-color` options. "
"These options are used when generating the \"diff between patches\", i.e. to "
"compare the author, commit message and diff of corresponding old/new "
"commits. There is currently no means to tweak most of the diff options "
"passed to `git log` when generating those patches."
msgstr ""
"`git range-diff` は、通常のdiffオプション(linkgit:git-diff[1] 参照)、特に `--"
"color=[<when>]` および `--no-color` オプションも受け入れます。 これらのオプ"
"ションは、「パッチ間の差分」を生成するときに使用されます。つまり、作者、コ"
"ミットメッセージ、および対応する 古い/新しい コミットの差分を比較します。 現"
"在、これらのパッチを生成するときに `git log` に渡されるdiffオプションのほとん"
"どは微調整する手段がありません。"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:110
#, no-wrap
msgid "OUTPUT STABILITY"
msgstr "OUTPUT STABILITY"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:119
msgid ""
"The output of the `range-diff` command is subject to change. It is intended "
"to be human-readable porcelain output, not something that can be used across "
"versions of Git to get a textually stable `range-diff` (as opposed to "
"something like the `--stable` option to linkgit:git-patch-id[1]). There's "
"also no equivalent of linkgit:git-apply[1] for `range-diff`, the output is "
"not intended to be machine-readable."
msgstr ""
"`range-diff` コマンドの出力は変更される可能性があります。 これは人間が読める"
"磁器コマンドの出力であり、Gitのバージョン間でテキスト的に安定した `range-"
"diff` を取得するために使用できるものではありません(linkgit:git-patch-id[1] "
"の `--stable` オプションのようなものとは対照的です)。 `range-diff` には "
"linkgit:git-apply[1] に相当するものもありません。出力は、プログラムで読み取る"
"こと(machine-readable)は意図されていません。"

# emergent effect: ??
#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:126
msgid ""
"This is particularly true when passing in diff options. Currently some "
"options like `--stat` can, as an emergent effect, produce output that's "
"quite useless in the context of `range-diff`. Future versions of `range-"
"diff` may learn to interpret such options in a manner specific to `range-"
"diff` (e.g. for `--stat` producing human-readable output which summarizes "
"how the diffstat changed)."
msgstr ""
"これは特に diff オプションを渡すときに当てはまります。現在、 `--stat` のよう"
"ないくつかのオプションは、 `range-diff` のコンテキストでは全く役に立たない出"
"力を生成することがあります。将来のバージョンの `range-diff` では、このような"
"オプションを `range-diff` 固有の方法で解釈するようになるかもしれません (例え"
"ば、 `--stat` は diffstat がどのように変化したかをまとめた、人間が読めるよう"
"な出力を生成します)。"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:128
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:132
msgid ""
"This command uses the `diff.color.*` and `pager.range-diff` settings (the "
"latter is on by default).  See linkgit:git-config[1]."
msgstr ""
"このコマンドは、 `diff.color.*` および `pager.range-diff` 設定を使用します(後"
"者はデフォルトでオンになっています)。 linkgit:git-config[1] を参照してくださ"
"い。"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:135
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:139
msgid ""
"When a rebase required merge conflicts to be resolved, compare the changes "
"introduced by the rebase directly afterwards using:"
msgstr ""
"リベースでマージの競合を解決する必要がある場合は、以下のコマンドを使用して、"
"リベースによって導入された変更をその直後に比較します:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:142
#, no-wrap
msgid "$ git range-diff @{u} @{1} @\n"
msgstr "$ git range-diff @{u} @{1} @\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:146
msgid "A typical output of `git range-diff` would look like this:"
msgstr "`git range-diff` の典型的な出力は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:153
#, no-wrap
msgid ""
"-:  ------- > 1:  0ddba11 Prepare for the inevitable!\n"
"1:  c0debee = 2:  cab005e Add a helpful message at the start\n"
"2:  f00dbal ! 3:  decafe1 Describe a bug\n"
"    @@ -1,3 +1,3 @@\n"
"     Author: A U Thor <author@example.com>\n"
msgstr ""
"-:  ------- > 1:  0ddba11 Prepare for the inevitable!\n"
"1:  c0debee = 2:  cab005e Add a helpful message at the start\n"
"2:  f00dbal ! 3:  decafe1 Describe a bug\n"
"    @@ -1,3 +1,3 @@\n"
"     Author: A U Thor <author@example.com>\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:158
#, no-wrap
msgid ""
"    -TODO: Describe a bug\n"
"    +Describe a bug\n"
"    @@ -324,5 +324,6\n"
"      This is expected.\n"
msgstr ""
"    -TODO: Describe a bug\n"
"    +Describe a bug\n"
"    @@ -324,5 +324,6\n"
"      This is expected.\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:162
#, no-wrap
msgid ""
"    -+What is unexpected is that it will also crash.\n"
"    ++Unexpectedly, it also crashes. This is a bug, and the jury is\n"
"    ++still out there how to fix it best. See ticket #314 for details.\n"
msgstr ""
"    -+What is unexpected is that it will also crash.\n"
"    ++Unexpectedly, it also crashes. This is a bug, and the jury is\n"
"    ++still out there how to fix it best. See ticket #314 for details.\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:165
#, no-wrap
msgid ""
"      Contact\n"
"3:  bedead < -:  ------- TO-UNDO\n"
msgstr ""
"      Contact\n"
"3:  bedead < -:  ------- TO-UNDO\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:170
msgid ""
"In this example, there are 3 old and 3 new commits, where the developer "
"removed the 3rd, added a new one before the first two, and modified the "
"commit message of the 2nd commit as well its diff."
msgstr ""
"この例では、3つの古いコミットと3つの新しいコミットがあり、開発者は3番目を削除"
"し、最初の2つの前に新しいコミットを追加し、2番目のコミットのコミットメッセー"
"ジとその差分を変更しました。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:177
msgid ""
"When the output goes to a terminal, it is color-coded by default, just like "
"regular `git diff`'s output. In addition, the first line (adding a commit) "
"is green, the last line (deleting a commit) is red, the second line (with a "
"perfect match) is yellow like the commit header of `git show`'s output, and "
"the third line colors the old commit red, the new one green and the rest "
"like `git show`'s commit header."
msgstr ""
"出力が端末に送られるとき、通常の `git diff` の出力と同じように、デフォルトで"
"色分けされています。 さらに、最初の行(コミットの追加)は緑、最後の行(コミット"
"の削除)は赤、2番目の行(完全一致)は `git show` の出力のコミットヘッダーのよう"
"に黄色で、 3行目は、古いコミットを赤、新しいコミットを緑、残りを `git show` "
"のコミットヘッダーのように色付けします。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:182
msgid ""
"A naive color-coded diff of diffs is actually a bit hard to read, though, as "
"it colors the entire lines red or green. The line that added \"What is "
"unexpected\" in the old commit, for example, is completely red, even if the "
"intent of the old commit was to add something."
msgstr ""
"ただし、単純な色分けされた「diffのdiff」は、行全体を赤または緑に色付けするた"
"め、実際には少し読みにくいです。 たとえば、古いコミットで「予期しないもの」を"
"追加した行は、古いコミットの目的が何かを追加することであったとしても、完全に"
"赤くなります。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:188
msgid ""
"To help with that, `range` uses the `--dual-color` mode by default. In this "
"mode, the diff of diffs will retain the original diff colors, and prefix the "
"lines with -/+ markers that have their *background* red or green, to make it "
"more obvious that they describe how the diff itself changed."
msgstr ""
"これを助けるために、 `range` はデフォルトで `--dual-color` モードを使用しま"
"す。 このモードでは、「diffのdiff」は元のdiffの色を保持し、行の前に「背景」が"
"赤または緑の -/+ マーカーを付けて、diff自体がどのように変化したかをより明確に"
"します。"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:191
#, no-wrap
msgid "Algorithm"
msgstr "Algorithm"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:195
msgid ""
"The general idea is this: we generate a cost matrix between the commits in "
"both commit ranges, then solve the least-cost assignment."
msgstr ""
"一般的な考え方は次のとおりです: 両方のコミット範囲のコミット間にコストマト"
"リックスを生成してから、最小コストの割り当てを解決します。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:199
msgid ""
"The cost matrix is populated thusly: for each pair of commits, both diffs "
"are generated and the \"diff of diffs\" is generated, with 3 context lines, "
"then the number of lines in that diff is used as cost."
msgstr ""
"コストマトリックスはこのように入力されます: コミットのペアごとに、両方のdiff"
"が生成され、3つのコンテキスト行で「diffのdiff」が生成され、そのdiffの行数がコ"
"ストとして使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:204
msgid ""
"To avoid false positives (e.g. when a patch has been removed, and an "
"unrelated patch has been added between two iterations of the same patch "
"series), the cost matrix is extended to allow for that, by adding fixed-cost "
"entries for wholesale deletes/adds."
msgstr ""
"誤検知(たとえば、パッチが削除され、同じパッチシリーズの2つの反復の間に無関係"
"のパッチが追加された場合)を回避するために、一括 削除/追加 の固定費エントリを"
"追加することにより、コストマトリックスが拡張されて誤検知の回避が可能になりま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:209
msgid ""
"Example: Let commits `1--2` be the first iteration of a patch series and `A--"
"C` the second iteration. Let's assume that `A` is a cherry-pick of `2,` and "
"`C` is a cherry-pick of `1` but with a small modification (say, a fixed "
"typo). Visualize the commits as a bipartite graph:"
msgstr ""
"例: コミット `1--2` をパッチシリーズの最初の反復とし、 `A--C` を2番目の反復と"
"します。 `A` は `2` のチェリーピックであり、 `C` は `1` のチェリーピックです"
"が、わずかな変更(たとえば、タイプミス修正)があると仮定します。 コミットを二部"
"グラフ(bipartite graph)として視覚化する:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:212
#, no-wrap
msgid "    1            A\n"
msgstr "    1            A\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:214
#, no-wrap
msgid "    2            B\n"
msgstr "    2            B\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:216
#: ../Documentation-sedout/git-range-diff.txt:228
#, no-wrap
msgid "\t\t C\n"
msgstr "\t\t C\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:220
msgid ""
"We are looking for a \"best\" explanation of the new series in terms of the "
"old one. We can represent an \"explanation\" as an edge in the graph:"
msgstr ""
"私たちは、新しい系列を古い系列の観点から「最適」に「説明」(explanation)するこ"
"とを求めています。「説明」はグラフの辺として表現することができます:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:226
#, no-wrap
msgid ""
"    1            A\n"
"\t       /\n"
"    2 --------'  B\n"
msgstr ""
"    1            A\n"
"\t       /\n"
"    2 --------'  B\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:233
msgid ""
"This explanation comes for \"free\" because there was no change. Similarly "
"`C` could be explained using `1`, but that comes at some cost c>0 because of "
"the modification:"
msgstr ""
"この「説明」(explanation)は、変更がなかったため、「無料」で提供されます。 同"
"様に、 `C` は `1` を使用して「説明」できますが、変更のために「c>0」のコストが"
"かかります:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:241
#, no-wrap
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"\t  `----- C\n"
"\t  c>0\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"\t  `----- C\n"
"\t  c>0\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:249
msgid ""
"In mathematical terms, what we are looking for is some sort of a minimum "
"cost bipartite matching; `1` is matched to `C` at some cost, etc. The "
"underlying graph is in fact a complete bipartite graph; the cost we "
"associate with every edge is the size of the diff between the two commits' "
"patches. To explain also new commits, we introduce dummy nodes on both sides:"
msgstr ""
"数学的に言えば、私たちが探しているのは、ある種の最小コストの二部マッチング"
"(bipartite matching)です。 `1` は、いくらかのコストで `C` と一致します。基礎"
"となるグラフは、実際には完全2部グラフです。 すべてのエッジに関連するコスト"
"は、2つのコミットのパッチ間の差分のサイズです。 新しいコミットについても説明"
"するために、両側にダミーノードを導入します:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:258
#, no-wrap
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"    o     `----- C\n"
"\t  c>0\n"
"    o            o\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"    o     `----- C\n"
"\t  c>0\n"
"    o            o\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:260
#, no-wrap
msgid "    o            o\n"
msgstr "    o            o\n"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:270
msgid ""
"The cost of an edge `o--C` is the size of `C`'s diff, modified by a fudge "
"factor that should be smaller than 100%. The cost of an edge `o--o` is free. "
"The fudge factor is necessary because even if `1` and `C` have nothing in "
"common, they may still share a few empty lines and such, possibly making the "
"assignment `1--C`, `o--o` slightly cheaper than `1--o`, `o--C` even if `1` "
"and `C` have nothing in common. With the fudge factor we require a much "
"larger common part to consider patches as corresponding."
msgstr ""
"エッジ `o--C` のコストは、 `C` の差分のサイズであり、100％未満である必要があ"
"るファッジ係数(fudge factor)によって変更されます。 エッジ `o--o` のコストは無"
"料です。 ファッジ係数が必要なのは、たとえ `1` と `C` に共通点がなくても、空行"
"などがいくつか共有され、 `1--C` 、 `o--o`  の代入が  `1--o` 、 `o--C`  よりも"
"わずかにコストが安くなる可能性があるためです。ファッジ係数を使用すると、パッ"
"チを対応するものと見なすためには、はるかに大きな共通部分が必要になります。"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:277
msgid ""
"The overall time needed to compute this algorithm is the time needed to "
"compute n+m commit diffs and then n*m diffs of patches, plus the time needed "
"to compute the least-cost assignment between n and m diffs. Git uses an "
"implementation of the Jonker-Volgenant algorithm to solve the assignment "
"problem, which has cubic runtime complexity. The matching found in this case "
"will look like this:"
msgstr ""
"このアルゴリズムの計算に必要な全体の時間は、パッチの、n+mコミットdiff と n*m "
"diff の計算に必要な時間に加えて、nとmのdiff間の最小コストの割り当ての計算に必"
"要な時間です。 Gitは、Jonker-Volgenantアルゴリズムの実装を使用して、実行時の"
"複雑さが3次である割り当ての問題を解決します。 この場合に見つかった一致は以下"
"のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:286
#, no-wrap
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"       .--+-----'\n"
"    o -'  `----- C\n"
"\t  c>0\n"
"    o ---------- o\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"       .--+-----'\n"
"    o -'  `----- C\n"
"\t  c>0\n"
"    o ---------- o\n"

#. type: delimited block -
#: ../Documentation-sedout/git-range-diff.txt:288
#, no-wrap
msgid "    o ---------- o\n"
msgstr "    o ---------- o\n"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:292
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:294
msgid "linkgit:git-log[1]"
msgstr "linkgit:git-log[1]"

#. type: Title -
#: ../Documentation-sedout/git-range-diff.txt:296
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-range-diff.txt:297
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
