# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2022-10-10 00:33+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-submodule.txt:2
#, no-wrap
msgid "git-submodule(1)"
msgstr "git-submodule(1)"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:7
msgid "git-submodule - Initialize, update or inspect submodules"
msgstr "git-submodule - サブモジュールを初期化、更新、または検査します"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:24
#, no-wrap
msgid ""
"'git submodule' [--quiet] [--cached]\n"
"'git submodule' [--quiet] add [<options>] [--] <repository> [<path>]\n"
"'git submodule' [--quiet] status [--cached] [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] init [--] [<path>...]\n"
"'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <path>...)\n"
"'git submodule' [--quiet] update [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] set-branch [<options>] [--] <path>\n"
"'git submodule' [--quiet] set-url [--] <path> <newurl>\n"
"'git submodule' [--quiet] summary [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] foreach [--recursive] <command>\n"
"'git submodule' [--quiet] sync [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] absorbgitdirs [--] [<path>...]\n"
msgstr ""
"'git submodule' [--quiet] [--cached]\n"
"'git submodule' [--quiet] add [<options>] [--] <repository> [<path>]\n"
"'git submodule' [--quiet] status [--cached] [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] init [--] [<path>...]\n"
"'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <path>...)\n"
"'git submodule' [--quiet] update [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] set-branch [<options>] [--] <path>\n"
"'git submodule' [--quiet] set-url [--] <path> <newurl>\n"
"'git submodule' [--quiet] summary [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] foreach [--recursive] <command>\n"
"'git submodule' [--quiet] sync [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] absorbgitdirs [--] [<path>...]\n"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:27
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:29
msgid "Inspects, updates and manages submodules."
msgstr "サブモジュールを検査、更新、管理します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:31
msgid "For more information about submodules, see linkgit:gitsubmodules[7]."
msgstr ""
"サブモジュールの詳細については、 linkgit:gitsubmodules[7] を参照してくださ"
"い。"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:33
#, no-wrap
msgid "COMMANDS"
msgstr "COMMANDS"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:36
msgid ""
"With no arguments, shows the status of existing submodules.  Several "
"subcommands are available to perform operations on the submodules."
msgstr ""
"引数なしで、既存のサブモジュールのステータスを示します。 サブモジュールで操作"
"を実行するために、いくつかのサブコマンドを使用できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:37
#, no-wrap
msgid "add [-b <branch>] [-f|--force] [--name <name>] [--reference <repository>] [--depth <depth>] [--] <repository> [<path>]"
msgstr "add [-b <branch>] [-f|--force] [--name <name>] [--reference <repository>] [--depth <depth>] [--] <repository> [<path>]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:41
msgid ""
"Add the given repository as a submodule at the given path to the changeset "
"to be committed next to the current project: the current project is termed "
"the \"superproject\"."
msgstr ""
"現在のプロジェクトの次にコミットされるチェンジセットへの指定のパスで、指定の"
"ポジトリをサブモジュールとして追加します。現在のプロジェクトは「スーパープロ"
"ジェクト」と呼ばれます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:50
msgid ""
"<repository> is the URL of the new submodule's origin repository.  This may "
"be either an absolute URL, or (if it begins with ./ or ../), the location "
"relative to the superproject's default remote repository (Please note that "
"to specify a repository 'foo.git' which is located right next to a "
"superproject 'bar.git', you'll have to use `../foo.git` instead of `./foo."
"git` - as one might expect when following the rules for relative URLs - "
"because the evaluation of relative URLs in Git is identical to that of "
"relative directories)."
msgstr ""
"<repository> は、新しいサブモジュールの元リポジトリのURLです。これは、絶対URL"
"または、( `./` または `../` で始まる場合、)スーパープロジェクトのデフォルトの"
"リモートリポジトリに相対的な場所のいずれかです(スーパープロジェクト `bar."
"git` のすぐ隣にあるリポジトリ `foo.git` を指定するには、 `./foo.git` の代わり"
"に `../foo.git` を使用する必要があることに注意してください -- 相対 URL の規則"
"に従っていれば、期待通りになるでしょう -- Git における相対 URL の評価は相対"
"ディレクトリの場合と同じだからです)。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:57
msgid ""
"The default remote is the remote of the remote-tracking branch of the "
"current branch. If no such remote-tracking branch exists or the HEAD is "
"detached, \"origin\" is assumed to be the default remote.  If the "
"superproject doesn't have a default remote configured the superproject is "
"its own authoritative upstream and the current working directory is used "
"instead."
msgstr ""
"デフォルトのリモートは、現在のブランチのリモート追跡ブランチのリモートです。"
"そのようなリモート追跡ブランチが存在しないか、または、HEADが切り離されている"
"場合、「origin」がデフォルトのリモートであると見なされます。 スーパープロジェ"
"クトにデフォルトのリモートが構成されていない場合、スーパープロジェクトはそれ"
"自身に権限のあるアップストリームであり、代わりに現在の作業ディレクトリが使用"
"されます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:66
msgid ""
"The optional argument <path> is the relative location for the cloned "
"submodule to exist in the superproject. If <path> is not given, the "
"canonical part of the source repository is used (\"repo\" for \"/path/to/"
"repo.git\" and \"foo\" for \"host.xz:foo/.git\"). If <path> exists and is "
"already a valid Git repository, then it is staged for commit without "
"cloning. The <path> is also used as the submodule's logical name in its "
"configuration entries unless `--name` is used to specify a logical name."
msgstr ""
"オプションの引数 <path> は、複製されたサブモジュールがスーパープロジェクト内"
"で存在するための相対的な場所です。 <path> が指定されていない場合、ソースリポ"
"ジトリの正規部分(canonical part)が使用されます(`/path/to/repo.git` の場合は"
"「repo」、 `host.xz:foo/.git` の場合は「foo」)。 <path> が存在し、すでに有効"
"なGitリポジトリである場合、クローンを作成せずにコミット用にステージングされま"
"す。 <path> は、 `--name` を使用して論理名を指定しない限り、構成エントリでサ"
"ブモジュールの論理名としても使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:74
msgid ""
"The given URL is recorded into `.gitmodules` for use by subsequent users "
"cloning the superproject. If the URL is given relative to the superproject's "
"repository, the presumption is the superproject and submodule repositories "
"will be kept together in the same relative location, and only the "
"superproject's URL needs to be provided.  git-submodule will correctly "
"locate the submodule using the relative URL in `.gitmodules`."
msgstr ""
"指定のURLは、スーパープロジェクトのクローンを作成する後続のユーザーが使用でき"
"るように `.gitmodules` に記録されます。 URLがスーパープロジェクトのリポジトリ"
"に関連して指定されている場合、スーパープロジェクトとサブモジュールのリポジト"
"リは同じ相対位置にまとめられ、スーパープロジェクトのURLのみを指定する必要があ"
"ると想定します。 git-submoduleは、 `.gitmodules` の相対URLを使用してサブモ"
"ジュールを正しく検索します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:75
#, no-wrap
msgid "status [--cached] [--recursive] [--] [<path>...]"
msgstr "status [--cached] [--recursive] [--] [<path>...]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:83
msgid ""
"Show the status of the submodules. This will print the SHA-1 of the "
"currently checked out commit for each submodule, along with the submodule "
"path and the output of 'git describe' for the SHA-1. Each SHA-1 will "
"possibly be prefixed with `-` if the submodule is not initialized, `+` if "
"the currently checked out submodule commit does not match the SHA-1 found in "
"the index of the containing repository and `U` if the submodule has merge "
"conflicts."
msgstr ""
"サブモジュールの状態を表示します。これにより、各サブモジュールの現在チェック"
"アウトされているコミットの SHA-1 が、サブモジュールのパスと SHA-1 の `git "
"describe` の出力と共に出力されます。各 SHA-1 には、サブモジュールが初期化され"
"ていない場合は `-` 、現在チェックアウトされているサブモジュールコミットが、含"
"まれているリポジトリのインデックスにある SHA-1 と一致しない場合は `+` 、サブ"
"モジュールにマージ競合がある場合は `U` 、 という接頭辞が付く可能性がありま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:86
msgid ""
"If `--cached` is specified, this command will instead print the SHA-1 "
"recorded in the superproject for each submodule."
msgstr ""
"`--cached` が指定されている場合、このコマンドは代わりに、各サブモジュールの"
"スーパープロジェクトに記録されたSHA-1を出力します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:89
msgid ""
"If `--recursive` is specified, this command will recurse into nested "
"submodules, and show their status as well."
msgstr ""
"`--recursive` が指定されている場合、このコマンドはネストされたサブモジュール"
"に再帰し、それらのステータスも表示します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:94
msgid ""
"If you are only interested in changes of the currently initialized "
"submodules with respect to the commit recorded in the index or the HEAD, "
"linkgit:git-status[1] and linkgit:git-diff[1] will provide that information "
"too (and can also report changes to a submodule's work tree)."
msgstr ""
"あなたがインデックスまたはHEADに記録されたコミットに関して、現在初期化されて"
"いるサブモジュールの変更のみに関心がある場合は、 linkgit:git-status[1] およ"
"び linkgit:git-diff[1] もその情報を提供します(サブモジュールの作業ツリーへの"
"変更も報告します)。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:95
#, no-wrap
msgid "init [--] [<path>...]"
msgstr "init [--] [<path>...]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:102
msgid ""
"Initialize the submodules recorded in the index (which were added and "
"committed elsewhere) by setting `submodule.$name.url` in .git/config. It "
"uses the same setting from `.gitmodules` as a template. If the URL is "
"relative, it will be resolved using the default remote. If there is no "
"default remote, the current repository will be assumed to be upstream."
msgstr ""
"インデックスに記録されたサブモジュール(他の場所で追加およびコミットされたサブ"
"モジュール)を初期化するには、 `.git/config` に `submodule.$name.url` を設定し"
"ます。テンプレートとして `.gitmodules` と同じ設定を使用します。URLが相対的な"
"場合は、デフォルトのリモートを使用して解決されます。デフォルトのリモートがな"
"い場合、現在のリポジトリはアップストリームであると見なされます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:107
msgid ""
"Optional <path> arguments limit which submodules will be initialized.  If no "
"path is specified and submodule.active has been configured, submodules "
"configured to be active will be initialized, otherwise all submodules are "
"initialized."
msgstr ""
"オプションの <path> 引数は、初期化されるサブモジュールを制限します。パスが指"
"定されておらず、 submodule.active が構成されている場合、アクティブになるよう"
"に構成されたサブモジュールが初期化されます。そうでない場合、すべてのサブモ"
"ジュールが初期化されます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:115
msgid ""
"When present, it will also copy the value of `submodule.$name.update`.  This "
"command does not alter existing information in .git/config.  You can then "
"customize the submodule clone URLs in .git/config for your local setup and "
"proceed to `git submodule update`; you can also just use `git submodule "
"update --init` without the explicit 'init' step if you do not intend to "
"customize any submodule locations."
msgstr ""
"存在する場合は、 `submodule.$name.update` の値もコピーします。このコマンド"
"は、 `.git/config` の既存の情報を変更しません。あなたは次に、ローカル設定用"
"に `.git/config` のサブモジュールクローンURLをカスタマイズして、 `git "
"submodule update` に進むことができます。サブモジュールの場所をカスタマイズす"
"る予定がない場合は、明示的な「init」ステップなしで `git submodule update --"
"init` を使用することもできます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:117
msgid "See the add subcommand for the definition of default remote."
msgstr ""
"デフォルトのリモートの定義については、add サブコマンドを参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:118
#, no-wrap
msgid "deinit [-f|--force] (--all|[--] <path>...)"
msgstr "deinit [-f|--force] (--all|[--] <path>...)"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:125
msgid ""
"Unregister the given submodules, i.e. remove the whole `submodule.$name` "
"section from .git/config together with their work tree. Further calls to "
"`git submodule update`, `git submodule foreach` and `git submodule sync` "
"will skip any unregistered submodules until they are initialized again, so "
"use this command if you don't want to have a local checkout of the submodule "
"in your working tree anymore."
msgstr ""
"指定のサブモジュールの登録を解除します。つまり、`.git/config` から "
"`submodule.$name` セクション全体をその作業ツリーとともに削除します。さらに "
"`git submodule update` と `git submodule foreach` と `git submodule sync` を"
"呼び出すと、 未登録のサブモジュールが再び初期化されるまでスキップされるので、"
"作業ツリーにあるサブモジュールのローカルチェックアウトをもうこれ以上やりたく"
"ない場合は、このコマンドを使用してください。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:128
msgid ""
"When the command is run without pathspec, it errors out, instead of deinit-"
"ing everything, to prevent mistakes."
msgstr ""
"コマンドをpathspecなしで実行すると、間違いを防ぐために、すべてを無効にするの"
"ではなく、エラーが発生します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:131
msgid ""
"If `--force` is specified, the submodule's working tree will be removed even "
"if it contains local modifications."
msgstr ""
"`--force` が指定されている場合、サブモジュールの作業ツリーは、ローカルの変更"
"が含まれていても削除されます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:135
msgid ""
"If you really want to remove a submodule from the repository and commit that "
"use linkgit:git-rm[1] instead. See linkgit:gitsubmodules[7] for removal "
"options."
msgstr ""
"あなたが本当にリポジトリからサブモジュールを削除してコミットしたい場合は、代"
"わりに linkgit:git-rm[1] を使用してください。削除オプションについては、 "
"linkgit:gitsubmodules[7] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:136
#, no-wrap
msgid "update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<path>...]"
msgstr "update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<path>...]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:148
msgid ""
"Update the registered submodules to match what the superproject expects by "
"cloning missing submodules, fetching missing commits in submodules and "
"updating the working tree of the submodules. The \"updating\" can be done in "
"several ways depending on command line options and the value of `submodule."
"<name>.update` configuration variable. The command line option takes "
"precedence over the configuration variable. If neither is given, a "
"'checkout' is performed.  The 'update' procedures supported both from the "
"command line as well as through the `submodule.<name>.update` configuration "
"are:"
msgstr ""
"登録されたサブモジュールを更新して、欠落しているサブモジュールのクローンを作"
"成し、サブモジュールで欠落しているコミットをフェッチし、サブモジュールの作業"
"ツリーを更新して、スーパープロジェクトが期待するものと一致させます。「更新」"
"は、コマンドラインオプションと `submodule.<name>.update` 構成変数の値に応じて"
"いくつかの方法で実行できます。 コマンドラインオプションは、構成変数よりも優先"
"されます。 どちらも指定されていない場合、「checkout」が実行されます。 コマン"
"ドラインと `submodule.<name>.update` 構成の両方でサポートされる「update」手順"
"は以下のとおりです:"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:149
#, no-wrap
msgid "checkout"
msgstr "checkout"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:153
#, fuzzy, no-wrap
#| msgid ""
#| "the commit recorded in the superproject will be merged\n"
#| "into the current branch in the submodule.\n"
msgid ""
"the commit recorded in the superproject will be\n"
"checked out in the submodule on a detached HEAD.\n"
msgstr ""
"スーパープロジェクトに記録されたコミットは、\n"
"サブモジュールの現在のブランチにマージされます。\n"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:159
msgid ""
"If `--force` is specified, the submodule will be checked out (using `git "
"checkout --force`), even if the commit specified in the index of the "
"containing repository already matches the commit checked out in the "
"submodule."
msgstr ""
"`--force` が指定された場合、サブモジュールは(`git checkout --force` を使って)"
"チェックアウトされます。たとえ含んでいるリポジトリのインデックスで指定された"
"コミットが、すでにサブモジュールでチェックアウトしたコミットに一致していても"
"です。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:160
#, no-wrap
msgid "rebase"
msgstr "rebase"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:164
#, no-wrap
msgid ""
"the current branch of the submodule will be rebased\n"
"onto the commit recorded in the superproject.\n"
msgstr ""
"サブモジュールの現在のブランチは、\n"
"スーパープロジェクトに記録されたコミットに基づいてリベースされます。\n"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:165
#, no-wrap
msgid "merge"
msgstr "merge"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:169
#, no-wrap
msgid ""
"the commit recorded in the superproject will be merged\n"
"into the current branch in the submodule.\n"
msgstr ""
"スーパープロジェクトに記録されたコミットは、\n"
"サブモジュールの現在のブランチにマージされます。\n"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:172
msgid ""
"The following 'update' procedures are only available via the `submodule."
"<name>.update` configuration variable:"
msgstr ""
"以下の「update」手順は、 `submodule.<name>.update` 構成変数を介してのみ使用で"
"きます:"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:173
#, no-wrap
msgid "custom command"
msgstr "custom command"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:180
#, no-wrap
msgid ""
"arbitrary shell command that takes a single\n"
"argument (the sha1 of the commit recorded in the\n"
"superproject) is executed. When `submodule.<name>.update`\n"
"is set to '!command', the remainder after the exclamation mark\n"
"is the custom command.\n"
msgstr ""
"単一の引数\n"
"(スーパープロジェクトに記録されたコミットのsha1)をとる\n"
"任意のシェルコマンドが実行されます。\n"
"`submodule.<name>.update` が `!command` に設定されている場合、\n"
"感嘆符(`!`)の後の残りはカスタムコマンドです。\n"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:181
#, no-wrap
msgid "none"
msgstr "none"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:184
#, no-wrap
msgid "the submodule is not updated.\n"
msgstr "サブモジュールは更新されません。\n"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:188
msgid ""
"If the submodule is not yet initialized, and you just want to use the "
"setting as stored in `.gitmodules`, you can automatically initialize the "
"submodule with the `--init` option."
msgstr ""
"サブモジュールがまだ初期化されておらず、  `.gitmodules` に格納されている設定"
"を使用するだけの場合、 あなたは `--init` オプションを使用してサブモジュールを"
"自動的に初期化できます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:191
msgid ""
"If `--recursive` is specified, this command will recurse into the registered "
"submodules, and update any nested submodules within."
msgstr ""
"`--recursive` が指定されている場合、このコマンドは登録されたサブモジュールに"
"再帰し、その中でネストされたサブモジュールを更新します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:195
msgid ""
"If `--filter <filter spec>` is specified, the given partial clone filter "
"will be applied to the submodule. See linkgit:git-rev-list[1] for details on "
"filter specifications."
msgstr ""
"`--filter <filter spec>` が指定されている場合、 指定の部分(partial)クローン・"
"フィルタがサブモジュールに適用されます。 フィルター仕様の詳細については、 "
"linkgit:git-rev-list[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:196
#, no-wrap
msgid "set-branch (-b|--branch) <branch> [--] <path>"
msgstr "set-branch (-b|--branch) <branch> [--] <path>"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:197
#, no-wrap
msgid "set-branch (-d|--default) [--] <path>"
msgstr "set-branch (-d|--default) [--] <path>"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:202
msgid ""
"Sets the default remote tracking branch for the submodule. The `--branch` "
"option allows the remote branch to be specified. The `--default` option "
"removes the submodule.<name>.branch configuration key, which causes the "
"tracking branch to default to the remote 'HEAD'."
msgstr ""
"サブモジュールのデフォルトのリモート追跡ブランチを設定します。 `--branch` オ"
"プションを使用すると、リモートブランチを指定できます。 `--default` オプション"
"を使用すると、 submodule.<name>.branch 構成キーを削除し、これにより、追跡ブラ"
"ンチはデフォルトでリモートの「HEAD」になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:203
#, no-wrap
msgid "set-url [--] <path> <newurl>"
msgstr "set-url [--] <path> <newurl>"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:207
msgid ""
"Sets the URL of the specified submodule to <newurl>. Then, it will "
"automatically synchronize the submodule's new remote URL configuration."
msgstr ""
"指定されたサブモジュールのURLを <newurl> に設定します。そしてその次に、サブモ"
"ジュールの新しいリモートURL構成を自動的に同期します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:208
#, no-wrap
msgid "summary [--cached|--files] [(-n|--summary-limit) <n>] [commit] [--] [<path>...]"
msgstr "summary [--cached|--files] [(-n|--summary-limit) <n>] [commit] [--] [<path>...]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:217
msgid ""
"Show commit summary between the given commit (defaults to HEAD) and working "
"tree/index. For a submodule in question, a series of commits in the "
"submodule between the given super project commit and the index or working "
"tree (switched by `--cached`) are shown. If the option `--files` is given, "
"show the series of commits in the submodule between the index of the super "
"project and the working tree of the submodule (this option doesn't allow to "
"use the `--cached` option or to provide an explicit commit)."
msgstr ""
"指定のコミット(デフォルトはHEAD)と 作業ツリー/インデックス の間のコミットの概"
"要を表示します。問い合わせがサブモジュールの場合、指定のスーパープロジェクト"
"コミットと、インデックスまたは作業ツリー(`--cached` によって切り替えられる)の"
"間のサブモジュール内の一連のコミットが表示されます。オプション `--files` が指"
"定されている場合は、スーパープロジェクトのインデックスとサブモジュールの作業"
"ツリーの間の、サブモジュールでの一連のコミットを表示します(このオプションで"
"は、 `--cached` オプションを使用したり、明示的なコミットを提供したりすること"
"はできません)。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:220
msgid ""
"Using the `--submodule=log` option with linkgit:git-diff[1] will provide "
"that information too."
msgstr ""
"linkgit:git-diff[1] で `--submodule=log` オプションを使用すると、その情報も提"
"供されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:221
#, no-wrap
msgid "foreach [--recursive] <command>"
msgstr "foreach [--recursive] <command>"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:242
msgid ""
"Evaluates an arbitrary shell command in each checked out submodule.  The "
"command has access to the variables $name, $sm_path, $displaypath, $sha1 and "
"$toplevel: $name is the name of the relevant submodule section in `."
"gitmodules`, $sm_path is the path of the submodule as recorded in the "
"immediate superproject, $displaypath contains the relative path from the "
"current working directory to the submodules root directory, $sha1 is the "
"commit as recorded in the immediate superproject, and $toplevel is the "
"absolute path to the top-level of the immediate superproject.  Note that to "
"avoid conflicts with '$PATH' on Windows, the '$path' variable is now a "
"deprecated synonym of '$sm_path' variable.  Any submodules defined in the "
"superproject but not checked out are ignored by this command. Unless given "
"`--quiet`, foreach prints the name of each submodule before evaluating the "
"command.  If `--recursive` is given, submodules are traversed recursively (i."
"e.  the given shell command is evaluated in nested submodules as well).  A "
"non-zero return from the command in any submodule causes the processing to "
"terminate. This can be overridden by adding '|| :' to the end of the command."
msgstr ""
"チェックアウトされた各サブモジュールで任意のシェルコマンドを評価します。この"
"コマンドは、変数 $name と $sm_path と $displaypath と $sha1 と$toplevel にア"
"クセスできます。$name は、 `.gitmodules` の関連するサブモジュールセクションの"
"名前で、 $sm_path は、直接のスーパープロジェクト(immediate superproject)に記"
"録されているサブモジュールのパスで、 $displaypath には、現在の作業ディレクト"
"リからサブモジュールのルートディレクトリへの相対パスが含まれ、 $sha1 は、直接"
"のスーパープロジェクト(immediate superproject)に記録されているコミットで、 "
"$toplevel は、直接のスーパープロジェクト(immediate superproject)のトップレベ"
"ルへの絶対パスです。Windowsでの `$PATH` との競合を避けるために、 `$path` 変数"
"は `$sm_path` 変数の非推奨の同義語になっていることに注意してください。スー"
"パープロジェクトで定義されているがチェックアウトされていないサブモジュール"
"は、このコマンドでは無視されます。`--quiet` が指定されていない限り、foreachは"
"コマンドを評価する前に各サブモジュールの名前を出力します。  `--recursive` が"
"指定されている場合、サブモジュールは再帰的にトラバースされます(つまり、指定の"
"シェルコマンドはネストされたサブモジュールでも評価されます)。 サブモジュール"
"のコマンドからゼロ以外の値が返されると、処理が終了(terminate)します。これは、"
"コマンドの最後に `|| :` を追加することでオーバーライドできます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:245
msgid ""
"As an example, the command below will show the path and currently checked "
"out commit for each submodule:"
msgstr ""
"例として、以下のコマンドは、各サブモジュールのパスと現在チェックアウトされて"
"いるコミットを表示します:"

#. type: delimited block -
#: ../Documentation-sedout/git-submodule.txt:248
#, no-wrap
msgid "git submodule foreach 'echo $sm_path `git rev-parse HEAD`'\n"
msgstr "git submodule foreach 'echo $sm_path `git rev-parse HEAD`'\n"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:250
#, no-wrap
msgid "sync [--recursive] [--] [<path>...]"
msgstr "sync [--recursive] [--] [<path>...]"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:257
msgid ""
"Synchronizes submodules' remote URL configuration setting to the value "
"specified in `.gitmodules`. It will only affect those submodules which "
"already have a URL entry in .git/config (that is the case when they are "
"initialized or freshly added). This is useful when submodule URLs change "
"upstream and you need to update your local repositories accordingly."
msgstr ""
"サブモジュールのリモートURL構成設定を `.gitmodules` で指定された値に同期しま"
"す。 これは、`.git/config` にすでにURLエントリがあるサブモジュールにのみ影響"
"します(これは、初期化されたとき、または新しく追加されたときの場合です)。これ"
"は、サブモジュールのURLがアップストリームで変更され、それに応じてローカルリポ"
"ジトリを更新する必要がある場合に役立ちます。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:260
msgid ""
"`git submodule sync` synchronizes all submodules while `git submodule sync "
"-- A` synchronizes submodule \"A\" only."
msgstr ""
"`git submodule sync` はすべてのサブモジュールを同期しますが、 `git submodule "
"sync -- A` はサブモジュール \"A\" のみを同期します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:263
msgid ""
"If `--recursive` is specified, this command will recurse into the registered "
"submodules, and sync any nested submodules within."
msgstr ""
"`--recursive` が指定されている場合、このコマンドは登録されたサブモジュールに"
"再帰し、その中でネストされたサブモジュールを同期します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:264
#, no-wrap
msgid "absorbgitdirs"
msgstr "absorbgitdirs"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:271
msgid ""
"If a git directory of a submodule is inside the submodule, move the git "
"directory of the submodule into its superproject's `$GIT_DIR/modules` path "
"and then connect the git directory and its working directory by setting the "
"`core.worktree` and adding a .git file pointing to the git directory "
"embedded in the superprojects git directory."
msgstr ""
"サブモジュールのgitディレクトリがサブモジュール内にある場合、サブモジュールの"
"gitディレクトリをそのスーパープロジェクトの `$GIT_DIR/modules` パスに移動し、"
"次に、 `core.worktree` を設定して、gitディレクトリとその作業ディレクトリを接"
"続し、そして、スーパープロジェクトのgitディレクトリに埋め込んだサブモジュール"
"のgitディレクトリを指す .git ファイルを追加します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:275
msgid ""
"A repository that was cloned independently and later added as a submodule or "
"old setups have the submodules git directory inside the submodule instead of "
"embedded into the superprojects git directory."
msgstr ""
"独立して複製され、後でサブモジュールまたは古いセットアップとして追加されたリ"
"ポジトリでは、スーパープロジェクトのgitディレクトリに埋め込まれるのではなく、"
"サブモジュール内にサブモジュールのgitディレクトリがあります。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:277
msgid "This command is recursive by default."
msgstr "このコマンドはデフォルトで再帰的に実行されます。"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:279
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:280
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:281
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:283
msgid "Only print error messages."
msgstr "エラーメッセージのみを出力します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:284
#, no-wrap
msgid "`--progress`"
msgstr "`--progress`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:290
msgid ""
"This option is only valid for add and update commands.  Progress status is "
"reported on the standard error stream by default when it is attached to a "
"terminal, unless -q is specified. This flag forces progress status even if "
"the standard error stream is not directed to a terminal."
msgstr ""
"このオプションは、addおよびupdateコマンドにのみ有効です。 `-q` が指定されてい"
"ない限り、進行状況は、端末に接続されている場合、デフォルトで標準エラースト"
"リームに報告されます。このフラグは、標準エラーストリームが端末に送信されてい"
"ない場合でも、進行状況を強制します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:291
#, no-wrap
msgid "`--all`"
msgstr "`--all`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:294
msgid ""
"This option is only valid for the deinit command. Unregister all submodules "
"in the working tree."
msgstr ""
"このオプションは、deinitコマンドに対してのみ有効です。 作業ツリーのすべてのサ"
"ブモジュールの登録を解除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:295
#, no-wrap
msgid "`-b <branch>`"
msgstr "`-b <branch>`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:296
#, no-wrap
msgid "`--branch <branch>`"
msgstr "`--branch <branch>`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:303
msgid ""
"Branch of repository to add as submodule.  The name of the branch is "
"recorded as `submodule.<name>.branch` in `.gitmodules` for `update --"
"remote`.  A special value of `.` is used to indicate that the name of the "
"branch in the submodule should be the same name as the current branch in the "
"current repository.  If the option is not specified, it defaults to the "
"remote 'HEAD'."
msgstr ""
"サブモジュールとして追加するリポジトリのブランチ。ブランチの名前は、`update "
"--remote` の `.gitmodules` に `submodule.<name>.branch` として記録されます。 "
"特別な値 `.` は、サブモジュール内のブランチの名前が現在のリポジトリ内の現在の"
"ブランチと同じ名前でなければならないことを示すために使用されます。オプション"
"が指定されていない場合、デフォルトでリモートの「HEAD」になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:304
#, no-wrap
msgid "`-f`"
msgstr "`-f`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:305
#, no-wrap
msgid "`--force`"
msgstr "`--force`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:316
msgid ""
"This option is only valid for add, deinit and update commands.  When running "
"add, allow adding an otherwise ignored submodule path.  When running deinit "
"the submodule working trees will be removed even if they contain local "
"changes.  When running update (only effective with the checkout procedure), "
"throw away local changes in submodules when switching to a different commit; "
"and always run a checkout operation in the submodule, even if the commit "
"listed in the index of the containing repository matches the commit checked "
"out in the submodule."
msgstr ""
"このオプションは、addとdeinitとupdateコマンドにのみ有効です。addを実行すると"
"きは、無視されるサブモジュールパスの追加を許可します。 deinitを実行するとき"
"は、ローカルの変更が含まれている場合でも、サブモジュールの作業ツリーが削除さ"
"れます。 updateを実行するときは(checkout手順でのみ有効)、別のコミットに切り替"
"えるときにサブモジュールのローカル変更を破棄し、そして、含まれているリポジト"
"リのインデックスにリストされているコミットがサブモジュールでチェックアウトさ"
"れたコミットと一致する場合でも、常にサブモジュールでチェックアウト操作を実行"
"します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:317
#, no-wrap
msgid "`--cached`"
msgstr "`--cached`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:321
msgid ""
"This option is only valid for status and summary commands.  These commands "
"typically use the commit found in the submodule HEAD, but with this option, "
"the commit stored in the index is used instead."
msgstr ""
"このオプションは、statusコマンドとsummaryコマンドにのみ有効です。これらのコマ"
"ンドは通常、サブモジュールHEADにあるコミットを使用しますが、このオプションを"
"使用すると、代わりにインデックスに格納されているコミットが使用されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:322
#, no-wrap
msgid "`--files`"
msgstr "`--files`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:326
msgid ""
"This option is only valid for the summary command. This command compares the "
"commit in the index with that in the submodule HEAD when this option is used."
msgstr ""
"このオプションは、summaryコマンドにのみ有効です。 このコマンドを使用すると、"
"インデックス内のコミットと、サブモジュールHEAD内のコミットが比較されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:327
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:328
#, no-wrap
msgid "`--summary-limit`"
msgstr "`--summary-limit`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:334
msgid ""
"This option is only valid for the summary command.  Limit the summary size "
"(number of commits shown in total).  Giving 0 will disable the summary; a "
"negative number means unlimited (the default). This limit only applies to "
"modified submodules. The size is always limited to 1 for added/deleted/"
"typechanged submodules."
msgstr ""
"このオプションは、summaryコマンドにのみ有効です。 サマリーサイズ(合計で表示さ"
"れるコミットの数)を制限します。 0を指定すると、要約が無効になります。 負の数"
"は無制限(デフォルト)を意味します。この制限は、変更されたサブモジュールにのみ"
"適用されます。 追加/削除/タイプ変更された サブモジュールのサイズは常に1に制限"
"されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:335
#, no-wrap
msgid "`--remote`"
msgstr "`--remote`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:344
msgid ""
"This option is only valid for the update command.  Instead of using the "
"superproject's recorded SHA-1 to update the submodule, use the status of the "
"submodule's remote-tracking branch.  The remote used is branch's remote "
"(`branch.<name>.remote`), defaulting to `origin`.  The remote branch used "
"defaults to the remote `HEAD`, but the branch name may be overridden by "
"setting the `submodule.<name>.branch` option in either `.gitmodules` or `."
"git/config` (with `.git/config` taking precedence)."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。 スーパープロジェクトの"
"記録されたSHA-1を使用してサブモジュールを更新する代わりに、サブモジュールのリ"
"モート追跡ブランチのステータスを使用します。 使用されるリモートはブランチのリ"
"モート(`branch.<name>.remote`)で、デフォルトは `origin` です。 使用されるリ"
"モートブランチのデフォルトはリモートの `HEAD` ですが、ブランチ名は、 `.git / "
"config` または `.gitmodules` のいずれかで `submodule.<name>.branch` オプショ"
"ンを設定することでオーバーライドできます(`.git / config` が優先されます)。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:350
msgid ""
"This works for any of the supported update procedures (`--checkout`, `--"
"rebase`, etc.).  The only change is the source of the target SHA-1.  For "
"example, `submodule update --remote --merge` will merge upstream submodule "
"changes into the submodules, while `submodule update --merge` will merge "
"superproject gitlink changes into the submodules."
msgstr ""
"これは、サポートされている更新手順(`--checkout` 、`--rebase` など)のいずれで"
"も機能します。唯一の変更は、ターゲットSHA-1のソースです。 たとえば、 "
"`submodule update --remote --merge` はアップストリームのサブモジュールの変更"
"をサブモジュールにマージし、 `submodule update --merge` はスーパープロジェク"
"トのgitlinkの変更をサブモジュールにマージします。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:355
msgid ""
"In order to ensure a current tracking branch state, `update --remote` "
"fetches the submodule's remote repository before calculating the SHA-1.  If "
"you don't want to fetch, you should use `submodule update --remote --no-"
"fetch`."
msgstr ""
"現在の追跡ブランチの状態を確認するために、 `update --remote` はSHA-1を計算す"
"る前にサブモジュールのリモートリポジトリをフェッチします。フェッチしたくない"
"場合は、 `submodule update --remote --no-fetch` を使用する必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:365
msgid ""
"Use this option to integrate changes from the upstream subproject with your "
"submodule's current HEAD.  Alternatively, you can run `git pull` from the "
"submodule, which is equivalent except for the remote branch name: `update --"
"remote` uses the default upstream repository and `submodule.<name>.branch`, "
"while `git pull` uses the submodule's `branch.<name>.merge`.  Prefer "
"`submodule.<name>.branch` if you want to distribute the default upstream "
"branch with the superproject and `branch.<name>.merge` if you want a more "
"native feel while working in the submodule itself."
msgstr ""
"このオプションを使用して、アップストリームサブプロジェクトからの変更をサブモ"
"ジュールの現在のHEADと統合します。または、サブモジュールから `git pull` を実"
"行することもできます。これは、リモートブランチ名を除いて同等です。`update --"
"remote` はデフォルトのアップストリームリポジトリと `submodule.<name>.branch` "
"を使用し、 `git pull` はサブモジュールの `branch.<name>.merge` を使用します。"
"スーパープロジェクトでデフォルトのアップストリームブランチを配布する場合は "
"`submodule.<name>.branch` を、サブモジュール自体で作業しているときによりネイ"
"ティブな感じが必要な場合は `branch.<name>.merge` を使用してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:366
#, no-wrap
msgid "`-N`"
msgstr "`-N`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:367
#, no-wrap
msgid "`--no-fetch`"
msgstr "`--no-fetch`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:370
msgid ""
"This option is only valid for the update command.  Don't fetch new objects "
"from the remote site."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。リモートサイトから新し"
"いオブジェクトをフェッチしません。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:371
#, no-wrap
msgid "`--checkout`"
msgstr "`--checkout`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:379
msgid ""
"This option is only valid for the update command.  Checkout the commit "
"recorded in the superproject on a detached HEAD in the submodule. This is "
"the default behavior, the main use of this option is to override `submodule."
"$name.update` when set to a value other than `checkout`.  If the key "
"`submodule.$name.update` is either not explicitly set or set to `checkout`, "
"this option is implicit."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。サブモジュールの切り離"
"されたHEAD(detached HEAD)のスーパープロジェクトに記録されたコミットをチェック"
"アウトします。これはデフォルトの動作です。このオプションの主な用途は、 "
"`checkout` 以外の値に設定されたときに `submodule.$name.update` をオーバーライ"
"ドすることです。  キー `submodule.$name.update` が明示的に設定されていない"
"か、 `checkout` に設定されている場合、このオプションが暗黙に指定されていま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:380
#, no-wrap
msgid "`--merge`"
msgstr "`--merge`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:389
msgid ""
"This option is only valid for the update command.  Merge the commit recorded "
"in the superproject into the current branch of the submodule. If this option "
"is given, the submodule's HEAD will not be detached. If a merge failure "
"prevents this process, you will have to resolve the resulting conflicts "
"within the submodule with the usual conflict resolution tools.  If the key "
"`submodule.$name.update` is set to `merge`, this option is implicit."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。 スーパープロジェクトに"
"記録されたコミットをサブモジュールの現在のブランチにマージします。 このオプ"
"ションを指定すると、サブモジュールのHEADは切り離されません。 マージの失敗によ"
"りこの処理が妨げられる場合は、通常の競合解決ツールを使用して、サブモジュール"
"内で発生する競合を解決する必要があります。 キー `submodule.$name.update` が "
"`merge` に設定されている場合、このオプションが暗黙に指定されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:390
#, no-wrap
msgid "`--rebase`"
msgstr "`--rebase`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:398
msgid ""
"This option is only valid for the update command.  Rebase the current branch "
"onto the commit recorded in the superproject. If this option is given, the "
"submodule's HEAD will not be detached. If a merge failure prevents this "
"process, you will have to resolve these failures with linkgit:git-"
"rebase[1].  If the key `submodule.$name.update` is set to `rebase`, this "
"option is implicit."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。 現在のブランチをスー"
"パープロジェクトに記録されたコミットにリベースします。 このオプションを指定す"
"ると、サブモジュールのHEADは切り離されません。 マージの失敗によりこのプロセス"
"が妨げられる場合は、 linkgit:git-rebase[1] を使用してこれらの失敗を解決する必"
"要があります。 キー `submodule.$name.update` が `rebase` に設定されている場"
"合、このオプションが暗黙に指定されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:399
#, no-wrap
msgid "`--init`"
msgstr "`--init`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:403
msgid ""
"This option is only valid for the update command.  Initialize all submodules "
"for which \"git submodule init\" has not been called so far before updating."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。更新する前に、これまで "
"`git submodule init` が呼び出されていないすべてのサブモジュールを初期化しま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:404
#, no-wrap
msgid "`--name`"
msgstr "`--name`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:408
msgid ""
"This option is only valid for the add command. It sets the submodule's name "
"to the given string instead of defaulting to its path. The name must be "
"valid as a directory name and may not end with a '/'."
msgstr ""
"このオプションは、addコマンドに対してのみ有効です。 サブモジュールの名前を、"
"デフォルトのパスではなく、指定の文字列に設定します。 名前はディレクトリ名とし"
"て有効である必要があり、 `/` で終わらせることはできません。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:409
#, no-wrap
msgid "`--reference <repository>`"
msgstr "`--reference <repository>`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:413
#: ../Documentation-sedout/git-submodule.txt:422
msgid ""
"This option is only valid for add and update commands.  These commands "
"sometimes need to clone a remote repository. In this case, this option will "
"be passed to the linkgit:git-clone[1] command."
msgstr ""
"このオプションは、addとupdateコマンドにのみ有効です。これらのコマンドでは、リ"
"モートリポジトリのクローンを作成する必要がある場合があります。その場合、この"
"オプションを linkgit:git-clone[1] コマンドに渡します。"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:417
#, no-wrap
msgid ""
"*NOTE*: Do *not* use this option unless you have read the note\n"
"for linkgit:git-clone[1]'s `--reference`, `--shared`, and `--dissociate`\n"
"options carefully.\n"
msgstr ""
"*注意*: linkgit:git-clone[1] の `--reference` と `--shared` と `--dissociate`\n"
"オプションに関するNOTEを注意深く読んでいない限り、\n"
"このオプションを使用しないでください。\n"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:418
#, no-wrap
msgid "`--dissociate`"
msgstr "`--dissociate`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:424
#, no-wrap
msgid "*NOTE*: see the NOTE for the `--reference` option.\n"
msgstr "*注意*: `--reference` オプションについては NOTE を参照してください。\n"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:425
#, no-wrap
msgid "`--recursive`"
msgstr "`--recursive`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:430
msgid ""
"This option is only valid for foreach, update, status and sync commands.  "
"Traverse submodules recursively. The operation is performed not only in the "
"submodules of the current repo, but also in any nested submodules inside "
"those submodules (and so on)."
msgstr ""
"このオプションは、foreachとupdateとstatusとsyncコマンドにのみ有効です。サブモ"
"ジュールを再帰的にトラバースします。この操作は、現在のリポジトリのサブモ"
"ジュールだけでなく、それらのサブモジュール内のネストされたサブモジュール(な"
"ど)でも実行されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:431
#, no-wrap
msgid "`--depth`"
msgstr "`--depth`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:435
msgid ""
"This option is valid for add and update commands. Create a 'shallow' clone "
"with a history truncated to the specified number of revisions.  See linkgit:"
"git-clone[1]"
msgstr ""
"このオプションは、addとupdateコマンドに有効です。 指定のリビジョン数に切り捨"
"てられた履歴を持つ「浅い」クローン(shallow clone)を作成します。 linkgit:git-"
"clone[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:436
#, no-wrap
msgid "`--[no-]recommend-shallow`"
msgstr "`--[no-]recommend-shallow`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:441
msgid ""
"This option is only valid for the update command.  The initial clone of a "
"submodule will use the recommended `submodule.<name>.shallow` as provided by "
"the `.gitmodules` file by default. To ignore the suggestions use `--no-"
"recommend-shallow`."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。サブモジュールの初期ク"
"ローンは、デフォルトで `.gitmodules` ファイルによって提供される推奨される "
"`submodule.<name>.shallow` を使用します。 提案を無視するには、`--no-"
"recommend-shallow` を使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:442
#, no-wrap
msgid "`-j <n>`"
msgstr "`-j <n>`"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:443
#, no-wrap
msgid "`--jobs <n>`"
msgstr "`--jobs <n>`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:447
msgid ""
"This option is only valid for the update command.  Clone new submodules in "
"parallel with as many jobs.  Defaults to the `submodule.fetchJobs` option."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。多くのジョブと並行して"
"新しいサブモジュールのクローンを作成します。デフォルトは `submodule."
"fetchJobs` オプションです。"

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:448
#, no-wrap
msgid "`--[no-]single-branch`"
msgstr "`--[no-]single-branch`"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:451
msgid ""
"This option is only valid for the update command.  Clone only one branch "
"during update: HEAD or one specified by --branch."
msgstr ""
"このオプションは、updateコマンドに対してのみ有効です。 HEAD または、 `--"
"branch` で指定されたブランチは、更新中に1つのブランチのみを複製します "

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:452
#, no-wrap
msgid "<path>..."
msgstr "<path>..."

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:456
msgid ""
"Paths to submodule(s). When specified this will restrict the command to only "
"operate on the submodules found at the specified paths.  (This argument is "
"required with add)."
msgstr ""
"サブモジュールへのパス。これを指定すると、指定したパスで見つかったサブモ"
"ジュールでのみ動作するようにコマンドが制限されます。(この引数はaddでは必須で"
"す)。"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:458
#, no-wrap
msgid "FILES"
msgstr "FILES"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:464
msgid ""
"When initializing submodules, a `.gitmodules` file in the top-level "
"directory of the containing repository is used to find the url of each "
"submodule.  This file should be formatted in the same way as `$GIT_DIR/"
"config`. The key to each submodule url is \"submodule.$name.url\".  See "
"linkgit:gitmodules[5] for details."
msgstr ""
"サブモジュールを初期化するとき、含まれているリポジトリの最上位ディレクトリに"
"ある `.gitmodules` ファイルを使用して、各サブモジュールのURLを検索します。 こ"
"のファイルは、 `$GIT_DIR/config` と同じ方法でフォーマットする必要があります。"
"各サブモジュールURLのキーは、「submodule.$name.url」です。 詳細については、 "
"linkgit:gitmodules[5] を参照してください。"

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:466
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:468
msgid "linkgit:gitsubmodules[7], linkgit:gitmodules[5]."
msgstr "linkgit:gitsubmodules[7], linkgit:gitmodules[5]."

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:470
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:471
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"

#, no-wrap
#~ msgid "the commit recorded in the superproject will be\n"
#~ msgstr "スーパープロジェクトに記録されたコミットは、\n"

#, no-wrap
#~ msgid "checked out in the submodule on a detached HEAD.\n"
#~ msgstr "切り離されたHEAD(detached HEAD)のサブモジュール(submodule)でチェックアウトされます。\n"
