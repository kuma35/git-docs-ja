# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-submodule.txt:2
#, no-wrap
msgid "git-submodule(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:7
msgid "git-submodule - Initialize, update or inspect submodules"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:24
#, no-wrap
msgid ""
"'git submodule' [--quiet] [--cached]\n"
"'git submodule' [--quiet] add [<options>] [--] <repository> [<path>]\n"
"'git submodule' [--quiet] status [--cached] [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] init [--] [<path>...]\n"
"'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <path>...)\n"
"'git submodule' [--quiet] update [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] set-branch [<options>] [--] <path>\n"
"'git submodule' [--quiet] set-url [--] <path> <newurl>\n"
"'git submodule' [--quiet] summary [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] foreach [--recursive] <command>\n"
"'git submodule' [--quiet] sync [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] absorbgitdirs [--] [<path>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:27
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:29
msgid "Inspects, updates and manages submodules."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:31
msgid "For more information about submodules, see linkgit:gitsubmodules[7]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:33
#, no-wrap
msgid "COMMANDS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:36
msgid ""
"With no arguments, shows the status of existing submodules.  Several "
"subcommands are available to perform operations on the submodules."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:37
#, no-wrap
msgid "add [-b <branch>] [-f|--force] [--name <name>] [--reference <repository>] [--depth <depth>] [--] <repository> [<path>]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:41
msgid ""
"Add the given repository as a submodule at the given path to the changeset "
"to be committed next to the current project: the current project is termed "
"the \"superproject\"."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:50
msgid ""
"<repository> is the URL of the new submodule's origin repository.  This may "
"be either an absolute URL, or (if it begins with ./ or ../), the location "
"relative to the superproject's default remote repository (Please note that "
"to specify a repository 'foo.git' which is located right next to a "
"superproject 'bar.git', you'll have to use `../foo.git` instead of `./foo."
"git` - as one might expect when following the rules for relative URLs - "
"because the evaluation of relative URLs in Git is identical to that of "
"relative directories)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:57
msgid ""
"The default remote is the remote of the remote-tracking branch of the "
"current branch. If no such remote-tracking branch exists or the HEAD is "
"detached, \"origin\" is assumed to be the default remote.  If the "
"superproject doesn't have a default remote configured the superproject is "
"its own authoritative upstream and the current working directory is used "
"instead."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:66
msgid ""
"The optional argument <path> is the relative location for the cloned "
"submodule to exist in the superproject. If <path> is not given, the "
"canonical part of the source repository is used (\"repo\" for \"/path/to/"
"repo.git\" and \"foo\" for \"host.xz:foo/.git\"). If <path> exists and is "
"already a valid Git repository, then it is staged for commit without "
"cloning. The <path> is also used as the submodule's logical name in its "
"configuration entries unless `--name` is used to specify a logical name."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:74
msgid ""
"The given URL is recorded into `.gitmodules` for use by subsequent users "
"cloning the superproject. If the URL is given relative to the superproject's "
"repository, the presumption is the superproject and submodule repositories "
"will be kept together in the same relative location, and only the "
"superproject's URL needs to be provided.  git-submodule will correctly "
"locate the submodule using the relative URL in `.gitmodules`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:75
#, no-wrap
msgid "status [--cached] [--recursive] [--] [<path>...]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:83
msgid ""
"Show the status of the submodules. This will print the SHA-1 of the "
"currently checked out commit for each submodule, along with the submodule "
"path and the output of 'git describe' for the SHA-1. Each SHA-1 will "
"possibly be prefixed with `-` if the submodule is not initialized, `+` if "
"the currently checked out submodule commit does not match the SHA-1 found in "
"the index of the containing repository and `U` if the submodule has merge "
"conflicts."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:86
msgid ""
"If `--cached` is specified, this command will instead print the SHA-1 "
"recorded in the superproject for each submodule."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:89
msgid ""
"If `--recursive` is specified, this command will recurse into nested "
"submodules, and show their status as well."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:94
msgid ""
"If you are only interested in changes of the currently initialized "
"submodules with respect to the commit recorded in the index or the HEAD, "
"linkgit:git-status[1] and linkgit:git-diff[1] will provide that information "
"too (and can also report changes to a submodule's work tree)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:95
#, no-wrap
msgid "init [--] [<path>...]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:102
msgid ""
"Initialize the submodules recorded in the index (which were added and "
"committed elsewhere) by setting `submodule.$name.url` in .git/config. It "
"uses the same setting from `.gitmodules` as a template. If the URL is "
"relative, it will be resolved using the default remote. If there is no "
"default remote, the current repository will be assumed to be upstream."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:107
msgid ""
"Optional <path> arguments limit which submodules will be initialized.  If no "
"path is specified and submodule.active has been configured, submodules "
"configured to be active will be initialized, otherwise all submodules are "
"initialized."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:115
msgid ""
"When present, it will also copy the value of `submodule.$name.update`.  This "
"command does not alter existing information in .git/config.  You can then "
"customize the submodule clone URLs in .git/config for your local setup and "
"proceed to `git submodule update`; you can also just use `git submodule "
"update --init` without the explicit 'init' step if you do not intend to "
"customize any submodule locations."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:117
msgid "See the add subcommand for the definition of default remote."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:118
#, no-wrap
msgid "deinit [-f|--force] (--all|[--] <path>...)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:125
msgid ""
"Unregister the given submodules, i.e. remove the whole `submodule.$name` "
"section from .git/config together with their work tree. Further calls to "
"`git submodule update`, `git submodule foreach` and `git submodule sync` "
"will skip any unregistered submodules until they are initialized again, so "
"use this command if you don't want to have a local checkout of the submodule "
"in your working tree anymore."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:128
msgid ""
"When the command is run without pathspec, it errors out, instead of deinit-"
"ing everything, to prevent mistakes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:131
msgid ""
"If `--force` is specified, the submodule's working tree will be removed even "
"if it contains local modifications."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:135
msgid ""
"If you really want to remove a submodule from the repository and commit that "
"use linkgit:git-rm[1] instead. See linkgit:gitsubmodules[7] for removal "
"options."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:136
#, no-wrap
msgid "update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--] [<path>...]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:148
msgid ""
"Update the registered submodules to match what the superproject expects by "
"cloning missing submodules, fetching missing commits in submodules and "
"updating the working tree of the submodules. The \"updating\" can be done in "
"several ways depending on command line options and the value of `submodule."
"<name>.update` configuration variable. The command line option takes "
"precedence over the configuration variable. If neither is given, a "
"'checkout' is performed.  The 'update' procedures supported both from the "
"command line as well as through the `submodule.<name>.update` configuration "
"are:"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:149
#, no-wrap
msgid "checkout"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:150
msgid "the commit recorded in the superproject will be"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:151
#, no-wrap
msgid "checked out in the submodule on a detached HEAD.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:156
msgid ""
"If `--force` is specified, the submodule will be checked out (using `git "
"checkout --force`), even if the commit specified in the index of the "
"containing repository already matches the commit checked out in the "
"submodule."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:157
#, no-wrap
msgid "rebase"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:158
msgid "the current branch of the submodule will be rebased"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:159
#, no-wrap
msgid "onto the commit recorded in the superproject.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:160
#, no-wrap
msgid "merge"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:161
msgid "the commit recorded in the superproject will be merged"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:162
#, no-wrap
msgid "into the current branch in the submodule.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:165
msgid ""
"The following 'update' procedures are only available via the `submodule."
"<name>.update` configuration variable:"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:166
#, no-wrap
msgid "custom command"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:167
msgid "arbitrary shell command that takes a single"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:171
#, no-wrap
msgid ""
"argument (the sha1 of the commit recorded in the\n"
"superproject) is executed. When `submodule.<name>.update`\n"
"is set to '!command', the remainder after the exclamation mark\n"
"is the custom command.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:172
#, no-wrap
msgid "none"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:173
msgid "the submodule is not updated."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:177
msgid ""
"If the submodule is not yet initialized, and you just want to use the "
"setting as stored in `.gitmodules`, you can automatically initialize the "
"submodule with the `--init` option."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:180
msgid ""
"If `--recursive` is specified, this command will recurse into the registered "
"submodules, and update any nested submodules within."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:181
#, no-wrap
msgid "set-branch (-b|--branch) <branch> [--] <path>"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:182
#, no-wrap
msgid "set-branch (-d|--default) [--] <path>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:187
msgid ""
"Sets the default remote tracking branch for the submodule. The `--branch` "
"option allows the remote branch to be specified. The `--default` option "
"removes the submodule.<name>.branch configuration key, which causes the "
"tracking branch to default to the remote 'HEAD'."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:188
#, no-wrap
msgid "set-url [--] <path> <newurl>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:192
msgid ""
"Sets the URL of the specified submodule to <newurl>. Then, it will "
"automatically synchronize the submodule's new remote URL configuration."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:193
#, no-wrap
msgid "summary [--cached|--files] [(-n|--summary-limit) <n>] [commit] [--] [<path>...]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:202
msgid ""
"Show commit summary between the given commit (defaults to HEAD) and working "
"tree/index. For a submodule in question, a series of commits in the "
"submodule between the given super project commit and the index or working "
"tree (switched by `--cached`) are shown. If the option `--files` is given, "
"show the series of commits in the submodule between the index of the super "
"project and the working tree of the submodule (this option doesn't allow to "
"use the `--cached` option or to provide an explicit commit)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:205
msgid ""
"Using the `--submodule=log` option with linkgit:git-diff[1] will provide "
"that information too."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:206
#, no-wrap
msgid "foreach [--recursive] <command>"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:227
msgid ""
"Evaluates an arbitrary shell command in each checked out submodule.  The "
"command has access to the variables $name, $sm_path, $displaypath, $sha1 and "
"$toplevel: $name is the name of the relevant submodule section in `."
"gitmodules`, $sm_path is the path of the submodule as recorded in the "
"immediate superproject, $displaypath contains the relative path from the "
"current working directory to the submodules root directory, $sha1 is the "
"commit as recorded in the immediate superproject, and $toplevel is the "
"absolute path to the top-level of the immediate superproject.  Note that to "
"avoid conflicts with '$PATH' on Windows, the '$path' variable is now a "
"deprecated synonym of '$sm_path' variable.  Any submodules defined in the "
"superproject but not checked out are ignored by this command. Unless given "
"`--quiet`, foreach prints the name of each submodule before evaluating the "
"command.  If `--recursive` is given, submodules are traversed recursively (i."
"e.  the given shell command is evaluated in nested submodules as well).  A "
"non-zero return from the command in any submodule causes the processing to "
"terminate. This can be overridden by adding '|| :' to the end of the command."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:230
msgid ""
"As an example, the command below will show the path and currently checked "
"out commit for each submodule:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-submodule.txt:233
#, no-wrap
msgid "git submodule foreach 'echo $sm_path `git rev-parse HEAD`'\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:235
#, no-wrap
msgid "sync [--recursive] [--] [<path>...]"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:242
msgid ""
"Synchronizes submodules' remote URL configuration setting to the value "
"specified in `.gitmodules`. It will only affect those submodules which "
"already have a URL entry in .git/config (that is the case when they are "
"initialized or freshly added). This is useful when submodule URLs change "
"upstream and you need to update your local repositories accordingly."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:245
msgid ""
"`git submodule sync` synchronizes all submodules while `git submodule sync "
"-- A` synchronizes submodule \"A\" only."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:248
msgid ""
"If `--recursive` is specified, this command will recurse into the registered "
"submodules, and sync any nested submodules within."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:249
#, no-wrap
msgid "absorbgitdirs"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:256
msgid ""
"If a git directory of a submodule is inside the submodule, move the git "
"directory of the submodule into its superproject's `$GIT_DIR/modules` path "
"and then connect the git directory and its working directory by setting the "
"`core.worktree` and adding a .git file pointing to the git directory "
"embedded in the superprojects git directory."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:260
msgid ""
"A repository that was cloned independently and later added as a submodule or "
"old setups have the submodules git directory inside the submodule instead of "
"embedded into the superprojects git directory."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:262
msgid "This command is recursive by default."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:264
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:265
#, no-wrap
msgid "`-q`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:266
#, no-wrap
msgid "`--quiet`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:268
msgid "Only print error messages."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:269
#, no-wrap
msgid "`--progress`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:275
msgid ""
"This option is only valid for add and update commands.  Progress status is "
"reported on the standard error stream by default when it is attached to a "
"terminal, unless -q is specified. This flag forces progress status even if "
"the standard error stream is not directed to a terminal."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:276
#, no-wrap
msgid "`--all`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:279
msgid ""
"This option is only valid for the deinit command. Unregister all submodules "
"in the working tree."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:280
#, no-wrap
msgid "`-b <branch>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:281
#, no-wrap
msgid "`--branch <branch>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:288
msgid ""
"Branch of repository to add as submodule.  The name of the branch is "
"recorded as `submodule.<name>.branch` in `.gitmodules` for `update --"
"remote`.  A special value of `.` is used to indicate that the name of the "
"branch in the submodule should be the same name as the current branch in the "
"current repository.  If the option is not specified, it defaults to the "
"remote 'HEAD'."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:289
#, no-wrap
msgid "`-f`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:290
#, no-wrap
msgid "`--force`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:301
msgid ""
"This option is only valid for add, deinit and update commands.  When running "
"add, allow adding an otherwise ignored submodule path.  When running deinit "
"the submodule working trees will be removed even if they contain local "
"changes.  When running update (only effective with the checkout procedure), "
"throw away local changes in submodules when switching to a different commit; "
"and always run a checkout operation in the submodule, even if the commit "
"listed in the index of the containing repository matches the commit checked "
"out in the submodule."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:302
#, no-wrap
msgid "`--cached`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:306
msgid ""
"This option is only valid for status and summary commands.  These commands "
"typically use the commit found in the submodule HEAD, but with this option, "
"the commit stored in the index is used instead."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:307
#, no-wrap
msgid "`--files`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:311
msgid ""
"This option is only valid for the summary command. This command compares the "
"commit in the index with that in the submodule HEAD when this option is used."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:312
#, no-wrap
msgid "`-n`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:313
#, no-wrap
msgid "`--summary-limit`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:319
msgid ""
"This option is only valid for the summary command.  Limit the summary size "
"(number of commits shown in total).  Giving 0 will disable the summary; a "
"negative number means unlimited (the default). This limit only applies to "
"modified submodules. The size is always limited to 1 for added/deleted/"
"typechanged submodules."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:320
#, no-wrap
msgid "`--remote`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:329
msgid ""
"This option is only valid for the update command.  Instead of using the "
"superproject's recorded SHA-1 to update the submodule, use the status of the "
"submodule's remote-tracking branch.  The remote used is branch's remote "
"(`branch.<name>.remote`), defaulting to `origin`.  The remote branch used "
"defaults to the remote `HEAD`, but the branch name may be overridden by "
"setting the `submodule.<name>.branch` option in either `.gitmodules` or `."
"git/config` (with `.git/config` taking precedence)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:335
msgid ""
"This works for any of the supported update procedures (`--checkout`, `--"
"rebase`, etc.).  The only change is the source of the target SHA-1.  For "
"example, `submodule update --remote --merge` will merge upstream submodule "
"changes into the submodules, while `submodule update --merge` will merge "
"superproject gitlink changes into the submodules."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:340
msgid ""
"In order to ensure a current tracking branch state, `update --remote` "
"fetches the submodule's remote repository before calculating the SHA-1.  If "
"you don't want to fetch, you should use `submodule update --remote --no-"
"fetch`."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:350
msgid ""
"Use this option to integrate changes from the upstream subproject with your "
"submodule's current HEAD.  Alternatively, you can run `git pull` from the "
"submodule, which is equivalent except for the remote branch name: `update --"
"remote` uses the default upstream repository and `submodule.<name>.branch`, "
"while `git pull` uses the submodule's `branch.<name>.merge`.  Prefer "
"`submodule.<name>.branch` if you want to distribute the default upstream "
"branch with the superproject and `branch.<name>.merge` if you want a more "
"native feel while working in the submodule itself."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:351
#, no-wrap
msgid "`-N`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:352
#, no-wrap
msgid "`--no-fetch`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:355
msgid ""
"This option is only valid for the update command.  Don't fetch new objects "
"from the remote site."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:356
#, no-wrap
msgid "`--checkout`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:364
msgid ""
"This option is only valid for the update command.  Checkout the commit "
"recorded in the superproject on a detached HEAD in the submodule. This is "
"the default behavior, the main use of this option is to override `submodule."
"$name.update` when set to a value other than `checkout`.  If the key "
"`submodule.$name.update` is either not explicitly set or set to `checkout`, "
"this option is implicit."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:365
#, no-wrap
msgid "`--merge`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:374
msgid ""
"This option is only valid for the update command.  Merge the commit recorded "
"in the superproject into the current branch of the submodule. If this option "
"is given, the submodule's HEAD will not be detached. If a merge failure "
"prevents this process, you will have to resolve the resulting conflicts "
"within the submodule with the usual conflict resolution tools.  If the key "
"`submodule.$name.update` is set to `merge`, this option is implicit."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:375
#, no-wrap
msgid "`--rebase`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:383
msgid ""
"This option is only valid for the update command.  Rebase the current branch "
"onto the commit recorded in the superproject. If this option is given, the "
"submodule's HEAD will not be detached. If a merge failure prevents this "
"process, you will have to resolve these failures with linkgit:git-"
"rebase[1].  If the key `submodule.$name.update` is set to `rebase`, this "
"option is implicit."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:384
#, no-wrap
msgid "`--init`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:388
msgid ""
"This option is only valid for the update command.  Initialize all submodules "
"for which \"git submodule init\" has not been called so far before updating."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:389
#, no-wrap
msgid "`--name`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:393
msgid ""
"This option is only valid for the add command. It sets the submodule's name "
"to the given string instead of defaulting to its path. The name must be "
"valid as a directory name and may not end with a '/'."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:394
#, no-wrap
msgid "`--reference <repository>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:398
#: ../Documentation-sedout/git-submodule.txt:407
msgid ""
"This option is only valid for add and update commands.  These commands "
"sometimes need to clone a remote repository. In this case, this option will "
"be passed to the linkgit:git-clone[1] command."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:402
#, no-wrap
msgid ""
"*NOTE*: Do *not* use this option unless you have read the note\n"
"for linkgit:git-clone[1]'s `--reference`, `--shared`, and `--dissociate`\n"
"options carefully.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:403
#, no-wrap
msgid "`--dissociate`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:409
#, no-wrap
msgid "*NOTE*: see the NOTE for the `--reference` option.\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:410
#, no-wrap
msgid "`--recursive`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:415
msgid ""
"This option is only valid for foreach, update, status and sync commands.  "
"Traverse submodules recursively. The operation is performed not only in the "
"submodules of the current repo, but also in any nested submodules inside "
"those submodules (and so on)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:416
#, no-wrap
msgid "`--depth`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:420
msgid ""
"This option is valid for add and update commands. Create a 'shallow' clone "
"with a history truncated to the specified number of revisions.  See linkgit:"
"git-clone[1]"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:421
#, no-wrap
msgid "`--[no-]recommend-shallow`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:426
msgid ""
"This option is only valid for the update command.  The initial clone of a "
"submodule will use the recommended `submodule.<name>.shallow` as provided by "
"the `.gitmodules` file by default. To ignore the suggestions use `--no-"
"recommend-shallow`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:427
#, no-wrap
msgid "`-j <n>`"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:428
#, no-wrap
msgid "`--jobs <n>`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:432
msgid ""
"This option is only valid for the update command.  Clone new submodules in "
"parallel with as many jobs.  Defaults to the `submodule.fetchJobs` option."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:433
#, no-wrap
msgid "`--[no-]single-branch`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:436
msgid ""
"This option is only valid for the update command.  Clone only one branch "
"during update: HEAD or one specified by --branch."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-submodule.txt:437
#, no-wrap
msgid "<path>..."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:441
msgid ""
"Paths to submodule(s). When specified this will restrict the command to only "
"operate on the submodules found at the specified paths.  (This argument is "
"required with add)."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:443
#, no-wrap
msgid "FILES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:449
msgid ""
"When initializing submodules, a `.gitmodules` file in the top-level "
"directory of the containing repository is used to find the url of each "
"submodule.  This file should be formatted in the same way as `$GIT_DIR/"
"config`. The key to each submodule url is \"submodule.$name.url\".  See "
"linkgit:gitmodules[5] for details."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:451
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:453
msgid "linkgit:gitsubmodules[7], linkgit:gitmodules[5]."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-submodule.txt:455
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-submodule.txt:456
msgid "Part of the linkgit:git[1] suite"
msgstr ""
