# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2022-10-06 12:43+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-show-branch.txt:2
#, no-wrap
msgid "git-show-branch(1)"
msgstr "git-show-branch(1)"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:7
msgid "git-show-branch - Show branches and their commits"
msgstr "git-show-branch - ブランチとそのコミットを表示します"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:17
#, fuzzy, no-wrap
#| msgid ""
#| "'git show-branch' [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
#| "\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
#| "\t\t[--more=<n> | --list | --independent | --merge-base]\n"
#| "\t\t[--no-name | --sha1-name] [--topics]\n"
#| "\t\t[(<rev> | <glob>)...]\n"
#| "'git show-branch' (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]\n"
msgid ""
"'git show-branch' [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
"\t\t[--no-name | --sha1-name] [--topics]\n"
"\t\t[(<rev> | <glob>)...]\n"
"'git show-branch' (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]\n"
msgstr ""
"'git show-branch' [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
"\t\t[--no-name | --sha1-name] [--topics]\n"
"\t\t[(<rev> | <glob>)...]\n"
"'git show-branch' (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]\n"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:19
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:24
msgid ""
"Shows the commit ancestry graph starting from the commits named with <rev>s "
"or <glob>s (or all refs under refs/heads and/or refs/tags) semi-visually."
msgstr ""
"<rev> または <glob> (または、 refs/heads および/または refs/tags の下のすべて"
"のref)で名前が付けられたコミットから始まるコミットの祖先グラフを半視覚的に表"
"示します。"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:26
msgid "It cannot show more than 29 branches and commits at a time."
msgstr "一度に29を超えるブランチとコミットを表示することはできません。"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:29
msgid ""
"It uses `showbranch.default` multi-valued configuration items if no <rev> or "
"<glob> is given on the command line."
msgstr ""
"コマンドラインで <rev> または <glob> が指定されていない場合は、 `showbranch."
"default` の複数値(multi-valued)の構成アイテムを使用します。"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:32
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:33
#, no-wrap
msgid "<rev>"
msgstr "<rev>"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:36
msgid ""
"Arbitrary extended SHA-1 expression (see linkgit:gitrevisions[7])  that "
"typically names a branch head or a tag."
msgstr ""
"通常はブランチヘッドまたはタグに名前を付ける任意の拡張SHA-1式 (linkgit:"
"gitrevisions[7] 参照)。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:37
#, no-wrap
msgid "<glob>"
msgstr "<glob>"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:42
msgid ""
"A glob pattern that matches branch or tag names under refs/.  For example, "
"if you have many topic branches under refs/heads/topic, giving `topic/*` "
"would show all of them."
msgstr ""
"refs/ の下のブランチ名またはタグ名に一致するグロブパターン。 たとえば、 refs/"
"heads/topic の下に多くのトピックブランチがある場合、 `topic/*` を指定するとそ"
"れらすべてが表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:43
#, no-wrap
msgid "`-r`"
msgstr "`-r`"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:44
#, no-wrap
msgid "`--remotes`"
msgstr "`--remotes`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:46
msgid "Show the remote-tracking branches."
msgstr "リモート追跡ブランチを表示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:47
#, no-wrap
msgid "`-a`"
msgstr "`-a`"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:48
#, no-wrap
msgid "`--all`"
msgstr "`--all`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:50
msgid "Show both remote-tracking branches and local branches."
msgstr "リモート追跡ブランチとローカルブランチの両方を表示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:51
#, no-wrap
msgid "`--current`"
msgstr "`--current`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:55
msgid ""
"With this option, the command includes the current branch to the list of "
"revs to be shown when it is not given on the command line."
msgstr ""
"このオプションを使用すると、コマンドラインに指定されていない場合に表示される"
"revのリストに現在のブランチが含まれます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:56
#, no-wrap
msgid "`--topo-order`"
msgstr "`--topo-order`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:61
msgid ""
"By default, the branches and their commits are shown in reverse "
"chronological order.  This option makes them appear in topological order (i."
"e., descendant commits are shown before their parents)."
msgstr ""
"デフォルトでは、ブランチとそのコミットは新しい順に表示されます。このオプショ"
"ンを使用すると、トポロジカル順に表示されます(つまり、子孫のコミットは親の前に"
"表示されます)。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:62
#, no-wrap
msgid "`--date-order`"
msgstr "`--date-order`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:66
msgid ""
"This option is similar to `--topo-order` in the sense that no parent comes "
"before all of its children, but otherwise commits are ordered according to "
"their commit date."
msgstr ""
"このオプションは、すべての子の前に親が来ないという意味で `--topo-order` に似"
"ていますが、それ以外の場合、コミットはコミット日に従って順序付けられます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:67
#, no-wrap
msgid "`--sparse`"
msgstr "`--sparse`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:71
msgid ""
"By default, the output omits merges that are reachable from only one tip "
"being shown.  This option makes them visible."
msgstr ""
"デフォルトでは、出力には、表示されている1つの先端からのみ到達可能なマージが省"
"略されています。このオプションにより、それらが表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:72
#, no-wrap
msgid "`--more=<n>`"
msgstr "`--more=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:78
#, fuzzy
#| msgid ""
#| "Usually the command stops output upon showing the commit that is the "
#| "common ancestor of all the branches.  This flag tells the command to go "
#| "<n> more common commits beyond that.  When <n> is negative, display only "
#| "the <reference>s given, without showing the commit ancestry tree."
msgid ""
"Usually the command stops output upon showing the commit that is the common "
"ancestor of all the branches.  This flag tells the command to go <n> more "
"common commits beyond that.  When <n> is negative, display only the <ref>s "
"given, without showing the commit ancestry tree."
msgstr ""
"通常、コマンドは、すべてのブランチの共通の祖先であるコミットを表示すると出力"
"を停止します。このフラグは、それを超えて共通のコミットを <n> 回表示するようコ"
"マンドに指示します。 <n>が負の場合、コミットの祖先ツリーを表示せずに、指定さ"
"れた<reference>のみを表示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:79
#, no-wrap
msgid "`--list`"
msgstr "`--list`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:81
msgid "Synonym to `--more=-1`"
msgstr "`--more=-1` と同義です。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:82
#, no-wrap
msgid "`--merge-base`"
msgstr "`--merge-base`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:88
msgid ""
"Instead of showing the commit list, determine possible merge bases for the "
"specified commits. All merge bases will be contained in all specified "
"commits. This is different from how linkgit:git-merge-base[1] handles the "
"case of three or more commits."
msgstr ""
"コミットリストを表示する代わりに、指定されたコミットの可能なマージベースを決"
"定します。すべてのマージベースは、指定されたすべてのコミットに含まれます。 こ"
"れは、 linkgit:git-merge-base[1] が3つ以上のコミットの場合を処理する方法とは"
"異なります。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:89
#, no-wrap
msgid "`--independent`"
msgstr "`--independent`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:92
#, fuzzy
#| msgid ""
#| "Among the <reference>s given, display only the ones that cannot be "
#| "reached from any other <reference>."
msgid ""
"Among the <ref>s given, display only the ones that cannot be reached from "
"any other <ref>."
msgstr ""
"与えられた <reference> のうち、他の <reference> から到達できないもののみを表"
"示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:93
#, no-wrap
msgid "`--no-name`"
msgstr "`--no-name`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:95
msgid "Do not show naming strings for each commit."
msgstr "各コミットの名前付け文字列(naming strings)を表示しません。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:96
#, no-wrap
msgid "`--sha1-name`"
msgstr "`--sha1-name`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:101
msgid ""
"Instead of naming the commits using the path to reach them from heads (e.g. "
"\"master~2\" to mean the grandparent of \"master\"), name them with the "
"unique prefix of their object names."
msgstr ""
"ヘッドからコミットに到達するためのパスを使用してコミットに名前を付ける代わり"
"に(たとえば、「master」の祖父母を意味する「master~2」)、オブジェクト名の一意"
"のプレフィックスを使用してコミットに名前を付けます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:102
#, no-wrap
msgid "`--topics`"
msgstr "`--topics`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:109
msgid ""
"Shows only commits that are NOT on the first branch given.  This helps track "
"topic branches by hiding any commit that is already in the main line of "
"development.  When given \"git show-branch --topics master topic1 topic2\", "
"this will show the revisions given by \"git rev-list {caret}master topic1 "
"topic2\""
msgstr ""
"指定された最初のブランチにないコミットのみを表示します。これは、すでに開発の"
"メインラインにあるコミットを非表示にすることで、トピックブランチを追跡するの"
"に役立ちます。 `git show-branch --topics master topic1 topic2` を指定する"
"と、 `git rev-list {caret}master topic1 topic2` で指定されたリビジョンが表示"
"されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:110
#, no-wrap
msgid "`-g`"
msgstr "`-g`"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:111
#, no-wrap
msgid "`--reflog[=<n>[,<base>]] [<ref>]`"
msgstr "`--reflog[=<n>[,<base>]] [<ref>]`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:117
msgid ""
"Shows <n> most recent ref-log entries for the given ref.  If <base> is "
"given, <n> entries going back from that entry.  <base> can be specified as "
"count or date.  When no explicit <ref> parameter is given, it defaults to "
"the current branch (or `HEAD` if it is detached)."
msgstr ""
"指定された参照の最新の参照ログエントリを<n>個表示します。<base>が指定されてい"
"る場合、<n>エントリはそのエントリから戻ります。 <base>は、カウントまたは日付"
"として指定できます。 明示的な<ref>パラメータが指定されていない場合、デフォル"
"トで現在のブランチ(またはデタッチされている場合は `HEAD` )になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:118
#, no-wrap
msgid "`--color[=<when>]`"
msgstr "`--color[=<when>]`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:122
msgid ""
"Color the status sign (one of these: `*` `!` `+` `-`) of each commit "
"corresponding to the branch it's in.  The value must be always (the "
"default), never, or auto."
msgstr ""
"所属するブランチに対応する各コミットのステータス記号(`*` `！` `+` `-` )に色を"
"付けます。値は always (デフォルト) または never または auto である必要があり"
"ます。"

#. type: Labeled list
#: ../Documentation-sedout/git-show-branch.txt:123
#, no-wrap
msgid "`--no-color`"
msgstr "`--no-color`"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:127
msgid ""
"Turn off colored output, even when the configuration file gives the default "
"to color output.  Same as `--color=never`."
msgstr ""
"構成ファイルでデフォルトのカラー出力が指定されている場合でも、カラー出力をオ"
"フにします。 `--color=never` と同じです。"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:130
msgid ""
"Note that --more, --list, --independent and --merge-base options are "
"mutually exclusive."
msgstr ""
"`--more@ と `-list` と `-independent` と `--merge-base` オプションは相互に排"
"他的であることに注意してください。"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:133
#, no-wrap
msgid "OUTPUT"
msgstr "OUTPUT"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:139
#, fuzzy
#| msgid ""
#| "Given N <references>, the first N lines are the one-line description from "
#| "their commit message.  The branch head that is pointed at by $GIT_DIR/"
#| "HEAD is prefixed with an asterisk `*` character while other heads are "
#| "prefixed with a `!` character."
msgid ""
"Given N <ref>s, the first N lines are the one-line description from their "
"commit message. The branch head that is pointed at by $GIT_DIR/HEAD is "
"prefixed with an asterisk `*` character while other heads are prefixed with "
"a `!` character."
msgstr ""
"N <references> が与えられた場合、最初のN行はコミットメッセージからの各1行説明"
"です。 $GIT_DIR/HEAD が指すブランチヘッドには、アスタリスクの `*` 文字が接頭"
"辞として付けられ、他のヘッドには、 `!` 文字が接頭辞として付けられます。"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:146
msgid ""
"Following these N lines, one-line log for each commit is displayed, indented "
"N places.  If a commit is on the I-th branch, the I-th indentation character "
"shows a `+` sign; otherwise it shows a space.  Merge commits are denoted by "
"a `-` sign.  Each commit shows a short name that can be used as an extended "
"SHA-1 to name that commit."
msgstr ""
"これらのN行に続いて、コミットごとに1行のログが表示され、N桁インデントされま"
"す。 コミットがI番目のブランチにある場合、I番目のインデント文字は `+` 記号を"
"示します。それ以外の場合は、スペースが表示されます。 マージコミットは `-` 記"
"号で示されます。各コミットは、そのコミットに名前を付けるための拡張SHA-1として"
"使用できる短い名前が表示されます。"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:149
msgid ""
"The following example shows three branches, \"master\", \"fixes\" and "
"\"mhf\":"
msgstr ""
"以下の例は、「master」と「fixes」と「mhf」の3つのブランチを示しています:"

#. type: delimited block -
#: ../Documentation-sedout/git-show-branch.txt:155
#, no-wrap
msgid ""
"$ git show-branch master fixes mhf\n"
"* [master] Add 'git show-branch'.\n"
" ! [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  ! [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"---\n"
msgstr ""
"$ git show-branch master fixes mhf\n"
"* [master] Add 'git show-branch'.\n"
" ! [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  ! [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"---\n"

#. type: delimited block -
#: ../Documentation-sedout/git-show-branch.txt:167
#, no-wrap
msgid ""
"  + [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"  + [mhf~1] Use git-octopus when pulling more than one heads.\n"
" +  [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  + [mhf~2] \"git fetch --force\".\n"
"  + [mhf~3] Use .git/remote/origin, not .git/branches/origin.\n"
"  + [mhf~4] Make \"git pull\" and \"git fetch\" default to origin\n"
"  + [mhf~5] Infamous 'octopus merge'\n"
"  + [mhf~6] Retire git-parse-remote.\n"
"  + [mhf~7] Multi-head fetch.\n"
"  + [mhf~8] Start adding the $GIT_DIR/remotes/ support.\n"
"*++ [master] Add 'git show-branch'.\n"
msgstr ""
"  + [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"  + [mhf~1] Use git-octopus when pulling more than one heads.\n"
" +  [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  + [mhf~2] \"git fetch --force\".\n"
"  + [mhf~3] Use .git/remote/origin, not .git/branches/origin.\n"
"  + [mhf~4] Make \"git pull\" and \"git fetch\" default to origin\n"
"  + [mhf~5] Infamous 'octopus merge'\n"
"  + [mhf~6] Retire git-parse-remote.\n"
"  + [mhf~7] Multi-head fetch.\n"
"  + [mhf~8] Start adding the $GIT_DIR/remotes/ support.\n"
"*++ [master] Add 'git show-branch'.\n"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:174
msgid ""
"These three branches all forked from a common commit, [master], whose commit "
"message is \"Add \\'git show-branch'\".  The \"fixes\" branch adds one "
"commit \"Introduce \"reset type\" flag to \"git reset\"\". The \"mhf\" "
"branch adds many other commits.  The current branch is \"master\"."
msgstr ""
"これらの3つのブランチはすべて、共通のコミット[master]から分岐し、そのコミット"
"メッセージは \"Add \\'git show-branch'\" です。 `fixes` ブランチは、 `git "
"reset` に `reset type` フラグを導入するコミットを1つ追加します。 `mhf` ブラン"
"チは、他の多くのコミットを追加します。 現在のブランチは `master` です。"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:177
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:182
msgid ""
"If you keep your primary branches immediately under `refs/heads`, and topic "
"branches in subdirectories of it, having the following in the configuration "
"file may help:"
msgstr ""
"プライマリブランチを `refs/heads` のすぐ下に置き、トピックブランチをそのサブ"
"ディレクトリに保持する場合は、構成ファイルに以下の情報を含めると役立つ場合が"
"あります:"

#. type: delimited block -
#: ../Documentation-sedout/git-show-branch.txt:187
#, no-wrap
msgid ""
"[showbranch]\n"
"\tdefault = --topo-order\n"
"\tdefault = heads/*\n"
msgstr ""
"[showbranch]\n"
"\tdefault = --topo-order\n"
"\tdefault = heads/*\n"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:193
msgid ""
"With this, `git show-branch` without extra parameters would show only the "
"primary branches.  In addition, if you happen to be on your topic branch, it "
"is shown as well."
msgstr ""
"これにより、追加のパラメータがない `git show-branch` は、プライマリブランチの"
"みを表示します。さらに、トピックブランチにいる場合は、それも表示されます。"

#. type: delimited block -
#: ../Documentation-sedout/git-show-branch.txt:196
#, no-wrap
msgid "$ git show-branch --reflog=\"10,1 hour ago\" --list master\n"
msgstr "$ git show-branch --reflog=\"10,1 hour ago\" --list master\n"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:201
msgid ""
"shows 10 reflog entries going back from the tip as of 1 hour ago.  Without "
"`--list`, the output also shows how these tips are topologically related "
"with each other."
msgstr ""
"これは、1時間前の時点で先端から戻った10個のreflogエントリを示しています。 `--"
"list` がない場合、出力には、これらのヒントがトポロジ的に相互にどのように関連"
"しているかも示されます。"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:203
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Title -
#: ../Documentation-sedout/git-show-branch.txt:210
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-show-branch.txt:211
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
