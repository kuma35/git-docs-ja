# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2022-09-24 21:40+0900\n"
"PO-Revision-Date: 2021-10-29 00:37+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-merge-tree.txt:2
#, no-wrap
msgid "git-merge-tree(1)"
msgstr "git-merge-tree(1)"

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:7
#, fuzzy
#| msgid "git-merge-tree - Show three-way merge without touching index"
msgid "git-merge-tree - Perform merge without touching index or working tree"
msgstr ""
"git-merge-tree - インデックスに触れずに(without touching)3者間マージを表示す"
"る"

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:14
#, no-wrap
msgid ""
"'git merge-tree' [--write-tree] [<options>] <branch1> <branch2>\n"
"'git merge-tree' [--trivial-merge] <base-tree> <branch1> <branch2> (deprecated)\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:17
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:23
msgid ""
"This command has a modern `--write-tree` mode and a deprecated `--trivial-"
"merge` mode.  With the exception of the <<DEPMERGE,DEPRECATED DESCRIPTION>> "
"section at the end, the rest of this documentation describes modern `--write-"
"tree` mode."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:26
msgid ""
"Performs a merge, but does not make any new commits and does not read from "
"or write to either the working tree or index."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:29
msgid ""
"The performed merge will use the same feature as the \"real\" linkgit:git-"
"merge[1], including:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:31
msgid "three way content merges of individual files"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:32
msgid "rename detection"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:33
msgid "proper directory/file conflict handling"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:35
msgid ""
"recursive ancestor consolidation (i.e. when there is more than one merge "
"base, creating a virtual merge base by merging the merge bases)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:36
msgid "etc."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:39
msgid ""
"After the merge completes, a new toplevel tree object is created.  See "
"`OUTPUT` below for details."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:41
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-merge-tree.txt:43
#, no-wrap
msgid "`-z`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:48
msgid ""
"Do not quote filenames in the <Conflicted file info> section, and end each "
"filename with a NUL character rather than newline.  Also begin the messages "
"section with a NUL character instead of a newline.  See <<OUTPUT>> below for "
"more information."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-merge-tree.txt:49
#, no-wrap
msgid "`--name-only`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:55
msgid ""
"In the Conflicted file info section, instead of writing a list of (mode, "
"oid, stage, path) tuples to output for conflicted files, just provide a list "
"of filenames with conflicts (and do not list filenames multiple times if "
"they have multiple conflicting stages)."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-merge-tree.txt:56
#, no-wrap
msgid "`--[no-]messages`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:61
msgid ""
"Write any informational messages such as \"Auto-merging <path>\" or CONFLICT "
"notices to the end of stdout.  If unspecified, the default is to include "
"these messages if there are merge conflicts, and to omit them otherwise."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-merge-tree.txt:62
#, no-wrap
msgid "`--allow-unrelated-histories`"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:66
msgid ""
"merge-tree will by default error out if the two branches specified share no "
"common history.  This flag can be given to override that check and make the "
"merge proceed anyway."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:69
#, no-wrap
msgid "OUTPUT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:73
msgid ""
"For a successful merge, the output from git-merge-tree is simply one line:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:75
#, no-wrap
msgid "\t<OID of toplevel tree>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:77
msgid "Whereas for a conflicted merge, the output is by default of the form:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:81
#, no-wrap
msgid ""
"\t<OID of toplevel tree>\n"
"\t<Conflicted file info>\n"
"\t<Informational messages>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:83
msgid "These are discussed individually below."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-merge-tree.txt:86
#, no-wrap
msgid "OID of toplevel tree"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:92
msgid ""
"This is a tree object that represents what would be checked out in the "
"working tree at the end of `git merge`.  If there were conflicts, then files "
"within this tree may have embedded conflict markers.  This section is always "
"followed by a newline (or NUL if `-z` is passed)."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-merge-tree.txt:95
#, no-wrap
msgid "Conflicted file info"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:98
msgid "This is a sequence of lines with the format"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:100
#, no-wrap
msgid "\t<mode> <object> <stage> <filename>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:106
msgid ""
"The filename will be quoted as explained for the configuration variable "
"`core.quotePath` (see linkgit:git-config[1]).  However, if the `--name-only` "
"option is passed, the mode, object, and stage will be omitted.  If `-z` is "
"passed, the \"lines\" are terminated by a NUL character instead of a newline "
"character."
msgstr ""

#. type: Title ~
#: ../Documentation-sedout/git-merge-tree.txt:109
#, no-wrap
msgid "Informational messages"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:114
msgid ""
"This always starts with a blank line (or NUL if `-z` is passed) to separate "
"it from the previous sections, and then has free-form messages about the "
"merge, such as:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:116
msgid "\"Auto-merging <file>\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:117
msgid "\"CONFLICT (rename/delete): <oldfile> renamed...but deleted in...\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:118
msgid "\"Failed to merge submodule <submodule> (<reason>)\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:119
msgid "\"Warning: cannot merge binary files: <filename>\""
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:123
msgid ""
"Note that these free-form messages will never have a NUL character in or "
"between them, even if -z is passed.  It is simply a large block of text "
"taking up the remainder of the output."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:125
#, no-wrap
msgid "EXIT STATUS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:131
msgid ""
"For a successful, non-conflicted merge, the exit status is 0.  When the "
"merge has conflicts, the exit status is 1.  If the merge is not able to "
"complete (or start) due to some kind of error, the exit status is something "
"other than 0 or 1 (and the output is unspecified)."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:133
#, no-wrap
msgid "USAGE NOTES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:140
msgid ""
"This command is intended as low-level plumbing, similar to linkgit:git-hash-"
"object[1], linkgit:git-mktree[1], linkgit:git-commit-tree[1], linkgit:git-"
"write-tree[1], linkgit:git-update-ref[1], and linkgit:git-mktag[1].  Thus, "
"it can be used as a part of a series of steps such as:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:145
#, no-wrap
msgid ""
"       NEWTREE=$(git merge-tree --write-tree $BRANCH1 $BRANCH2)\n"
"       test $? -eq 0 || die \"There were conflicts...\"\n"
"       NEWCOMMIT=$(git commit-tree $NEWTREE -p $BRANCH1 -p $BRANCH2)\n"
"       git update-ref $BRANCH1 $NEWCOMMIT\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:148
msgid ""
"Note that when the exit status is non-zero, `NEWTREE` in this sequence will "
"contain a lot more output than just a tree."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:151
msgid ""
"For conflicts, the output includes the same information that you'd get with "
"linkgit:git-merge[1]:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:154
msgid ""
"what would be written to the working tree (the <<OIDTLT,OID of toplevel "
"tree>>)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:156
msgid ""
"the higher order stages that would be written to the index (the <<CFI,"
"Conflicted file info>>)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:158
msgid ""
"any messages that would have been printed to stdout (the <<IM,Informational "
"messages>>)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:160
#, no-wrap
msgid "MISTAKES TO AVOID"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:169
msgid ""
"Do NOT look through the resulting toplevel tree to try to find which files "
"conflict; parse the <<CFI,Conflicted file info>> section instead.  Not only "
"would parsing an entire tree be horrendously slow in large repositories, "
"there are numerous types of conflicts not representable by conflict markers "
"(modify/delete, mode conflict, binary file changed on both sides, file/"
"directory conflicts, various rename conflict permutations, etc.)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:175
msgid ""
"Do NOT interpret an empty <<CFI,Conflicted file info>> list as a clean "
"merge; check the exit status.  A merge can have conflicts without having "
"individual files conflict (there are a few types of directory rename "
"conflicts that fall into this category, and others might also be added in "
"the future)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:189
msgid ""
"Do NOT attempt to guess or make the user guess the conflict types from the "
"<<CFI,Conflicted file info>> list.  The information there is insufficient to "
"do so.  For example: Rename/rename(1to2) conflicts (both sides renamed the "
"same file differently) will result in three different file having higher "
"order stages (but each only has one higher order stage), with no way (short "
"of the <<IM,Informational messages>> section)  to determine which three "
"files are related.  File/directory conflicts also result in a file with "
"exactly one higher order stage.  Possibly-involved-in-directory-rename "
"conflicts (when \"merge.directoryRenames\" is unset or set to \"conflicts\") "
"also result in a file with exactly one higher order stage.  In all cases, "
"the <<IM,Informational messages>> section has the necessary info, though it "
"is not designed to be machine parseable."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:196
msgid ""
"Do NOT assume that each paths from <<CFI,Conflicted file info>>, and the "
"logical conflicts in the <<IM,Informational messages>> have a one-to-one "
"mapping, nor that there is a one-to-many mapping, nor a many-to-one "
"mapping.  Many-to-many mappings exist, meaning that each path can have many "
"logical conflict types in a single merge, and each logical conflict type can "
"affect many paths."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:200
msgid ""
"Do NOT assume all filenames listed in the <<IM,Informational messages>> "
"section had conflicts.  Messages can be included for files that have no "
"conflicts, such as \"Auto-merging <file>\"."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:211
msgid ""
"AVOID taking the OIDS from the <<CFI,Conflicted file info>> and re-merging "
"them to present the conflicts to the user.  This will lose information.  "
"Instead, look up the version of the file found within the <<OIDTLT,OID of "
"toplevel tree>> and show that instead.  In particular, the latter will have "
"conflict markers annotated with the original branch/commit being merged and, "
"if renames were involved, the original filename.  While you could include "
"the original branch/commit in the conflict marker annotations when re-"
"merging, the original filename is not available from the <<CFI,Conflicted "
"file info>> and thus you would be losing information that might help the "
"user resolve the conflict."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:214
#, fuzzy, no-wrap
#| msgid "DESCRIPTION"
msgid "DEPRECATED DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:219
msgid ""
"Per the <<NEWMERGE,DESCRIPTION>> and unlike the rest of this documentation, "
"this section describes the deprecated `--trivial-merge` mode."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:222
msgid ""
"Other than the optional `--trivial-merge`, this mode accepts no options."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:230
#, fuzzy
#| msgid ""
#| "Reads three tree-ish, and output trivial merge results and conflicting "
#| "stages to the standard output.  This is similar to what three-way 'git "
#| "read-tree -m' does, but instead of storing the results in the index, the "
#| "command outputs the entries to the standard output."
msgid ""
"This mode reads three tree-ish, and outputs trivial merge results and "
"conflicting stages to the standard output in a semi-diff format.  Since this "
"was designed for higher level scripts to consume and merge the results back "
"into the index, it omits entries that match <branch1>.  The result of this "
"second form is similar to what three-way 'git read-tree -m' does, but "
"instead of storing the results in the index, the command outputs the entries "
"to the standard output."
msgstr ""
"3つのツリーっぽいものを読み取り、些細なマージ結果と競合するステージを標準出力"
"に出力します。 これは、3者間の 'git read-tree -m' と似ていますが、結果をイン"
"デックスに格納する代わりに、コマンドはエントリを標準出力に出力します。"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:237
msgid ""
"This form not only has limited applicability (a trivial merge cannot handle "
"content merges of individual files, rename detection, proper directory/file "
"conflict handling, etc.), the output format is also difficult to work with, "
"and it will generally be less performant than the first form even on "
"successful merges (especially if working in large repositories)."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-merge-tree.txt:239
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-merge-tree.txt:240
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"

#~ msgid "'git merge-tree' <base-tree> <branch1> <branch2>\n"
#~ msgstr "'git merge-tree' <base-tree> <branch1> <branch2>\n"

#~ msgid ""
#~ "This is meant to be used by higher level scripts to compute merge results "
#~ "outside of the index, and stuff the results back into the index.  For "
#~ "this reason, the output from the command omits entries that match the "
#~ "<branch1> tree."
#~ msgstr ""
#~ "これは、インデックスの外部でマージ結果を計算し、結果をインデックスに戻すた"
#~ "めに、より高いレベルのスクリプトによって使用されることを意図しています。 "
#~ "このため、コマンドからの出力では、 <branch1> ツリーに一致するエントリが省"
#~ "略されます。"
