# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 2.0\n"
"POT-Creation-Date: 2022-09-24 21:41+0900\n"
"PO-Revision-Date: 2022-10-18 16:33+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/gitprotocol-v2.txt:2
#, no-wrap
msgid "gitprotocol-v2(5)"
msgstr "gitprotocol-v2(5)"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:7
msgid "gitprotocol-v2 - Git Wire Protocol, Version 2"
msgstr "gitprotocol-v2 - Git通信プロトコル・バージョン 2"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:12
#, no-wrap
msgid "<over-the-wire-protocol>\n"
msgstr "<over-the-wire-protocol>\n"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:18
msgid ""
"This document presents a specification for a version 2 of Git's wire "
"protocol.  Protocol v2 will improve upon v1 in the following ways:"
msgstr "このドキュメントは、Gitの通信(wire)プロトコルのバージョン2の仕様を示しています。プロトコルv2は、以下の方法でv1を改善します:"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:21
msgid ""
"Instead of multiple service names, multiple commands will be supported by a "
"single service"
msgstr ""
"複数のサービス名の代わりに、単一のサービスで複数のコマンドがサポートされます"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:24
msgid ""
"Easily extendable as capabilities are moved into their own section of the "
"protocol, no longer being hidden behind a NUL byte and limited by the size "
"of a pkt-line"
msgstr ""
"機能(capability)がプロトコルの独自のセクションに移動され、NULバイトの後ろに隠"
"されたり、pkt行のサイズによって制限されたりすることがないため、簡単に拡張でき"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:26
msgid ""
"Separate out other information hidden behind NUL bytes (e.g. agent string as "
"a capability and symrefs can be requested using 'ls-refs')"
msgstr "NULバイトの後ろに隠されている他の情報を分離します(たとえば、機能(capability)としてのエージェント文字列とsymrefsは `ls-refs` を使用して要求できます)"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:27
msgid "Reference advertisement will be omitted unless explicitly requested"
msgstr "明示的に要求されない限り、 reference advertisement は省略されます"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:28
msgid "ls-refs command to explicitly request some refs"
msgstr "一部のrefを明示的に要求する ls-refs コマンド"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:30
msgid ""
"Designed with http and stateless-rpc in mind.  With clear flush semantics "
"the http remote helper can simply act as a proxy"
msgstr ""
"http と stateless-rpc を念頭に置いて設計されています。明確なフラッシュセマン"
"ティクス(flush semantics)を使用すると、httpリモートヘルパーは単にプロキシとし"
"て機能できます"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:36
msgid ""
"In protocol v2 communication is command oriented.  When first contacting a "
"server a list of capabilities will advertised.  Some of these capabilities "
"will be commands which a client can request be executed.  Once a command has "
"completed, a client can reuse the connection and request that other commands "
"be executed."
msgstr ""
"プロトコルv2では、通信はコマンド指向です。サーバーに最初に接続するときに、機"
"能のリストが広告されます。これらの機能の一部は、クライアントが実行を要求でき"
"るコマンドになります。コマンドが完了すると、クライアントは接続を再利用して、"
"他のコマンドの実行を要求できます。"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:38
#, no-wrap
msgid "Packet-Line Framing"
msgstr "Packet-Line Framing"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:42
msgid ""
"All communication is done using packet-line framing, just as in v1.  See "
"linkgit:gitprotocol-pack[5] and linkgit:gitprotocol-common[5] for more "
"information."
msgstr "すべての通信は、v1と同様に、パケットラインフレーミングを使用して行われます。 詳細については、 linkgit:gitprotocol-pack[5] と linkgit:gitprotocol-common[5] を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:44
msgid "In protocol v2 these special packets will have the following semantics:"
msgstr "プロトコルv2では、これらの特別なパケットの意味は以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:46
msgid "'0000' Flush Packet (flush-pkt) - indicates the end of a message"
msgstr "`0000` フラッシュパケット (flush-pkt) - メッセージの終わりを示します"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:47
msgid "'0001' Delimiter Packet (delim-pkt) - separates sections of a message"
msgstr "`0001` 区切りパケット (delim-pkt) - メッセージのセクションを区切ります"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:49
msgid ""
"'0002' Response End Packet (response-end-pkt) - indicates the end of a "
"response for stateless connections"
msgstr "`0002` 応答終了パケット (response-end-pkt) - ステートレス接続の応答の終了を示します"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:51
#, no-wrap
msgid "Initial Client Request"
msgstr "Initial Client Request"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:59
msgid ""
"In general a client can request to speak protocol v2 by sending `version=2` "
"through the respective side-channel for the transport being used which "
"inevitably sets `GIT_PROTOCOL`.  More information can be found in linkgit:"
"gitprotocol-pack[5] and linkgit:gitprotocol-http[5], as well as the "
"`GIT_PROTOCOL` definition in `git.txt`. In all cases the response from the "
"server is the capability advertisement."
msgstr "一般に、クライアントは、使用されているトランスポートのそれぞれのサイドチャネルを介して `version=2` を送信することにより、プロトコルv2を話すように要求できます。これにより、必然的に `GIT_PROTOCOL` が定されます。詳細については  linkgit:gitprotocol-pack[5] や linkgit:gitprotocol-http[5] と、 `git.txt` の `GIT_PROTOCOL` 定義を参照してください。すべての場合において、サーバーからの応答は機能広告(capability advertisement)です。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:61
#, no-wrap
msgid "Git Transport"
msgstr "Git Transport"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:65
msgid ""
"When using the git:// transport, you can request to use protocol v2 by "
"sending \"version=2\" as an extra parameter:"
msgstr ""
"git:// 輸送を使用する場合、追加のパラメーターとして \"version=2\" を送信する"
"ことにより、プロトコルv2の使用を要求できます:"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:67
#, no-wrap
msgid "   003egit-upload-pack /project.git\\0host=myserver.com\\0\\0version=2\\0\n"
msgstr "   003egit-upload-pack /project.git\\0host=myserver.com\\0\\0version=2\\0\n"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:69
#, no-wrap
msgid "SSH and File Transport"
msgstr "SSH and File Transport"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:75
msgid ""
"When using either the ssh:// or file:// transport, the GIT_PROTOCOL "
"environment variable must be set explicitly to include \"version=2\".  The "
"server may need to be configured to allow this environment variable to pass."
msgstr ""
"ssh:// 輸送 または file:// 輸送 のどちらかを使用する場合、GIT_PROTOCOL環境変"
"数を明示的に設定して「version=2」を含める必要があります。この環境変数が渡され"
"るようにサーバーを構成する必要がある場合があります。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:77
#, no-wrap
msgid "HTTP Transport"
msgstr "HTTP Transport"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:82
msgid ""
"When using the http:// or https:// transport a client makes a \"smart\" info/"
"refs request as described in linkgit:gitprotocol-http[5] and requests that "
"v2 be used by supplying \"version=2\" in the `Git-Protocol` header."
msgstr "http:// 転送または https:// 転送を使用する場合、 クライアントは linkgit:gitprotocol-http[5] で説明されているように「smart」な info/refs リクエストを作成し、 `Git-Protocol` ヘッダー内で「version=2」を指定してv2を使用するように要求します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:85
#, no-wrap
msgid ""
"   C: GET $GIT_URL/info/refs?service=git-upload-pack HTTP/1.0\n"
"   C: Git-Protocol: version=2\n"
msgstr ""
"   C: GET $GIT_URL/info/refs?service=git-upload-pack HTTP/1.0\n"
"   C: Git-Protocol: version=2\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:87
msgid "A v2 server would reply:"
msgstr "v2サーバーは以下のように応答します:"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:94
#, no-wrap
msgid ""
"   S: 200 OK\n"
"   S: <Some headers>\n"
"   S: ...\n"
"   S:\n"
"   S: 000eversion 2\\n\n"
"   S: <capability-advertisement>\n"
msgstr ""
"   S: 200 OK\n"
"   S: <Some headers>\n"
"   S: ...\n"
"   S:\n"
"   S: 000eversion 2\\n\n"
"   S: <capability-advertisement>\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:97
msgid ""
"Subsequent requests are then made directly to the service `$GIT_URL/git-"
"upload-pack`. (This works the same for git-receive-pack)."
msgstr ""
"その後の要求は、サービス `$GIT_URL/git-upload-pack` に対して直接行われます。"
"(これはgit-receive-packでも同じように機能します)。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:100
msgid ""
"Uses the `--http-backend-info-refs` option to linkgit:git-upload-pack[1]."
msgstr ""
"`--http-backend-info-refs` オプションを使用して linkgit:git-upload-pack[1] を"
"実行します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:103
msgid ""
"The server may need to be configured to pass this header's contents via the "
"`GIT_PROTOCOL` variable. See the discussion in `git-http-backend.txt`."
msgstr ""
"サーバーは、 `GIT_PROTOCOL` 変数を介してこのヘッダーの内容を渡すように構成す"
"る必要がある場合があります。 `git-http-backend.txt` の説明を参照してくださ"
"い。"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:105
#, no-wrap
msgid "Capability Advertisement"
msgstr "Capability Advertisement"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:114
msgid ""
"A server which decides to communicate (based on a request from a client)  "
"using protocol version 2, notifies the client by sending a version string in "
"its initial response followed by an advertisement of its capabilities.  Each "
"capability is a key with an optional value.  Clients must ignore all unknown "
"keys.  Semantics of unknown values are left to the definition of each key.  "
"Some capabilities will describe commands which can be requested to be "
"executed by the client."
msgstr ""
"(クライアントからの要求に基づいて)プロトコルバージョン2を使用して通信すること"
"を決定したサーバーは、初期応答でバージョン文字列を送信し、続いてその機能を広"
"告することによってクライアントに通知します。各機能は、オプションの値を持つ"
"キーです。クライアントは、不明なキーをすべて無視する必要があります。未知の値"
"の意味は、各キーの定義に任されています。一部の機能では、クライアントによる実"
"行を要求できるコマンドについて説明します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:118
#, no-wrap
msgid ""
"    capability-advertisement = protocol-version\n"
"\t\t\t       capability-list\n"
"\t\t\t       flush-pkt\n"
msgstr ""
"    capability-advertisement = protocol-version\n"
"\t\t\t       capability-list\n"
"\t\t\t       flush-pkt\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:122
#, no-wrap
msgid ""
"    protocol-version = PKT-LINE(\"version 2\" LF)\n"
"    capability-list = *capability\n"
"    capability = PKT-LINE(key[=value] LF)\n"
msgstr ""
"    protocol-version = PKT-LINE(\"version 2\" LF)\n"
"    capability-list = *capability\n"
"    capability = PKT-LINE(key[=value] LF)\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:125
#, no-wrap
msgid ""
"    key = 1*(ALPHA | DIGIT | \"-_\")\n"
"    value = 1*(ALPHA | DIGIT | \" -_.,?\\/{}[]()<>!@#$%^&*+=:;\")\n"
msgstr ""
"    key = 1*(ALPHA | DIGIT | \"-_\")\n"
"    value = 1*(ALPHA | DIGIT | \" -_.,?\\/{}[]()<>!@#$%^&*+=:;\")\n"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:127
#, no-wrap
msgid "Command Request"
msgstr "Command Request"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:134
msgid ""
"After receiving the capability advertisement, a client can then issue a "
"request to select the command it wants with any particular capabilities or "
"arguments.  There is then an optional section where the client can provide "
"any command specific parameters or queries.  Only a single command can be "
"requested at a time."
msgstr ""
"機能広告を受信した後、クライアントは、特定の機能または引数を使用して、必要な"
"コマンドを選択する要求を発行できます。その次に、クライアントがコマンド固有の"
"パラメータまたはクエリを提供できるオプションのセクションがあります。 一度に要"
"求できるコマンドは1つだけです。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:144
#, no-wrap
msgid ""
"    request = empty-request | command-request\n"
"    empty-request = flush-pkt\n"
"    command-request = command\n"
"\t\t      capability-list\n"
"\t\t      delim-pkt\n"
"\t\t      command-args\n"
"\t\t      flush-pkt\n"
"    command = PKT-LINE(\"command=\" key LF)\n"
"    command-args = *command-specific-arg\n"
msgstr ""
"    request = empty-request | command-request\n"
"    empty-request = flush-pkt\n"
"    command-request = command\n"
"\t\t      capability-list\n"
"\t\t      delim-pkt\n"
"\t\t      command-args\n"
"\t\t      flush-pkt\n"
"    command = PKT-LINE(\"command=\" key LF)\n"
"    command-args = *command-specific-arg\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:147
#, no-wrap
msgid ""
"    command-specific-args are packet line framed arguments defined by\n"
"    each individual command.\n"
msgstr ""
"    command-specific-argsは、個々のコマンドによって定義される\n"
"    パケットラインフレームの引数です。\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:155
msgid ""
"The server will then check to ensure that the client's request is comprised "
"of a valid command as well as valid capabilities which were advertised.  If "
"the request is valid the server will then execute the command.  A server "
"MUST wait till it has received the client's entire request before issuing a "
"response.  The format of the response is determined by the command being "
"executed, but in all cases a flush-pkt indicates the end of the response."
msgstr ""
"次に、サーバーは、クライアントの要求が、広告された有効な機能だけでなく、有効"
"なコマンドで構成されていることを確認します。リクエストが有効な場合、サーバー"
"はコマンドを実行します。 サーバーは、応答を発行する前に、クライアントの要求全"
"体を受信するまで待機する必要があります。応答の形式は実行中のコマンドによって"
"決まりますが、すべての場合で、flush-pktは応答の終了を示します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:161
msgid ""
"When a command has finished, and the client has received the entire response "
"from the server, a client can either request that another command be "
"executed or can terminate the connection.  A client may optionally send an "
"empty request consisting of just a flush-pkt to indicate that no more "
"requests will be made."
msgstr ""
"コマンドが終了し、クライアントがサーバーからの応答全体を受信すると、クライア"
"ントは別のコマンドの実行を要求するか、接続を終了することができます。 クライア"
"ントは、オプションで、flush-pktのみで構成される空の要求を送信して、これ以上要"
"求が行われないことを示すことができます。"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:163
#, no-wrap
msgid "Capabilities"
msgstr "Capabilities"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:169
msgid ""
"There are two different types of capabilities: normal capabilities, which "
"can be used to convey information or alter the behavior of a request, and "
"commands, which are the core actions that a client wants to perform (fetch, "
"push, etc)."
msgstr ""
"機能には異なる2つのタイプがあります。情報を伝達したり要求の動作を変更したりす"
"るために使用できる通常の機能と、クライアントが実行したいコアアクション"
"（フェッチ、プッシュなど）であるコマンドです。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:177
msgid ""
"Protocol version 2 is stateless by default.  This means that all commands "
"must only last a single round and be stateless from the perspective of the "
"server side, unless the client has requested a capability indicating that "
"state should be maintained by the server.  Clients MUST NOT require state "
"management on the server side in order to function correctly.  This permits "
"simple round-robin load-balancing on the server side, without needing to "
"worry about state management."
msgstr ""
"プロトコルバージョン2は、デフォルトではステートレスです。 つまり、クライアン"
"トがサーバーで状態を維持する必要があることを指示する機能を要求しない限り、す"
"べてのコマンドは1ラウンドだけ持続し、サーバー側の観点からステートレスである必"
"要があります。クライアントは、正しく機能するためにサーバー側に状態管理を要求"
"してはいけません(MUST NOT)。これにより、サーバー側では状態管理について心配す"
"ることなく、単純なラウンドロビン負荷分散が可能になります。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:179
#, no-wrap
msgid "agent"
msgstr "agent"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:192
msgid ""
"The server can advertise the `agent` capability with a value `X` (in the "
"form `agent=X`) to notify the client that the server is running version "
"`X`.  The client may optionally send its own agent string by including the "
"`agent` capability with a value `Y` (in the form `agent=Y`) in its request "
"to the server (but it MUST NOT do so if the server did not advertise the "
"agent capability). The `X` and `Y` strings may contain any printable ASCII "
"characters except space (i.e., the byte range 32 < x < 127), and are "
"typically of the form \"package/version\" (e.g., \"git/1.8.3.1\"). The agent "
"strings are purely informative for statistics and debugging purposes, and "
"MUST NOT be used to programmatically assume the presence or absence of "
"particular features."
msgstr ""
"サーバーは、値 `X` (`agent=X` 形式)を使用して `agent` 機能を広告ズし、サー"
"バーがバージョン `X` を実行していることをクライアントに通知できます。クライア"
"ントは、サーバーへの要求に値 `Y` (`agent=Y` 形式)を持つ `agent` 機能を含める"
"ことにより、オプションで独自のエージェント文字列を送信できます(ただし、サー"
"バーがagent機能を広告しなかった場合は、クライアントから送信してはいけません"
"(MUST NOT))。`X` および `Y` 文字列には、スペースを除く任意の印刷可能なASCII文"
"字(つまり、バイト範囲32 < x <127)を含めることができ、通常は「パッケージ/バー"
"ジョン」(例: 「git/1.8.3.1」形式です)。エージェント文字列は、統計およびデバッ"
"グの目的で純粋に情報を提供するものであり、特定の機能の有無をプログラムで想定"
"するために使用してはいけません(MUST NOT)。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:194
#, no-wrap
msgid "ls-refs"
msgstr "ls-refs"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:199
msgid ""
"`ls-refs` is the command used to request a reference advertisement in v2.  "
"Unlike the current reference advertisement, ls-refs takes in arguments which "
"can be used to limit the refs sent from the server."
msgstr ""
"`ls-refs` は、v2で参照広告を要求するために使用されるコマンドです。現在の参照"
"広告とは異なり、ls-refsは、サーバーから送信される参照を制限するために使用でき"
"る引数を取ります。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:203
#: ../Documentation-sedout/gitprotocol-v2.txt:251
msgid ""
"Additional features not supported in the base command will be advertised as "
"the value of the command in the capability advertisement in the form of a "
"space separated list of features: \"<command>=<feature 1> <feature 2>\""
msgstr ""
"基本コマンドでサポートされていない追加の機能は、機能広告のコマンドの値とし"
"て、スペースで区切られた機能のリストの形式で広告されます: "
"\"<command>=<feature 1> <feature 2>\""

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:205
msgid "ls-refs takes in the following arguments:"
msgstr "ls-refsは以下の引数を取ります:"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:206
#, no-wrap
msgid "symrefs"
msgstr "symrefs"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:209
msgid ""
"In addition to the object pointed by it, show the underlying ref pointed by "
"it when showing a symbolic ref."
msgstr ""
"それが指すオブジェクトに加えて、シンボリックrefを表示するときに、それが指す基"
"になるrefを表示します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:210
#, no-wrap
msgid "peel"
msgstr "peel"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:212
msgid "Show peeled tags."
msgstr "剥いたタグ(peeled tags)を表示します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:213
#, no-wrap
msgid "ref-prefix <prefix>"
msgstr "ref-prefix <prefix>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:220
msgid ""
"When specified, only references having a prefix matching one of the provided "
"prefixes are displayed. Multiple instances may be given, in which case "
"references matching any prefix will be shown. Note that this is purely for "
"optimization; a server MAY show refs not matching the prefix if it chooses, "
"and clients should filter the result themselves."
msgstr "指定すると、 指定された接頭辞のいずれかに一致する接頭辞を持つ参照のみが表示されます。 複数のインスタンスを指定できます。 その場合、プレフィックスに一致する参照が表示されます。 注意: これは純粋に最適化のためであることに注意してください。 サーバーは、 選択した場合、 プレフィックスに一致しない参照を表示する場合があり、 クライアントは結果を自分でフィルターする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:223
msgid ""
"If the 'unborn' feature is advertised the following argument can be included "
"in the client's request."
msgstr ""
"「unborn」機能が広告される場合、以下の引数をクライアントの要求に含めることが"
"できます。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:224
#, no-wrap
msgid "unborn"
msgstr "unborn"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:228
msgid ""
"The server will send information about HEAD even if it is a symref pointing "
"to an unborn branch in the form \"unborn HEAD symref-target:<target>\"."
msgstr ""
"サーバーは、 `unborn HEAD symref-target:<target>` の形式で、unbornブランチを"
"指すsymrefであっても、HEADに関する情報を送信します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:230
msgid "The output of ls-refs is as follows:"
msgstr "ls-refsの出力は以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:238
#, no-wrap
msgid ""
"    output = *ref\n"
"\t     flush-pkt\n"
"    obj-id-or-unborn = (obj-id | \"unborn\")\n"
"    ref = PKT-LINE(obj-id-or-unborn SP refname *(SP ref-attribute) LF)\n"
"    ref-attribute = (symref | peeled)\n"
"    symref = \"symref-target:\" symref-target\n"
"    peeled = \"peeled:\" obj-id\n"
msgstr ""
"    output = *ref\n"
"\t     flush-pkt\n"
"    obj-id-or-unborn = (obj-id | \"unborn\")\n"
"    ref = PKT-LINE(obj-id-or-unborn SP refname *(SP ref-attribute) LF)\n"
"    ref-attribute = (symref | peeled)\n"
"    symref = \"symref-target:\" symref-target\n"
"    peeled = \"peeled:\" obj-id\n"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:240
#, no-wrap
msgid "fetch"
msgstr "fetch"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:247
msgid ""
"`fetch` is the command used to fetch a packfile in v2.  It can be looked at "
"as a modified version of the v1 fetch where the ref-advertisement is "
"stripped out (since the `ls-refs` command fills that role) and the message "
"format is tweaked to eliminate redundancies and permit easy addition of "
"future extensions."
msgstr ""
"`fetch` は、v2でパックファイルをフェッチするために使用されるコマンドです。  "
"これは、v1 fetch の修正バージョンと見なすことができ、(`ls-refs` コマンドがそ"
"の役割を果たしているため、)ref-advertisementが削除され、メッセージ形式が調整"
"されて冗長性が排除され、将来の拡張機能を簡単に追加できるようになっています。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:253
msgid "A `fetch` request can take the following arguments:"
msgstr "`fetch` リクエストは、以下の引数を取ることができます:"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:254
#, no-wrap
msgid "want <oid>"
msgstr "want <oid>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:258
msgid ""
"Indicates to the server an object which the client wants to retrieve.  Wants "
"can be anything and are not limited to advertised objects."
msgstr ""
"クライアントが取得したいオブジェクトをサーバーに提示します。欲しいものは何で"
"もかまいません。広告されているオブジェクトに限定されません。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:259
#, no-wrap
msgid "have <oid>"
msgstr "have <oid>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:264
msgid ""
"Indicates to the server an object which the client has locally.  This allows "
"the server to make a packfile which only contains the objects that the "
"client needs. Multiple 'have' lines can be supplied."
msgstr ""
"クライアントがローカルに持っているオブジェクトをサーバーに提示します。 これに"
"より、サーバーは、クライアントが必要とするオブジェクトのみを含むパックファイ"
"ルを作成できます。 複数の「have」行を指定できます。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:265
#, no-wrap
msgid "done"
msgstr "done"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:270
msgid ""
"Indicates to the server that negotiation should terminate (or not even begin "
"if performing a clone) and that the server should use the information "
"supplied in the request to construct the packfile."
msgstr ""
"ネゴシエーションを終了する必要があること(またはクローンを実行する場合は開始し"
"ないこと)、およびサーバーが要求で提供された情報を使用してパックファイルを作成"
"する必要があることをサーバーに提示します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:271
#, no-wrap
msgid "thin-pack"
msgstr "thin-pack"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:278
msgid ""
"Request that a thin pack be sent, which is a pack with deltas which "
"reference base objects not contained within the pack (but are known to exist "
"at the receiving end). This can reduce the network traffic significantly, "
"but it requires the receiving end to know how to \"thicken\" these packs by "
"adding the missing bases to the pack."
msgstr ""
"シンパック(thin pack)の送信を要求します。これは、パック内に含まれていない（た"
"だし、受信側に存在することがわかっている）ベースオブジェクトを参照するデルタ"
"を含むパックです。これにより、ネットワークトラフィックを大幅に削減できます"
"が、受信側は、シンパックに不足しているベースを追加して、これらのパックを「厚"
"く」(thicken)する方法を知っている必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:279
#, no-wrap
msgid "no-progress"
msgstr "no-progress"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:284
msgid ""
"Request that progress information that would normally be sent on side-band "
"channel 2, during the packfile transfer, should not be sent.  However, the "
"side-band channel 3 is still used for error responses."
msgstr ""
"パックファイル転送中にサイドバンドチャネル2で通常送信される進行状況情報を送信"
"しないように要求します。 ただし、サイドバンドチャネル3は引き続きエラー応答に"
"使用されます。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:285
#, no-wrap
msgid "include-tag"
msgstr "include-tag"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:288
msgid ""
"Request that annotated tags should be sent if the objects they point to are "
"being sent."
msgstr ""
"注釈付きタグ(annotated tags)が指すオブジェクトが送信されている場合は、注釈付"
"きタグ(annotated tags)を送信するように要求します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:289
#, no-wrap
msgid "ofs-delta"
msgstr "ofs-delta"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:293
msgid ""
"Indicate that the client understands PACKv2 with delta referring to its base "
"by position in pack rather than by an oid.  That is, they can read "
"OBJ_OFS_DELTA (aka type 6) in a packfile."
msgstr ""
"クライアントが PACKv2を理解していることを提示します。デルタは、OIDではなく"
"パック内の位置によってベースを参照しています。 つまり、パックファイル内の "
"OBJ_OFS_DELTA (別名タイプ 6)を読み取ることができます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:297
msgid ""
"If the 'shallow' feature is advertised the following arguments can be "
"included in the clients request as well as the potential addition of the "
"'shallow-info' section in the server's response as explained below."
msgstr ""
"「shallow」機能が広告される場合、以下で説明するように、以下の引数をクライアン"
"ト要求に含めることができ、サーバーの応答に「shallow-info」セクションを追加す"
"る可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:298
#, no-wrap
msgid "shallow <oid>"
msgstr "shallow <oid>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:305
msgid ""
"A client must notify the server of all commits for which it only has shallow "
"copies (meaning that it doesn't have the parents of a commit) by supplying a "
"'shallow <oid>' line for each such object so that the server is aware of the "
"limitations of the client's history.  This is so that the server is aware "
"that the client may not have all objects reachable from such commits."
msgstr ""
"クライアントは、サーバーがクライアントの履歴の制限を認識できるように、そのよ"
"うなオブジェクトごとに「shallow <oid>」行を指定することにより、shallowコピー"
"しかない(つまり、そのコミットの親がないことを意味する、)すべてのコミットを"
"サーバーに通知する必要があります。 これは、クライアントがそのようなコミットか"
"ら到達可能なすべてのオブジェクトを持っていない可能性があることをサーバーが認"
"識できるようにするためです。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:306
#, no-wrap
msgid "deepen <depth>"
msgstr "deepen <depth>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:309
msgid ""
"Requests that the fetch/clone should be shallow having a commit depth of "
"<depth> relative to the remote side."
msgstr ""
"フェッチ/クローンを浅くし(shallow)、リモート側に対してコミットの深さが<depth>"
"であることを要求します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:310
#, no-wrap
msgid "deepen-relative"
msgstr "deepen-relative"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:315
msgid ""
"Requests that the semantics of the \"deepen\" command be changed to indicate "
"that the depth requested is relative to the client's current shallow "
"boundary, instead of relative to the requested commits."
msgstr ""
"「deepen」コマンドのセマンティクスを変更して、要求された深さが、要求されたコ"
"ミットではなく、クライアントの現在のshallow境界に関連していることを示すように"
"要求します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:316
#, no-wrap
msgid "deepen-since <timestamp>"
msgstr "deepen-since <timestamp>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:321
msgid ""
"Requests that the shallow clone/fetch should be cut at a specific time, "
"instead of depth.  Internally it's equivalent to doing \"git rev-list --max-"
"age=<timestamp>\". Cannot be used with \"deepen\"."
msgstr ""
"shallow クローン/フェッチ を深さではなく特定の日付時刻でカットするように要求"
"します。 内部的には、「git rev-list --max-age=<timestamp>」を実行するのと同じ"
"です。 「deepen」との併用はできません。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:322
#, no-wrap
msgid "deepen-not <rev>"
msgstr "deepen-not <rev>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:328
msgid ""
"Requests that the shallow clone/fetch should be cut at a specific revision "
"specified by '<rev>', instead of a depth.  Internally it's equivalent of "
"doing \"git rev-list --not <rev>\".  Cannot be used with \"deepen\", but can "
"be used with \"deepen-since\"."
msgstr ""
"shallow クローン/フェッチを、深さではなく、 <rev> で指定された特定のリビジョ"
"ンでカットするように要求します。 内部的には、「git rev-list --not <rev>」を実"
"行するのと同じです。 「deepen」では使用できませんが、「deepen-since」では使用"
"できます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:331
msgid ""
"If the 'filter' feature is advertised, the following argument can be "
"included in the client's request:"
msgstr "`filter` 機能が広告される場合、以下の引数をクライアントの要求に含めることができます:"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:332
#, no-wrap
msgid "filter <filter-spec>"
msgstr "filter <filter-spec>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:343
msgid ""
"Request that various objects from the packfile be omitted using one of "
"several filtering techniques. These are intended for use with partial clone "
"and partial fetch operations. See `rev-list` for possible \"filter-spec\" "
"values. When communicating with other processes, senders SHOULD translate "
"scaled integers (e.g. \"1k\") into a fully-expanded form (e.g. \"1024\") to "
"aid interoperability with older receivers that may not understand newly-"
"invented scaling suffixes. However, receivers SHOULD accept the following "
"suffixes: 'k', 'm', and 'g' for 1024, 1048576, and 1073741824, respectively."
msgstr ""
"いくつかのフィルタリング手法のいずれかを使用して、パックファイルのさまざまな"
"オブジェクトを省略するように要求します。これらは、部分クローン(partial clone)"
"および部分フェッチ(partial fetch)操作での使用を目的としています。 可能な"
"「filter-spec」値については、`rev-list` を参照してください。他のプロセスと通"
"信する場合、送信者はスケーリングされた整数(「1k」など)を完全に拡張された形式"
"(「1024」など)に変換して、新発想のスケーリングサフィックスを理解できない古い"
"受信者との相互運用性を支援する必要があります。しかしながら、受信者は次のサ"
"フィックスを受け入れる必要があります：「k」、「m」、「g」で、それぞれ、1024、"
"1048576、1073741824 を現します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:347
msgid ""
"If the 'ref-in-want' feature is advertised, the following argument can be "
"included in the client's request as well as the potential addition of the "
"'wanted-refs' section in the server's response as explained below."
msgstr ""
"「ref-in-want」機能が広告される場合、以下で説明するように、以下の引数をクライ"
"アントの要求に含めることができ、サーバーの応答に「wanted-refs」セクションを追"
"加する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:348
#, no-wrap
msgid "want-ref <ref>"
msgstr "want-ref <ref>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:352
msgid ""
"Indicates to the server that the client wants to retrieve a particular ref, "
"where <ref> is the full name of a ref on the server."
msgstr ""
"クライアントが特定のrefを取得することをサーバーに提示します。ここで、 <ref> "
"はサーバー上のrefのフルネームです。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:355
msgid ""
"If the 'sideband-all' feature is advertised, the following argument can be "
"included in the client's request:"
msgstr "`sideband-all` 機能が広告される場合、以下の引数をクライアントの要求に含めることができます:"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:356
#, no-wrap
msgid "sideband-all"
msgstr "sideband-all"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:362
msgid ""
"Instruct the server to send the whole response multiplexed, not just the "
"packfile section. All non-flush and non-delim PKT-LINE in the response (not "
"only in the packfile section) will then start with a byte indicating its "
"sideband (1, 2, or 3), and the server may send \"0005\\2\" (a PKT-LINE of "
"sideband 2 with no payload) as a keepalive packet."
msgstr ""
"packfileセクションだけでなく、応答全体を多重化して送信するようにサーバーに指"
"示します。(packfileセクションだけでなく、)応答内のすべての非フラッシュ(non-"
"flush)および non-delim PKT-LINEは、そのサイドバンド(1または2または3)を示すバ"
"イトで始まります。サーバーは、キープアライブパケットとして「0005\\2」（ペイ"
"ロードのないサイドバンド2のPKT-LINE)を送信する場合があります。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:367
msgid ""
"If the 'packfile-uris' feature is advertised, the following argument can be "
"included in the client's request as well as the potential addition of the "
"'packfile-uris' section in the server's response as explained below."
msgstr ""
"「packfile-uris」機能が広告される場合、以下で説明するように、以下の引数をクラ"
"イアントの要求に含めることができ、サーバーの応答に「packfile-uris」セクション"
"を追加する可能性があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:368
#, no-wrap
msgid "packfile-uris <comma-separated list of protocols>"
msgstr "packfile-uris <comma-separated list of protocols>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:374
msgid ""
"Indicates to the server that the client is willing to receive URIs of any of "
"the given protocols in place of objects in the sent packfile. Before "
"performing the connectivity check, the client should download from all given "
"URIs. Currently, the protocols supported are \"http\" and \"https\"."
msgstr ""
"クライアントが、送信されたパックファイル内のオブジェクトの代わりに、指定され"
"たプロトコルのいずれかのURIを受信する用意があることをサーバーに提示します。 "
"接続チェックを実行する前に、クライアントは指定されたすべてのURIからダウンロー"
"ドする必要があります。 現在、サポートされているプロトコルは「http」と"
"「https」です。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:377
msgid ""
"If the 'wait-for-done' feature is advertised, the following argument can be "
"included in the client's request."
msgstr "`wait-for-done` 機能が広告される場合、以下の引数をクライアントの要求に含めることができます。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:378
#, no-wrap
msgid "wait-for-done"
msgstr "wait-for-done"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:382
msgid ""
"Indicates to the server that it should never send \"ready\", but should wait "
"for the client to say \"done\" before sending the packfile."
msgstr ""
"サーバは決して \"ready\" を送らず、クライアントが \"done\" と言うまで待ってか"
"らパックファイルを送信するように指示します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:386
msgid ""
"The response of `fetch` is broken into a number of sections separated by "
"delimiter packets (0001), with each section beginning with its section "
"header. Most sections are sent only when the packfile is sent."
msgstr ""
"`fetch` の応答は、区切り文字パケット(0001)で区切られたいくつかのセクションに"
"分割され、各セクションはセクションヘッダーで始まります。ほとんどのセクション"
"は、パックファイルが送信されたときにのみ送信されます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:391
#, no-wrap
msgid ""
"    output = acknowledgements flush-pkt |\n"
"\t     [acknowledgments delim-pkt] [shallow-info delim-pkt]\n"
"\t     [wanted-refs delim-pkt] [packfile-uris delim-pkt]\n"
"\t     packfile flush-pkt\n"
msgstr ""
"    output = acknowledgements flush-pkt |\n"
"\t     [acknowledgments delim-pkt] [shallow-info delim-pkt]\n"
"\t     [wanted-refs delim-pkt] [packfile-uris delim-pkt]\n"
"\t     packfile flush-pkt\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:398
#, no-wrap
msgid ""
"    acknowledgments = PKT-LINE(\"acknowledgments\" LF)\n"
"\t\t      (nak | *ack)\n"
"\t\t      (ready)\n"
"    ready = PKT-LINE(\"ready\" LF)\n"
"    nak = PKT-LINE(\"NAK\" LF)\n"
"    ack = PKT-LINE(\"ACK\" SP obj-id LF)\n"
msgstr ""
"    acknowledgments = PKT-LINE(\"acknowledgments\" LF)\n"
"\t\t      (nak | *ack)\n"
"\t\t      (ready)\n"
"    ready = PKT-LINE(\"ready\" LF)\n"
"    nak = PKT-LINE(\"NAK\" LF)\n"
"    ack = PKT-LINE(\"ACK\" SP obj-id LF)\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:403
#, no-wrap
msgid ""
"    shallow-info = PKT-LINE(\"shallow-info\" LF)\n"
"\t\t   *PKT-LINE((shallow | unshallow) LF)\n"
"    shallow = \"shallow\" SP obj-id\n"
"    unshallow = \"unshallow\" SP obj-id\n"
msgstr ""
"    shallow-info = PKT-LINE(\"shallow-info\" LF)\n"
"\t\t   *PKT-LINE((shallow | unshallow) LF)\n"
"    shallow = \"shallow\" SP obj-id\n"
"    unshallow = \"unshallow\" SP obj-id\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:407
#, no-wrap
msgid ""
"    wanted-refs = PKT-LINE(\"wanted-refs\" LF)\n"
"\t\t  *PKT-LINE(wanted-ref LF)\n"
"    wanted-ref = obj-id SP refname\n"
msgstr ""
"    wanted-refs = PKT-LINE(\"wanted-refs\" LF)\n"
"\t\t  *PKT-LINE(wanted-ref LF)\n"
"    wanted-ref = obj-id SP refname\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:410
#, no-wrap
msgid ""
"    packfile-uris = PKT-LINE(\"packfile-uris\" LF) *packfile-uri\n"
"    packfile-uri = PKT-LINE(40*(HEXDIGIT) SP *%x20-ff LF)\n"
msgstr ""
"    packfile-uris = PKT-LINE(\"packfile-uris\" LF) *packfile-uri\n"
"    packfile-uri = PKT-LINE(40*(HEXDIGIT) SP *%x20-ff LF)\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:413
#, no-wrap
msgid ""
"    packfile = PKT-LINE(\"packfile\" LF)\n"
"\t       *PKT-LINE(%x01-03 *%x00-ff)\n"
msgstr ""
"    packfile = PKT-LINE(\"packfile\" LF)\n"
"\t       *PKT-LINE(%x01-03 *%x00-ff)\n"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:414
#, no-wrap
msgid "acknowledgments section"
msgstr "acknowledgments section"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:419
msgid ""
"If the client determines that it is finished with negotiations by sending a "
"\"done\" line (thus requiring the server to send a packfile), the "
"acknowledgments sections MUST be omitted from the server's response."
msgstr ""
"クライアントが「done」行を送信してネゴシエーションが終了したと判断した場合(し"
"たがって、サーバーにパックファイルを送信する必要があります)、サーバーの応答か"
"らacknowledgmentsセクションを省略しなければなりません(MUST)。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:421
msgid "Always begins with the section header \"acknowledgments\""
msgstr "常にセクションヘッダー「acknowledgements」で始まります"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:424
msgid ""
"The server will respond with \"NAK\" if none of the object ids sent as have "
"lines were common."
msgstr ""
"have行として送信されたオブジェクトIDがどれも共通していない場合、サーバーは"
"「NAK」で応答します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:427
msgid ""
"The server will respond with \"ACK obj-id\" for all of the object ids sent "
"as have lines which are common."
msgstr ""
"サーバーは、共通のhave行として送信されたすべてのオブジェクトIDに対して「ACK "
"obj-id」で応答します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:430
msgid "A response cannot have both \"ACK\" lines as well as a \"NAK\" line."
msgstr "応答に「ACK」行と「NAK」行の両方を含めることはできません。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:435
msgid ""
"The server will respond with a \"ready\" line indicating that the server has "
"found an acceptable common base and is ready to make and send a packfile "
"(which will be found in the packfile section of the same response)"
msgstr ""
"サーバーは、サーバーが許容可能な共通ベースを検出し、packfile（同じ応答の"
"packfileセクションにあります）を作成して、送信する準備ができていることを示す"
"「ready」行で応答します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:442
msgid ""
"If the server has found a suitable cut point and has decided to send a "
"\"ready\" line, then the server can decide to (as an optimization) omit any "
"\"ACK\" lines it would have sent during its response.  This is because the "
"server will have already determined the objects it plans to send to the "
"client and no further negotiation is needed."
msgstr ""
"サーバーが適切な切断点(cut point)を見つけて「ready」行を送信することを決定し"
"た場合、サーバーは(最適化として)応答中に送信した「ACK」行を省略することを決定"
"できます。これは、サーバーがクライアントに送信する予定のオブジェクトをすでに"
"決定しており、それ以上のネゴシエーションが必要ないためです。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:443
#, no-wrap
msgid "shallow-info section"
msgstr "shallow-info section"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:451
msgid ""
"If the client has requested a shallow fetch/clone, a shallow client requests "
"a fetch or the server is shallow then the server's response may include a "
"shallow-info section.  The shallow-info section will be included if (due to "
"one of the above conditions) the server needs to inform the client of any "
"shallow boundaries or adjustments to the clients already existing shallow "
"boundaries."
msgstr ""
"クライアントが shallow フェッチ/クローン を要求した場合、shallowクライアント"
"がフェッチを要求するか、サーバーがshallowの場合、サーバーの応答に shallow-"
"info セクションが含まれる場合があります。(上記の条件のいずれかにより、サー"
"バーがクライアントにshallow 境界(shallow boundaries)を通知する必要がある場"
"合、または既存の浅い境界をクライアントと調整する必要がある場合は、 shallow-"
"info セクションが含まれます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:453
msgid "Always begins with the section header \"shallow-info\""
msgstr "常にセクションヘッダー「shallow-info」で始まります"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:456
msgid ""
"If a positive depth is requested, the server will compute the set of commits "
"which are no deeper than the desired depth."
msgstr ""
"正数の深さが要求された場合、サーバーは指定の深さよりも深くないコミットのセッ"
"トを計算します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:459
msgid ""
"The server sends a \"shallow obj-id\" line for each commit whose parents "
"will not be sent in the following packfile."
msgstr ""
"サーバーは、続くパックファイルで親が送信されないコミットごとに「shallow obj-"
"id」行を送信します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:464
msgid ""
"The server sends an \"unshallow obj-id\" line for each commit which the "
"client has indicated is shallow, but is no longer shallow as a result of the "
"fetch (due to its parents being sent in the following packfile)."
msgstr ""
"サーバーは、クライアントがshallowを指示したコミットごとに「unshallow obj-id」"
"行を送信しますが、(その親が次のパックファイルで送信されるため、)フェッチの結"
"果としてはshallowにはなりません。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:468
msgid ""
"The server MUST NOT send any \"unshallow\" lines for anything which the "
"client has not indicated was shallow as a part of its request."
msgstr ""
"サーバーは、クライアントが要求の一部としてshallowを指示していないものに対し"
"て、「unshallow」行を送信しては「いけません」。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:469
#, no-wrap
msgid "wanted-refs section"
msgstr "wanted-refs section"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:473
msgid ""
"This section is only included if the client has requested a ref using a "
"'want-ref' line and if a packfile section is also included in the response."
msgstr ""
"このセクションは、クライアントが「want-ref」行を使用してrefを要求し、packfile"
"セクションも応答に含まれている場合にのみ含まれます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:475
msgid "Always begins with the section header \"wanted-refs\"."
msgstr "常にセクションヘッダー「wanted-refs」で始まります。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:478
msgid ""
"The server will send a ref listing (\"<oid> <refname>\") for each reference "
"requested using 'want-ref' lines."
msgstr ""
"サーバーは、「want-ref」行を使用して要求された参照ごとに、参照リスト(\"<oid> "
"<refname>\")を送信します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:481
msgid ""
"The server MUST NOT send any refs which were not requested using 'want-ref' "
"lines."
msgstr ""
"サーバーは、「want-ref」行を使用して要求されなかった参照を送信しては「いけま"
"せん」。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:482
#, no-wrap
msgid "packfile-uris section"
msgstr "packfile-uris section"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:486
msgid ""
"This section is only included if the client sent 'packfile-uris' and the "
"server has at least one such URI to send."
msgstr ""
"このセクションは、クライアントが「packfile-uris」を送信し、サーバーに送信する"
"そのようなURIが少なくとも1つある場合にのみ含まれます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:488
msgid "Always begins with the section header \"packfile-uris\"."
msgstr "常にセクションヘッダー「packfile-uris」で始まります。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:491
msgid ""
"For each URI the server sends, it sends a hash of the pack's contents (as "
"output by git index-pack) followed by the URI."
msgstr ""
"サーバーが送信するURIごとに、パックの内容のハッシュ(git index-packによって出"
"力される)と、それに続くURIを送信します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:495
msgid ""
"The hashes are 40 hex characters long. When Git upgrades to a new hash "
"algorithm, this might need to be updated. (It should match whatever index-"
"pack outputs after \"pack\\t\" or \"keep\\t\"."
msgstr ""
"ハッシュの長さは40文字です。 Gitが新しいハッシュアルゴリズムにアップグレード"
"するとき、これを更新する必要があるかもしれません。 (「pack\\t」または「keep"
"\\t」の後に出力されるインデックスパックと一致する必要があります)。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:496
#, no-wrap
msgid "packfile section"
msgstr "packfile section"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:502
msgid ""
"This section is only included if the client has sent 'want' lines in its "
"request and either requested that no more negotiation be done by sending "
"'done' or if the server has decided it has found a sufficient cut point to "
"produce a packfile."
msgstr ""
"このセクションは、クライアントがリクエストで「want」行を送信し、「done」を送"
"信してこれ以上ネゴシエーションを行わないように要求した場合、または、サーバー"
"がパックファイルを生成するのに十分なカットポイントを見つけたと判断した場合、"
"のいずれかにのみ含まれます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:504
msgid "Always begins with the section header \"packfile\""
msgstr "常にセクションヘッダー「packfile」で始まります"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:507
msgid ""
"The transmission of the packfile begins immediately after the section header"
msgstr "パックファイルの送信は、セクションヘッダーの直後に開始されます"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:514
msgid ""
"The data transfer of the packfile is always multiplexed, using the same "
"semantics of the 'side-band-64k' capability from protocol version 1.  This "
"means that each packet, during the packfile data stream, is made up of a "
"leading 4-byte pkt-line length (typical of the pkt-line format), followed by "
"a 1-byte stream code, followed by the actual data."
msgstr ""
"パックファイルのデータ転送は、プロトコルバージョン1の「side-band-64k」機能と"
"同じセマンティクスを使用して、常に多重化されます。つまり、packfileデータスト"
"リーム中の各パケットは、先頭の4バイトの pkt-line長(通常はpkt-line形式)、1バイ"
"トのストリームコード、実際のデータで構成されます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:516
#, no-wrap
msgid "The stream code can be one of:\n"
msgstr "ストリームコードは以下のいずれかになります:\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:519
#, no-wrap
msgid ""
"1 - pack data\n"
"2 - progress messages\n"
"3 - fatal error message just before stream aborts\n"
msgstr ""
"1 - パックデータ\n"
"2 - 進行状況メッセージ\n"
"3 - ストリームが中止(abort)される直前の致命的なエラーメッセージ\n"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:521
#, no-wrap
msgid "server-option"
msgstr "server-option"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:527
msgid ""
"If advertised, indicates that any number of server specific options can be "
"included in a request.  This is done by sending each option as a \"server-"
"option=<option>\" capability line in the capability-list section of a "
"request."
msgstr ""
"広告されている場合は、サーバー固有のオプションをいくつでもリクエストに含める"
"ことができることを示します。これは、リクエストの機能リストセクションで"
"「server-option=<option>」機能行として各オプションを送信することによって行わ"
"れます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:529
msgid "The provided options must not contain a NUL or LF character."
msgstr "提供されるオプションには、NULまたはLF文字を含めることはできません。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:531
#, no-wrap
msgid "object-format"
msgstr "object-format"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:538
msgid ""
"The server can advertise the `object-format` capability with a value `X` (in "
"the form `object-format=X`) to notify the client that the server is able to "
"deal with objects using hash algorithm X.  If not specified, the server is "
"assumed to only handle SHA-1.  If the client would like to use a hash "
"algorithm other than SHA-1, it should specify its object-format string."
msgstr ""
"サーバーは、値 `X` (`object-format=X` 形式)を使用して `object-format` 機能を"
"広告し、サーバーがハッシュアルゴリズムXを使用してオブジェクトを処理できること"
"をクライアントに通知できます。 指定しない場合、サーバーはSHA-1のみを処理する"
"と見なされます。 クライアントがSHA-1以外のハッシュアルゴリズムを使用する場合"
"は、object-formatの文字列を指定する必要があります。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:540
#, no-wrap
msgid "session-id=<session id>"
msgstr "session-id=<session id>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:545
msgid ""
"The server may advertise a session ID that can be used to identify this "
"process across multiple requests. The client may advertise its own session "
"ID back to the server as well."
msgstr ""
"サーバーは、複数のリクエストにわたってこのプロセスを識別するために使用できる"
"セッションIDを広告する場合があります。 クライアントは、自身のセッションIDを"
"サーバーに広告することもできます。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:551
msgid ""
"Session IDs should be unique to a given process. They must fit within a "
"packet-line, and must not contain non-printable or whitespace characters. "
"The current implementation uses trace2 session IDs (see link:technical/api-"
"trace2.html[api-trace2] for details), but this may change and users of the "
"session ID should not rely on this fact."
msgstr "セッションIDは、特定のプロセスに固有である必要があります。それらはパケット行内に収まる必要があり、印刷不可能な文字や空白文字を含めることはできません。 現在の実装ではtrace2セッションID(詳細は link:technical/api-trace2.html[api-trace2] 参照)を使用していますが、これは変更される可能性があるため、セッションIDのユーザーはこの事実に依存しないでください。"

#. type: Title ~
#: ../Documentation-sedout/gitprotocol-v2.txt:553
#, no-wrap
msgid "object-info"
msgstr "object-info"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:559
msgid ""
"`object-info` is the command to retrieve information about one or more "
"objects.  Its main purpose is to allow a client to make decisions based on "
"this information without having to fully fetch objects. Object size is the "
"only information that is currently supported."
msgstr ""
"`object-info` は、1つまたは複数のオブジェクトに関する情報を取得するためのコマ"
"ンドです。 その主な目的は、クライアントがオブジェクトを完全にフェッチすること"
"なく、この情報に基づいて決定を下せるようにすることです。 現在サポートされてい"
"る情報はオブジェクトサイズのみです。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:561
msgid "An `object-info` request takes the following arguments:"
msgstr "`object-info` リクエストは以下の引数を取ります:"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:562
#, no-wrap
msgid "size"
msgstr "size"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:564
msgid "Requests size information to be returned for each listed object id."
msgstr "リストされたオブジェクトIDごとに返されるサイズ情報を要求します。"

#. type: Labeled list
#: ../Documentation-sedout/gitprotocol-v2.txt:565
#, no-wrap
msgid "oid <oid>"
msgstr "oid <oid>"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:568
msgid ""
"Indicates to the server an object which the client wants to obtain "
"information for."
msgstr "クライアントが情報を取得したいオブジェクトをサーバーに指示します。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:571
msgid ""
"The response of `object-info` is a list of the requested object ids and "
"associated requested information, each separated by a single space."
msgstr ""
"`object-info` の応答は、要求されたオブジェクトIDと関連する要求された情報のリ"
"ストであり、それぞれが1つのスペースで区切られています。"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:573
#, no-wrap
msgid "\toutput = info flush-pkt\n"
msgstr "\toutput = info flush-pkt\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:576
#, no-wrap
msgid ""
"\tinfo = PKT-LINE(attrs) LF)\n"
"\t\t*PKT-LINE(obj-info LF)\n"
msgstr ""
"\tinfo = PKT-LINE(attrs) LF)\n"
"\t\t*PKT-LINE(obj-info LF)\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:578
#, no-wrap
msgid "\tattrs = attr | attrs SP attrs\n"
msgstr "\tattrs = attr | attrs SP attrs\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:580
#, no-wrap
msgid "\tattr = \"size\"\n"
msgstr "\tattr = \"size\"\n"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:582
#, no-wrap
msgid "\tobj-info = obj-id SP obj-size\n"
msgstr "\tobj-info = obj-id SP obj-size\n"

#. type: Title -
#: ../Documentation-sedout/gitprotocol-v2.txt:584
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/gitprotocol-v2.txt:585
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
