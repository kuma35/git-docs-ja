# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-09-25 05:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/gitformat-pack.txt:2
#, no-wrap
msgid "gitformat-pack(5)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/gitformat-pack.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:7
msgid "gitformat-pack - Git pack format"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/gitformat-pack.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:16
#, no-wrap
msgid ""
"$GIT_DIR/objects/pack/pack-*.{pack,idx}\n"
"$GIT_DIR/objects/pack/pack-*.rev\n"
"$GIT_DIR/objects/pack/pack-*.mtimes\n"
"$GIT_DIR/objects/pack/multi-pack-index\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/gitformat-pack.txt:18
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:24
msgid ""
"The Git pack format is now Git stores most of its primary repository data. "
"Over the lietime af a repository loose objects (if any) and smaller packs "
"are consolidated into larger pack(s). See linkgit:git-gc[1] and linkgit:git-"
"pack-objects[1]."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:28
msgid ""
"The pack format is also used over-the-wire, see e.g. linkgit:gitprotocol-"
"v2[5], as well as being a part of other container formats in the case of "
"linkgit:gitformat-bundle[5]."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:29
#, no-wrap
msgid "Checksums and object IDs"
msgstr "Checksums and object IDs"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:34
msgid ""
"In a repository using the traditional SHA-1, pack checksums, index "
"checksums, and object IDs (object names) mentioned below are all computed "
"using SHA-1.  Similarly, in SHA-256 repositories, these values are computed "
"using SHA-256."
msgstr ""
"従来のSHA-1を使用するリポジトリでは、以下で説明するパックチェックサム、イン"
"デックスチェックサム、およびオブジェクトID(オブジェクト名)はすべてSHA-1を使用"
"して計算されます。 同様に、SHA-256リポジトリでは、これらの値はSHA-256を使用し"
"て計算されます。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:35
#, no-wrap
msgid "pack-*.pack files have the following format:"
msgstr "pack-*.pack files have the following format:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:38
msgid "A header appears at the beginning and consists of the following"
msgstr "ヘッダーは最初にあらわれ、以下のもので構成されます"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:38
#: ../Documentation-sedout/gitformat-pack.txt:341
#, no-wrap
msgid "4-byte signature"
msgstr "4-byte シグネチャ"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:40
msgid "The signature is: {'P', 'A', 'C', 'K'}"
msgstr "The signature is: {'P', 'A', 'C', 'K'}"

# TCP/IPではパケットのヘッダ部に記載される
# 制御データなどのバイト順に慣習的に
# ビッグエンディアンを用いており、
# これをネットワークバイトオーダーという。
#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:40
#, no-wrap
msgid "4-byte version number (network byte order)"
msgstr "4-byte version number (network byte order)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:42
msgid ""
"Git currently accepts version number 2 or 3 but generates version 2 only."
msgstr ""
"Gitは現在バージョン番号2または3を受け入れますが、バージョン2のみを生成しま"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:42
#, no-wrap
msgid "4-byte number of objects contained in the pack (network byte order)"
msgstr "4-byte パックに含まれるオブジェクトの数(network byte order)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:44
msgid ""
"Observation: we cannot have more than 4G versions ;-) and more than 4G "
"objects in a pack."
msgstr ""
"所見: このバージョンでは、パック内のオブジェクトは4Gを超えることはできず、"
"パックも4Gを超えることはできません。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:45
msgid ""
"The header is followed by number of object entries, each of which looks like "
"this"
msgstr ""
"ヘッダーの後には、オブジェクトエントリの数が続き、各エントリは以下のようにな"
"ります"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:45
#, no-wrap
msgid "(undeltified representation)"
msgstr "(非デルタ化表現)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:47
#: ../Documentation-sedout/gitformat-pack.txt:52
msgid "n-byte type and length (3-bit type, (n-1)*7+4-bit length)"
msgstr "n-byte type and length (type:3ビット幅、length: (n-1)*7+4 ビット幅)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:49
msgid "compressed data"
msgstr "圧縮データ"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:50
#, no-wrap
msgid "(deltified representation)"
msgstr "(デルタ化表現)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:56
msgid ""
"base object name if OBJ_REF_DELTA or a negative relative offset from the "
"delta object's position in the pack if this is an OBJ_OFS_DELTA object"
msgstr ""
"OBJ_REF_DELTAの場合はベースオブジェクト名、OBJ_OFS_DELTAオブジェクトの場合は"
"パック内のデルタオブジェクトの位置からの負の相対オフセット"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:58
msgid "compressed delta data"
msgstr "圧縮デルタデータ"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:61
msgid ""
"Observation: length of each object is encoded in a variable length format "
"and is not constrained to 32-bit or anything."
msgstr ""
"所見: 各オブジェクトの長さは可変長形式でエンコードされ、32ビットなどに制限さ"
"れません。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:62
msgid "The trailer records a pack checksum of all of the above."
msgstr "トレーラー(trailer)は、上記のすべてのパックチェックサムを記録します。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:63
#, no-wrap
msgid "Object types"
msgstr "Object types"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:66
msgid "Valid object types are:"
msgstr "有効なオブジェクトタイプは以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:68
msgid "OBJ_COMMIT (1)"
msgstr "OBJ_COMMIT (1)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:69
msgid "OBJ_TREE (2)"
msgstr "OBJ_TREE (2)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:70
msgid "OBJ_BLOB (3)"
msgstr "OBJ_BLOB (3)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:71
msgid "OBJ_TAG (4)"
msgstr "OBJ_TAG (4)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:72
msgid "OBJ_OFS_DELTA (6)"
msgstr "OBJ_OFS_DELTA (6)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:73
msgid "OBJ_REF_DELTA (7)"
msgstr "OBJ_REF_DELTA (7)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:75
msgid "Type 5 is reserved for future expansion. Type 0 is invalid."
msgstr "タイプ5は、将来の拡張用に予約されています。 タイプ0は無効です。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:76
#, no-wrap
msgid "Size encoding"
msgstr "Size encoding"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:84
msgid ""
"This document uses the following \"size encoding\" of non-negative integers: "
"From each byte, the seven least significant bits are used to form the "
"resulting integer. As long as the most significant bit is 1, this process "
"continues; the byte with MSB 0 provides the last seven bits.  The seven-bit "
"chunks are concatenated. Later values are more significant."
msgstr ""
"このドキュメントでは、負でない整数で、「サイズエンコーディング」(size "
"encoding)を使用します。つまりそれは、 各バイトから、下位7ビットを使用して結果"
"の整数を形成します。 最上位ビットが1である限り、この処理は続行されます。 MSB "
"0 のバイトは、最後の7ビットを提供します。これら7ビットのチャンクは連結されま"
"す。 後の値の方が上位です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:87
msgid ""
"This size encoding should not be confused with the \"offset encoding\", "
"which is also used in this document."
msgstr ""
"このサイズエンコーディング(size encoding)を、このドキュメントでも使用されてい"
"る「オフセットエンコーディング」(offset encoding)と混同しないでください。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:88
#, no-wrap
msgid "Deltified representation"
msgstr "Deltified representation(デルタ化表現)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:94
msgid ""
"Conceptually there are only four object types: commit, tree, tag and blob. "
"However to save space, an object could be stored as a \"delta\" of another "
"\"base\" object. These representations are assigned new types ofs-delta and "
"ref-delta, which is only valid in a pack file."
msgstr ""
"概念的には、commit、tree、tag、blobの4つのオブジェクトタイプしかありません。 "
"ただし、スペースを節約するために、オブジェクトを別の「ベース」(base)オブジェ"
"クトの「デルタ」(delta)として格納できます。 これらの表現には、パックファイル"
"でのみ有効な新しいタイプの ref-delta および ofs-delta が割り当てられます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:100
msgid ""
"Both ofs-delta and ref-delta store the \"delta\" to be applied to another "
"object (called 'base object') to reconstruct the object. The difference "
"between them is, ref-delta directly encodes base object name. If the base "
"object is in the same pack, ofs-delta encodes the offset of the base object "
"in the pack instead."
msgstr ""
"ofs-deltaとref-deltaはどちらも、オブジェクトを再構築するために別のオブジェク"
"ト(「ベースオブジェクト」と呼ばれる)に適用される「デルタ」を格納します。 それ"
"らの違いは、ref-deltaがベースオブジェクト名を直接エンコードすることです。 "
"ベースオブジェクトが同じパックにある場合、ofs-deltaは代わりにパック内のベース"
"オブジェクトのオフセットをエンコードします。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:105
msgid ""
"The base object could also be deltified if it's in the same pack.  Ref-delta "
"can also refer to an object outside the pack (i.e. the so-called \"thin pack"
"\"). When stored on disk however, the pack should be self contained to avoid "
"cyclic dependency."
msgstr ""
"同一パックに含まれている場合は、ベースオブジェクトを削除することもできます。 "
"ref-deltaは、パック外のオブジェクト(つまり、いわゆる「薄いパック」(thin "
"pack)）を参照することもできます。 ただし、ディスクに保存する場合は、循環依存"
"を回避するためにパックを自己完結型にする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:116
msgid ""
"The delta data starts with the size of the base object and the size of the "
"object to be reconstructed. These sizes are encoded using the size encoding "
"from above.  The remainder of the delta data is a sequence of instructions "
"to reconstruct the object from the base object. If the base object is "
"deltified, it must be converted to canonical form first. Each instruction "
"appends more and more data to the target object until it's complete. There "
"are two supported instructions so far: one for copy a byte range from the "
"source object and one for inserting new data embedded in the instruction "
"itself."
msgstr ""
"デルタデータは、ベースオブジェクトのサイズと再構築されるオブジェクトのサイズ"
"から始まります。 これらのサイズは、上記サイズエンコーディングを使用してエン"
"コードされます。 デルタデータの残りの部分は、ベースオブジェクトからオブジェク"
"トを再構築するための一連の命令です。 ベースオブジェクトが削除されている場合"
"は、最初に標準形に変換する必要があります。 各命令は、完了するまでターゲットオ"
"ブジェクトにどんどんデータを追加します。現時点でサポートされている命令は2つあ"
"ります。1つはソースオブジェクトからバイト範囲をコピーするためのもので、もう1"
"つは命令自体に埋め込まれた新しいデータを挿入するためのものです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:120
msgid ""
"Each instruction has variable length. Instruction type is determined by the "
"seventh bit of the first octet. The following diagrams follow the convention "
"in RFC 1951 (Deflate compressed data format)."
msgstr ""
"各命令の長さは可変です。 命令タイプは、最初のオクテット(訳注:1バイト(8ビッ"
"ト))のビット7(訳注:つまりこのバイトの最上位ビット)によって決定されます。 以下"
"の図は、RFC 1951（Deflate compressed data format;圧縮データ形式の解凍）の規則"
"に従います。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-pack.txt:121
#, no-wrap
msgid "Instruction to copy from base object"
msgstr "ベースオブジェクトからのコピー命令"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:126
#, no-wrap
msgid ""
"  +----------+---------+---------+---------+---------+-------+-------+-------+\n"
"  | 1xxxxxxx | offset1 | offset2 | offset3 | offset4 | size1 | size2 | size3 |\n"
"  +----------+---------+---------+---------+---------+-------+-------+-------+\n"
msgstr ""
"  +----------+---------+---------+---------+---------+-------+-------+-------+\n"
"  | 1xxxxxxx | offset1 | offset2 | offset3 | offset4 | size1 | size2 | size3 |\n"
"  +----------+---------+---------+---------+---------+-------+-------+-------+\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:130
msgid ""
"This is the instruction format to copy a byte range from the source object. "
"It encodes the offset to copy from and the number of bytes to copy. Offset "
"and size are in little-endian order."
msgstr ""
"これは、ソースオブジェクトからバイト範囲をコピーするための命令です。 コピー元"
"のオフセットとコピーするバイト数をエンコードします。 オフセットとサイズはリト"
"ルエンディアンです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:136
msgid ""
"All offset and size bytes are optional. This is to reduce the instruction "
"size when encoding small offsets or sizes. The first seven bits in the first "
"octet determines which of the next seven octets is present. If bit zero is "
"set, offset1 is present. If bit one is set offset2 is present and so on."
msgstr ""
"すべてのオフセットバイトとサイズバイトはオプションです。 これは、小さなオフ"
"セットまたはサイズをエンコードするときに命令サイズを減らすためです。 最初のオ"
"クテットの最初の7つのビット(訳注:bit6〜0)は、次の7つのオクテットのどれが存在"
"するかを決定します。 ビットゼロが設定されている場合、offset1が存在します。 "
"ビット1が設定されている場合、offset2が存在します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:141
msgid ""
"Note that a more compact instruction does not change offset and size "
"encoding. For example, if only offset2 is omitted like below, offset3 still "
"contains bits 16-23. It does not become offset2 and contains bits 8-15 even "
"if it's right next to offset1."
msgstr ""
"注意: よりコンパクトな形式は、オフセットとサイズのエンコーディングを変更しな"
"いことに注意してください。 たとえば、以下のようにoffset2のみが省略されている"
"場合でも、offset3にはビット16〜23が含まれています。 それはoffset1の隣に続くか"
"らoffset2という訳ではなくて、(offset3の)ビット8〜15が含まれています。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:145
#, no-wrap
msgid ""
"  +----------+---------+---------+\n"
"  | 10000101 | offset1 | offset3 |\n"
"  +----------+---------+---------+\n"
msgstr ""
"  +----------+---------+---------+\n"
"  | 10000101 | offset1 | offset3 |\n"
"  +----------+---------+---------+\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:150
msgid ""
"In its most compact form, this instruction only takes up one byte (0x80) "
"with both offset and size omitted, which will have default values zero. "
"There is another exception: size zero is automatically converted to 0x10000."
msgstr ""
"最もコンパクトな形式では、この命令はオフセットとサイズの両方が省略された1バイ"
"ト(0x80)のみを使用し、デフォルト値はゼロになります。 もうひとつ例外がありま"
"す。サイズゼロは自動的に 0x10000 に変換されます。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-pack.txt:151
#, no-wrap
msgid "Instruction to add new data"
msgstr "新データ追加命令"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:156
#, no-wrap
msgid ""
"  +----------+============+\n"
"  | 0xxxxxxx |    data    |\n"
"  +----------+============+\n"
msgstr ""
"  +----------+============+\n"
"  | 0xxxxxxx |    data    |\n"
"  +----------+============+\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:161
msgid ""
"This is the instruction to construct target object without the base object. "
"The following data is appended to the target object. The first seven bits of "
"the first octet determines the size of data in bytes. The size must be non-"
"zero."
msgstr ""
"これは、ベースオブジェクトなしでターゲットオブジェクトを構築するための命令で"
"す。続くデータがターゲットオブジェクトに追加されます。最初のオクテットの最初"
"の7つのビット(訳注:bit6〜0)は、データのサイズをバイト単位で決定します。サイズ"
"はゼロ以外でなければなりません。"

#. type: Title ====
#: ../Documentation-sedout/gitformat-pack.txt:162
#, no-wrap
msgid "Reserved instruction"
msgstr "Reserved instruction"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:167
#, no-wrap
msgid ""
"  +----------+============\n"
"  | 00000000 |\n"
"  +----------+============\n"
msgstr ""
"  +----------+============\n"
"  | 00000000 |\n"
"  +----------+============\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:169
msgid "This is the instruction reserved for future expansion."
msgstr "これは、将来の拡張のために予約されている命令です。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:170
#, no-wrap
msgid "Original (version 1) pack-*.idx files have the following format:"
msgstr "Original (version 1) pack-*.idx files have the following format:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:177
msgid ""
"The header consists of 256 4-byte network byte order integers.  N-th entry "
"of this table records the number of objects in the corresponding pack, the "
"first byte of whose object name is less than or equal to N.  This is called "
"the 'first-level fan-out' table."
msgstr ""
"ヘッダーは、256個の4バイトのネットワークバイトオーダー整数で構成されます。こ"
"のテーブルのN番目のエントリは、対応するパック内のオブジェクトの数を記録しま"
"す。オブジェクト名の最初のバイトはN以下です。これは、「first-level fan-out」"
"テーブルと呼ばれます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:179
msgid ""
"The header is followed by sorted 24-byte entries, one entry per object in "
"the pack.  Each entry is:"
msgstr ""
"ヘッダーの後には、ソートされた24バイトのエントリが続きます(パック内のオブジェ"
"クトごとに1つのエントリ)。 各エントリは以下のとおりです:"

# TCP/IPではパケットのヘッダ部に記載される
# 制御データなどのバイト順に慣習的に
# ビッグエンディアンを用いており、
# これをネットワークバイトオーダーという。
#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:183
msgid ""
"4-byte network byte order integer, recording where the object is stored in "
"the packfile as the offset from the beginning."
msgstr ""
"4-byte ネットワークバイトオーダー整数で、オブジェクトが格納されている場所を"
"パックファイル先頭からのオフセットとして記録します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:184
msgid "one object name of the appropriate size."
msgstr "適切なサイズの1つのオブジェクト名。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:185
msgid "The file is concluded with a trailer:"
msgstr "ファイルはトレーラーで締めくくられています:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:188
msgid "A copy of the pack checksum at the end of the corresponding packfile."
msgstr "対応するパックファイルの最後にあるパックチェックサムのコピー。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:190
#: ../Documentation-sedout/gitformat-pack.txt:290
msgid "Index checksum of all of the above."
msgstr "上記すべてのインデックスチェックサム。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:191
#, no-wrap
msgid "Pack Idx file:"
msgstr "パックIdxファイル:"

#. type: delimited block -
#: ../Documentation-sedout/gitformat-pack.txt:226
#, no-wrap
msgid ""
"        --  +--------------------------------+\n"
"fanout      | fanout[0] = 2 (for example)    |-.\n"
"table       +--------------------------------+ |\n"
"            | fanout[1]                      | |\n"
"            +--------------------------------+ |\n"
"            | fanout[2]                      | |\n"
"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ |\n"
"            | fanout[255] = total objects    |---.\n"
"        --  +--------------------------------+ | |\n"
"main        | offset                         | | |\n"
"index       | object name 00XXXXXXXXXXXXXXXX | | |\n"
"table       +--------------------------------+ | |\n"
"            | offset                         | | |\n"
"            | object name 00XXXXXXXXXXXXXXXX | | |\n"
"            +--------------------------------+<+ |\n"
"          .-| offset                         |   |\n"
"          | | object name 01XXXXXXXXXXXXXXXX |   |\n"
"          | +--------------------------------+   |\n"
"          | | offset                         |   |\n"
"          | | object name 01XXXXXXXXXXXXXXXX |   |\n"
"          | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   |\n"
"          | | offset                         |   |\n"
"          | | object name FFXXXXXXXXXXXXXXXX |   |\n"
"        --| +--------------------------------+<--+\n"
"trailer   | | packfile checksum              |\n"
"          | +--------------------------------+\n"
"          | | idxfile checksum               |\n"
"          | +--------------------------------+\n"
"          .-------.\n"
"                  |\n"
"Pack file entry: <+\n"
msgstr ""
"        --  +--------------------------------+\n"
"fanout      | fanout[0] = 2 (for example)    |-.\n"
"table       +--------------------------------+ |\n"
"            | fanout[1]                      | |\n"
"            +--------------------------------+ |\n"
"            | fanout[2]                      | |\n"
"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ |\n"
"            | fanout[255] = total objects    |---.\n"
"        --  +--------------------------------+ | |\n"
"main        | offset                         | | |\n"
"index       | object name 00XXXXXXXXXXXXXXXX | | |\n"
"table       +--------------------------------+ | |\n"
"            | offset                         | | |\n"
"            | object name 00XXXXXXXXXXXXXXXX | | |\n"
"            +--------------------------------+<+ |\n"
"          .-| offset                         |   |\n"
"          | | object name 01XXXXXXXXXXXXXXXX |   |\n"
"          | +--------------------------------+   |\n"
"          | | offset                         |   |\n"
"          | | object name 01XXXXXXXXXXXXXXXX |   |\n"
"          | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   |\n"
"          | | offset                         |   |\n"
"          | | object name FFXXXXXXXXXXXXXXXX |   |\n"
"        --| +--------------------------------+<--+\n"
"trailer   | | packfile checksum              |\n"
"          | +--------------------------------+\n"
"          | | idxfile checksum               |\n"
"          | +--------------------------------+\n"
"          .-------.\n"
"                  |\n"
"Pack file entry: <+\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:230
msgid "packed object header:"
msgstr "パックされたオブジェクトのヘッダー:"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:231
#, no-wrap
msgid "byte size extension bit (MSB)"
msgstr "byte size extension bit (MSB)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:233
msgid "type (next 3 bit)"
msgstr "type (next 3 bit)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:234
msgid "size0 (lower 4-bit)"
msgstr "size0 (lower 4-bit)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:238
msgid ""
"n-byte sizeN (as long as MSB is set, each 7-bit)  size0..sizeN form 4+7+7+.."
"+7 bit integer, size0 is the least significant part, and sizeN is the most "
"significant part."
msgstr ""
"n-byte sizeN (MSBがセットされている限り。各7ビット)  size0..sizeN form "
"4+7+7+..+7 ビット整数で、size0 は最も下位で、 sizeN が最も上位です。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:238
#, no-wrap
msgid "packed object data"
msgstr "パックされたオブジェクトのデータ"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:241
msgid ""
"If it is not DELTA, then deflated bytes (the size above is the size before "
"compression)."
msgstr ""
"DELTAでない場合は、解凍されたバイト(上記のサイズは圧縮前のサイズです)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:243
msgid ""
"If it is REF_DELTA, then base object name (the size above is the size of the "
"delta data that follows)."
msgstr ""
"REF_DELTAの場合、ベースオブジェクト名(上記サイズは後続のデルタデータのサイズ"
"です)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:244
#: ../Documentation-sedout/gitformat-pack.txt:250
msgid "delta data, deflated."
msgstr "圧縮されたデルタデータ。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:249
msgid ""
"If it is OFS_DELTA, then n-byte offset (see below) interpreted as a negative "
"offset from the type-byte of the header of the ofs-delta entry (the size "
"above is the size of the delta data that follows)."
msgstr ""
"OFS_DELTAの場合、nバイトオフセット(以下参照)は、ofs-deltaエントリのヘッダーの"
"タイプバイトからの負のオフセットとして解釈されます(上記サイズは、後続のデルタ"
"データのサイズです)。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:250
#, no-wrap
msgid "offset encoding"
msgstr "offset encoding"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:256
msgid ""
"n bytes with MSB set in all but the last one.  The offset is then the number "
"constructed by concatenating the lower 7 bit of each byte, and for n >= 2 "
"adding 2^7 + 2^14 + ... + 2^(7*(n-1))  to the result."
msgstr ""
"最後の1つを除くすべてにMSBが設定されたnバイト。 オフセットは、各バイトの下位7"
"ビットを連結して作成された数値であり、n >= 2 の場合、結果に `2^7 + 2^14 "
"+ ... + 2^(7*(n-1))` を加算します。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:257
#, no-wrap
msgid "Version 2 pack-*.idx files support packs larger than 4 GiB, and have some other reorganizations. They have the format:"
msgstr "バージョン2 pack-*.idx ファイルは4GiBより大きいパックをサポートし、他のいくつかの再編成があります。それらの形式は以下のとおりです:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:261
msgid ""
"A 4-byte magic number '\\377tOc' which is an unreasonable fanout[0] value."
msgstr ""
"4-byte マジックナンバー  `\\377tOc` は、 unreasonable fanout[0] 値です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:263
msgid "A 4-byte version number (= 2)"
msgstr "4-byte バージョン番号 (= 2)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:265
msgid "A 256-entry fan-out table just like v1."
msgstr "v1と同様の256エントリのファンアウトテーブル。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:269
msgid ""
"A table of sorted object names.  These are packed together without offset "
"values to reduce the cache footprint of the binary search for a specific "
"object name."
msgstr ""
"ソートされたオブジェクト名のテーブル。 これらはオフセット値なしで一緒にパック"
"され、特定のオブジェクト名のバイナリ検索のキャッシュフットプリント(cache "
"footprint)を削減します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:274
msgid ""
"A table of 4-byte CRC32 values of the packed object data.  This is new in v2 "
"so compressed data can be copied directly from pack to pack during repacking "
"without undetected data corruption."
msgstr ""
"パックされたオブジェクトデータの4バイトCRC32値のテーブル。 これはv2の新機能"
"で、再パック中に、未検出データ破損無しで圧縮データをパックからパックに直接コ"
"ピーできます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:279
msgid ""
"A table of 4-byte offset values (in network byte order).  These are usually "
"31-bit pack file offsets, but large offsets are encoded as an index into the "
"next table with the msbit set."
msgstr ""
"4バイトのオフセット値のテーブル(ネットワークバイトオーダー)。 これらは通常31"
"ビットパックファイルオフセットですが、ラージオフセットは、msbitが設定された次"
"のテーブルへのインデックスとしてエンコードされます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:284
msgid ""
"A table of 8-byte offset entries (empty for pack files less than 2 GiB).  "
"Pack files are organized with heavily used objects toward the front, so most "
"object references should not need to refer to this table."
msgstr ""
"8バイトのオフセットエントリのテーブル(2 GiB未満のパックファイルの場合は空)。 "
"パックファイルは、頻繁に使用されるオブジェクトを手前に配置するように編成され"
"ているため、ほとんどのオブジェクト参照はこのテーブルを参照する必要はありませ"
"ん。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:286
msgid "The same trailer as a v1 pack file:"
msgstr "v1パックファイルと同一のトレーラー:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:288
msgid "A copy of the pack checksum at the end of corresponding packfile."
msgstr "対応するパックファイルの最後にあるパックチェックサムのコピー。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:291
#, no-wrap
msgid "pack-*.rev files have the format:"
msgstr "pack-*.rev ファイルは以下の形式です:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:294
msgid "A 4-byte magic number '0x52494458' ('RIDX')."
msgstr "4-byte マジックナンバー '0x52494458' ('RIDX')."

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:296
#: ../Documentation-sedout/gitformat-pack.txt:316
msgid "A 4-byte version identifier (= 1)."
msgstr "4-byte バージョンID(= 1)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:298
#: ../Documentation-sedout/gitformat-pack.txt:318
msgid "A 4-byte hash function identifier (= 1 for SHA-1, 2 for SHA-256)."
msgstr "4-byte ハッシュ機能ID(= 1:SHA-1, 2:SHA-256)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:302
msgid ""
"A table of index positions (one per packed object, num_objects in total, "
"each a 4-byte unsigned integer in network order), sorted by their "
"corresponding offsets in the packfile."
msgstr ""
"インデックス位置のテーブル(パックされたオブジェクトごとに1つ、合計 "
"num_objects、それぞれネットワークオーダーで4バイトの符号なし整数)。パックファ"
"イル内の対応するオフセットでソートされます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:306
msgid ""
"A trailer, containing a checksum of the corresponding packfile, and a "
"checksum of all of the above."
msgstr ""
"トレーラーは、対応するパックファイルのチェックサムと、上記のすべてのチェック"
"サムを含みます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:308
#: ../Documentation-sedout/gitformat-pack.txt:338
msgid "All 4-byte numbers are in network order."
msgstr "全ての 4-byte 数値はネットワークオーダーです。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:309
#, no-wrap
msgid "pack-*.mtimes files have the format:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:312
msgid "All 4-byte numbers are in network byte order."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:314
msgid "A 4-byte magic number '0x4d544d45' ('MTME')."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:323
msgid ""
"A table of 4-byte unsigned integers. The ith value is the modification time "
"(mtime) of the ith object in the corresponding pack by lexicographic (index) "
"order. The mtimes count standard epoch seconds."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:327
msgid ""
"A trailer, containing a checksum of the corresponding packfile, and a "
"checksum of all of the above (each having length according to the specified "
"hash function)."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:328
#, no-wrap
msgid "multi-pack-index (MIDX) files have the following format:"
msgstr "multi-pack-index (MIDX) ファイルの形式は以下の通り:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:331
msgid ""
"The multi-pack-index files refer to multiple pack-files and loose objects."
msgstr ""
"multi-pack-indexファイルは、複数のパックファイル(pack-files)と緩いオブジェク"
"ト(loose objects)を参照します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:336
msgid ""
"In order to allow extensions that add extra data to the MIDX, we organize "
"the body into \"chunks\" and provide a lookup table at the beginning of the "
"body. The header includes certain length values, such as the number of "
"packs, the number of base MIDX files, hash lengths and types."
msgstr ""
"MIDXにデータを追加する拡張機能を使用できるようにするために、ボディを「チャン"
"ク」に編成し、ボディの先頭にルックアップテーブルを提供します。 ヘッダーには、"
"パックの数、ベースMIDXファイルの数、ハッシュの長さ、タイプなど、特定の長さ値"
"達が含まれます。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:339
#, no-wrap
msgid "HEADER:"
msgstr "HEADER:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:343
msgid "The signature is: {'M', 'I', 'D', 'X'}"
msgstr "The signature is: {'M', 'I', 'D', 'X'}"

# TCP/IPではパケットのヘッダ部に記載される
# 制御データなどのバイト順に慣習的に
# ビッグエンディアンを用いており、
# これをネットワークバイトオーダーという。
#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:343
#, no-wrap
msgid "1-byte version number"
msgstr "1-byte バージョン番号"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:345
msgid "Git only writes or recognizes version 1."
msgstr "Gitはバージョン 1 のみを書き込みまたは認識します。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:345
#, no-wrap
msgid "1-byte Object Id Version(= 1: SHA-1, 2: SHA-256)"
msgstr "1-byte オブジェクトIDバージョン(= 1: SHA-1, 2: SHA-256)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:349
msgid ""
"We infer the length of object IDs (OIDs) from this value.  If the hash type "
"does not match the repository's hash algorithm, the multi-pack-index file "
"should be ignored with a warning presented to the user."
msgstr ""
"この値からオブジェクトID(OID)の長さを推測します。 ハッシュタイプがリポジトリ"
"のハッシュアルゴリズムと一致しない場合は、multi-pack-indexファイルを無視し"
"て、ユーザーに警告を表示する必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:349
#, no-wrap
msgid "1-byte number of \"chunks\""
msgstr "1-byte チャンクの数"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:351
msgid "number of \"chunks\""
msgstr "チャンクの数"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:351
#, no-wrap
msgid "1-byte number of base multi-pack-index files"
msgstr "1-byte 「ベース multi-pack-index ファイル」の数"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:353
msgid "This value is currently always zero."
msgstr "この値は現在のところ常にゼロです。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:353
#, no-wrap
msgid "4-byte number of pack files"
msgstr "4-byte パックファアイルの数"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:355
msgid "number of pack files"
msgstr "パックファアイルの数"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:356
#, no-wrap
msgid "CHUNK LOOKUP:"
msgstr "CHUNK LOOKUP:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:359
msgid "(C + 1) * 12 bytes providing the chunk offsets"
msgstr "(C + 1) * 12 bytes はチャンクオフセットを提供します"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:361
msgid "First 4 bytes describe chunk id. Value 0 is a terminating label."
msgstr "最初の4バイトはチャンクIDです。値 0 はラベル終端です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:365
msgid ""
"Other 8 bytes provide offset in current file for chunk to start.  (Chunks "
"are provided in file-order, so you can infer the length using the next chunk "
"position if necessary.)"
msgstr ""
"他の8バイトは、現在のファイルでチャンクを開始するためのオフセットを提供しま"
"す。(チャンクはファイル順に提供されるため、必要に応じて次のチャンク位置を使用"
"して長さを推測できます。)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:368
msgid ""
"The CHUNK LOOKUP matches the table of contents from the chunk-based file "
"format, see linkgit:gitformat-chunk[5]."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:371
msgid ""
"The remaining data in the body is described one chunk at a time, and these "
"chunks may be given in any order. Chunks are required unless otherwise "
"specified."
msgstr ""
"ボディの残りのデータは一度に1つのチャンクで記述され、これらのチャンクは任意の"
"順序で指定できます。 特に指定がない限り、チャンクは必要です。"

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:372
#, no-wrap
msgid "CHUNK DATA:"
msgstr "CHUNK DATA:"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:374
#, no-wrap
msgid "Packfile Names (ID: {'P', 'N', 'A', 'M'})"
msgstr "Packfile Names (ID: {'P', 'N', 'A', 'M'})"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:379
msgid ""
"Stores the packfile names as concatenated, null-terminated strings.  "
"Packfiles must be listed in lexicographic order for fast lookups by name. "
"This is the only chunk not guaranteed to be a multiple of four bytes in "
"length, so should be the last chunk for alignment reasons."
msgstr ""
"パックファイル名達を連結されたnullで終了する文字列として格納します。名前によ"
"る高速ルックアップを行うには、パックファイルを辞書式順序でリストする必要があ"
"ります。 これは、長さが4バイトの倍数であることが保証されていない唯一のチャン"
"クであるため、アライメント上の理由から最後のチャンクにする必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:379
#, no-wrap
msgid "OID Fanout (ID: {'O', 'I', 'D', 'F'})"
msgstr "OID Fanout (ID: {'O', 'I', 'D', 'F'})"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:383
msgid ""
"The ith entry, F[i], stores the number of OIDs with first byte at most i. "
"Thus F[255] stores the total number of objects."
msgstr ""
"i番目のエントリF[i]は、最初のバイトが最大iのOIDの数を格納します。 したがっ"
"て、F[255]はオブジェクトの総数を格納します。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:383
#, no-wrap
msgid "OID Lookup (ID: {'O', 'I', 'D', 'L'})"
msgstr "OID Lookup (ID: {'O', 'I', 'D', 'L'})"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:386
msgid ""
"The OIDs for all objects in the MIDX are stored in lexicographic order in "
"this chunk."
msgstr ""
"MIDX内のすべてのオブジェクトのOIDは、このチャンクに辞書式順序(lexicographic "
"order)で格納されます。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:386
#, no-wrap
msgid "Object Offsets (ID: {'O', 'O', 'F', 'F'})"
msgstr "Object Offsets (ID: {'O', 'O', 'F', 'F'})"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:388
msgid "Stores two 4-byte values for every object."
msgstr "オブジェクトごとに2つの4バイト値を格納します。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:389
msgid "The pack-int-id for the pack storing this object."
msgstr "このオブジェクトを格納するパックの pack-int-id。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:398
msgid ""
"The offset within the pack.  If all offsets are less than `2^32`, then the "
"large offset chunk will not exist and offsets are stored as in IDX v1.  If "
"there is at least one offset value larger than `2^32-1`, then the large "
"offset chunk must exist, and offsets larger than `2^31-1` must be stored in "
"it instead. If the large offset chunk exists and the 31st bit is on, then "
"removing that bit reveals the row in the large offsets containing the 8-byte "
"offset of this object."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:398
#, no-wrap
msgid "[Optional] Object Large Offsets (ID: {'L', 'O', 'F', 'F'})"
msgstr "[オプション] Object Large Offsets (ID: {'L', 'O', 'F', 'F'})"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:400
msgid "8-byte offsets into large packfiles."
msgstr "8-byte 大きなパックファイル(large packfiles)へのオフセット。"

#. type: Labeled list
#: ../Documentation-sedout/gitformat-pack.txt:400
#, no-wrap
msgid "[Optional] Bitmap pack order (ID: {'R', 'I', 'D', 'X'})"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:404
msgid ""
"A list of MIDX positions (one per object in the MIDX, num_objects in total, "
"each a 4-byte unsigned integer in network byte order), sorted according to "
"their relative bitmap/pseudo-pack positions."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:405
#, no-wrap
msgid "TRAILER:"
msgstr "TRAILER:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:409
msgid "Index checksum of the above contents."
msgstr "上記の内容のインデックスチェックサム。"

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:410
#, no-wrap
msgid "multi-pack-index reverse indexes"
msgstr "multi-pack-index reverse indexes"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:414
msgid ""
"Similar to the pack-based reverse index, the multi-pack index can also be "
"used to generate a reverse index."
msgstr ""
"パックベースのリバースインデックスと同様に、マルチパックインデックスを使用し"
"てリバースインデックスを生成することもできます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:420
msgid ""
"Instead of mapping between offset, pack-, and index position, this reverse "
"index maps between an object's position within the MIDX, and that object's "
"position within a pseudo-pack that the MIDX describes (i.e., the ith entry "
"of the multi-pack reverse index holds the MIDX position of ith object in "
"pseudo-pack order)."
msgstr ""
"この逆インデックスは、offset、pack-、index の位置の間でマッピングする代わり"
"に、MIDX内のオブジェクトの位置と、MIDXが記述する疑似パック内のそのオブジェク"
"トの位置の間でマッピングします(つまり、マルチパック逆インデックスのi番目のエ"
"ントリは、i番目のオブジェクトのMIDX位置を疑似パック順に保持します)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:426
msgid ""
"To clarify the difference between these orderings, consider a multi-pack "
"reachability bitmap (which does not yet exist, but is what we are building "
"towards here). Each bit needs to correspond to an object in the MIDX, and so "
"we need an efficient mapping from bit position to MIDX position."
msgstr ""
"これらの順序の違いを明確にするために、マルチパック到達可能性ビットマップ(まだ"
"存在していませんが、現在これを目指して開発中です)を検討してください。 各ビッ"
"トはMIDX内のオブジェクトに対応する必要があるため、ビット位置からMIDX位置への"
"効率的なマッピングが必要です。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:432
msgid ""
"One solution is to let bits occupy the same position in the oid-sorted index "
"stored by the MIDX. But because oids are effectively random, their resulting "
"reachability bitmaps would have no locality, and thus compress poorly. (This "
"is the reason that single-pack bitmaps use the pack ordering, and not the ."
"idx ordering, for the same purpose.)"
msgstr ""
"解決策の一つは、ビットがMIDXによって格納された、oidソートされたインデックスの"
"同じ位置を占めるようにすることです。 ただし、oidは事実上ランダムであるため、"
"結果として得られる到達可能性ビットマップには局所性がなく、圧縮が不十分になり"
"ます。 (これが、シングルパックビットマップが同じ目的で、 .idx順序ではなく、"
"パック順序を使用する理由です。)"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:439
msgid ""
"So we'd like to define an ordering for the whole MIDX based around pack "
"ordering, which has far better locality (and thus compresses more "
"efficiently). We can think of a pseudo-pack created by the concatenation of "
"all of the packs in the MIDX. E.g., if we had a MIDX with three packs (a, b, "
"c), with 10, 15, and 20 objects respectively, we can imagine an ordering of "
"the objects like:"
msgstr ""
"そのため、パックの順序に基づいてMIDX全体の順序を定義します。これにより、局所"
"性が大幅に向上します（したがって、より効率的に圧縮されます）。 MIDX内のすべて"
"のパックを連結して作成された疑似パックを考えることができます。 たとえば、3つ"
"のパック（a、b、c）、それぞれ10、15、および20個のオブジェクトを含むMIDXがある"
"場合、以下のようなオブジェクトの順序を想像できます:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:441
#, no-wrap
msgid "    |a,0|a,1|...|a,9|b,0|b,1|...|b,14|c,0|c,1|...|c,19|\n"
msgstr "    |a,0|a,1|...|a,9|b,0|b,1|...|b,14|c,0|c,1|...|c,19|\n"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:445
msgid ""
"where the ordering of the packs is defined by the MIDX's pack list, and then "
"the ordering of objects within each pack is the same as the order in the "
"actual packfile."
msgstr ""
"ここで、パックの順序はMIDXのパックリストによって定義され、各パック内のオブ"
"ジェクトの順序は実際のパックファイルでの順序と同じです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:452
msgid ""
"Given the list of packs and their counts of objects, you can naïvely "
"reconstruct that pseudo-pack ordering (e.g., the object at position 27 must "
"be (c,1) because packs \"a\" and \"b\" consumed 25 of the slots). But "
"there's a catch. Objects may be duplicated between packs, in which case the "
"MIDX only stores one pointer to the object (and thus we'd want only one slot "
"in the bitmap)."
msgstr ""
"パックのリストとオブジェクトの数を考えると、その疑似パックの順序を簡単に再構"
"築できます(たとえば、パック「a」と「b」がスロットの25を消費したため、位置27の"
"オブジェクトは（c、1）でなければなりません)。 しかし、落とし穴があります。 オ"
"ブジェクトはパック間で複製される可能性があるのです。その場合、MIDXはオブジェ"
"クトへのポインターを1つだけ格納します(したがって、ビットマップに1つのスロット"
"のみが必要です)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:461
msgid ""
"Callers could handle duplicates themselves by reading objects in order of "
"their bit-position, but that's linear in the number of objects, and much too "
"expensive for ordinary bitmap lookups. Building a reverse index solves this, "
"since it is the logical inverse of the index, and that index has already "
"removed duplicates. But, building a reverse index on the fly can be "
"expensive. Since we already have an on-disk format for pack-based reverse "
"indexes, let's reuse it for the MIDX's pseudo-pack, too."
msgstr ""
"呼び出し元は、ビット位置の順にオブジェクトを読み取ることで重複を処理できます"
"が、オブジェクトの数は直線的であり、通常のビットマップルックアップにはコスト"
"がかかりすぎます。 逆インデックスを作成すると、これが解決されます。これは、イ"
"ンデックスの論理的な逆であり、そのインデックスはすでに重複を削除しているため"
"です。 ただし、その場で逆インデックスを作成すると、コストがかかる可能性があり"
"ます。 パックベースの逆インデックス用のオンディスク形式がすでにあるので、MIDX"
"の疑似パックにも再利用する事しましょう。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:467
msgid ""
"Objects from the MIDX are ordered as follows to string together the pseudo-"
"pack. Let `pack(o)` return the pack from which `o` was selected by the MIDX, "
"and define an ordering of packs based on their numeric ID (as stored by the "
"MIDX). Let `offset(o)` return the object offset of `o` within `pack(o)`. "
"Then, compare `o1` and `o2` as follows:"
msgstr ""
"MIDXのオブジェクトは、疑似パックをつなぎ合わせるために次のように順序付けられ"
"ます。 `pack(o)` がMIDXによって `o` が選択されたパックを返し、（MIDXによって"
"保存された)数値IDに基づいてパックの順序を定義します。 `offset(o)` が "
"`pack(o)` 内の `o` のオブジェクトオフセットを返すようにします。 次に、`o1` と"
"` o2`を以下のように比較します:"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:470
msgid ""
"If one of `pack(o1)` and `pack(o2)` is preferred and the other is not, then "
"the preferred one sorts first."
msgstr ""
"`pack(o1)` と `pack(o2)` の一方が優先され、もう一方が優先されない場合、優先さ"
"れる方が最初にソートされます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:474
msgid ""
"(This is a detail that allows the MIDX bitmap to determine which pack should "
"be used by the pack-reuse mechanism, since it can ask the MIDX for the pack "
"containing the object at bit position 0)."
msgstr ""
"(詳細に言うと、これは、MIDXビットマップがビット位置0にあるオブジェクトを含む"
"パックをMIDXに求めることができるので、パック再利用メカニズムによって使用され"
"るべきパックを決定することを可能にします)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:477
msgid ""
"If `pack(o1) ≠ pack(o2)`, then sort the two objects in descending order "
"based on the pack ID."
msgstr ""
"`pack(o1) ≠ pack(o2)` の場合、パックIDに基づいて2つのオブジェクトを降順で並べ"
"替えます。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:480
msgid ""
"Otherwise, `pack(o1) = pack(o2)`, and the objects are sorted in pack-order "
"(i.e., `o1` sorts ahead of `o2` exactly when `offset(o1)  < offset(o2)`)."
msgstr ""
"それ以外の場合、 `pack(o1) = pack(o2)` であり、オブジェクトはパック順に並べ替"
"えられます(つまり、 `offset(o1)  < offset(o2)` の場合、`o1` は `o2` よりも先"
"に並べ替えられます)。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:484
msgid ""
"In short, a MIDX's pseudo-pack is the de-duplicated concatenation of objects "
"in packs stored by the MIDX, laid out in pack order, and the packs arranged "
"in MIDX order (with the preferred pack coming first)."
msgstr ""
"要するに、MIDXの擬似パックは、MIDXによって保存されたパック内のオブジェクトを"
"パック順に並べ、パックをMIDX順(優先パックが先に来る)に並べたものを重複排除し"
"て連結したものです。"

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:487
msgid ""
"The MIDX's reverse index is stored in the optional 'RIDX' chunk within the "
"MIDX itself."
msgstr ""

#. type: Title ==
#: ../Documentation-sedout/gitformat-pack.txt:488
#, no-wrap
msgid "cruft packs"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:494
msgid ""
"The cruft packs feature offer an alternative to Git's traditional mechanism "
"of removing unreachable objects. This document provides an overview of Git's "
"pruning mechanism, and how a cruft pack can be used instead to accomplish "
"the same."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:495
#, no-wrap
msgid "Background"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:499
msgid ""
"To remove unreachable objects from your repository, Git offers `git repack -"
"Ad` (see linkgit:git-repack[1]). Quoting from the documentation:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/gitformat-pack.txt:504
#, no-wrap
msgid ""
"[...] unreachable objects in a previous pack become loose, unpacked objects,\n"
"instead of being left in the old pack. [...] loose unreachable objects will be\n"
"pruned according to normal expiry rules with the next 'git gc' invocation.\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:511
msgid ""
"Unreachable objects aren't removed immediately, since doing so could race "
"with an incoming push which may reference an object which is about to be "
"deleted.  Instead, those unreachable objects are stored as loose objects and "
"stay that way until they are older than the expiration window, at which "
"point they are removed by linkgit:git-prune[1]."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:520
msgid ""
"Git must store these unreachable objects loose in order to keep track of "
"their per-object mtimes. If these unreachable objects were written into one "
"big pack, then either freshening that pack (because an object contained "
"within it was re-written) or creating a new pack of unreachable objects "
"would cause the pack's mtime to get updated, and the objects within it would "
"never leave the expiration window. Instead, objects are stored loose in "
"order to keep track of the individual object mtimes and avoid a situation "
"where all cruft objects are freshened at once."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:529
msgid ""
"This can lead to undesirable situations when a repository contains many "
"unreachable objects which have not yet left the grace period. Having large "
"directories in the shards of `.git/objects` can lead to decreased "
"performance in the repository. But given enough unreachable objects, this "
"can lead to inode starvation and degrade the performance of the whole "
"system. Since we can never pack those objects, these repositories often take "
"up a large amount of disk space, since we can only zlib compress them, but "
"not store them in delta chains."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:530
#, no-wrap
msgid "Cruft packs"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:535
msgid ""
"A cruft pack eliminates the need for storing unreachable objects in a loose "
"state by including the per-object mtimes in a separate file alongside a "
"single pack containing all loose objects."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:543
msgid ""
"A cruft pack is written by `git repack --cruft` when generating a new pack.  "
"linkgit:git-pack-objects[1]'s `--cruft` option. Note that `git repack --"
"cruft` is a classic all-into-one repack, meaning that everything in the "
"resulting pack is reachable, and everything else is unreachable. Once "
"written, the `--cruft` option instructs `git repack` to generate another "
"pack containing only objects not packed in the previous step (which equates "
"to packing all unreachable objects together). This progresses as follows:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:547
msgid ""
"Enumerate every object, marking any object which is (a) not contained in a "
"kept-pack, and (b) whose mtime is within the grace period as a traversal tip."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:550
msgid ""
"Perform a reachability traversal based on the tips gathered in the previous "
"step, adding every object along the way to the pack."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:553
msgid ""
"Write the pack out, along with a `.mtimes` file that records the per-object "
"timestamps."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:558
msgid ""
"This mode is invoked internally by linkgit:git-repack[1] when instructed to "
"write a cruft pack. Crucially, the set of in-core kept packs is exactly the "
"set of packs which will not be deleted by the repack; in other words, they "
"contain all of the repository's reachable objects."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:564
msgid ""
"When a repository already has a cruft pack, `git repack --cruft` typically "
"only adds objects to it. An exception to this is when `git repack` is given "
"the `--cruft-expiration` option, which allows the generated cruft pack to "
"omit expired objects instead of waiting for linkgit:git-gc[1] to expire "
"those objects later on."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:567
msgid ""
"It is linkgit:git-gc[1] that is typically responsible for removing expired "
"unreachable objects."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:568
#, no-wrap
msgid "Caution for mixed-version environments"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:575
msgid ""
"Repositories that have cruft packs in them will continue to work with any "
"older version of Git. Note, however, that previous versions of Git which do "
"not understand the `.mtimes` file will use the cruft pack's mtime as the "
"mtime for all of the objects in it. In other words, do not expect older (pre-"
"cruft pack)  versions of Git to interpret or even read the contents of the `."
"mtimes` file."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:579
msgid ""
"Note that having mixed versions of Git GC-ing the same repository can lead "
"to unreachable objects never being completely pruned. This can happen under "
"the following circumstances:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:582
msgid ""
"An older version of Git running GC explodes the contents of an existing "
"cruft pack loose, using the cruft pack's mtime."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:585
msgid ""
"A newer version running GC collects those loose objects into a cruft pack, "
"where the .mtime file reflects the loose object's actual mtimes, but the "
"cruft pack mtime is \"now\"."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:588
msgid ""
"Repeating this process will lead to unreachable objects not getting pruned "
"as a result of repeatedly resetting the objects' mtimes to the present time."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:593
msgid ""
"If you are GC-ing repositories in a mixed version environment, consider "
"omitting the `--cruft` option when using linkgit:git-repack[1] and linkgit:"
"git-gc[1], and leaving the `gc.cruftPacks` configuration unset until all "
"writers understand cruft packs."
msgstr ""

#. type: Title ===
#: ../Documentation-sedout/gitformat-pack.txt:594
#, no-wrap
msgid "Alternatives"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:597
msgid "Notable alternatives to this design include:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:599
msgid "The location of the per-object mtime data, and"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:600
msgid "Storing unreachable objects in multiple cruft packs."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:605
msgid ""
"On the location of mtime data, a new auxiliary file tied to the pack was "
"chosen to avoid complicating the `.idx` format. If the `.idx` format were "
"ever to gain support for optional chunks of data, it may make sense to "
"consolidate the `.mtimes` format into the `.idx` itself."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:612
msgid ""
"Storing unreachable objects among multiple cruft packs (e.g., creating a new "
"cruft pack during each repacking operation including only unreachable "
"objects which aren't already stored in an earlier cruft pack) is "
"significantly more complicated to construct, and so aren't pursued here. The "
"obvious drawback to the current implementation is that the entire cruft pack "
"must be re-written from scratch."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/gitformat-pack.txt:614
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/gitformat-pack.txt:615
msgid "Part of the linkgit:git[1] suite"
msgstr ""
