# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2024-01-22 08:03+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-push.txt:2
#, no-wrap
msgid "git-push(1)"
msgstr "git-push(1)"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:7
msgid "git-push - Update remote refs along with associated objects"
msgstr "git-push - 関連するオブジェクトとともにリモートrefを更新します"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:18
#, no-wrap
msgid ""
"'git push' [--all | --branches | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]\n"
"\t   [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]\n"
"\t   [-u | --set-upstream] [-o <string> | --push-option=<string>]\n"
"\t   [--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t   [--force-with-lease[=<refname>[:<expect>]] [--force-if-includes]]\n"
"\t   [--no-verify] [<repository> [<refspec>...]]\n"
msgstr ""
"'git push' [--all | --branches | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]\n"
"\t   [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]\n"
"\t   [-u | --set-upstream] [-o <string> | --push-option=<string>]\n"
"\t   [--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t   [--force-with-lease[=<refname>[:<expect>]] [--force-if-includes]]\n"
"\t   [--no-verify] [<repository> [<refspec>...]]\n"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:20
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:24
msgid ""
"Updates remote refs using local refs, while sending objects necessary to "
"complete the given refs."
msgstr ""
"指定のrefを完全にするために必要なオブジェクトを送信により、ローカルrefを使用"
"してリモートrefを更新します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:28
msgid ""
"You can make interesting things happen to a repository every time you push "
"into it, by setting up 'hooks' there.  See documentation for linkgit:git-"
"receive-pack[1]."
msgstr ""
"リポジトリに「フック」を設定することで、あなたがリポジトリにプッシュするたび"
"に興味深いことが起こります。 linkgit:git-receive-pack[1] のドキュメントを参照"
"してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:33
msgid ""
"When the command line does not specify where to push with the `<repository>` "
"argument, `branch.*.remote` configuration for the current branch is "
"consulted to determine where to push.  If the configuration is missing, it "
"defaults to 'origin'."
msgstr ""
"コマンドラインで `<repository>` 引数を使用してプッシュする場所が指定されてい"
"無い場合、現在のブランチの `branch.*.remote` 構成を参照して、プッシュする場所"
"を決定します。 `branch.*.remote` 構成が無い場合、デフォルトは `origin` になり"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:39
msgid ""
"When the command line does not specify what to push with `<refspec>...` "
"arguments or `--all`, `--mirror`, `--tags` options, the command finds the "
"default `<refspec>` by consulting `remote.*.push` configuration, and if it "
"is not found, honors `push.default` configuration to decide what to push "
"(See linkgit:git-config[1] for the meaning of `push.default`)."
msgstr ""
"コマンドラインで `<refspec>...` 引数や `--all`, `--mirror`, `--tags` オプショ"
"ンを使って何をプッシュするか指定し無かった場合、コマンドは `remote.*.push` 構"
"成を参照してデフォルトの `<refspec>` を探し、それで見つからなかった場合は "
"`push.default` 構成に準拠して何をプッシュするか決定します(`push.default` の意"
"味は linkgit:git-config[1] を参照ください)。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:46
msgid ""
"When neither the command-line nor the configuration specify what to push, "
"the default behavior is used, which corresponds to the `simple` value for "
"`push.default`: the current branch is pushed to the corresponding upstream "
"branch, but as a safety measure, the push is aborted if the upstream branch "
"does not have the same name as the local one."
msgstr ""
"コマンドラインと構成のどちらもプッシュする対象を指定しない場合、デフォルトの"
"振る舞いが使用されます。それは、 `push.default` の `simple` 値に対応します。 "
"現在のブランチは対応する上流ブランチにプッシュされますが、安全対策として、上"
"流ブランチがローカルブランチと同じ名前でない場合はプッシュが中断(abort)されま"
"す。"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:49
#, no-wrap
msgid "OPTIONS[[OPTIONS]]"
msgstr "OPTIONS[[OPTIONS]]"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:50
#, no-wrap
msgid "<repository>"
msgstr "<repository>"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:55
msgid ""
"The \"remote\" repository that is destination of a push operation.  This "
"parameter can be either a URL (see the section <<URLS,GIT URLS>> below) or "
"the name of a remote (see the section <<REMOTES,REMOTES>> below)."
msgstr ""
"「リモート」(remote)リポジトリはプッシュ操作の宛先です。 このパラメーターは、"
"URL(下記セクション <<URLS,GIT URLS>> 参照)、または、リモートの名前(下記セク"
"ション <<REMOTES,REMOTES>> 参照)のどちらかです。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:56
#, no-wrap
msgid "<refspec>..."
msgstr "<refspec>..."

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:61
msgid ""
"Specify what destination ref to update with what source object.  The format "
"of a <refspec> parameter is an optional plus `+`, followed by the source "
"object <src>, followed by a colon `:`, followed by the destination ref <dst>."
msgstr ""
"どの宛先refをどのソースオブジェクトで更新するかを指定します。 <refspec> パラ"
"メータの形式は、オプションのプラス `+` 、ソースオブジェクト <src> 、コロン `:"
"` 、宛先ref <dst> の順です。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:65
msgid ""
"The <src> is often the name of the branch you would want to push, but it can "
"be any arbitrary \"SHA-1 expression\", such as `master~4` or `HEAD` (see "
"linkgit:gitrevisions[7])."
msgstr ""
"<src> は、プッシュするブランチの名前であることがよくありますが、 `master~4` "
"とか `HEAD` などの任意の「SHA-1式」にすることができます(linkgit:"
"gitrevisions[7] 参照)。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:75
msgid ""
"The <dst> tells which ref on the remote side is updated with this push. "
"Arbitrary expressions cannot be used here, an actual ref must be named.  If "
"`git push [<repository>]` without any `<refspec>` argument is set to update "
"some ref at the destination with `<src>` with `remote.<repository>.push` "
"configuration variable, `:<dst>` part can be omitted--such a push will "
"update a ref that `<src>` normally updates without any `<refspec>` on the "
"command line.  Otherwise, missing `:<dst>` means to update the same ref as "
"the `<src>`."
msgstr ""
"<dst>は、このプッシュでリモート側のどのrefが更新されるかを示します。 ここでは"
"任意の式を使用できません。実際のrefには名前を付ける必要があります。 `git "
"push [<repository>]` に `<refspec>` 引数を指定せず、 `remote.<repository>."
"push` 構成変数で `<src>` を指定して同一のrefを更新する場合、 `:<dst>` の部分"
"を省略することができるようになりました -- このようなプッシュは、コマンドライ"
"ンで `<refspec>` を指定しなくても、 `<src>` が通常更新するrefを更新することに"
"なります。 それ以外の場合、 `:<dst>` がないということは、`<src>` と同一のref"
"を更新することを意味します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:80
msgid ""
"If <dst> doesn't start with `refs/` (e.g. `refs/heads/master`) we will try "
"to infer where in `refs/*` on the destination <repository> it belongs based "
"on the type of <src> being pushed and whether <dst> is ambiguous."
msgstr ""
"<dst> が `refs/`(例: `refs/heads/master`)で始まらない場合、プッシュされる "
"<src> の種類と <dst> があいまいかどうかから、それが `refs/*` 上のどこに属する"
"か推測しようとします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:84
msgid ""
"If <dst> unambiguously refers to a ref on the <repository> remote, then push "
"to that ref."
msgstr ""
"<dst> が <repository> リモートのrefを明確に参照している場合は、そのrefにプッ"
"シュします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:87
msgid ""
"If <src> resolves to a ref starting with refs/heads/ or refs/tags/, then "
"prepend that to <dst>."
msgstr ""
"<src>が `refs/heads/` または `refs/tags/` で始まるrefに解決される場合は、その"
"解決されたrefを <dst> の前に追加します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:93
msgid ""
"Other ambiguity resolutions might be added in the future, but for now any "
"other cases will error out with an error indicating what we tried, and "
"depending on the `advice.pushUnqualifiedRefname` configuration (see linkgit:"
"git-config[1]) suggest what refs/ namespace you may have wanted to push to."
msgstr ""
"将来、他のあいまいさの解決策が追加される可能性がありますが、今のところ、他の"
"場合では、試行した内容を示すエラー出力し、そして `advice."
"pushUnqualifiedRefname` 構成に応じて、あなたがプッシュしたい `refs/` 名前空間"
"を提案します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:101
msgid ""
"The object referenced by <src> is used to update the <dst> reference on the "
"remote side. Whether this is allowed depends on where in `refs/*` the <dst> "
"reference lives as described in detail below, in those sections \"update\" "
"means any modifications except deletes, which as noted after the next few "
"sections are treated differently."
msgstr ""
"<src>によって参照されるオブジェクトは、リモート側の<dst>参照を更新するために"
"使用されます。 これが許可されるかどうかは、以下で詳細に説明するように、 "
"`refs/*` のどこに<dst>参照が存在するかによって異なります。これらのセクション"
"では、「更新」(update)とは、削除以外の変更を意味します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:104
msgid ""
"The `refs/heads/*` namespace will only accept commit objects, and updates "
"only if they can be fast-forwarded."
msgstr ""
"`refs/heads/*` 名前空間はcommitオブジェクトのみを受け入れ、早送り(fast-"
"forward)できる場合にのみ更新します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:108
msgid ""
"The `refs/tags/*` namespace will accept any kind of object (as commits, "
"trees and blobs can be tagged), and any updates to them will be rejected."
msgstr ""
"`refs/tags/*` 名前空間は(コミット、ツリー、ブロブにタグを付けることができるた"
"め、)あらゆる種類のオブジェクトを受け入れ、それらへの更新は拒否(reject)されま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:113
msgid ""
"It's possible to push any type of object to any namespace outside of `refs/"
"{tags,heads}/*`. In the case of tags and commits, these will be treated as "
"if they were the commits inside `refs/heads/*` for the purposes of whether "
"the update is allowed."
msgstr ""
"`refs/{tags,heads}/*` の外側の任意の名前空間に任意のタイプのオブジェクトを"
"プッシュすることが可能です。 タグとコミットの場合、更新が許可されるかどうかの"
"判断のために、これらは `refs/heads/*` 内のコミットであるかのように扱われま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:122
msgid ""
"I.e. a fast-forward of commits and tags outside `refs/{tags,heads}/*` is "
"allowed, even in cases where what's being fast-forwarded is not a commit, "
"but a tag object which happens to point to a new commit which is a fast-"
"forward of the commit the last tag (or commit) it's replacing. Replacing a "
"tag with an entirely different tag is also allowed, if it points to the same "
"commit, as well as pushing a peeled tag, i.e. pushing the commit that "
"existing tag object points to, or a new tag object which an existing commit "
"points to."
msgstr ""
"つまり、`refs/{tags,heads}/*` の外部でのコミットやタグの早送りは、早送りされ"
"るものがコミットではなく、たまたま置き換えられる最後のタグ(またはコミット)の"
"早送りである新しいコミットを指しているタグオブジェクトであっても、許可されま"
"す。 タグを全く別のタグに置き換えることも、同一のコミットを指していれば可能で"
"す。また、剥かれたタグ(peeled tag)をプッシュすることもできます。つまり、既存"
"のタグオブジェクトが指しているコミット、または既存のコミットが指している新し"
"いタグオブジェクトをプッシュします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:126
msgid ""
"Tree and blob objects outside of `refs/{tags,heads}/*` will be treated the "
"same way as if they were inside `refs/tags/*`, any update of them will be "
"rejected."
msgstr ""
"`refs/{tags,heads}/*` の外側にあるツリーオブジェクトとブロブオブジェクトは、 "
"`refs/tags/*` の内側にある場合と同一の扱いであり、更新は拒否されます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:135
msgid ""
"All of the rules described above about what's not allowed as an update can "
"be overridden by adding an the optional leading `+` to a refspec (or using "
"`--force` command line option). The only exception to this is that no amount "
"of forcing will make the `refs/heads/*` namespace accept a non-commit "
"object. Hooks and configuration can also override or amend these rules, see "
"e.g. `receive.denyNonFastForwards` in linkgit:git-config[1] and `pre-"
"receive` and `update` in linkgit:githooks[5]."
msgstr ""
"更新が許可されていないものに関する上記のすべてのルールは、オプションの先頭の "
"`+` をrefspecに追加する(または `--force` コマンドラインオプションを使用する)"
"ことでオーバーライドできます。 これに対する唯一の例外は、 `refs/heads/*` 名前"
"空間が非コミットオブジェクトを受け入れるように強制することはないということで"
"す。 フックと構成は、これらのルールをオーバーライドまたは修正することもできま"
"す。たとえば、 linkgit:git-config[1] の `receive.denyNonFastForwards` と、 "
"linkgit:githooks[5] の `pre-receive` や `update` を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:141
msgid ""
"Pushing an empty <src> allows you to delete the <dst> ref from the remote "
"repository. Deletions are always accepted without a leading `+` in the "
"refspec (or `--force`), except when forbidden by configuration or hooks. See "
"`receive.denyDeletes` in linkgit:git-config[1] and `pre-receive` and "
"`update` in linkgit:githooks[5]."
msgstr ""
"空の <src> をプッシュすると、リモートリポジトリから <dst> ref を削除できま"
"す。 構成またはフックによって禁止されている場合を除き、削除は常に refspec の"
"先頭に `+` を付けずに受け入れられます(または `--force`)。 linkgit:git-"
"config[1] の `receive.denyDeletes` と、 linkgit:githooks[5] の `pre-receive` "
"や `update` を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:146
msgid ""
"The special refspec `:` (or `+:` to allow non-fast-forward updates)  directs "
"Git to push \"matching\" branches: for every branch that exists on the local "
"side, the remote side is updated if a branch of the same name already exists "
"on the remote side."
msgstr ""
"特別なrefspec `:` (または非早送り更新を許可する場合は `+:`)は、Gitに、「一致"
"する」ブランチをプッシュするように指示します。 ローカル側に存在するすべてのブ"
"ランチについて、同じ名前のブランチがリモート側にすでに存在する場合、リモート"
"側が更新されます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:148
msgid "`tag <tag>` means the same as `refs/tags/<tag>:refs/tags/<tag>`."
msgstr "`tag <tag>` は、 `refs/tags/<tag>:refs/tags/<tag>` と同じ意味です。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:149
#, no-wrap
msgid "`--all`"
msgstr "`--all`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:150
#, no-wrap
msgid "`--branches`"
msgstr "`--branches`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:153
msgid ""
"Push all branches (i.e. refs under `refs/heads/`); cannot be used with other "
"<refspec>."
msgstr ""
"すべてのブランチ(つまり、 `refs/heads/` の下のrefs)をプッシュします。 他の"
"<refspec>と一緒に使用することはできません。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:154
#, no-wrap
msgid "`--prune`"
msgstr "`--prune`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:161
msgid ""
"Remove remote branches that don't have a local counterpart. For example a "
"remote branch `tmp` will be removed if a local branch with the same name "
"doesn't exist any more. This also respects refspecs, e.g.  `git push --prune "
"remote refs/heads/*:refs/tmp/*` would make sure that remote `refs/tmp/foo` "
"will be removed if `refs/heads/foo` doesn't exist."
msgstr ""
"ローカルに対応するものがないリモートブランチを削除します。 たとえば、同じ名前"
"のローカルブランチがもう存在しない場合、リモートブランチ `tmp` は削除されま"
"す。 これは refspecs も尊重し、 `git push --prune remote refs/heads/*:refs/"
"tmp/*` は、リモートの `refs/tmp/foo` が `refs/heads/foo` が存在しない場合に削"
"除されることを確認するものです。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:162
#, no-wrap
msgid "`--mirror`"
msgstr "`--mirror`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:172
msgid ""
"Instead of naming each ref to push, specifies that all refs under `refs/` "
"(which includes but is not limited to `refs/heads/`, `refs/remotes/`, and "
"`refs/tags/`)  be mirrored to the remote repository.  Newly created local "
"refs will be pushed to the remote end, locally updated refs will be force "
"updated on the remote end, and deleted refs will be removed from the remote "
"end.  This is the default if the configuration option `remote.<remote>."
"mirror` is set."
msgstr ""
"プッシュする各refに名前を付ける代わりに、 `refs/` の下のすべての参照(`refs/"
"heads/` と `refs/remotes/` と `refs/tags/` を含むがこれらに限定されない)がリ"
"モートリポジトリへミラーリングされるように指定します。 新しく作成されたローカ"
"ルrefはリモートエンドにプッシュされ、ローカルで更新されたrefはリモートエンド"
"で強制的に更新され、削除されたrefはリモートエンドから削除されます。 これは、"
"構成オプション `remote.<remote>.mirror` が設定されている場合のデフォルトで"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:173
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:174
#, no-wrap
msgid "`--dry-run`"
msgstr "`--dry-run`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:176
msgid "Do everything except actually send the updates."
msgstr "実際に更新を送信する以外はすべて行います。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:177
#, no-wrap
msgid "`--porcelain`"
msgstr "`--porcelain`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:181
msgid ""
"Produce machine-readable output.  The output status line for each ref will "
"be tab-separated and sent to stdout instead of stderr.  The full symbolic "
"names of the refs will be given."
msgstr ""
"機械可読出力を生成します。 各refの出力ステータス行はタブで区切られ、stderrで"
"はなくstdoutに送信されます。 refの完全な記号名が表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:182
#, no-wrap
msgid "`-d`"
msgstr "`-d`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:183
#, no-wrap
msgid "`--delete`"
msgstr "`--delete`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:186
msgid ""
"All listed refs are deleted from the remote repository. This is the same as "
"prefixing all refs with a colon."
msgstr ""
"リストされているすべてのrefがリモートリポジトリから削除されます。 これは、す"
"べてのrefの前にコロン(`:`)を付けるのと同一です。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:187
#, no-wrap
msgid "`--tags`"
msgstr "`--tags`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:191
msgid ""
"All refs under `refs/tags` are pushed, in addition to refspecs explicitly "
"listed on the command line."
msgstr ""
"コマンドラインに明示的にリストされているrefspecsに加えて、 `refs/tags` の下に"
"あるすべてのrefがプッシュされます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:192
#, no-wrap
msgid "`--follow-tags`"
msgstr "`--follow-tags`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:199
msgid ""
"Push all the refs that would be pushed without this option, and also push "
"annotated tags in `refs/tags` that are missing from the remote but are "
"pointing at commit-ish that are reachable from the refs being pushed.  This "
"can also be specified with configuration variable `push.followTags`.  For "
"more information, see `push.followTags` in linkgit:git-config[1]."
msgstr ""
"このオプションがなければプッシュされるであろうすべてのrefをプッシュし、さら"
"に `refs/tags` にある、リモートからは見つからないがプッシュされるrefから到達"
"可能なコミットっぽい何かを指す注釈付きタグをプッシュします。 これは、設定変"
"数 `push.followTags` で指定することもできます。 詳しくは linkgit:git-"
"config[1] にある `push.followTags` を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:200
#, no-wrap
msgid "`--[no-]signed`"
msgstr "`--[no-]signed`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:201
#, no-wrap
msgid "`--signed=(true|false|if-asked)`"
msgstr "`--signed=(true|false|if-asked)`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:210
msgid ""
"GPG-sign the push request to update refs on the receiving side, to allow it "
"to be checked by the hooks and/or be logged.  If `false` or `--no-signed`, "
"no signing will be attempted.  If `true` or `--signed`, the push will fail "
"if the server does not support signed pushes.  If set to `if-asked`, sign if "
"and only if the server supports signed pushes.  The push will also fail if "
"the actual call to `gpg --sign` fails.  See linkgit:git-receive-pack[1] for "
"the details on the receiving end."
msgstr ""
"プッシュ要求をGPG署名して、受信側のrefを更新し、フックでチェックしたり、ログ"
"に記録したりできるようにします。  `false` または `--no-signed` の場合、署名は"
"試行されません。  `true` または `--signed` の場合、サーバーが署名付きプッシュ"
"をサポートしていないと、プッシュは失敗します。 `if-asked` に設定されている場"
"合、サーバーが署名されたプッシュをサポートしている場合にのみ署名します。 "
"`gpg --sign` の実際の呼び出しが失敗した場合も、プッシュは失敗します。 受信側"
"の詳細については、 linkgit:git-receive-pack[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:211
#, no-wrap
msgid "`--[no-]atomic`"
msgstr "`--[no-]atomic`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:215
msgid ""
"Use an atomic transaction on the remote side if available.  Either all refs "
"are updated, or on error, no refs are updated.  If the server does not "
"support atomic pushes the push will fail."
msgstr ""
"可能な場合は、リモート側でアトミック取引(atomic transaction)を使用します。 す"
"べてのrefが更新されるか、エラーが発生した場合、refは更新されません。 サーバー"
"がアトミックプッシュをサポートしていない場合、プッシュは失敗します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:216
#, no-wrap
msgid "`-o <option>`"
msgstr "`-o <option>`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:217
#, no-wrap
msgid "`--push-option=<option>`"
msgstr "`--push-option=<option>`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:227
msgid ""
"Transmit the given string to the server, which passes them to the pre-"
"receive as well as the post-receive hook. The given string must not contain "
"a NUL or LF character.  When multiple `--push-option=<option>` are given, "
"they are all sent to the other side in the order listed on the command "
"line.  When no `--push-option=<option>` is given from the command line, the "
"values of configuration variable `push.pushOption` are used instead."
msgstr ""
"指定の文字列をサーバーに送信します。サーバーは、それらを受信前(pre-receive)"
"フックと受信後(post-receive)フックに渡します。 指定の文字列には、NUL文字また"
"はLF文字を含めることはできません。 複数の `--push-option=<option>` が指定され"
"ている場合、それらはすべてコマンドラインにリストされている順序で相手側に送信"
"されます。 コマンドラインで `--push-option=<option>` が指定されていない場合"
"は、代わりに構成変数 `push.pushOption` の値が使用されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:228
#, no-wrap
msgid "`--receive-pack=<git-receive-pack>`"
msgstr "`--receive-pack=<git-receive-pack>`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:229
#, no-wrap
msgid "`--exec=<git-receive-pack>`"
msgstr "`--exec=<git-receive-pack>`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:234
msgid ""
"Path to the 'git-receive-pack' program on the remote end.  Sometimes useful "
"when pushing to a remote repository over ssh, and you do not have the "
"program in a directory on the default $PATH."
msgstr ""
"リモート側の `git-receive-pack` プログラムへのパス。 sshを介してリモートリポ"
"ジトリにプッシュするときや、デフォルトの$PATHのディレクトリに当該プログラムが"
"無いときに便利です。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:235
#, no-wrap
msgid "`--[no-]force-with-lease`"
msgstr "`--[no-]force-with-lease`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:236
#, no-wrap
msgid "`--force-with-lease=<refname>`"
msgstr "`--force-with-lease=<refname>`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:237
#, no-wrap
msgid "`--force-with-lease=<refname>:<expect>`"
msgstr "`--force-with-lease=<refname>:<expect>`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:240
msgid ""
"Usually, \"git push\" refuses to update a remote ref that is not an ancestor "
"of the local ref used to overwrite it."
msgstr ""
"通常、「git push」は、上書きに使用されたローカルrefの祖先ではないリモートref"
"の更新を拒絶(refuse)します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:243
msgid ""
"This option overrides this restriction if the current value of the remote "
"ref is the expected value.  \"git push\" fails otherwise."
msgstr ""
"リモートrefの現在の値が期待の(expect)値である場合、このオプションはこの制限を"
"オーバーライドします。 それ以外の場合、「git push」は失敗します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:250
msgid ""
"Imagine that you have to rebase what you have already published.  You will "
"have to bypass the \"must fast-forward\" rule in order to replace the "
"history you originally published with the rebased history.  If somebody else "
"built on top of your original history while you are rebasing, the tip of the "
"branch at the remote may advance with their commit, and blindly pushing with "
"`--force` will lose their work."
msgstr ""
"あなたが、すでに公開しているものをリベースする必要があると想像してください。 "
"最初に公開した履歴をリベースされた履歴に置き換えるには、「早送りしなければな"
"らない」ルールをバイパスする必要があります。 あなたのリベース作業中に他の誰か"
"があなたの元の履歴の上に構築した場合、リモートのブランチの先端は彼らのコミッ"
"トで前進するかもしれません、そして、あなたが `--force` を伴って盲目的にプッ"
"シュすると彼らの作業内容は失われてしまいます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:257
msgid ""
"This option allows you to say that you expect the history you are updating "
"is what you rebased and want to replace. If the remote ref still points at "
"the commit you specified, you can be sure that no other people did anything "
"to the ref. It is like taking a \"lease\" on the ref without explicitly "
"locking it, and the remote ref is updated only if the \"lease\" is still "
"valid."
msgstr ""
"このオプションを使用すると、更新している履歴がリベースされ、置き換えたいもの"
"であると期待していると言う事ができます。 リモートrefがまだあなたが指定したコ"
"ミットを指している場合は、誰もrefに対して何もしなかったことの確認になりま"
"す。 これは、参照を明示的にロックせずに「リース」(lease;賃借権期間)を取得する"
"ようなものであり、リモートrefは「リース」がまだ有効な場合にのみ更新されます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:262
msgid ""
"`--force-with-lease` alone, without specifying the details, will protect all "
"remote refs that are going to be updated by requiring their current value to "
"be the same as the remote-tracking branch we have for them."
msgstr ""
"`--force-with-lease` 単独では、詳細を指定しないため、現在の値がリモート追跡ブ"
"ランチと同じである必要があり、更新されるすべてのリモートrefを保護します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:267
msgid ""
"`--force-with-lease=<refname>`, without specifying the expected value, will "
"protect the named ref (alone), if it is going to be updated, by requiring "
"its current value to be the same as the remote-tracking branch we have for "
"it."
msgstr ""
"`--force-with-lease=<refname>` では、期待する値(expected value)を指定しないの"
"で、名前付きrefを(単独で)保護します。更新される場合は、現在の値をリモート追跡"
"ブランチと同じにする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:275
msgid ""
"`--force-with-lease=<refname>:<expect>` will protect the named ref (alone), "
"if it is going to be updated, by requiring its current value to be the same "
"as the specified value `<expect>` (which is allowed to be different from the "
"remote-tracking branch we have for the refname, or we do not even have to "
"have such a remote-tracking branch when this form is used).  If `<expect>` "
"is the empty string, then the named ref must not already exist."
msgstr ""
"`--force-with-lease=<refname>:<expect>` は、現在の値が指定の値 `<expect>` と"
"同じである必要があることで、指定のref(単独)を保護します(これは、refnameに対し"
"て持っているリモート追跡ブランチとは異なることが許可されています。または、こ"
"の形式を使用する場合は、そのようなリモート追跡ブランチを持つ必要はありませ"
"ん)。 `<expect>` が空の文字列である場合、指定のrefはまだ存在していてはなりま"
"せん。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:280
msgid ""
"Note that all forms other than `--force-with-lease=<refname>:<expect>` that "
"specifies the expected current value of the ref explicitly are still "
"experimental and their semantics may change as we gain experience with this "
"feature."
msgstr ""
"注意: refの期待される現在の値を明示的に指定する `--force-with-"
"lease=<refname>:<expect>` 以外のすべての形式はまだ実験的であり、この機能の経"
"験を積むにつれてセマンティクスが変わる可能性があることに注意してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:283
msgid ""
"\"--no-force-with-lease\" will cancel all the previous --force-with-lease on "
"the command line."
msgstr ""
"`--no-force-with-lease` は、コマンドラインでそれ以前に指定した全ての `--"
"force-with-lease` をキャンセルします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:289
msgid ""
"A general note on safety: supplying this option without an expected value, i."
"e. as `--force-with-lease` or `--force-with-lease=<refname>` interacts very "
"badly with anything that implicitly runs `git fetch` on the remote to be "
"pushed to in the background, e.g. `git fetch origin` on your repository in a "
"cronjob."
msgstr ""
"安全性に関する一般的な注意: このオプションを期待値(expected value)なしに指定"
"すると、たとえば cronjob でリポジトリの `git fetch origin` のように、プッシュ"
"先のリモートで暗黙的に `git fetch` を実行するものと非常に悪い相互作用が発生し"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:296
msgid ""
"The protection it offers over `--force` is ensuring that subsequent changes "
"your work wasn't based on aren't clobbered, but this is trivially defeated "
"if some background process is updating refs in the background. We don't have "
"anything except the remote tracking info to go by as a heuristic for refs "
"you're expected to have seen & are willing to clobber."
msgstr ""
"`--force` に対して提供される保護は、作業の基になっていない後続の変更が破壊さ"
"れないようにすることですが、バックグラウンドプロセスがバックグラウンドでrefを"
"更新している場合、これは簡単に無効になります。 私達は、あなたには既に分かって"
"いるはずの参照をやっつけるヒューリスティックとして使用することができるリモー"
"トトラッキング情報以外何も持っていません。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:300
msgid ""
"If your editor or some other system is running `git fetch` in the background "
"for you a way to mitigate this is to simply set up another remote:"
msgstr ""
"あなたのエディターまたは他のシステムがバックグラウンドで `git fetch` を実行し"
"ている場合、これを軽減する方法は、単に別のリモートをセットアップすることです:"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:303
#, no-wrap
msgid ""
"\tgit remote add origin-push $(git config remote.origin.url)\n"
"\tgit fetch origin-push\n"
msgstr ""
"\tgit remote add origin-push $(git config remote.origin.url)\n"
"\tgit fetch origin-push\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:306
msgid ""
"Now when the background process runs `git fetch origin` the references on "
"`origin-push` won't be updated, and thus commands like:"
msgstr ""
"これで、バックグラウンドプロセスが `git fetch origin` を実行するときは、 "
"`origin-push` の参照は更新されないため、以下のようにコマンドを実行します:"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:308
#, no-wrap
msgid "\tgit push --force-with-lease origin-push\n"
msgstr "\tgit push --force-with-lease origin-push\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:313
msgid ""
"Will fail unless you manually run `git fetch origin-push`. This method is of "
"course entirely defeated by something that runs `git fetch --all`, in that "
"case you'd need to either disable it or do something more tedious like:"
msgstr ""
"これは、あなたが手動で `git fetch origin-push` を実行しない限り、失敗するで"
"しょう。 もちろん、この方法は `git fetch --all` の実行によって完全に破綻しま"
"す。この場合、あなたはそれを無効にするか、以下のようになもっと退屈なことをす"
"る必要があります:"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:318
#, no-wrap
msgid ""
"\tgit fetch              # update 'master' from remote\n"
"\tgit tag base master    # mark our base point\n"
"\tgit rebase -i master   # rewrite some commits\n"
"\tgit push --force-with-lease=master:base master:master\n"
msgstr ""
"\tgit fetch              # update 'master' from remote\n"
"\tgit tag base master    # mark our base point\n"
"\tgit rebase -i master   # rewrite some commits\n"
"\tgit push --force-with-lease=master:base master:master\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:324
msgid ""
"I.e. create a `base` tag for versions of the upstream code that you've seen "
"and are willing to overwrite, then rewrite history, and finally force push "
"changes to `master` if the remote version is still at `base`, regardless of "
"what your local `remotes/origin/master` has been updated to in the "
"background."
msgstr ""
"つまり、上流のコードを見て、上書きしても良いと思ったバージョンの `base` タグ"
"を作成し、履歴を書き換え、最後にリモートバージョンがまだ `base` にあれば、"
"ローカルの `remotes/origin/master` がバックグラウンドで何を更新したかに関わら"
"ず、変更を `master` に強制的にプッシュします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:332
msgid ""
"Alternatively, specifying `--force-if-includes` as an ancillary option along "
"with `--force-with-lease[=<refname>]` (i.e., without saying what exact "
"commit the ref on the remote side must be pointing at, or which refs on the "
"remote side are being protected) at the time of \"push\" will verify if "
"updates from the remote-tracking refs that may have been implicitly updated "
"in the background are integrated locally before allowing a forced update."
msgstr ""
"あるいは、 `--force-with-lease[=<refname>]` と共に補助オプションとして `--"
"force-if-includes` を指定すると(つまり、リモート側の ref が正確にどのコミット"
"を指す必要があるか、あるいはリモート側のどの ref を保護しているのかを明示せず"
"に)、 プッシュ時に、バックグラウンドで暗黙的に更新されていたかもしれないリ"
"モート追跡 ref からの更新がローカルで統合されているかを、強制更新ができる前に"
"確認することができるようになります。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:333
#, no-wrap
msgid "`-f`"
msgstr "`-f`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:334
#, no-wrap
msgid "`--force`"
msgstr "`--force`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:340
msgid ""
"Usually, the command refuses to update a remote ref that is not an ancestor "
"of the local ref used to overwrite it.  Also, when `--force-with-lease` "
"option is used, the command refuses to update a remote ref whose current "
"value does not match what is expected."
msgstr ""
"通常、コマンドは、上書きに使用されたローカルrefの祖先ではないリモートrefの更"
"新を拒否します。 また、 `--force-with-lease` オプションを使用すると、コマンド"
"は、現在(current)値が期待(expect)値と一致しないリモートrefの更新を拒否しま"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:343
msgid ""
"This flag disables these checks, and can cause the remote repository to lose "
"commits; use it with care."
msgstr ""
"このフラグはこれらのチェックを無効にし、リモートリポジトリがコミットを失う原"
"因となる可能性があります。 注意して使用してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:352
msgid ""
"Note that `--force` applies to all the refs that are pushed, hence using it "
"with `push.default` set to `matching` or with multiple push destinations "
"configured with `remote.*.push` may overwrite refs other than the current "
"branch (including local refs that are strictly behind their remote "
"counterpart).  To force a push to only one branch, use a `+` in front of the "
"refspec to push (e.g `git push origin +master` to force a push to the "
"`master` branch). See the `<refspec>...` section above for details."
msgstr ""
"注意: `--force`は、プッシュされるすべてのrefに適用されることに注意してくださ"
"い。 したがって、 `push.default` を `matching` に設定したり、 `remote.*."
"push` で構成された複数のプッシュ先で使用すると、現在のブランチ以外のref(リ"
"モートの対応物の背後にあるローカル参照を含む)が上書きされる可能性がありま"
"す。 1つのブランチのみにプッシュを強制するには、 refspecの前に `+` を使用して"
"プッシュします(例: `git push origin +master` を使用して、 `master` ブランチに"
"プッシュを強制します)。 詳細については、上記「<refspec>...」セクションを参照"
"してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:353
#, no-wrap
msgid "`--[no-]force-if-includes`"
msgstr "`--[no-]force-if-includes`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:356
msgid ""
"Force an update only if the tip of the remote-tracking ref has been "
"integrated locally."
msgstr ""
"リモート追跡refの先端がローカルに統合されている場合にのみ、更新を強制します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:362
msgid ""
"This option enables a check that verifies if the tip of the remote-tracking "
"ref is reachable from one of the \"reflog\" entries of the local branch "
"based in it for a rewrite. The check ensures that any updates from the "
"remote have been incorporated locally by rejecting the forced update if that "
"is not the case."
msgstr ""
"このオプションを使用すると、リモートトラッキング参照の先端が、書き換えのため"
"にそれに基づいているローカルブランチの「ref log」エントリの1つから到達可能か"
"どうかを確認(verify)するチェックが有効になります。 このチェックでは、リモート"
"からの更新がローカルに取り込まれていない場合、強制更新を拒否することで、更新"
"がローカルに取り込まれていることを確認します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:366
msgid ""
"If the option is passed without specifying `--force-with-lease`, or "
"specified along with `--force-with-lease=<refname>:<expect>`, it is a \"no-"
"op\"."
msgstr ""
"オプションが `--force-with-lease` を指定せずに渡された場合、または `--force-"
"with-lease=<refname>:<expect>` と一緒に指定された場合、それは「何もしません」"
"(no-op)。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:368
msgid "Specifying `--no-force-if-includes` disables this behavior."
msgstr "`--no-force-if-includes` を指定すると、この振る舞いが無効になります。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:369
#, no-wrap
msgid "`--repo=<repository>`"
msgstr "`--repo=<repository>`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:372
msgid ""
"This option is equivalent to the <repository> argument. If both are "
"specified, the command-line argument takes precedence."
msgstr ""
"このオプションは、<repository> 引数と同等です。 両方を指定すると、このオプ"
"ションではなくコマンドライン引数が優先されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:373
#, no-wrap
msgid "`-u`"
msgstr "`-u`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:374
#, no-wrap
msgid "`--set-upstream`"
msgstr "`--set-upstream`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:379
msgid ""
"For every branch that is up to date or successfully pushed, add upstream "
"(tracking) reference, used by argument-less linkgit:git-pull[1] and other "
"commands. For more information, see `branch.<name>.merge` in linkgit:git-"
"config[1]."
msgstr ""
"最新の、または正常にプッシュされたすべてのブランチについて、引数のない "
"linkgit:git-pull[1] および その他のコマンドで使用されるアップストリーム(追跡)"
"参照を追加します。 詳細については linkgit:git-config[1] の `branch.<name>."
"merge` を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:380
#, no-wrap
msgid "`--[no-]thin`"
msgstr "`--[no-]thin`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:385
msgid ""
"These options are passed to linkgit:git-send-pack[1]. A thin transfer "
"significantly reduces the amount of sent data when the sender and receiver "
"share many of the same objects in common. The default is `--thin`."
msgstr ""
"これらのオプションは linkgit:git-send-pack[1] に渡されます。 送信側と受信側が"
"同一オブジェクトを多く共有している場合、thin転送は送信データの量を大幅に削減"
"します。 デフォルトは `--thin` です。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:386
#, no-wrap
msgid "`-q`"
msgstr "`-q`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:387
#, no-wrap
msgid "`--quiet`"
msgstr "`--quiet`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:391
msgid ""
"Suppress all output, including the listing of updated refs, unless an error "
"occurs. Progress is not reported to the standard error stream."
msgstr ""
"エラーが発生しない限り、更新されたrefのリストを含むすべての出力を抑制しま"
"す。 進行状況を標準エラーストリームに報告しません。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:392
#, no-wrap
msgid "`-v`"
msgstr "`-v`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:393
#, no-wrap
msgid "`--verbose`"
msgstr "`--verbose`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:395
msgid "Run verbosely."
msgstr "おしゃべりな実行を行います。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:396
#, no-wrap
msgid "`--progress`"
msgstr "`--progress`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:401
msgid ""
"Progress status is reported on the standard error stream by default when it "
"is attached to a terminal, unless -q is specified. This flag forces progress "
"status even if the standard error stream is not directed to a terminal."
msgstr ""
"`-q` が指定されていない限り、進行状況は、端末に接続されている場合、デフォルト"
"で標準エラーストリームに報告されます。 このフラグは、標準エラーストリームが端"
"末に送信されていない場合でも、進行状況を強制します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:402
#, no-wrap
msgid "`--no-recurse-submodules`"
msgstr "`--no-recurse-submodules`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:403
#, no-wrap
msgid "`--recurse-submodules=check|on-demand|only|no`"
msgstr "`--recurse-submodules=check|on-demand|only|no`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:417
msgid ""
"May be used to make sure all submodule commits used by the revisions to be "
"pushed are available on a remote-tracking branch.  If 'check' is used Git "
"will verify that all submodule commits that changed in the revisions to be "
"pushed are available on at least one remote of the submodule. If any commits "
"are missing the push will be aborted and exit with non-zero status. If 'on-"
"demand' is used all submodules that changed in the revisions to be pushed "
"will be pushed. If on-demand was not able to push all necessary revisions it "
"will also be aborted and exit with non-zero status. If 'only' is used all "
"submodules will be pushed while the superproject is left unpushed. A value "
"of 'no' or using `--no-recurse-submodules` can be used to override the push."
"recurseSubmodules configuration variable when no submodule recursion is "
"required."
msgstr "プッシュされるリビジョンによって使用されるすべてのサブモジュールコミットがリモート追跡ブランチで使用可能であることを確認するために使用できます。 `check` が使用されている場合、Gitは、プッシュされるリビジョンで変更されたすべてのサブモジュールコミットが、サブモジュールの少なくとも1つのリモートで使用可能であることを確認します。 コミットが欠落している場合、プッシュは中止され、ゼロ以外のステータスで終了(exit)します。 `on-demand` が使用されている場合、プッシュされるリビジョンで変更されたすべてのサブモジュールがプッシュされます。 on-demand で必要なすべてのリビジョンをプッシュできなかった場合も中止(abort)され、ゼロ以外のステータスで終了(exit)します。 `only` を使用すると、すべてのサブモジュールがプッシュされますが、 スーパープロジェクトはプッシュされないままになります。 サブモジュールの再帰が必要ない場合は、値 `no` または `--no-recurse-submodules` を使用して、 `push.recurseSubmodules` 構成変数をオーバーライドできます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:421
msgid ""
"When using 'on-demand' or 'only', if a submodule has a \"push."
"recurseSubmodules={on-demand,only}\" or \"submodule.recurse\" configuration, "
"further recursion will occur. In this case, \"only\" is treated as \"on-"
"demand\"."
msgstr "`on-demand` または `only` を使用する場合にサブモジュールに `push.recurseSubmodules={on-demand,only}` または `submodule.recurse ` 構成がある場合、さらに再帰が発生します。この場合、 \"only\" が \"on-demand\" として扱われます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:422
#, no-wrap
msgid "`--[no-]verify`"
msgstr "`--[no-]verify`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:426
msgid ""
"Toggle the pre-push hook (see linkgit:githooks[5]).  The default is --"
"verify, giving the hook a chance to prevent the push.  With --no-verify, the "
"hook is bypassed completely."
msgstr ""
"pre-push フックをON/OFFします(linkgit:githooks[5] 参照)。 デフォルトは `--"
"verify｀ で、フックにプッシュを防ぐ機会を与えます。 `--no-verify` を使用する"
"と、フックは完全にバイパスされます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:427
#, no-wrap
msgid "`-4`"
msgstr "`-4`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:428
#, no-wrap
msgid "`--ipv4`"
msgstr "`--ipv4`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:430
msgid "Use IPv4 addresses only, ignoring IPv6 addresses."
msgstr "IPv6アドレスを無視して、IPv4アドレスのみを使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:431
#, no-wrap
msgid "`-6`"
msgstr "`-6`"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:432
#, no-wrap
msgid "`--ipv6`"
msgstr "`--ipv6`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:434
msgid "Use IPv6 addresses only, ignoring IPv4 addresses."
msgstr "IPv4アドレスを無視して、IPv6アドレスのみを使用します。"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:438
#, no-wrap
msgid "OUTPUT"
msgstr "OUTPUT"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:443
msgid ""
"The output of \"git push\" depends on the transport method used; this "
"section describes the output when pushing over the Git protocol (either "
"locally or via ssh)."
msgstr ""
"`git push` の出力は、使用する転送方法によって異なります。 このセクションで"
"は、Gitプロトコルで(ローカルまたはssh経由で)プッシュするときの出力について説"
"明します。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:446
msgid ""
"The status of the push is output in tabular form, with each line "
"representing the status of a single ref. Each line is of the form:"
msgstr ""
"プッシュのステータスは表形式で出力され、各行は単一のrefのステータスを表しま"
"す。 各行の形式は以下のとおりです:"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:449
#, no-wrap
msgid " <flag> <summary> <from> -> <to> (<reason>)\n"
msgstr " <flag> <summary> <from> -> <to> (<reason>)\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:452
msgid "If --porcelain is used, then each line of the output is of the form:"
msgstr "`--porcelain` が使用されている場合、出力の各行は以下の形式になります:"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:455
#, no-wrap
msgid " <flag> \\t <from>:<to> \\t <summary> (<reason>)\n"
msgstr " <flag> \\t <from>:<to> \\t <summary> (<reason>)\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:459
msgid ""
"The status of up-to-date refs is shown only if --porcelain or --verbose "
"option is used."
msgstr ""
"最新のrefのステータスは、 `--porcelain` または `--verbose` オプションが使用さ"
"れている場合にのみ表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:460
#, no-wrap
msgid "flag"
msgstr "flag"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:462
msgid "A single character indicating the status of the ref:"
msgstr "refのステータスを示す単一の文字:"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:462
#, no-wrap
msgid "(space)"
msgstr "(space)"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:463
msgid "for a successfully pushed fast-forward;"
msgstr "早送り(fast-forward)プッシュに成功した"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:463
#, no-wrap
msgid "`+`"
msgstr "`+`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:464
msgid "for a successful forced update;"
msgstr "強制更新に成功した"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:464
#, no-wrap
msgid "`-`"
msgstr "`-`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:465
msgid "for a successfully deleted ref;"
msgstr "refの削除に成功した"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:465
#, no-wrap
msgid "`*`"
msgstr "`*`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:466
msgid "for a successfully pushed new ref;"
msgstr "新しいrefのプッシュに成功した"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:466
#, no-wrap
msgid "`!`"
msgstr "`!`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:467
msgid "for a ref that was rejected or failed to push; and"
msgstr "プッシュが拒否された、またはプッシュに失敗したref"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:467
#, no-wrap
msgid "`=`"
msgstr "`=`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:468
msgid "for a ref that was up to date and did not need pushing."
msgstr "すでに最新でプッシュする必要がなかったref"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:469
#, no-wrap
msgid "summary"
msgstr "summary"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:474
msgid ""
"For a successfully pushed ref, the summary shows the old and new values of "
"the ref in a form suitable for using as an argument to `git log` (this is "
"`<old>..<new>` in most cases, and `<old>...<new>` for forced non-fast-"
"forward updates)."
msgstr ""
"正常にプッシュされたrefの場合、概要には、refの古い値と新しい値が `git log` の"
"引数として使用するのに適した形式で表示されます(ほとんどの場合は `<old>.."
"<new>` で、強制的な非早送り更新の場合は `<old>...<new>` です)。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:476
msgid "For a failed update, more details are given:"
msgstr "失敗した更新については、以下の詳細が示されます:"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:478
#, no-wrap
msgid "rejected"
msgstr "rejected"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:481
msgid ""
"Git did not try to send the ref at all, typically because it is not a fast-"
"forward and you did not force the update."
msgstr ""
"Gitはrefをまったく送信しようと試みませんでした。これは通常、それが早送り"
"(fast-forward)では無く、かつ、あなたが更新を強制しなかったためです。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:482
#, no-wrap
msgid "remote rejected"
msgstr "remote rejected"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:490
msgid ""
"The remote end refused the update.  Usually caused by a hook on the remote "
"side, or because the remote repository has one of the following safety "
"options in effect: `receive.denyCurrentBranch` (for pushes to the checked "
"out branch), `receive.denyNonFastForwards` (for forced non-fast-forward "
"updates), `receive.denyDeletes` or `receive.denyDeleteCurrent`.  See linkgit:"
"git-config[1]."
msgstr ""
"リモートエンドが更新を拒否しました。 通常、リモート側のフックが原因で発生する"
"か、リモートリポジトリで次の安全オプションのいずれかが有効になっていることが"
"原因です: `receive.denyCurrentBranch` (チェックアウトされたブランチへのプッ"
"シュ用) または `receive.denyNonFastForwards` (強制的な非早送り更新用) または "
"`receive.denyDeletes` または `receive.denyDeleteCurrent` です。 linkgit:git-"
"config[1] を参照してください。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:491
#, no-wrap
msgid "remote failure"
msgstr "remote failure"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:495
msgid ""
"The remote end did not report the successful update of the ref, perhaps "
"because of a temporary error on the remote side, a break in the network "
"connection, or other transient error."
msgstr ""
"リモート側は、おそらくリモート側での一時的なエラー、または、ネットワーク接続"
"の切断、または、その他の一時的なエラーのために、refの正常な更新を報告しません"
"でした。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:497
#, no-wrap
msgid "from"
msgstr "from"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:501
msgid ""
"The name of the local ref being pushed, minus its `refs/<type>/` prefix. In "
"the case of deletion, the name of the local ref is omitted."
msgstr ""
"プッシュされるローカルrefの名前から、その `refs/<type>/` プレフィックスを取り"
"除いたもの。 削除の場合、ローカルrefの名前は省略されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:502
#, no-wrap
msgid "to"
msgstr "to"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:505
msgid ""
"The name of the remote ref being updated, minus its `refs/<type>/` prefix."
msgstr ""
"更新されるリモートrefの名前から、 `refs/<type>/` プレフィックスを取り除いたも"
"の。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:506
#, no-wrap
msgid "reason"
msgstr "reason"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:510
msgid ""
"A human-readable explanation. In the case of successfully pushed refs, no "
"explanation is needed. For a failed ref, the reason for failure is described."
msgstr ""
"人間が読める説明。 正常にプッシュされたrefの場合、説明は必要ありません。 失敗"
"したrefについては、失敗の理由が説明されています。"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:512
#, no-wrap
msgid "NOTE ABOUT FAST-FORWARDS"
msgstr "NOTE ABOUT FAST-FORWARDS"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:517
msgid ""
"When an update changes a branch (or more in general, a ref) that used to "
"point at commit A to point at another commit B, it is called a fast-forward "
"update if and only if B is a descendant of A."
msgstr ""
"更新によって、コミットAをポイントしていたブランチ(またはより一般的にはref)が"
"別のコミットBをポイントするように変更された場合、BがAの子孫である場合に限り、"
"早送り(fast-forward)更新と呼ばれます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:521
msgid ""
"In a fast-forward update from A to B, the set of commits that the original "
"commit A built on top of is a subset of the commits the new commit B builds "
"on top of.  Hence, it does not lose any history."
msgstr ""
"AからBへの早送り(fast-forward)更新では、元のコミットA上に構築されたコミットの"
"セットは、新しいコミットB上に構築されたコミットのサブセットです。 したがっ"
"て、履歴が失われることはありません。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:526
msgid ""
"In contrast, a non-fast-forward update will lose history.  For example, "
"suppose you and somebody else started at the same commit X, and you built a "
"history leading to commit B while the other person built a history leading "
"to commit A.  The history looks like this:"
msgstr ""
"対照的に、非早送り更新は履歴を失います。 たとえば、あなたと他の誰かが同じコ"
"ミットXで開始し、あなたがコミットBにつながる履歴を作成し、他の人がコミットAに"
"つながる履歴を作成したとします。そうすると履歴は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:532
#, no-wrap
msgid ""
"      B\n"
"     /\n"
" ---X---A\n"
msgstr ""
"      B\n"
"     /\n"
" ---X---A\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:538
msgid ""
"Further suppose that the other person already pushed changes leading to A "
"back to the original repository from which you two obtained the original "
"commit X."
msgstr ""
"さらに、もう一人が既に A につながる変更を元のリポジトリにプッシュしており、そ"
"こからあなたたち二人が元のコミット X を取得したとします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:541
msgid ""
"The push done by the other person updated the branch that used to point at "
"commit X to point at commit A.  It is a fast-forward."
msgstr ""
"他の人が行ったプッシュにより、コミットXをポイントしていたブランチがコミットA"
"をポイントするように更新されました。これは早送りです。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:546
msgid ""
"But if you try to push, you will attempt to update the branch (that now "
"points at A) with commit B.  This does _not_ fast-forward.  If you did so, "
"the changes introduced by commit A will be lost, because everybody will now "
"start building on top of B."
msgstr ""
"しかし、あなたがプッシュしようとすると、コミットBでブランチ(現在はAを指してい"
"る)を更新しようとします。これは早送りにはなりません。 そうすると、コミットAに"
"よって導入された変更は失われます。なぜなら、全員がB上に構築を開始するためで"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:549
msgid ""
"The command by default does not allow an update that is not a fast-forward "
"to prevent such loss of history."
msgstr ""
"このコマンドは、デフォルトでは、このような履歴の損失を防ぐための早送り(fast-"
"forward)ではない更新を許可していません。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:554
msgid ""
"If you do not want to lose your work (history from X to B) or the work by "
"the other person (history from X to A), you would need to first fetch the "
"history from the repository, create a history that contains changes done by "
"both parties, and push the result back."
msgstr ""
"自分の作業(XからBへの履歴)または他の人の作業(XからAへの履歴)を失いたくない場"
"合は、最初にリポジトリから履歴をフェッチし、行われた変更を含む履歴を作成する"
"必要があり、両方の当事者によって行われた変更を含む履歴を作成し、結果をプッ"
"シュバックします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:558
msgid ""
"You can perform \"git pull\", resolve potential conflicts, and \"git push\" "
"the result.  A \"git pull\" will create a merge commit C between commits A "
"and B."
msgstr ""
"あなたは `git pull` を実行し、潜在的な競合を解決して、結果を `git push` する"
"ことができます。 `git pull` は、コミットAとBの間にマージコミットCを作成しま"
"す。"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:564
#, no-wrap
msgid ""
"      B---C\n"
"     /   /\n"
" ---X---A\n"
msgstr ""
"      B---C\n"
"     /   /\n"
" ---X---A\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:569
msgid ""
"Updating A with the resulting merge commit will fast-forward and your push "
"will be accepted."
msgstr ""
"結果のマージコミットでAを更新すると、早送り(fast-forward)され、そして、プッ"
"シュが受け入れられます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:574
msgid ""
"Alternatively, you can rebase your change between X and B on top of A, with "
"\"git pull --rebase\", and push the result back.  The rebase will create a "
"new commit D that builds the change between X and B on top of A."
msgstr ""
"または、あなたは `git pull --rebase` を使用して、A上のXとBの間のあなたの変更"
"をリベースし、結果をプッシュバックすることもできます。 リベースは、A上のXとB"
"の間の変更を構築する新しいコミットDを作成します。"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:580
#, no-wrap
msgid ""
"      B   D\n"
"     /   /\n"
" ---X---A\n"
msgstr ""
"      B   D\n"
"     /   /\n"
" ---X---A\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:585
msgid ""
"Again, updating A with this commit will fast-forward and your push will be "
"accepted."
msgstr ""
"繰り返しになりますが、このコミットでAを更新すると早送り(fast-forward)され、"
"プッシュが受け入れられます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:596
msgid ""
"There is another common situation where you may encounter non-fast-forward "
"rejection when you try to push, and it is possible even when you are pushing "
"into a repository nobody else pushes into. After you push commit A yourself "
"(in the first picture in this section), replace it with \"git commit --"
"amend\" to produce commit B, and you try to push it out, because forgot that "
"you have pushed A out already. In such a case, and only if you are certain "
"that nobody in the meantime fetched your earlier commit A (and started "
"building on top of it), you can run \"git push --force\" to overwrite it. In "
"other words, \"git push --force\" is a method reserved for a case where you "
"do mean to lose history."
msgstr ""
"プッシュしようとしたときに非早送拒否(non-fast-forward rejection)が発生する可"
"能性がある別の一般的な状況があります。これは、他の誰もプッシュしていないリポ"
"ジトリにプッシュしている場合でも発生する可能性があります。 自分でコミットAを"
"プッシュした後(このセクションの最初の図)、コミットBを生成するために「git "
"commit --amend」に置き換え、すでにAをプッシュしたことを忘れたため、プッシュし"
"ようとします。 このような場合、その間に誰も以前のコミットAをフェッチしなかっ"
"た(そしてその上にビルドを開始した)ことが確実な場合にのみ、「git push --"
"force」を実行して上書きできます。 言い換えれば、「git push --force」は、履歴"
"を失うことを意味する場合のために予約されているメソッドです。"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:599
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:601
#, no-wrap
msgid "`git push`"
msgstr "`git push`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:605
msgid ""
"Works like `git push <remote>`, where <remote> is the current branch's "
"remote (or `origin`, if no remote is configured for the current branch)."
msgstr ""
"`git push <remote>` のように機能します。ここで、<remote>は現在のブランチのリ"
"モート(または、現在のブランチにリモートが構成されていない場合は `origin`)で"
"す。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:606
#, no-wrap
msgid "`git push origin`"
msgstr "`git push origin`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:611
msgid ""
"Without additional configuration, pushes the current branch to the "
"configured upstream (`branch.<name>.merge` configuration variable) if it has "
"the same name as the current branch, and errors out without pushing "
"otherwise."
msgstr ""
"追加の構成がない場合、現在のブランチが、構成されたアップストリームの現在のブ"
"ランチと同一の名前の場合は、現在のブランチを構成されたアップストリーム"
"(`branch.<name>.merge` 構成値)にプッシュし、それ以外の場合はプッシュせずにエ"
"ラーになります。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:615
msgid ""
"The default behavior of this command when no <refspec> is given can be "
"configured by setting the `push` option of the remote, or the `push.default` "
"configuration variable."
msgstr ""
"<refspec>が指定されていない場合のこのコマンドのデフォルトの動作は、リモート"
"の `push` オプション、または `push.default` 構成変数を設定することで構成でき"
"ます。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:620
msgid ""
"For example, to default to pushing only the current branch to `origin` use "
"`git config remote.origin.push HEAD`.  Any valid <refspec> (like the ones in "
"the examples below) can be configured as the default for `git push origin`."
msgstr ""
"たとえば、デフォルトで現在のブランチのみを `origin` にプッシュするには、 "
"`git config remote.origin.push HEAD` を使用します。 有効な <refspec> (以下の"
"例のような)を `git push origin` のデフォルトとして設定できます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:621
#, no-wrap
msgid "`git push origin :`"
msgstr "`git push origin :`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:625
msgid ""
"Push \"matching\" branches to `origin`. See <refspec> in the <<OPTIONS,"
"OPTIONS>> section above for a description of \"matching\" branches."
msgstr ""
"「マッチする」ブランチを `origin` にプッシュします。 「マッチする」ブランチの"
"説明については、上記 <<OPTIONS,OPTIONS>> セクションの <refspec> を参照してく"
"ださい。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:626
#, no-wrap
msgid "`git push origin master`"
msgstr "`git push origin master`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:632
msgid ""
"Find a ref that matches `master` in the source repository (most likely, it "
"would find `refs/heads/master`), and update the same ref (e.g. `refs/heads/"
"master`) in `origin` repository with it.  If `master` did not exist "
"remotely, it would be created."
msgstr ""
"ソースリポジトリで `master` に一致するrefを探し(ほとんどの場合 `refs/heads/"
"master` を探し)、 `origin` リポジトリで同一ref(例: `refs/heads/master`)を更新"
"します。 `master` がリモートに存在しなかった場合は作成されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:633
#, no-wrap
msgid "`git push origin HEAD`"
msgstr "`git push origin HEAD`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:636
msgid "A handy way to push the current branch to the same name on the remote."
msgstr "現在のブランチをリモートの同一の名前にプッシュする便利な方法。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:637
#, no-wrap
msgid "`git push mothership master:satellite/master dev:satellite/dev`"
msgstr "`git push mothership master:satellite/master dev:satellite/dev`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:642
msgid ""
"Use the source ref that matches `master` (e.g. `refs/heads/master`)  to "
"update the ref that matches `satellite/master` (most probably `refs/remotes/"
"satellite/master`) in the `mothership` repository; do the same for `dev` and "
"`satellite/dev`."
msgstr ""
"`master` と一致するソースref(例: `refs/heads/master`)を使用して、 "
"`mothership` リポジトリ内の `satellite/master`(おそらく `refs/remotes/"
"satellite/master`)と一致するrefを更新します。 `dev` と `satellite/dev` につい"
"ても同様にします。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:645
msgid ""
"See the section describing `<refspec>...` above for a discussion of the "
"matching semantics."
msgstr ""
"マッチングのセマンティクスの説明については、 上記「<refspec>…」について説明し"
"ているセクションを参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:652
msgid ""
"This is to emulate `git fetch` run on the `mothership` using `git push` that "
"is run in the opposite direction in order to integrate the work done on "
"`satellite`, and is often necessary when you can only make connection in one "
"way (i.e. satellite can ssh into mothership but mothership cannot initiate "
"connection to satellite because the latter is behind a firewall or does not "
"run sshd)."
msgstr ""
"これは、 `mothership` で実行される `git fetch` を、 `satellite` での作業を統"
"合するために逆方向に実行される `git push` でエミュレートするもので、一方通行"
"でしか接続できないときによく必要になります(つまり、 `satellite` はsshで "
"`mothership` に入ることができますが、 `satellite` がファイアウォールの背後に"
"あるか、sshdを実行していないため、 `mothership` は `satellite`への接続を開始"
"できません)。"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:657
msgid ""
"After running this `git push` on the `satellite` machine, you would ssh into "
"the `mothership` and run `git merge` there to complete the emulation of `git "
"pull` that were run on `mothership` to pull changes made on `satellite`."
msgstr ""
"この `git push` を `satellite` のマシンで実行した後、 `mothership` に ssh し"
"て `git merge` を実行すれば、`satellite` で行われた変更を `git pull` でプルす"
"るエミュレーションが完成します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:658
#, no-wrap
msgid "`git push origin HEAD:master`"
msgstr "`git push origin HEAD:master`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:662
msgid ""
"Push the current branch to the remote ref matching `master` in the `origin` "
"repository. This form is convenient to push the current branch without "
"thinking about its local name."
msgstr ""
"現在のブランチを、 `origin` リポジトリ内の `master` に一致するリモートrefに"
"プッシュします。 この形式は、ローカル名を気にせずに現在のブランチをプッシュす"
"るのに便利です。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:663
#, no-wrap
msgid "`git push origin master:refs/heads/experimental`"
msgstr "`git push origin master:refs/heads/experimental`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:669
msgid ""
"Create the branch `experimental` in the `origin` repository by copying the "
"current `master` branch.  This form is only needed to create a new branch or "
"tag in the remote repository when the local name and the remote name are "
"different; otherwise, the ref name on its own will work."
msgstr ""
"現在の `master` ブランチをコピーして、 `origin` リポジトリにブランチ "
"`experimental` を作成します。 これは、ローカル名とリモート名が異なる場合に、"
"リモートリポジトリに新しいブランチまたはタグを作成する時のみ必要な形式です。 "
"それ以外の場合は、ref名自体で機能します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:670
#, no-wrap
msgid "`git push origin :experimental`"
msgstr "`git push origin :experimental`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:673
msgid ""
"Find a ref that matches `experimental` in the `origin` repository (e.g. "
"`refs/heads/experimental`), and delete it."
msgstr ""
"`origin` リポジトリで `experimental` に一致するref(たとえば `refs/heads/"
"experimental`)を見つけて削除します。"

#. type: Labeled list
#: ../Documentation-sedout/git-push.txt:674
#, no-wrap
msgid "`git push origin +dev:master`"
msgstr "`git push origin +dev:master`"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:679
msgid ""
"Update the origin repository's master branch with the dev branch, allowing "
"non-fast-forward updates.  *This can leave unreferenced commits dangling in "
"the origin repository.* Consider the following situation, where a fast-"
"forward is not possible:"
msgstr ""
"origin リポジトリのmasterブランチをdevブランチで更新し、早送り以外の更新(non-"
"fast-forward updates)を可能にします。「これにより、参照されていないコミットが"
"originリポジトリにぶら下がる可能性があります。」 早送りが(fast-forward)不可能"
"な以下の状況を考慮してください:"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:684
#, no-wrap
msgid ""
"\t    o---o---o---A---B  origin/master\n"
"\t\t     \\\n"
"\t\t      X---Y---Z  dev\n"
msgstr ""
"\t    o---o---o---A---B  origin/master\n"
"\t\t     \\\n"
"\t\t      X---Y---Z  dev\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:687
msgid "The above command would change the origin repository to"
msgstr "上記コマンドは、originリポジトリを以下のように変更します"

#. type: delimited block -
#: ../Documentation-sedout/git-push.txt:692
#, no-wrap
msgid ""
"\t\t      A---B  (unnamed branch)\n"
"\t\t     /\n"
"\t    o---o---o---X---Y---Z  master\n"
msgstr ""
"\t\t      A---B  (unnamed branch)\n"
"\t\t     /\n"
"\t    o---o---o---X---Y---Z  master\n"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:697
msgid ""
"Commits A and B would no longer belong to a branch with a symbolic name, and "
"so would be unreachable.  As such, these commits would be removed by a `git "
"gc` command on the origin repository."
msgstr ""
"コミットAとBは、もはやシンボリック名のブランチに属さなくなるため、到達不能に"
"なります。 そのため、これらのコミットは、originリポジトリの `git gc` コマンド"
"によって削除されます。"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:701
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Title -
#: ../Documentation-sedout/git-push.txt:708
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-push.txt:709
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
