# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: 2022-04-30 21:32+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-http-backend.txt:2
#, no-wrap
msgid "git-http-backend(1)"
msgstr "git-http-backend(1)"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:7
msgid "git-http-backend - Server side implementation of Git over HTTP"
msgstr "git-http-backend - Git over HTTP のサーバー側実装"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:12
#, no-wrap
msgid "'git http-backend'\n"
msgstr "'git http-backend'\n"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:22
msgid ""
"A simple CGI program to serve the contents of a Git repository to Git "
"clients accessing the repository over http:// and https:// protocols.  The "
"program supports clients fetching using both the smart HTTP protocol and the "
"backwards-compatible dumb HTTP protocol, as well as clients pushing using "
"the smart HTTP protocol. It also supports Git's more-efficient \"v2\" "
"protocol if properly configured; see the discussion of `GIT_PROTOCOL` in the "
"ENVIRONMENT section below."
msgstr "`http://` と `https://` プロトコルを介してリポジトリにアクセスするGitクライアントにGitリポジトリのコンテンツを提供するための単純なCGIプログラム。 このプログラムは、スマートHTTPプロトコルと下位互換性のあるダムHTTPプロトコルの両方を使用してフェッチするクライアント、およびスマートHTTPプロトコルを使用してプッシュするクライアントをサポートします。 適切に構成されていれば、Gitのより効率的な「v2」プロトコルもサポートします。 以下の「ENVIRONMENT」セクションの「GIT_PROTOCOL」の説明を参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:27
msgid ""
"It verifies that the directory has the magic file \"git-daemon-export-ok\", "
"and it will refuse to export any Git directory that hasn't explicitly been "
"marked for export this way (unless the `GIT_HTTP_EXPORT_ALL` environmental "
"variable is set)."
msgstr "ディレクトリにマジックファイル `git-daemon-export-ok` があることを確認し、この方法でエクスポートのマークが明示されていないGitディレクトリのエクスポートを拒否します(`GIT_HTTP_EXPORT_ALL` 環境変数が設定されている場合を除く)。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:33
msgid ""
"By default, only the `upload-pack` service is enabled, which serves 'git "
"fetch-pack' and 'git ls-remote' clients, which are invoked from 'git fetch', "
"'git pull', and 'git clone'.  If the client is authenticated, the `receive-"
"pack` service is enabled, which serves 'git send-pack' clients, which is "
"invoked from 'git push'."
msgstr "デフォルトでは、 `upload-pack` サービスのみが有効になっており、 `git fetch` や `git pull` や `git clone` から呼び出される `git fetch-pack` クライアントと `git ls-remote` クライアントにサービスを提供します。クライアントが認証されると、 `receive-pack` サービスが有効になります。このサービスは `git push` から呼び出される `git send-pack` クライアントにサービスを提供します。"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:35
#, no-wrap
msgid "SERVICES"
msgstr "SERVICES"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:38
msgid ""
"These services can be enabled/disabled using the per-repository "
"configuration file:"
msgstr "これらのサービスは、リポジトリごとの構成ファイルを使用して有効/無効にできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:39
#, no-wrap
msgid "http.getanyfile"
msgstr "http.getanyfile"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:46
msgid ""
"This serves Git clients older than version 1.6.6 that are unable to use the "
"upload pack service.  When enabled, clients are able to read any file within "
"the repository, including objects that are no longer reachable from a branch "
"but are still present.  It is enabled by default, but a repository can "
"disable it by setting this configuration item to `false`."
msgstr "これは、アップロードパックサービスを使用できないバージョン1.6.6より古いGitクライアントにサービスを提供します。 有効にすると、クライアントは、ブランチから到達できなくなったがまだ存在しているオブジェクトを含む、リポジトリ内の任意のファイルを読み取ることができます。 デフォルトで有効になっていますが、リポジトリはこの構成アイテムを「false」に設定することで無効にできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:47
#, no-wrap
msgid "http.uploadpack"
msgstr "http.uploadpack"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:51
msgid ""
"This serves 'git fetch-pack' and 'git ls-remote' clients.  It is enabled by "
"default, but a repository can disable it by setting this configuration item "
"to `false`."
msgstr "これは、 `git fetch-pack` および `git ls-remote` クライアントにサービスを提供します。 デフォルトで有効になっていますが、リポジトリはこの構成アイテムを「false」に設定することで無効にできます。"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:52
#, no-wrap
msgid "http.receivepack"
msgstr "http.receivepack"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:58
msgid ""
"This serves 'git send-pack' clients, allowing push.  It is disabled by "
"default for anonymous users, and enabled by default for users authenticated "
"by the web server.  It can be disabled by setting this item to `false`, or "
"enabled for all users, including anonymous users, by setting it to `true`."
msgstr "これは `git send-pack` クライアントにサービスを提供し、プッシュを可能にします。 匿名ユーザーの場合はデフォルトで無効になっており、Webサーバーによって認証されたユーザーの場合はデフォルトで有効になっています。 この項目を `false` に設定することで無効にするか、 `true` に設定することで匿名ユーザーを含むすべてのユーザーに対して有効にすることができます。"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:60
#, no-wrap
msgid "URL TRANSLATION"
msgstr "URL TRANSLATION"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:67
msgid ""
"To determine the location of the repository on disk, 'git http-backend' "
"concatenates the environment variables PATH_INFO, which is set automatically "
"by the web server, and GIT_PROJECT_ROOT, which must be set manually in the "
"web server configuration.  If GIT_PROJECT_ROOT is not set, 'git http-"
"backend' reads PATH_TRANSLATED, which is also set automatically by the web "
"server."
msgstr "ディスク上のリポジトリの場所を特定するために、 `git http-backend` は、Webサーバーによって自動的に設定される環境変数PATH_INFOと、Webサーバー構成で手動で設定する必要があるGIT_PROJECT_ROOTを連結します。 GIT_PROJECT_ROOTが設定されていない場合、 `git http-backend` はPATH_TRANSLATEDを読み取ります。これも、Webサーバーによって自動的に設定されます。"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:69
#, no-wrap
msgid "EXAMPLES"
msgstr "EXAMPLES"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:72
msgid ""
"All of the following examples map `http://$hostname/git/foo/bar.git` to `/"
"var/www/git/foo/bar.git`."
msgstr "以下の例はすべて、 `http://$hostname/git/foo/bar.git` を `/var/www/git/foo/bar.git` にマップします。"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:73
#, no-wrap
msgid "Apache 2.x"
msgstr "Apache 2.x"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:77
msgid ""
"Ensure mod_cgi, mod_alias, and mod_env are enabled, set GIT_PROJECT_ROOT (or "
"DocumentRoot) appropriately, and create a ScriptAlias to the CGI:"
msgstr "mod_cgiとmod_aliasとmod_envが有効になっていることを確認し、 GIT_PROJECT_ROOT (またはDocumentRoot)を適切に設定して、CGIにScriptAliasを作成します:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:82
#, no-wrap
msgid ""
"SetEnv GIT_PROJECT_ROOT /var/www/git\n"
"SetEnv GIT_HTTP_EXPORT_ALL\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""
"SetEnv GIT_PROJECT_ROOT /var/www/git\n"
"SetEnv GIT_HTTP_EXPORT_ALL\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:94
#, no-wrap
msgid ""
"# This is not strictly necessary using Apache and a modern version of\n"
"# git-http-backend, as the webserver will pass along the header in the\n"
"# environment as HTTP_GIT_PROTOCOL, and http-backend will copy that into\n"
"# GIT_PROTOCOL. But you may need this line (or something similar if you\n"
"# are using a different webserver), or if you want to support older Git\n"
"# versions that did not do that copying.\n"
"#\n"
"# Having the webserver set up GIT_PROTOCOL is perfectly fine even with\n"
"# modern versions (and will take precedence over HTTP_GIT_PROTOCOL,\n"
"# which means it can be used to override the client's request).\n"
"SetEnvIf Git-Protocol \".*\" GIT_PROTOCOL=$0\n"
msgstr ""
"# This is not strictly necessary using Apache and a modern version of\n"
"# git-http-backend, as the webserver will pass along the header in the\n"
"# environment as HTTP_GIT_PROTOCOL, and http-backend will copy that into\n"
"# GIT_PROTOCOL. But you may need this line (or something similar if you\n"
"# are using a different webserver), or if you want to support older Git\n"
"# versions that did not do that copying.\n"
"#\n"
"# Having the webserver set up GIT_PROTOCOL is perfectly fine even with\n"
"# modern versions (and will take precedence over HTTP_GIT_PROTOCOL,\n"
"# which means it can be used to override the client's request).\n"
"SetEnvIf Git-Protocol \".*\" GIT_PROTOCOL=$0\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:100
msgid ""
"To enable anonymous read access but authenticated write access, require "
"authorization for both the initial ref advertisement (which we detect as a "
"push via the service parameter in the query string), and the receive-pack "
"invocation itself:"
msgstr "匿名の読み取りアクセスを有効にし、認証された書き込みアクセスを有効にするには、最初のref広告(クエリ文字列のサービスパラメーターを介したプッシュとして検出)とreceive-pack呼び出し自体の両方の承認(authorization)が必要です。"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:105
#, no-wrap
msgid ""
"RewriteCond %{QUERY_STRING} service=git-receive-pack [OR]\n"
"RewriteCond %{REQUEST_URI} /git-receive-pack$\n"
"RewriteRule ^/git/ - [E=AUTHREQUIRED:yes]\n"
msgstr ""
"RewriteCond %{QUERY_STRING} service=git-receive-pack [OR]\n"
"RewriteCond %{REQUEST_URI} /git-receive-pack$\n"
"RewriteRule ^/git/ - [E=AUTHREQUIRED:yes]\n"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:109
#, no-wrap
msgid ""
"<LocationMatch \"^/git/\">\n"
"\tOrder Deny,Allow\n"
"\tDeny from env=AUTHREQUIRED\n"
msgstr ""
"<LocationMatch \"^/git/\">\n"
"\tOrder Deny,Allow\n"
"\tDeny from env=AUTHREQUIRED\n"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:116
#, no-wrap
msgid ""
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\tSatisfy Any\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\tSatisfy Any\n"
"\t...\n"
"</LocationMatch>\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:121
msgid ""
"If you do not have `mod_rewrite` available to match against the query "
"string, it is sufficient to just protect `git-receive-pack` itself, like:"
msgstr "クエリ文字列と照合するために使用できる `mod_rewrite` がない場合は、以下のように `git-receive-pack` 自体を保護するだけで十分です:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:129
#, no-wrap
msgid ""
"<LocationMatch \"^/git/.*/git-receive-pack$\">\n"
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""
"<LocationMatch \"^/git/.*/git-receive-pack$\">\n"
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</LocationMatch>\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:139
msgid ""
"In this mode, the server will not request authentication until the client "
"actually starts the object negotiation phase of the push, rather than during "
"the initial contact.  For this reason, you must also enable the `http."
"receivepack` config option in any repositories that should accept a push. "
"The default behavior, if `http.receivepack` is not set, is to reject any "
"pushes by unauthenticated users; the initial request will therefore report "
"`403 Forbidden` to the client, without even giving an opportunity for "
"authentication."
msgstr "このモードでは、サーバーは、クライアントが最初の接続中ではなく、プッシュのオブジェクトネゴシエーションフェーズを実際に開始するまで、認証(authentication)を要求しません。 このため、プッシュを受け入れる必要のあるリポジトリでは、 `http.receivepack` 設定オプションも有効にする必要があります。 `http.receivepack` が設定されていない場合のデフォルトの動作は、認証されていないユーザーによるプッシュを拒否することです。 したがって、最初のリクエストは、認証の機会さえ与えずに、クライアントに `403 Forbidden` を報告します。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:142
msgid ""
"To require authentication for both reads and writes, use a Location "
"directive around the repository, or one of its parent directories:"
msgstr "読み取りと書き込みの両方に認証を要求するには、リポジトリまたはその親ディレクトリの1つでLocationディレクティブを使用します:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:150
#, no-wrap
msgid ""
"<Location /git/private>\n"
"\tAuthType Basic\n"
"\tAuthName \"Private Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</Location>\n"
msgstr ""
"<Location /git/private>\n"
"\tAuthType Basic\n"
"\tAuthName \"Private Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</Location>\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:155
msgid ""
"To serve gitweb at the same url, use a ScriptAliasMatch to only those URLs "
"that 'git http-backend' can handle, and forward the rest to gitweb:"
msgstr "同一URLでgitwebを提供するには、ScriptAliasMatchを使用して `git http-backend` が処理できるURLのみを取得し、残りをgitwebに転送します:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:165
#, no-wrap
msgid ""
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/(info/[^/]+ | \\\n"
"\t\t\t\t [0-9a-f]{2}/[0-9a-f]{38} | \\\n"
"\t\t\t\t pack/pack-[0-9a-f]{40}\\.(pack|idx)) | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
msgstr ""
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/(info/[^/]+ | \\\n"
"\t\t\t\t [0-9a-f]{2}/[0-9a-f]{38} | \\\n"
"\t\t\t\t pack/pack-[0-9a-f]{40}\\.(pack|idx)) | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:167
#, no-wrap
msgid "ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr "ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:171
msgid ""
"To serve multiple repositories from different linkgit:gitnamespaces[7] in a "
"single repository:"
msgstr "単一のリポジトリで異なる linkgit:gitnamespaces[7] から複数のリポジトリを提供するには:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:175
#, no-wrap
msgid ""
"SetEnvIf Request_URI \"^/git/([^/]*)\" GIT_NAMESPACE=$1\n"
"ScriptAliasMatch ^/git/[^/]*(.*) /usr/libexec/git-core/git-http-backend/storage.git$1\n"
msgstr ""
"SetEnvIf Request_URI \"^/git/([^/]*)\" GIT_NAMESPACE=$1\n"
"ScriptAliasMatch ^/git/[^/]*(.*) /usr/libexec/git-core/git-http-backend/storage.git$1\n"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:177
#, no-wrap
msgid "Accelerated static Apache 2.x"
msgstr "Accelerated static Apache 2.x"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:182
msgid ""
"Similar to the above, but Apache can be used to return static files that are "
"stored on disk.  On many systems this may be more efficient as Apache can "
"ask the kernel to copy the file contents from the file system directly to "
"the network:"
msgstr "上記と同様ですが、Apacheを使用して、ディスクに保存されている静的ファイルを返すことができます。 多くのシステムでは、Apacheがカーネルにファイルの内容をファイルシステムからネットワークに直接コピーするように要求できるため、これはより効率的です:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:185
#: ../Documentation-sedout/git-http-backend.txt:195
#, no-wrap
msgid "SetEnv GIT_PROJECT_ROOT /var/www/git\n"
msgstr "SetEnv GIT_PROJECT_ROOT /var/www/git\n"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:189
#, no-wrap
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:192
msgid "This can be combined with the gitweb configuration:"
msgstr "これは、gitweb構成と組み合わせることができます:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:205
#, no-wrap
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/info/[^/]+ | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
"ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/info/[^/]+ | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
"ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:207
#, no-wrap
msgid "Lighttpd"
msgstr "Lighttpd"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:211
msgid ""
"Ensure that `mod_cgi`, `mod_alias`, `mod_auth`, `mod_setenv` are loaded, "
"then set `GIT_PROJECT_ROOT` appropriately and redirect all requests to the "
"CGI:"
msgstr "`mod_cgi` 、 `mod_alias` 、 `mod_auth` 、 `mod_setenv` がロードされていることを確認してから、 `GIT_PROJECT_ROOT` を適切に設定し、すべてのリクエストをCGIにリダイレクトします。"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:221
#, no-wrap
msgid ""
"alias.url += ( \"/git\" => \"/usr/lib/git-core/git-http-backend\" )\n"
"$HTTP[\"url\"] =~ \"^/git\" {\n"
"\tcgi.assign = (\"\" => \"\")\n"
"\tsetenv.add-environment = (\n"
"\t\t\"GIT_PROJECT_ROOT\" => \"/var/www/git\",\n"
"\t\t\"GIT_HTTP_EXPORT_ALL\" => \"\"\n"
"\t)\n"
"}\n"
msgstr ""
"alias.url += ( \"/git\" => \"/usr/lib/git-core/git-http-backend\" )\n"
"$HTTP[\"url\"] =~ \"^/git\" {\n"
"\tcgi.assign = (\"\" => \"\")\n"
"\tsetenv.add-environment = (\n"
"\t\t\"GIT_PROJECT_ROOT\" => \"/var/www/git\",\n"
"\t\t\"GIT_HTTP_EXPORT_ALL\" => \"\"\n"
"\t)\n"
"}\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:224
msgid "To enable anonymous read access but authenticated write access:"
msgstr "匿名での読み取りアクセスを有効にする一方、認証された書き込みアクセスを有効にするには:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:232
#, no-wrap
msgid ""
"$HTTP[\"querystring\"] =~ \"service=git-receive-pack\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
"$HTTP[\"url\"] =~ \"^/git/.*/git-receive-pack$\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""
"$HTTP[\"querystring\"] =~ \"service=git-receive-pack\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
"$HTTP[\"url\"] =~ \"^/git/.*/git-receive-pack$\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:235
msgid "where `git-auth.conf` looks something like:"
msgstr "ここで、 `git-auth.conf` は以下のようになります:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:245
#, no-wrap
msgid ""
"auth.require = (\n"
"\t\"/\" => (\n"
"\t\t\"method\" => \"basic\",\n"
"\t\t\"realm\" => \"Git Access\",\n"
"\t\t\"require\" => \"valid-user\"\n"
"\t       )\n"
")\n"
"# ...and set up auth.backend here\n"
msgstr ""
"auth.require = (\n"
"\t\"/\" => (\n"
"\t\t\"method\" => \"basic\",\n"
"\t\t\"realm\" => \"Git Access\",\n"
"\t\t\"require\" => \"valid-user\"\n"
"\t       )\n"
")\n"
"# ...and set up auth.backend here\n"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:248
msgid "To require authentication for both reads and writes:"
msgstr "読み取りと書き込みの両方に認証を要求するには:"

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:253
#, no-wrap
msgid ""
"$HTTP[\"url\"] =~ \"^/git/private\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""
"$HTTP[\"url\"] =~ \"^/git/private\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:257
#, no-wrap
msgid "ENVIRONMENT"
msgstr "ENVIRONMENT"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:260
msgid ""
"'git http-backend' relies upon the `CGI` environment variables set by the "
"invoking web server, including:"
msgstr "`git http-backend` は、呼び出し元のWebサーバーによって設定された `CGI` 環境変数に依存します:"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:262
msgid "PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)"
msgstr "PATH_INFO (GIT_PROJECT_ROOTが設定されている場合。それ以外の場合はPATH_TRANSLATED)"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:263
msgid "REMOTE_USER"
msgstr "REMOTE_USER"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:264
msgid "REMOTE_ADDR"
msgstr "REMOTE_ADDR"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:265
msgid "CONTENT_TYPE"
msgstr "CONTENT_TYPE"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:266
msgid "QUERY_STRING"
msgstr "QUERY_STRING"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:267
msgid "REQUEST_METHOD"
msgstr "REQUEST_METHOD"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:271
msgid ""
"The `GIT_HTTP_EXPORT_ALL` environmental variable may be passed to 'git-http-"
"backend' to bypass the check for the \"git-daemon-export-ok\" file in each "
"repository before allowing export of that repository."
msgstr "`GIT_HTTP_EXPORT_ALL` 環境変数を `git-http-backend` に渡して、各リポジトリの `git-daemon-export-ok` ファイルのチェックをバイパスしてから、そのリポジトリのエクスポートを許可することができます。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:280
msgid ""
"The `GIT_HTTP_MAX_REQUEST_BUFFER` environment variable (or the `http."
"maxRequestBuffer` config variable) may be set to change the largest ref "
"negotiation request that git will handle during a fetch; any fetch requiring "
"a larger buffer will not succeed.  This value should not normally need to be "
"changed, but may be helpful if you are fetching from a repository with an "
"extremely large number of refs.  The value can be specified with a unit (e."
"g., `100M` for 100 megabytes). The default is 10 megabytes."
msgstr "`GIT_HTTP_MAX_REQUEST_BUFFER` 環境変数(または `http.maxRequestBuffer` 構成変数)は、gitがフェッチ中に処理する最大のrefネゴシエーション要求を変更するように設定できます。これより大きなバッファを必要とするフェッチは成功しません。 通常、この値を変更する必要はありませんが、ref数が非常に多いリポジトリからフェッチする場合に役立つことがあります。 値は単位毎に指定できます(たとえば、100メガバイトの場合は「100M」)。 デフォルトは10メガバイトです。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:290
msgid ""
"Clients may probe for optional protocol capabilities (like the v2 protocol) "
"using the `Git-Protocol` HTTP header. In order to support these, the "
"contents of that header must appear in the `GIT_PROTOCOL` environment "
"variable. Most webservers will pass this header to the CGI via the "
"`HTTP_GIT_PROTOCOL` variable, and `git-http-backend` will automatically copy "
"that to `GIT_PROTOCOL`. However, some webservers may be more selective about "
"which headers they'll pass, in which case they need to be configured "
"explicitly (see the mention of `Git-Protocol` in the Apache config from the "
"earlier EXAMPLES section)."
msgstr "クライアントは、 `Git-Protocol` HTTPヘッダーを使用して、オプションのプロトコル機能（v2プロトコルなど）を探査(probe)できます。 これらをサポートするには、そのヘッダーの内容が `GIT_PROTOCOL` 環境変数に含まれている必要があります。 ほとんどのウェブサーバーはこのヘッダーを `HTTP_GIT_PROTOCOL` 変数を介してCGIに渡し、`git-http-backend` はそれを `GIT_PROTOCOL` に自動的にコピーします。 ただし、一部のWebサーバーは、渡すヘッダーをより選択的にする場合があります。その場合には明示的に構成する必要があります(上記EXAMPLESセクションのApache構成の「Git-Protocol」の説明を参照してください)。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:295
msgid ""
"The backend process sets GIT_COMMITTER_NAME to '$REMOTE_USER' and "
"GIT_COMMITTER_EMAIL to '$\\{REMOTE_USER}@http.$\\{REMOTE_ADDR\\}', ensuring "
"that any reflogs created by 'git-receive-pack' contain some identifying "
"information of the remote user who performed the push."
msgstr "バックエンドプロセスは、GIT_COMMITTER_NAMEを `$REMOTE_USER` に設定し、 GIT_COMMITTER_EMAILを `$\\{REMOTE_USER}@http.$\\{REMOTE_ADDR\\}` に設定して、 `git-receive-pack` によって作成されたreflogにプッシュを実行したリモートユーザの識別情報が含まれるようにします。"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:298
msgid ""
"All `CGI` environment variables are available to each of the hooks invoked "
"by the 'git-receive-pack'."
msgstr "すべての `CGI` 環境変数は、 `git-receive-pack` によって呼び出される各フックで使用できます。"

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:300
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:301
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
