# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-04 04:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-http-backend.txt:2
#, no-wrap
msgid "git-http-backend(1)"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:7
msgid "git-http-backend - Server side implementation of Git over HTTP"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:12
#, no-wrap
msgid "'git http-backend'\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:22
msgid ""
"A simple CGI program to serve the contents of a Git repository to Git "
"clients accessing the repository over http:// and https:// protocols.  The "
"program supports clients fetching using both the smart HTTP protocol and the "
"backwards-compatible dumb HTTP protocol, as well as clients pushing using "
"the smart HTTP protocol. It also supports Git's more-efficient \"v2\" "
"protocol if properly configured; see the discussion of `GIT_PROTOCOL` in the "
"ENVIRONMENT section below."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:27
msgid ""
"It verifies that the directory has the magic file \"git-daemon-export-ok\", "
"and it will refuse to export any Git directory that hasn't explicitly been "
"marked for export this way (unless the `GIT_HTTP_EXPORT_ALL` environmental "
"variable is set)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:33
msgid ""
"By default, only the `upload-pack` service is enabled, which serves 'git "
"fetch-pack' and 'git ls-remote' clients, which are invoked from 'git fetch', "
"'git pull', and 'git clone'.  If the client is authenticated, the `receive-"
"pack` service is enabled, which serves 'git send-pack' clients, which is "
"invoked from 'git push'."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:35
#, no-wrap
msgid "SERVICES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:38
msgid ""
"These services can be enabled/disabled using the per-repository "
"configuration file:"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:39
#, no-wrap
msgid "http.getanyfile"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:46
msgid ""
"This serves Git clients older than version 1.6.6 that are unable to use the "
"upload pack service.  When enabled, clients are able to read any file within "
"the repository, including objects that are no longer reachable from a branch "
"but are still present.  It is enabled by default, but a repository can "
"disable it by setting this configuration item to `false`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:47
#, no-wrap
msgid "http.uploadpack"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:51
msgid ""
"This serves 'git fetch-pack' and 'git ls-remote' clients.  It is enabled by "
"default, but a repository can disable it by setting this configuration item "
"to `false`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:52
#, no-wrap
msgid "http.receivepack"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:58
msgid ""
"This serves 'git send-pack' clients, allowing push.  It is disabled by "
"default for anonymous users, and enabled by default for users authenticated "
"by the web server.  It can be disabled by setting this item to `false`, or "
"enabled for all users, including anonymous users, by setting it to `true`."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:60
#, no-wrap
msgid "URL TRANSLATION"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:67
msgid ""
"To determine the location of the repository on disk, 'git http-backend' "
"concatenates the environment variables PATH_INFO, which is set automatically "
"by the web server, and GIT_PROJECT_ROOT, which must be set manually in the "
"web server configuration.  If GIT_PROJECT_ROOT is not set, 'git http-"
"backend' reads PATH_TRANSLATED, which is also set automatically by the web "
"server."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:69
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:72
msgid ""
"All of the following examples map `http://$hostname/git/foo/bar.git` to `/"
"var/www/git/foo/bar.git`."
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:73
#, no-wrap
msgid "Apache 2.x"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:77
msgid ""
"Ensure mod_cgi, mod_alias, and mod_env are enabled, set GIT_PROJECT_ROOT (or "
"DocumentRoot) appropriately, and create a ScriptAlias to the CGI:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:82
#, no-wrap
msgid ""
"SetEnv GIT_PROJECT_ROOT /var/www/git\n"
"SetEnv GIT_HTTP_EXPORT_ALL\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:94
#, no-wrap
msgid ""
"# This is not strictly necessary using Apache and a modern version of\n"
"# git-http-backend, as the webserver will pass along the header in the\n"
"# environment as HTTP_GIT_PROTOCOL, and http-backend will copy that into\n"
"# GIT_PROTOCOL. But you may need this line (or something similar if you\n"
"# are using a different webserver), or if you want to support older Git\n"
"# versions that did not do that copying.\n"
"#\n"
"# Having the webserver set up GIT_PROTOCOL is perfectly fine even with\n"
"# modern versions (and will take precedence over HTTP_GIT_PROTOCOL,\n"
"# which means it can be used to override the client's request).\n"
"SetEnvIf Git-Protocol \".*\" GIT_PROTOCOL=$0\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:100
msgid ""
"To enable anonymous read access but authenticated write access, require "
"authorization for both the initial ref advertisement (which we detect as a "
"push via the service parameter in the query string), and the receive-pack "
"invocation itself:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:105
#, no-wrap
msgid ""
"RewriteCond %{QUERY_STRING} service=git-receive-pack [OR]\n"
"RewriteCond %{REQUEST_URI} /git-receive-pack$\n"
"RewriteRule ^/git/ - [E=AUTHREQUIRED:yes]\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:109
#, no-wrap
msgid ""
"<LocationMatch \"^/git/\">\n"
"\tOrder Deny,Allow\n"
"\tDeny from env=AUTHREQUIRED\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:116
#, no-wrap
msgid ""
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\tSatisfy Any\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:121
msgid ""
"If you do not have `mod_rewrite` available to match against the query "
"string, it is sufficient to just protect `git-receive-pack` itself, like:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:129
#, no-wrap
msgid ""
"<LocationMatch \"^/git/.*/git-receive-pack$\">\n"
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:139
msgid ""
"In this mode, the server will not request authentication until the client "
"actually starts the object negotiation phase of the push, rather than during "
"the initial contact.  For this reason, you must also enable the `http."
"receivepack` config option in any repositories that should accept a push. "
"The default behavior, if `http.receivepack` is not set, is to reject any "
"pushes by unauthenticated users; the initial request will therefore report "
"`403 Forbidden` to the client, without even giving an opportunity for "
"authentication."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:142
msgid ""
"To require authentication for both reads and writes, use a Location "
"directive around the repository, or one of its parent directories:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:150
#, no-wrap
msgid ""
"<Location /git/private>\n"
"\tAuthType Basic\n"
"\tAuthName \"Private Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</Location>\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:155
msgid ""
"To serve gitweb at the same url, use a ScriptAliasMatch to only those URLs "
"that 'git http-backend' can handle, and forward the rest to gitweb:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:165
#, no-wrap
msgid ""
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/(info/[^/]+ | \\\n"
"\t\t\t\t [0-9a-f]{2}/[0-9a-f]{38} | \\\n"
"\t\t\t\t pack/pack-[0-9a-f]{40}\\.(pack|idx)) | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:167
#, no-wrap
msgid "ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:171
msgid ""
"To serve multiple repositories from different linkgit:gitnamespaces[7] in a "
"single repository:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:175
#, no-wrap
msgid ""
"SetEnvIf Request_URI \"^/git/([^/]*)\" GIT_NAMESPACE=$1\n"
"ScriptAliasMatch ^/git/[^/]*(.*) /usr/libexec/git-core/git-http-backend/storage.git$1\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:177
#, no-wrap
msgid "Accelerated static Apache 2.x"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:182
msgid ""
"Similar to the above, but Apache can be used to return static files that are "
"stored on disk.  On many systems this may be more efficient as Apache can "
"ask the kernel to copy the file contents from the file system directly to "
"the network:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:185
#: ../Documentation-sedout/git-http-backend.txt:195
#, no-wrap
msgid "SetEnv GIT_PROJECT_ROOT /var/www/git\n"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:189
#, no-wrap
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:192
msgid "This can be combined with the gitweb configuration:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:205
#, no-wrap
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/info/[^/]+ | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
"ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr ""

#. type: Labeled list
#: ../Documentation-sedout/git-http-backend.txt:207
#, no-wrap
msgid "Lighttpd"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:211
msgid ""
"Ensure that `mod_cgi`, `mod_alias`, `mod_auth`, `mod_setenv` are loaded, "
"then set `GIT_PROJECT_ROOT` appropriately and redirect all requests to the "
"CGI:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:221
#, no-wrap
msgid ""
"alias.url += ( \"/git\" => \"/usr/lib/git-core/git-http-backend\" )\n"
"$HTTP[\"url\"] =~ \"^/git\" {\n"
"\tcgi.assign = (\"\" => \"\")\n"
"\tsetenv.add-environment = (\n"
"\t\t\"GIT_PROJECT_ROOT\" => \"/var/www/git\",\n"
"\t\t\"GIT_HTTP_EXPORT_ALL\" => \"\"\n"
"\t)\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:224
msgid "To enable anonymous read access but authenticated write access:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:232
#, no-wrap
msgid ""
"$HTTP[\"querystring\"] =~ \"service=git-receive-pack\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
"$HTTP[\"url\"] =~ \"^/git/.*/git-receive-pack$\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:235
msgid "where `git-auth.conf` looks something like:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:245
#, no-wrap
msgid ""
"auth.require = (\n"
"\t\"/\" => (\n"
"\t\t\"method\" => \"basic\",\n"
"\t\t\"realm\" => \"Git Access\",\n"
"\t\t\"require\" => \"valid-user\"\n"
"\t       )\n"
")\n"
"# ...and set up auth.backend here\n"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:248
msgid "To require authentication for both reads and writes:"
msgstr ""

#. type: delimited block -
#: ../Documentation-sedout/git-http-backend.txt:253
#, no-wrap
msgid ""
"$HTTP[\"url\"] =~ \"^/git/private\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:257
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:260
msgid ""
"'git http-backend' relies upon the `CGI` environment variables set by the "
"invoking web server, including:"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:262
msgid "PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:263
msgid "REMOTE_USER"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:264
msgid "REMOTE_ADDR"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:265
msgid "CONTENT_TYPE"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:266
msgid "QUERY_STRING"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:267
msgid "REQUEST_METHOD"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:271
msgid ""
"The `GIT_HTTP_EXPORT_ALL` environmental variable may be passed to 'git-http-"
"backend' to bypass the check for the \"git-daemon-export-ok\" file in each "
"repository before allowing export of that repository."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:280
msgid ""
"The `GIT_HTTP_MAX_REQUEST_BUFFER` environment variable (or the `http."
"maxRequestBuffer` config variable) may be set to change the largest ref "
"negotiation request that git will handle during a fetch; any fetch requiring "
"a larger buffer will not succeed.  This value should not normally need to be "
"changed, but may be helpful if you are fetching from a repository with an "
"extremely large number of refs.  The value can be specified with a unit (e."
"g., `100M` for 100 megabytes). The default is 10 megabytes."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:290
msgid ""
"Clients may probe for optional protocol capabilities (like the v2 protocol) "
"using the `Git-Protocol` HTTP header. In order to support these, the "
"contents of that header must appear in the `GIT_PROTOCOL` environment "
"variable. Most webservers will pass this header to the CGI via the "
"`HTTP_GIT_PROTOCOL` variable, and `git-http-backend` will automatically copy "
"that to `GIT_PROTOCOL`. However, some webservers may be more selective about "
"which headers they'll pass, in which case they need to be configured "
"explicitly (see the mention of `Git-Protocol` in the Apache config from the "
"earlier EXAMPLES section)."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:295
msgid ""
"The backend process sets GIT_COMMITTER_NAME to '$REMOTE_USER' and "
"GIT_COMMITTER_EMAIL to '$\\{REMOTE_USER}@http.$\\{REMOTE_ADDR\\}', ensuring "
"that any reflogs created by 'git-receive-pack' contain some identifying "
"information of the remote user who performed the push."
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:298
msgid ""
"All `CGI` environment variables are available to each of the hooks invoked "
"by the 'git-receive-pack'."
msgstr ""

#. type: Title -
#: ../Documentation-sedout/git-http-backend.txt:300
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation-sedout/git-http-backend.txt:301
msgid "Part of the linkgit:git[1] suite"
msgstr ""
