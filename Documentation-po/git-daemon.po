# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-daemon.txt:2
#, no-wrap
msgid "git-daemon(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:7
msgid "git-daemon - A really simple server for Git repositories"
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:25
#, no-wrap
msgid ""
"'git daemon' [--verbose] [--syslog] [--export-all]\n"
"\t     [--timeout=<n>] [--init-timeout=<n>] [--max-connections=<n>]\n"
"\t     [--strict-paths] [--base-path=<path>] [--base-path-relaxed]\n"
"\t     [--user-path | --user-path=<path>]\n"
"\t     [--interpolated-path=<pathtemplate>]\n"
"\t     [--reuseaddr] [--detach] [--pid-file=<file>]\n"
"\t     [--enable=<service>] [--disable=<service>]\n"
"\t     [--allow-override=<service>] [--forbid-override=<service>]\n"
"\t     [--access-hook=<path>] [--[no-]informative-errors]\n"
"\t     [--inetd |\n"
"\t      [--listen=<host_or_ipaddr>] [--port=<n>]\n"
"\t      [--user=<user> [--group=<group>]]]\n"
"\t     [--log-destination=(stderr|syslog|none)]\n"
"\t     [<directory>...]\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:27
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:31
msgid ""
"A really simple TCP Git daemon that normally listens on port "
"\"DEFAULT_GIT_PORT\" aka 9418.  It waits for a connection asking for a "
"service, and will serve that service if it is enabled."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:37
msgid ""
"It verifies that the directory has the magic file \"git-daemon-export-ok\", "
"and it will refuse to export any Git directory that hasn't explicitly been "
"marked for export this way (unless the `--export-all` parameter is "
"specified). If you pass some directory paths as 'git daemon' arguments, you "
"can further restrict the offers to a whitelist comprising of those."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:41
msgid ""
"By default, only `upload-pack` service is enabled, which serves 'git "
"fetch-pack' and 'git ls-remote' clients, which are invoked from 'git fetch', "
"'git pull', and 'git clone'."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:44
msgid ""
"This is ideally suited for read-only updates, i.e., pulling from Git "
"repositories."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:46
msgid "An `upload-archive` also exists to serve 'git archive'."
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:48
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:49
#, no-wrap
msgid "--strict-paths"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:54
msgid ""
"Match paths exactly (i.e. don't allow \"/foo/repo\" when the real path is "
"\"/foo/repo.git\" or \"/foo/repo/.git\") and don't do user-relative paths.  "
"'git daemon' will refuse to start when this option is enabled and no "
"whitelist is specified."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:55
#, no-wrap
msgid "--base-path=<path>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:61
msgid ""
"Remap all the path requests as relative to the given path.  This is sort of "
"\"Git root\" - if you run 'git daemon' with '--base-path=/srv/git' on "
"example.com, then if you later try to pull 'git://example.com/hello.git', "
"'git daemon' will interpret the path as `/srv/git/hello.git`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:62
#, no-wrap
msgid "--base-path-relaxed"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:67
msgid ""
"If --base-path is enabled and repo lookup fails, with this option 'git "
"daemon' will attempt to lookup without prefixing the base path.  This is "
"useful for switching to --base-path usage, while still allowing the old "
"paths."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:68
#, no-wrap
msgid "--interpolated-path=<pathtemplate>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:77
msgid ""
"To support virtual hosting, an interpolated path template can be used to "
"dynamically construct alternate paths.  The template supports %H for the "
"target hostname as supplied by the client but converted to all lowercase, "
"%CH for the canonical hostname, %IP for the server's IP address, %P for the "
"port number, and %D for the absolute path of the named repository.  After "
"interpolation, the path is validated against the directory whitelist."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:78
#, no-wrap
msgid "--export-all"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:82
msgid ""
"Allow pulling from all directories that look like Git repositories (have the "
"'objects' and 'refs' subdirectories), even if they do not have the "
"'git-daemon-export-ok' file."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:83
#, no-wrap
msgid "--inetd"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:88
msgid ""
"Have the server run as an inetd service. Implies --syslog (may be overridden "
"with `--log-destination=`).  Incompatible with --detach, --port, --listen, "
"--user and --group options."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:89
#, no-wrap
msgid "--listen=<host_or_ipaddr>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:96
msgid ""
"Listen on a specific IP address or hostname.  IP addresses can be either an "
"IPv4 address or an IPv6 address if supported.  If IPv6 is not supported, "
"then --listen=hostname is also not supported and --listen must be given an "
"IPv4 address.  Can be given more than once.  Incompatible with `--inetd` "
"option."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:97
#, no-wrap
msgid "--port=<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:99
msgid "Listen on an alternative port.  Incompatible with `--inetd` option."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:100
#, no-wrap
msgid "--init-timeout=<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:104
msgid ""
"Timeout (in seconds) between the moment the connection is established and "
"the client request is received (typically a rather low value, since that "
"should be basically immediate)."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:105
#, no-wrap
msgid "--timeout=<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:109
msgid ""
"Timeout (in seconds) for specific client sub-requests. This includes the "
"time it takes for the server to process the sub-request and the time spent "
"waiting for the next client's request."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:110
#, no-wrap
msgid "--max-connections=<n>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:113
msgid ""
"Maximum number of concurrent clients, defaults to 32.  Set it to zero for no "
"limit."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:114
#, no-wrap
msgid "--syslog"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:116
msgid "Short for `--log-destination=syslog`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:117
#, no-wrap
msgid "--log-destination=<destination>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:122
msgid ""
"Send log messages to the specified destination.  Note that this option does "
"not imply --verbose, thus by default only error conditions will be logged.  "
"The <destination> must be one of:"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:124
#, no-wrap
msgid "stderr"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:129
msgid ""
"Write to standard error.  Note that if `--detach` is specified, the process "
"disconnects from the real standard error, making this destination "
"effectively equivalent to `none`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:129
#, no-wrap
msgid "syslog"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:131
msgid "Write to syslog, using the `git-daemon` identifier."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:131
#, no-wrap
msgid "none"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:133
msgid "Disable all logging."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:137
msgid ""
"The default destination is `syslog` if `--inetd` or `--detach` is specified, "
"otherwise `stderr`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:138
#, no-wrap
msgid "--user-path"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:139
#, no-wrap
msgid "--user-path=<path>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:147
msgid ""
"Allow {tilde}user notation to be used in requests.  When specified with no "
"parameter, requests to git://host/{tilde}alice/foo is taken as a request to "
"access 'foo' repository in the home directory of user `alice`.  If "
"`--user-path=path` is specified, the same request is taken as a request to "
"access `path/foo` repository in the home directory of user `alice`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:148
#, no-wrap
msgid "--verbose"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:150
msgid "Log details about the incoming connections and requested files."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:151
#, no-wrap
msgid "--reuseaddr"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:155
msgid ""
"Use SO_REUSEADDR when binding the listening socket.  This allows the server "
"to restart without waiting for old connections to time out."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:156
#, no-wrap
msgid "--detach"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:158
msgid "Detach from the shell. Implies --syslog."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:159
#, no-wrap
msgid "--pid-file=<file>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:162
msgid ""
"Save the process id in 'file'.  Ignored when the daemon is run under "
"`--inetd`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:163
#, no-wrap
msgid "--user=<user>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:164
#, no-wrap
msgid "--group=<group>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:170
msgid ""
"Change daemon's uid and gid before entering the service loop.  When only "
"`--user` is given without `--group`, the primary group ID for the user is "
"used.  The values of the option are given to `getpwnam(3)` and `getgrnam(3)` "
"and numeric IDs are not supported."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:174
msgid ""
"Giving these options is an error when used with `--inetd`; use the facility "
"of inet daemon to achieve the same before spawning 'git daemon' if needed."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:181
msgid ""
"Like many programs that switch user id, the daemon does not reset "
"environment variables such as `$HOME` when it runs git programs, "
"e.g. `upload-pack` and `receive-pack`. When using this option, you may also "
"want to set and export `HOME` to point at the home directory of `<user>` "
"before starting the daemon, and make sure any Git configuration files in "
"that directory are readable by `<user>`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:182
#, no-wrap
msgid "--enable=<service>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:183
#, no-wrap
msgid "--disable=<service>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:189
msgid ""
"Enable/disable the service site-wide per default.  Note that a service "
"disabled site-wide can still be enabled per repository if it is marked "
"overridable and the repository enables the service with a configuration "
"item."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:190
#, no-wrap
msgid "--allow-override=<service>"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:191
#, no-wrap
msgid "--forbid-override=<service>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:195
msgid ""
"Allow/forbid overriding the site-wide default with per repository "
"configuration.  By default, all the services may be overridden."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:196
#, no-wrap
msgid "--[no-]informative-errors"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:204
msgid ""
"When informative errors are turned on, git-daemon will report more verbose "
"errors to the client, differentiating conditions like \"no such repository\" "
"from \"repository not exported\". This is more convenient for clients, but "
"may leak information about the existence of unexported repositories.  When "
"informative errors are not enabled, all errors report \"access denied\" to "
"the client. The default is --no-informative-errors."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:205
#, no-wrap
msgid "--access-hook=<path>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:215
msgid ""
"Every time a client connects, first run an external command specified by the "
"<path> with service name (e.g. \"upload-pack\"), path to the repository, "
"hostname (%H), canonical hostname (%CH), IP address (%IP), and TCP port (%P) "
"as its command-line arguments. The external command can decide to decline "
"the service by exiting with a non-zero status (or to allow it by exiting "
"with a zero status).  It can also look at the $REMOTE_ADDR and "
"`$REMOTE_PORT` environment variables to learn about the requestor when "
"making this decision."
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:219
msgid ""
"The external command can optionally write a single line to its standard "
"output to be sent to the requestor as an error message when it declines the "
"service."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:220
#, no-wrap
msgid "<directory>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:224
msgid ""
"A directory to add to the whitelist of allowed directories. Unless "
"--strict-paths is specified this will also include subdirectories of each "
"named directory."
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:226
#, no-wrap
msgid "SERVICES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:234
msgid ""
"These services can be globally enabled/disabled using the command-line "
"options of this command.  If finer-grained control is desired (e.g. to allow "
"'git archive' to be run against only in a few selected repositories the "
"daemon serves), the per-repository configuration file can be used to enable "
"or disable them."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:235
#, no-wrap
msgid "upload-pack"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:240
msgid ""
"This serves 'git fetch-pack' and 'git ls-remote' clients.  It is enabled by "
"default, but a repository can disable it by setting `daemon.uploadpack` "
"configuration item to `false`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:241
#, no-wrap
msgid "upload-archive"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:245
msgid ""
"This serves 'git archive --remote'.  It is disabled by default, but a "
"repository can enable it by setting `daemon.uploadarch` configuration item "
"to `true`."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:246
#, no-wrap
msgid "receive-pack"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:255
msgid ""
"This serves 'git send-pack' clients, allowing anonymous push.  It is "
"disabled by default, as there is _no_ authentication in the protocol (in "
"other words, anybody can push anything into the repository, including "
"removal of refs).  This is solely meant for a closed LAN setting where "
"everybody is friendly.  This service can be enabled by setting "
"`daemon.receivepack` configuration item to `true`."
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:257
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:258
#, no-wrap
msgid "We assume the following in /etc/services"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-daemon.txt:263
#, no-wrap
msgid ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Git Version Control System\n"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:265
#, no-wrap
msgid "'git daemon' as inetd server"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:270
msgid ""
"To set up 'git daemon' as an inetd service that handles any repository under "
"the whitelisted set of directories, /pub/foo and /pub/bar, place an entry "
"like the following into /etc/inetd all on one line:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-daemon.txt:275
#, no-wrap
msgid ""
"\tgit stream tcp nowait nobody  /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t/pub/foo /pub/bar\n"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:278
#, no-wrap
msgid "'git daemon' as inetd server for virtual hosts"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:283
msgid ""
"To set up 'git daemon' as an inetd service that handles repositories for "
"different virtual hosts, `www.example.com` and `www.example.org`, place an "
"entry like the following into `/etc/inetd` all on one line:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-daemon.txt:291
#, no-wrap
msgid ""
"\tgit stream tcp nowait nobody /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%H%D\n"
"\t\t/pub/www.example.org/software\n"
"\t\t/pub/www.example.com/software\n"
"\t\t/software\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:299
msgid ""
"In this example, the root-level directory `/pub` will contain a subdirectory "
"for each virtual host name supported.  Further, both hosts advertise "
"repositories simply as `git://www.example.com/software/repo.git`.  For "
"pre-1.4.0 clients, a symlink from `/software` into the appropriate default "
"repository could be made as well."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:301
#, no-wrap
msgid "'git daemon' as regular daemon for virtual hosts"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:305
msgid ""
"To set up 'git daemon' as a regular, non-inetd service that handles "
"repositories for multiple virtual hosts based on their IP addresses, start "
"the daemon like this:"
msgstr ""

#. type: delimited block -
#: ../Documentation/git-daemon.txt:311
#, no-wrap
msgid ""
"\tgit daemon --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%IP/%D\n"
"\t\t/pub/192.168.1.200/software\n"
"\t\t/pub/10.10.220.23/software\n"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:317
msgid ""
"In this example, the root-level directory `/pub` will contain a subdirectory "
"for each virtual host IP address supported.  Repositories can still be "
"accessed by hostname though, assuming they correspond to these IP addresses."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-daemon.txt:318
#, no-wrap
msgid "selectively enable/disable services per repository"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:323
msgid ""
"To enable 'git archive --remote' and disable 'git fetch' against a "
"repository, have the following in the configuration file in the repository "
"(that is the file 'config' next to `HEAD`, 'refs' and 'objects')."
msgstr ""

#. type: delimited block -
#: ../Documentation/git-daemon.txt:328
#, no-wrap
msgid ""
"\t[daemon]\n"
"\t\tuploadpack = false\n"
"\t\tuploadarch = true\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:332
#, no-wrap
msgid "ENVIRONMENT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:337
msgid ""
"'git daemon' will set REMOTE_ADDR to the IP address of the client that "
"connected to it, if the IP address is available. REMOTE_ADDR will be "
"available in the environment of hooks called when services are performed."
msgstr ""

#. type: Title -
#: ../Documentation/git-daemon.txt:339
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-daemon.txt:340
msgid "Part of the linkgit:git[1] suite"
msgstr ""
