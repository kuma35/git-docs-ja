# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:5
msgid ""
"From: Junio C Hamano <gitster@pobox.com> Subject: Separating topic branches "
"Abstract: In this article, JC describes how to separate topic branches.  "
"Content-type: text/asciidoc"
msgstr ""

#. type: Title =
#: ../Documentation/howto/separating-topic-branches.txt:7
#, no-wrap
msgid "How to separate topic branches"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:11
msgid ""
"This text was originally a footnote to a discussion about the behaviour of "
"the git diff commands."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:16
msgid ""
"Often I find myself doing that [running diff against something other than "
"HEAD] while rewriting messy development history.  For example, I start doing "
"some work without knowing exactly where it leads, and end up with a history "
"like this:"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:21
#, no-wrap
msgid ""
"            \"master\"\n"
"        o---o\n"
"             \\                    \"topic\"\n"
"              o---o---o---o---o---o\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:26
msgid ""
"At this point, \"topic\" contains something I know I want, but it contains "
"two concepts that turned out to be completely independent.  And often, one "
"topic component is larger than the other.  It may contain more than two "
"topics."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:31
msgid ""
"In order to rewrite this mess to be more manageable, I would first do \"diff "
"master..topic\", to extract the changes into a single patch, start picking "
"pieces from it to get logically self-contained units, and start building on "
"top of \"master\":"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:36
#, no-wrap
msgid ""
"        $ git diff master..topic >P.diff\n"
"        $ git checkout -b topicA master\n"
"        ... pick and apply pieces from P.diff to build\n"
"        ... commits on topicA branch.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:42
#, no-wrap
msgid ""
"              o---o---o\n"
"             /        \"topicA\"\n"
"        o---o\"master\"\n"
"             \\                    \"topic\"\n"
"              o---o---o---o---o---o\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:48
msgid ""
"Before doing each commit on \"topicA\" HEAD, I run \"diff HEAD\" before "
"update-index the affected paths, or \"diff --cached HEAD\" after.  Also I "
"would run \"diff --cached master\" to make sure that the changes are only "
"the ones related to \"topicA\".  Usually I do this for smaller topics first."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:54
msgid ""
"After that, I'd do the remainder of the original \"topic\", but for that, I "
"do not start from the patchfile I extracted by comparing \"master\" and "
"\"topic\" I used initially.  Still on \"topicA\", I extract \"diff topic\", "
"and use it to rebuild the other topic:"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:59
#, no-wrap
msgid ""
"        $ git diff -R topic >P.diff ;# --cached also would work fine\n"
"        $ git checkout -b topicB master\n"
"        ... pick and apply pieces from P.diff to build\n"
"        ... commits on topicB branch.\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:68
#, no-wrap
msgid ""
"                                \"topicB\"\n"
"               o---o---o---o---o\n"
"              /\n"
"             /o---o---o\n"
"            |/        \"topicA\"\n"
"        o---o\"master\"\n"
"             \\                    \"topic\"\n"
"              o---o---o---o---o---o\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:71
msgid ""
"After I am done, I'd try a pretend-merge between \"topicA\" and \"topicB\" "
"in order to make sure I have not missed anything:"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:75
#, no-wrap
msgid ""
"        $ git pull . topicA ;# merge it into current \"topicB\"\n"
"        $ git diff topic\n"
"                                \"topicB\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:76
#, no-wrap
msgid "(pretend merge)\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:77
#, no-wrap
msgid "/                   /\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:78
#, no-wrap
msgid "/o---o---o----------'\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:79
#, no-wrap
msgid "|/        \"topicA\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:80
#, no-wrap
msgid "o---o\"master\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:81
#, no-wrap
msgid "\\                    \"topic\"\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:82
#, no-wrap
msgid "o---o---o---o---o---o\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:85
msgid ""
"The last diff better not to show anything other than cleanups for cruft.  "
"Then I can finally clean things up:"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:88
#, no-wrap
msgid ""
"        $ git branch -D topic\n"
"        $ git reset --hard HEAD^ ;# nuke pretend merge\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/separating-topic-branches.txt:94
#, no-wrap
msgid ""
"                                \"topicB\"\n"
"               o---o---o---o---o\n"
"              /\n"
"             /o---o---o\n"
"            |/        \"topicA\"\n"
"        o---o\"master\"\n"
msgstr ""
