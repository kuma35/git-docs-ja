# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-02 01:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:7
#, no-wrap
msgid ""
"Date: Fri, 9 Nov 2007 08:28:38 -0800 (PST)\n"
"From: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Subject: corrupt object on git-gc\n"
"Abstract: Some tricks to reconstruct blob objects in order to fix\n"
" a corrupted repository.\n"
"Content-type: text/asciidoc\n"
msgstr ""

#. type: Title =
#: ../Documentation/howto/recover-corrupted-blob-object.txt:9
#, no-wrap
msgid "How to recover a corrupted blob object"
msgstr ""

#. type: delimited block -
#: ../Documentation/howto/recover-corrupted-blob-object.txt:16
#, no-wrap
msgid ""
"On Fri, 9 Nov 2007, Yossi Leybovich wrote:\n"
">\n"
"> Did not help still the repository look for this object?\n"
"> Any one know how can I track this object and understand which file is it\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:21
msgid ""
"So exactly *because* the SHA-1 hash is cryptographically secure, the hash "
"itself doesn't actually tell you anything, in order to fix a corrupt object "
"you basically have to find the \"original source\" for it."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:27
msgid ""
"The easiest way to do that is almost always to have backups, and find the "
"same object somewhere else. Backups really are a good idea, and Git makes it "
"pretty easy (if nothing else, just clone the repository somewhere else, and "
"make sure that you do *not* use a hard-linked clone, and preferably not the "
"same disk/machine)."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:31
msgid ""
"But since you don't seem to have backups right now, the good news is that "
"especially with a single blob being corrupt, these things *are* somewhat "
"debuggable."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:39
msgid ""
"First off, move the corrupt object away, and *save* it. The most common "
"cause of corruption so far has been memory corruption, but even so, there "
"are people who would be interested in seeing the corruption - but it's "
"basically impossible to judge the corruption until we can also see the "
"original object, so right now the corrupt object is useless, but it's very "
"interesting for the future, in the hope that you can re-create a non-corrupt "
"version."
msgstr ""

#. type: delimited block -
#: ../Documentation/howto/recover-corrupted-blob-object.txt:42
#, no-wrap
msgid "So:\n"
msgstr ""

#. type: delimited block -
#: ../Documentation/howto/recover-corrupted-blob-object.txt:44
#, no-wrap
msgid "> ib]$ mv .git/objects/4b/9458b3786228369c63936db65827de3cc06200 ../\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:48
msgid ""
"This is the right thing to do, although it's usually best to save it under "
"it's full SHA-1 name (you just dropped the \"4b\" from the result ;)."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:50
msgid "Let's see what that tells us:"
msgstr ""

#. type: delimited block -
#: ../Documentation/howto/recover-corrupted-blob-object.txt:56
#, no-wrap
msgid ""
"> ib]$ git-fsck --full\n"
"> broken link from    tree 2d9263c6d23595e7cb2a21e5ebbb53655278dff8\n"
">              to    blob 4b9458b3786228369c63936db65827de3cc06200\n"
"> missing blob 4b9458b3786228369c63936db65827de3cc06200\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:62
msgid ""
"Ok, I removed the \"dangling commit\" messages, because they are just "
"messages about the fact that you probably have rebased etc, so they're not "
"at all interesting. But what remains is still very useful. In particular, we "
"now know which tree points to it!"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:64
msgid "Now you can do"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:66
#, no-wrap
msgid "\tgit ls-tree 2d9263c6d23595e7cb2a21e5ebbb53655278dff8\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:68
msgid "which will show something like"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:77
#, no-wrap
msgid ""
"\t100644 blob 8d14531846b95bfa3564b58ccfb7913a034323b8    .gitignore\n"
"\t100644 blob ebf9bf84da0aab5ed944264a5db2a65fe3a3e883    .mailmap\n"
"\t100644 blob ca442d313d86dc67e0a2e5d584b465bd382cbf5c    COPYING\n"
"\t100644 blob ee909f2cc49e54f0799a4739d24c4cb9151ae453    CREDITS\n"
"\t040000 tree 0f5f709c17ad89e72bdbbef6ea221c69807009f6    Documentation\n"
"\t100644 blob 1570d248ad9237e4fa6e4d079336b9da62d9ba32    Kbuild\n"
"\t100644 blob 1c7c229a092665b11cd46a25dbd40feeb31661d9    MAINTAINERS\n"
"\t...\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:79
msgid "and you should now have a line that looks like"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:81
#, no-wrap
msgid "\t10064 blob 4b9458b3786228369c63936db65827de3cc06200\tmy-magic-file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:84
msgid ""
"in the output. This already tells you a *lot* it tells you what file the "
"corrupt blob came from!"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:89
msgid ""
"Now, it doesn't tell you quite enough, though: it doesn't tell what "
"*version* of the file didn't get correctly written! You might be really "
"lucky, and it may be the version that you already have checked out in your "
"working tree, in which case fixing this problem is really simple, just do"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:91
#, no-wrap
msgid "\tgit hash-object -w my-magic-file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:93
msgid "again, and if it outputs the missing SHA-1 (4b945..) you're now all done!"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:96
msgid ""
"But that's the really lucky case, so let's assume that it was some older "
"version that was broken. How do you tell which version it was?"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:98
msgid "The easiest way to do it is to do"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:100
#, no-wrap
msgid "\tgit log --raw --all --full-history -- subdirectory/my-magic-file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:105
msgid ""
"and that will show you the whole log for that file (please realize that the "
"tree you had may not be the top-level tree, so you need to figure out which "
"subdirectory it was in on your own), and because you're asking for raw "
"output, you'll now get something like"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:111
#, no-wrap
msgid ""
"\tcommit abc\n"
"\tAuthor:\n"
"\tDate:\n"
"\t  ..\n"
"\t:100644 100644 4b9458b... newsha... M  somedirectory/my-magic-file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:116
#, no-wrap
msgid ""
"\tcommit xyz\n"
"\tAuthor:\n"
"\tDate:\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:119
#, no-wrap
msgid ""
"\t  ..\n"
"\t:100644 100644 oldsha... 4b9458b... M\tsomedirectory/my-magic-file\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:125
msgid ""
"and this actually tells you what the *previous* and *subsequent* versions of "
"that file were! So now you can look at those (\"oldsha\" and \"newsha\" "
"respectively), and hopefully you have done commits often, and can re-create "
"the missing my-magic-file version by looking at those older and newer "
"versions!"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:127
msgid "If you can do that, you can now recreate the missing object with"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:129
#, no-wrap
msgid "\tgit hash-object -w <recreated-file>\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:131
msgid "and your repository is good again!"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:133
msgid "(Btw, you could have ignored the fsck, and started with doing a"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:135
#, no-wrap
msgid "\tgit log --raw --all\n"
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:139
msgid ""
"and just looked for the sha of the missing object (4b9458b..) in that whole "
"thing. It's up to you - Git does *have* a lot of information, it is just "
"missing one particular blob version."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:143
msgid ""
"Trying to recreate trees and especially commits is *much* harder. So you "
"were lucky that it's a blob. It's quite possible that you can recreate the "
"thing."
msgstr ""

#. type: Plain text
#: ../Documentation/howto/recover-corrupted-blob-object.txt:144
#, no-wrap
msgid "\t\t\tLinus\n"
msgstr ""
