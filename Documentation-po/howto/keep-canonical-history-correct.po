# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 0.0\n"
"POT-Creation-Date: 2021-11-04 05:36+0900\n"
"PO-Revision-Date: 2022-07-07 07:51+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:7
#, no-wrap
msgid ""
"From: Junio C Hamano <gitster@pobox.com>\n"
"Date: Wed, 07 May 2014 13:15:39 -0700\n"
"Subject: Beginner question on \"Pull is mostly evil\"\n"
"Abstract: This how-to explains a method for keeping a\n"
" project's history correct when using git pull.\n"
"Content-type: text/asciidoc\n"
msgstr ""
"From: Junio C Hamano <gitster@pobox.com>\n"
"Date: Wed, 07 May 2014 13:15:39 -0700\n"
"Subject: Beginner question on \"Pull is mostly evil\"\n"
"Abstract: このハウツーでは、git pullを使用するときに\n"
" プロジェクトの履歴を正しく保つ方法について説明します。\n"
"Content-type: text/asciidoc\n"

#. type: Title =
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:9
#, no-wrap
msgid "Keep authoritative canonical history correct with git pull"
msgstr "git pull で権威ある正規の履歴を正しく保つ"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:15
msgid ""
"Sometimes a new project integrator will end up with project history that "
"appears to be \"backwards\" from what other project developers expect. This "
"howto presents a suggested integration workflow for maintaining a central "
"repository."
msgstr "新しいプロジェクトインテグレーターは、他のプロジェクト開発者が期待するものから「後ろの方」に見えるプロジェクト履歴で終わることがあります。 このハウツーは、中央リポジトリを維持するための推奨される統合ワークフローを示しています。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:17
msgid "Suppose that that central repository has this history:"
msgstr "ある中央リポジトリに以下の履歴があるとします:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:20
#, no-wrap
msgid "    ---o---o---A\n"
msgstr "    ---o---o---A\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:25
msgid ""
"which ends at commit `A` (time flows from left to right and each node in the "
"graph is a commit, lines between them indicating parent-child relationship)."
msgstr "これはコミット `A` で終了します(時間は左から右に流れ、フラフの各ノードはコミットであり、それらの間の線は親子関係を示します)。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:28
msgid ""
"Then you clone it and work on your own commits, which leads you to have this "
"history in *your* repository:"
msgstr "次に、あなたはこれをクローンして、あなた独自のコミット作業を行います。これにより、「あなたのリポジトリ」に以下の履歴が作成されます:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:31
#, no-wrap
msgid "    ---o---o---A---B---C\n"
msgstr "    ---o---o---A---B---C\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:36
msgid ""
"Imagine your coworker did the same and built on top of `A` in *his* "
"repository in the meantime, and then pushed it to the central repository:"
msgstr "あなたの同僚が同様に、「彼のリポジトリ」の `A` 上に構築し、そしてそれから、それを中央リポジトリにプッシュしたと想像してみてください:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:39
#, no-wrap
msgid "    ---o---o---A---X---Y---Z\n"
msgstr "    ---o---o---A---X---Y---Z\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:44
msgid ""
"Now, if you `git push` at this point, because your history that leads to `C` "
"lacks `X`, `Y` and `Z`, it will fail.  You need to somehow make the tip of "
"your history a descendant of `Z`."
msgstr "ここで あなたが `git push` した場合、 `C` に至るあなたの履歴には `X`,`Y`,`Z` が欠けているため、失敗してしまいます。 どうにかして、履歴の先端を `Z` の子孫にする必要があります。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:48
msgid ""
"One suggested way to solve the problem is \"fetch and then merge\", aka `git "
"pull`. When you fetch, your repository will have a history like this:"
msgstr "この問題の解決への提案の一つは、「フェッチしてからマージする」、別名「git pull」です。 フェッチすると、あなたのリポジトリは以下のような履歴になります。"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:53
#, no-wrap
msgid ""
"    ---o---o---A---B---C\n"
"\t\t\\\n"
"\t\t X---Y---Z\n"
msgstr ""
"    ---o---o---A---B---C\n"
"\t\t\\\n"
"\t\t X---Y---Z\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:57
msgid ""
"Once you run merge after that, while still on *your* branch, i.e. `C`, you "
"will create a merge `M` and make the history look like this:"
msgstr "その後あなたがマージを実行すると、「あなたのブランチ」、つまり `C` にいる間に、マージ `M` を作成し、履歴を以下のようにします:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:62
#, no-wrap
msgid ""
"    ---o---o---A---B---C---M\n"
"\t\t\\         /\n"
"\t\t X---Y---Z\n"
msgstr ""
"    ---o---o---A---B---C---M\n"
"\t\t\\         /\n"
"\t\t X---Y---Z\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:71
msgid ""
"`M` is a descendant of `Z`, so you can push to update the central "
"repository.  Such a merge `M` does not lose any commit in both histories, so "
"in that sense it may not be wrong, but when people want to talk about \"the "
"authoritative canonical history that is shared among the project participants"
"\", i.e. \"the trunk\", they often view it as \"commits you see by following "
"the first-parent chain\", and use this command to view it:"
msgstr "`M` は `Z` の子孫であるため、あなたはプッシュして中央リポジトリを更新できます。 このようなマージ `M` は、両方の履歴でコミットを失うことはないので、その意味では間違いではないかもしれませんが、人々が「プロジェクト参加者間で共有される権威ある正規の履歴」、つまり「the trunk」について話したい場合は、 しばしばそれを 「最初の親からのチェーンをたどることによって表示されるコミット」 と見なし、それを表示するために以下コマンドを使用します:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:74
#, no-wrap
msgid "    $ git log --first-parent\n"
msgstr "    $ git log --first-parent\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:81
msgid ""
"For all other people who observed the central repository after your coworker "
"pushed `Z` but before you pushed `M`, the commit on the trunk used to be `o-"
"o-A-X-Y-Z`.  But because you made `M` while you were on `C`, `M`'s first "
"parent is `C`, so by pushing `M` to advance the central repository, you made "
"`X-Y-Z` a side branch, not on the trunk."
msgstr "同僚が `Z` をプッシュした後、 あなたが `M` をプッシュする前に中央リポジトリを観察した他のすべての人にとって、 the trunk のコミットは以前は `o-o-A-X-Y-Z` でした。 しかし、 あなたが `C` にいる間に `M` を作成したため、 `M` の最初の親は `C` になります。したがって、  `M` をプッシュして中央リポジトリを進めることにより、あなたは  `X-Y-Z` を、 the trunk 上ではなくサイドブランチにしてしまいました。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:83
msgid "You would rather want to have a history of this shape:"
msgstr "あなたはむしろ以下の形の履歴を持ちたいはずです:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:88
#, no-wrap
msgid ""
"    ---o---o---A---X---Y---Z---M'\n"
"\t\t\\             /\n"
"\t\t B-----------C\n"
msgstr ""
"    ---o---o---A---X---Y---Z---M'\n"
"\t\t\\             /\n"
"\t\t B-----------C\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:97
msgid ""
"so that in the first-parent chain, it is clear that the project first did "
"`X` and then `Y` and then `Z` and merged a change that consists of two "
"commits `B` and `C` that achieves a single goal.  You may have worked on "
"fixing the bug #12345 with these two patches, and the merge `M'` with "
"swapped parents can say in its log message \"Merge fix-bug-12345\". Having a "
"way to tell `git pull` to create a merge but record the parents in reverse "
"order may be a way to do so."
msgstr "これは、最初の親チェーンで、プロジェクトが最初に `X` その次に `Y` その次に `Z` のコミットを行い、2つのコミット `B` と `C` で構成される変更をマージして単一のゴールを達成することが明らかです。 この2つのパッチで バグ #12345 の修正に取り組み、親が入れ替わったマージ `M'` はログメッセージで「merge fix-bug-12345」と言うかもしれません。 `git pull` でマージを作成するが、親を逆順に記録するように指示する方法があるかもしれません。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:103
msgid ""
"Note that I said \"achieves a single goal\" above, because this is "
"important.  \"Swapping the merge order\" only covers a special case where "
"the project does not care too much about having unrelated things done on a "
"single merge but cares a lot about first-parent chain."
msgstr "注意: 上記で「単一の目標を達成する」と言ったことは重要です。 「マージ順序の入れ替え」は、プロジェクトが無関係なものを一度のマージで処理することはあまり気にしないが、最初の親へのチェーンは気にするという特殊なケースにのみ対応します。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:105
msgid "There are multiple schools of thought about the \"trunk\" management."
msgstr "「the trunk」の管理については、複数の考え方があります。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:110
msgid ""
"Some projects want to keep a completely linear history without any merges.  "
"Obviously, swapping the merge order would not match their taste.  You would "
"need to flatten your history on top of the updated upstream to result in a "
"history of this shape instead:"
msgstr "あるプロジェクトでは、マージせずに完全に線形の履歴を保持する方針です。 明らかに、マージ順序を入れ替えても、彼らの好みとは一致しません。 代わりに、この形状の履歴を生成するには、更新されたアップストリーム上のあなたの履歴をフラット化する必要があります:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:113
#, no-wrap
msgid "    ---o---o---A---X---Y---Z---B---C\n"
msgstr "    ---o---o---A---X---Y---Z---B---C\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:116
msgid "with `git pull --rebase` or something."
msgstr "こうするには `git pull --rebase` とか使います。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:121
msgid ""
"Some projects tolerate merges in their history, but do not worry too much "
"about the first-parent order, and allow fast-forward merges.  To them, "
"swapping the merge order does not hurt, but it is unnecessary."
msgstr "あるプロジェクトでは、履歴内のマージを許容しますが、最初の親の順序についてあまり心配せず、早送りマージを許可する方針です。 彼らにとって、マージ順序を入れ替えても問題はありませんが、マージ順序の入れ替えは不要です。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:131
msgid ""
"Some projects want each commit on the \"trunk\" to do one single thing.  The "
"output of `git log --first-parent` in such a project would show either a "
"merge of a side branch that completes a single theme, or a single commit "
"that completes a single theme by itself.  If your two commits `B` and `C` "
"(or they may even be two groups of commits) were solving two independent "
"issues, then the merge `M'` we made in the earlier example by swapping the "
"merge order is still not up to the project standard.  It merges two "
"unrelated efforts `B` and `C` at the same time."
msgstr "あるプロジェクトでは、「the trunk」の各コミット毎に1つのことを行う方針です。このようなプロジェクトでの `git log --first-parent` の出力は、単一のテーマを完了するサイドブランチのマージ、または単一のテーマを単独で完了する単一のコミットのいずれかを示します。 もし二つのコミット `B` と `C` (あるいは二つのコミットグループ) が独立した二つの問題を解決していたとしたら、先ほどの例でマージ順を入れ替えて作ったマージ `M'` はまだプロジェクトの標準に達していないことになります。 これは、2つの無関係な作業 `B` と `C` を同時にマージします。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:135
msgid ""
"For projects in the last category (Git itself is one of them), individual "
"developers would want to prepare a history more like this:"
msgstr "最後のカテゴリのプロジェクト(Git自体もその1つです)の場合、個々の開発者は以下のような履歴を準備する必要があります:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:142
#, no-wrap
msgid ""
"\t\t C0--C1--C2     topic-c\n"
"\t\t/\n"
"    ---o---o---A                master\n"
"\t\t\\\n"
"\t\t B0--B1--B2     topic-b\n"
msgstr ""
"\t\t C0--C1--C2     topic-c\n"
"\t\t/\n"
"    ---o---o---A                master\n"
"\t\t\\\n"
"\t\t B0--B1--B2     topic-b\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:146
msgid "That is, keeping separate topics on separate branches, perhaps like so:"
msgstr "つまり、たぶん以下のように、別々のトピックを別々のブランチに保持します:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:153
#, no-wrap
msgid ""
"    $ git clone $URL work && cd work\n"
"    $ git checkout -b topic-b master\n"
"    $ ... work to create B0, B1 and B2 to complete one theme\n"
"    $ git checkout -b topic-c master\n"
"    $ ... same for the theme of topic-c\n"
msgstr ""
"    $ git clone $URL work && cd work\n"
"    $ git checkout -b topic-b master\n"
"    $ ... work to create B0, B1 and B2 to complete one theme\n"
"    $ git checkout -b topic-c master\n"
"    $ ... same for the theme of topic-c\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:156
msgid "And then"
msgstr "そしてそれから"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:160
#, no-wrap
msgid ""
"    $ git checkout master\n"
"    $ git pull --ff-only\n"
msgstr ""
"    $ git checkout master\n"
"    $ git pull --ff-only\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:164
msgid ""
"would grab `X`, `Y` and `Z` from the upstream and advance your master branch:"
msgstr "これは、アップストリームから `X` と `Y` と `Z` を掴んできて、あなたのmasterブランチを進めます:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:171
#, no-wrap
msgid ""
"\t\t C0--C1--C2     topic-c\n"
"\t\t/\n"
"    ---o---o---A---X---Y---Z    master\n"
"\t\t\\\n"
"\t\t B0--B1--B2     topic-b\n"
msgstr ""
"\t\t C0--C1--C2     topic-c\n"
"\t\t/\n"
"    ---o---o---A---X---Y---Z    master\n"
"\t\t\\\n"
"\t\t B0--B1--B2     topic-b\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:174
msgid "And then you would merge these two branches separately:"
msgstr "そしてそれから、これら2つのブランチを別々にマージします:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:178
#, no-wrap
msgid ""
"    $ git merge topic-b\n"
"    $ git merge topic-c\n"
msgstr ""
"    $ git merge topic-b\n"
"    $ git merge topic-c\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:181
msgid "to result in"
msgstr "これは以下の結果になります"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:188
#, no-wrap
msgid ""
"\t\t C0--C1---------C2\n"
"\t\t/                 \\\n"
"    ---o---o---A---X---Y---Z---M---N\n"
"\t\t\\             /\n"
"\t\t B0--B1-----B2\n"
msgstr ""
"\t\t C0--C1---------C2\n"
"\t\t/                 \\\n"
"    ---o---o---A---X---Y---Z---M---N\n"
"\t\t\\             /\n"
"\t\t B0--B1-----B2\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:191
msgid "and push it back to the central repository."
msgstr "そして、中央リポジトリにプッシュバックします。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:195
msgid ""
"It is very much possible that while you are merging topic-b and topic-c, "
"somebody again advanced the history in the central repository to put `W` on "
"top of `Z`, and make your `git push` fail."
msgstr "topic-bとtopic-cをマージしているときに、誰かが再び中央リポジトリの履歴を進めて、 `Z` の先に `W` を置き、 `git push` を失敗させる可能性があります。"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:198
msgid ""
"In such a case, you would rewind to discard `M` and `N`, update the tip of "
"your 'master' again and redo the two merges:"
msgstr "このような場合は、巻き戻して `M` と `N` を破棄し、 `master` の先端を再度更新して、2つのマージをやり直します:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:204
#, no-wrap
msgid ""
"    $ git reset --hard origin/master\n"
"    $ git pull --ff-only\n"
"    $ git merge topic-b\n"
"    $ git merge topic-c\n"
msgstr ""
"    $ git reset --hard origin/master\n"
"    $ git pull --ff-only\n"
"    $ git merge topic-b\n"
"    $ git merge topic-c\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:207
msgid "The procedure will result in a history that looks like this:"
msgstr "この手順により、以下のような履歴が作成されます:"

#. type: delimited block -
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:214
#, no-wrap
msgid ""
"\t\t C0--C1--------------C2\n"
"\t\t/                     \\\n"
"    ---o---o---A---X---Y---Z---W---M'--N'\n"
"\t\t\\                 /\n"
"\t\t B0--B1---------B2\n"
msgstr ""
"\t\t C0--C1--------------C2\n"
"\t\t/                     \\\n"
"    ---o---o---A---X---Y---Z---W---M'--N'\n"
"\t\t\\                 /\n"
"\t\t B0--B1---------B2\n"

#. type: Plain text
#: ../Documentation-sedout/howto/keep-canonical-history-correct.txt:216
msgid ""
"See also http://git-blame.blogspot.com/2013/09/fun-with-first-parent-history."
"html"
msgstr "http://git-blame.blogspot.com/2013/09/fun-with-first-parent-history.html も参照して下さい。"
