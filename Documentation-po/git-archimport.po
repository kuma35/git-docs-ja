# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-01 00:25+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation/git-archimport.txt:2
#, no-wrap
msgid "git-archimport(1)"
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:7
msgid "git-archimport - Import a GNU Arch repository into Git"
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:14
#, no-wrap
msgid ""
"'git archimport' [-h] [-v] [-o] [-a] [-f] [-T] [-D depth] [-t tempdir]\n"
"               <archive/branch>[:<git-branch>] ...\n"
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:16
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:23
msgid ""
"Imports a project from one or more GNU Arch repositories.  It will follow "
"branches and repositories within the namespaces defined by the "
"<archive/branch> parameters supplied. If it cannot find the remote branch a "
"merge comes from it will just import it as a regular commit. If it can find "
"it, it will mark it as a merge whenever possible (see discussion below)."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:27
msgid ""
"The script expects you to provide the key roots where it can start the "
"import from an 'initial import' or 'tag' type of Arch commit. It will follow "
"and import new branches within the provided roots."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:32
msgid ""
"It expects to be dealing with one project only. If it sees branches that "
"have different roots, it will refuse to run. In that case, edit your "
"<archive/branch> parameters to define clearly the scope of the import."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:37
msgid ""
"'git archimport' uses `tla` extensively in the background to access the Arch "
"repository.  Make sure you have a recent version of `tla` available in the "
"path. `tla` must know about the repositories you pass to 'git archimport'."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:42
msgid ""
"For the initial import, 'git archimport' expects to find itself in an empty "
"directory. To follow the development of a project that uses Arch, rerun 'git "
"archimport' with the same parameters as the initial import to perform "
"incremental imports."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:49
msgid ""
"While 'git archimport' will try to create sensible branch names for the "
"archives that it imports, it is also possible to specify Git branch names "
"manually.  To do so, write a Git branch name after each <archive/branch> "
"parameter, separated by a colon.  This way, you can shorten the Arch branch "
"names and convert Arch jargon to Git jargon, for example mapping a "
"\"PROJECT{litdd}devo{litdd}VERSION\" branch to \"master\"."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:54
msgid ""
"Associating multiple Arch branches to one Git branch is possible; the result "
"will make the most sense only if no commits are made to the first branch, "
"after the second branch is created.  Still, this is useful to convert Arch "
"repositories that had been rotated periodically."
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:57
#, no-wrap
msgid "MERGES"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:63
msgid ""
"Patch merge data from Arch is used to mark merges in Git as well. Git does "
"not care much about tracking patches, and only considers a merge when a "
"branch incorporates all the commits since the point they forked. The end "
"result is that Git will have a good idea of how far branches have "
"diverged. So the import process does lose some patch-trading metadata."
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:67
msgid ""
"Fortunately, when you try and merge branches imported from Arch, Git will "
"find a good merge base, and it has a good chance of identifying patches that "
"have been traded out-of-sequence between the branches."
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:69
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:71
#, no-wrap
msgid "-h"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:73
msgid "Display usage."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:74
#, no-wrap
msgid "-v"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:76
msgid "Verbose output."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:77
#, no-wrap
msgid "-T"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:80
msgid ""
"Many tags. Will create a tag for every commit, reflecting the commit name in "
"the Arch repository."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:81
#, no-wrap
msgid "-f"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:85
msgid ""
"Use the fast patchset import strategy.  This can be significantly faster for "
"large trees, but cannot handle directory renames or permissions changes.  "
"The default strategy is slow and safe."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:86
#, no-wrap
msgid "-o"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:93
msgid ""
"Use this for compatibility with old-style branch names used by earlier "
"versions of 'git archimport'.  Old-style branch names were "
"category{litdd}branch, whereas new-style branch names are "
"archive,category{litdd}branch{litdd}version.  In both cases, names given on "
"the command-line will override the automatically-generated ones."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:94
#, no-wrap
msgid "-D <depth>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:98
msgid ""
"Follow merge ancestry and attempt to import trees that have been merged "
"from.  Specify a depth greater than 1 if patch logs have been pruned."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:99
#, no-wrap
msgid "-a"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:102
msgid ""
"Attempt to auto-register archives at `http://mirrors.sourcecontrol.net` This "
"is particularly useful with the -D option."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:103
#, no-wrap
msgid "-t <tmpdir>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:105
msgid "Override the default tempdir."
msgstr ""

#. type: Labeled list
#: ../Documentation/git-archimport.txt:107
#, no-wrap
msgid "<archive/branch>"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:109
msgid "Archive/branch identifier in a format that `tla log` understands."
msgstr ""

#. type: Title -
#: ../Documentation/git-archimport.txt:112
#, no-wrap
msgid "GIT"
msgstr ""

#. type: Plain text
#: ../Documentation/git-archimport.txt:113
msgid "Part of the linkgit:git[1] suite"
msgstr ""
