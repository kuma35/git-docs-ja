# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2024-01-22 03:59+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-pack-refs.txt:2
#, no-wrap
msgid "git-pack-refs(1)"
msgstr "git-pack-refs(1)"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:7
msgid "git-pack-refs - Pack heads and tags for efficient repository access"
msgstr ""
"git-pack-refs - 効率的なリポジトリアクセスのためにヘッド(heads)とタグ(tags)を"
"パックします"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:12
#, no-wrap
msgid "'git pack-refs' [--all] [--no-prune] [--include <pattern>] [--exclude <pattern>]\n"
msgstr "'git pack-refs' [--all] [--no-prune] [--include <pattern>] [--exclude <pattern>]\n"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:14
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:24
msgid ""
"Traditionally, tips of branches and tags (collectively known as 'refs') were "
"stored one file per ref in a (sub)directory under `$GIT_DIR/refs` "
"directory.  While many branch tips tend to be updated often, most tags and "
"some branch tips are never updated.  When a repository has hundreds or "
"thousands of tags, this one-file-per-ref format both wastes storage and "
"hurts performance."
msgstr ""
"旧来、ブランチとタグのヒント(まとめて「refs」と呼ばれます)は、refごとに1つの"
"ファイルを `$GIT_DIR/refs` ディレクトリの下のディレクトリ(サブディレクトリ)に"
"保存していました。多くのブランチヒントは頻繁に更新される傾向がありますが、ほ"
"とんどのタグと一部のブランチヒントは更新されません。リポジトリに数百または数"
"千のタグがある場合、この 1ファイル毎に1ref形式 はストレージを浪費し、パフォー"
"マンスを低下させます。"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:31
msgid ""
"This command is used to solve the storage and performance problem by storing "
"the refs in a single file, `$GIT_DIR/packed-refs`.  When a ref is missing "
"from the traditional `$GIT_DIR/refs` directory hierarchy, it is looked up in "
"this file and used if found."
msgstr ""
"このコマンドは、refを単一のファイル `$GIT_DIR/packed-refs` に保存することによ"
"り、ストレージとパフォーマンスの問題を解決するために使用されます。旧来の "
"`$GIT_DIR/refs` ディレクトリ階層にrefがない場合、このファイルの中から探し、見"
"つかればそれが使用されます。"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:34
msgid ""
"Subsequent updates to branches always create new files under `$GIT_DIR/refs` "
"directory hierarchy."
msgstr ""
"その後のブランチの更新では、常に `$GIT_DIR/refs` ディレクトリ階層の下に新しい"
"ファイルが作成されます。"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:43
msgid ""
"A recommended practice to deal with a repository with too many refs is to "
"pack its refs with `--all` once, and occasionally run `git pack-refs`.  Tags "
"are by definition stationary and are not expected to change.  Branch heads "
"will be packed with the initial `pack-refs --all`, but only the currently "
"active branch heads will become unpacked, and the next `pack-refs` (without "
"`--all`) will leave them unpacked."
msgstr ""
"refが多すぎるリポジトリを処理するための推奨される方法は、refを `--all` で一度"
"パックし、ときどき `git pack-refs` を実行することです。タグは定義上静止してお"
"り、変更されることは期待されていません。ブランチヘッドは最初の `pack-refs --"
"all` でパックされますが、現在アクティブなブランチヘッドのみはアンパックされ、"
"その後 `pack-refs` ( `--all` なし)ではアンパックされたままになります。"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:46
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-pack-refs.txt:48
#, no-wrap
msgid "`--all`"
msgstr "`--all`"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:57
msgid ""
"The command by default packs all tags and refs that are already packed, and "
"leaves other refs alone.  This is because branches are expected to be "
"actively developed and packing their tips does not help performance.  This "
"option causes all refs to be packed as well, with the exception of hidden "
"refs, broken refs, and symbolic refs. Useful for a repository with many "
"branches of historical interests."
msgstr "このコマンドはデフォルトでは、すでにパックされているすべてのタグとrefをパックし、他のrefはそのままにします。 これは、ブランチが積極的に開発されることが期待されており、その先端をパックしてもパフォーマンスが向上しないためです。このオプションを使用すると、非表示の refや壊れた ref やシンボリック ref を除く、すべての ref もパックされます。歴史的に関心のある多くのブランチがあるリポジトリに役立ちます。"

#. type: Labeled list
#: ../Documentation-sedout/git-pack-refs.txt:58
#, no-wrap
msgid "`--no-prune`"
msgstr "`--no-prune`"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:62
msgid ""
"The command usually removes loose refs under `$GIT_DIR/refs` hierarchy after "
"packing them.  This option tells it not to."
msgstr ""
"コマンドは通常、それらをパックした後、 `$GIT_DIR/refs` 階層の下の緩いrefを削"
"除します。このオプションは、そうしないように指示します。"

#. type: Labeled list
#: ../Documentation-sedout/git-pack-refs.txt:63
#, no-wrap
msgid "`--include <pattern>`"
msgstr "`--include <pattern>`"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:71
msgid ""
"Pack refs based on a `glob(7)` pattern. Repetitions of this option "
"accumulate inclusion patterns. If a ref is both included in `--include` and "
"`--exclude`, `--exclude` takes precedence. Using `--include` will preclude "
"all tags from being included by default. Symbolic refs and broken refs will "
"never be packed. When used with `--all`, it will be a noop. Use `--no-"
"include` to clear and reset the list of patterns."
msgstr "glob(7) パターンに基づいて ref をパックします。 このオプションを繰り返し指定すると、 包含パターンが蓄積されます。 ある ref が `--include` と `--exclude` の両方に含まれている場合、 `--exclude` が優先されます。 `--include` を使用すると、 デフォルトではすべてのタグが含まれなくなります。 シンボリック ref と壊れた ref は決してパックされる事はありません。 `--all` と一緒に使用すると、 なにもしません(noop)。 パターンのリストをクリアして再セットするには、 `--no-include` を使用します。"

#. type: Labeled list
#: ../Documentation-sedout/git-pack-refs.txt:72
#, no-wrap
msgid "`--exclude <pattern>`"
msgstr "`--exclude <pattern>`"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:78
msgid ""
"Do not pack refs matching the given `glob(7)` pattern. Repetitions of this "
"option accumulate exclusion patterns. Use `--no-exclude` to clear and reset "
"the list of patterns. If a ref is already packed, including it with `--"
"exclude` will not unpack it."
msgstr "指定された glob(7) パターンにマッチする ref をパックしません。 このオプションを繰り返し指定すると、 除外パターンが蓄積されます。 パターンのリストをクリアして再セットするには、 `--no-exclude` を使用します。 とある ref がすでにパックされている場合、 それを `--exclude` で包含してもアンパックされません。"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:81
msgid ""
"When used with `--all`, pack only loose refs which do not match any of the "
"provided `--exclude` patterns."
msgstr "`--all` と一緒に使用すると、 提供された `--exclude` パターンのいずれにもマッチしない 緩い ref (loose refs)のみをパックします。"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:84
msgid ""
"When used with `--include`, refs provided to `--include`, minus refs that "
"are provided to `--exclude` will be packed."
msgstr "`--include` と一緒に使用すると、 `--include` で得られた ref から、 `--exclude` で得られた ref を引いたものがパックされます。"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:87
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:92
msgid ""
"Older documentation written before the packed-refs mechanism was introduced "
"may still say things like \".git/refs/heads/<branch> file exists\" when it "
"means \"branch <branch> exists\"."
msgstr ""
"pack-refs メカニズムが導入される前に作成された古い文書では、 \"branch "
"<branch> exists\" という意味の場合でも \".git/refs/heads/<branch> file "
"exists\" などと紹介される場合があります。"

#. type: Title -
#: ../Documentation-sedout/git-pack-refs.txt:95
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-pack-refs.txt:96
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
