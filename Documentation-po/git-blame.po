# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: git-docs-ja 3.0\n"
"POT-Creation-Date: 2023-07-18 11:05+0900\n"
"PO-Revision-Date: 2023-10-12 08:37+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: ../Documentation-sedout/git-blame.txt:2
#, no-wrap
msgid "git-blame(1)"
msgstr "git-blame(1)"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:5
#, no-wrap
msgid "NAME"
msgstr "NAME"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:7
msgid ""
"git-blame - Show what revision and author last modified each line of a file"
msgstr "git-blame - ファイルの各行を最後に変更したリビジョンと作者を表示する"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:9
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:16
#, no-wrap
msgid ""
"'git blame' [-c] [-b] [-l] [--root] [-t] [-f] [-n] [-s] [-e] [-p] [-w] [--incremental]\n"
"\t    [-L <range>] [-S <revs-file>] [-M] [-C] [-C] [-C] [--since=<date>]\n"
"\t    [--ignore-rev <rev>] [--ignore-revs-file <file>]\n"
"\t    [--color-lines] [--color-by-age] [--progress] [--abbrev=<n>]\n"
"\t    [ --contents <file> ] [<rev> | --reverse <rev>..<rev>] [--] <file>\n"
msgstr ""
"'git blame' [-c] [-b] [-l] [--root] [-t] [-f] [-n] [-s] [-e] [-p] [-w] [--incremental]\n"
"\t    [-L <range>] [-S <revs-file>] [-M] [-C] [-C] [-C] [--since=<date>]\n"
"\t    [--ignore-rev <rev>] [--ignore-revs-file <file>]\n"
"\t    [--color-lines] [--color-by-age] [--progress] [--abbrev=<n>]\n"
"\t    [ --contents <file> ] [<rev> | --reverse <rev>..<rev>] [--] <file>\n"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:18
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:22
msgid ""
"Annotates each line in the given file with information from the revision "
"which last modified the line. Optionally, start annotating from the given "
"revision."
msgstr ""
"指定のファイルの各行で、その行を最後に変更したリビジョンからの情報を注釈しま"
"す。 オプションで、指定のリビジョンから注釈を開始します。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:25
msgid ""
"When specified one or more times, `-L` restricts annotation to the requested "
"lines."
msgstr "`-L` は注釈を指定行に制限します。複数回指定できます。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:31
msgid ""
"The origin of lines is automatically followed across whole-file renames "
"(currently there is no option to turn the rename-following off). To follow "
"lines moved from one file to another, or to follow lines that were copied "
"and pasted from another file, etc., see the `-C` and `-M` options."
msgstr ""
"行の原初は、ファイル自体の名前変更にまたがって自動的に追跡されます(現在のとこ"
"ろ、名前変更追跡をオフにするオプションはありません)。 あるファイルから別の"
"ファイルに移動した行を追跡したり、別のファイルからコピーして貼り付けた行を追"
"跡したりするには、 `-C` および `-M` オプションを参照してください。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:35
msgid ""
"The report does not tell you anything about lines which have been deleted or "
"replaced; you need to use a tool such as 'git diff' or the \"pickaxe\" "
"interface briefly mentioned in the following paragraph."
msgstr ""
"レポートには、削除または置換された行については何も表示されません。 以下の段落"
"で簡単に説明する `git diff` や `pickaxe` インターフェースなどのツールを使用す"
"る必要があります。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:42
msgid ""
"Apart from supporting file annotation, Git also supports searching the "
"development history for when a code snippet occurred in a change. This makes "
"it possible to track when a code snippet was added to a file, moved or "
"copied between files, and eventually deleted or replaced. It works by "
"searching for a text string in the diff. A small example of the pickaxe "
"interface that searches for `blame_usage`:"
msgstr ""
"Gitは、ファイル注釈のサポートとは別に、変更時にコード断片(code snippet)が発生"
"したときの開発履歴の検索もサポートしています。 これにより、コード断片がファイ"
"ルに追加され、ファイル間で移動またはコピーされ、最終的に削除または置換された"
"時期を追跡できます。 これは、diffでテキスト文字列を検索することで機能しま"
"す。 `blame_usage` を検索するpickaxeインターフェースの小さな例:"

#. type: delimited block -
#: ../Documentation-sedout/git-blame.txt:47
#, no-wrap
msgid ""
"$ git log --pretty=oneline -S'blame_usage'\n"
"5040f17eba15504bad66b14a645bddd9b015ebb7 blame -S <ancestry-file>\n"
"ea4c7f9bf69e781dd0cd88d2bccb2bf5cc15c9a7 git-blame: Make the output\n"
msgstr ""
"$ git log --pretty=oneline -S'blame_usage'\n"
"5040f17eba15504bad66b14a645bddd9b015ebb7 blame -S <ancestry-file>\n"
"ea4c7f9bf69e781dd0cd88d2bccb2bf5cc15c9a7 git-blame: Make the output\n"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:50
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONS"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:53
#, no-wrap
msgid "`-c`"
msgstr "`-c`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:55
msgid "Use the same output mode as linkgit:git-annotate[1] (Default: off)."
msgstr ""
"linkgit:git-annotate[1] と同じ出力モードを使用します(デフォルト: オフ)。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:56
#, no-wrap
msgid "`--score-debug`"
msgstr "`--score-debug`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:64
msgid ""
"Include debugging information related to the movement of lines between files "
"(see `-C`) and lines moved within a file (see `-M`).  The first number "
"listed is the score.  This is the number of alphanumeric characters detected "
"as having been moved between or within files.  This must be above a certain "
"threshold for 'git blame' to consider those lines of code to have been moved."
msgstr ""
"ファイル間の行の移動(`-C` 参照)およびファイル内で移動された行(`-M` 参照)に関"
"連するデバッグ情報を含めます。 リストされている最初の数字はスコアです。 これ"
"は、ファイル間またはファイル内で移動を検出した英数字の数です。これらのコード"
"行が移動されたと見なすには、 これが `git blame` の特定のしきい値を超えている"
"必要があります。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:65
#, no-wrap
msgid "`-f`"
msgstr "`-f`"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:66
#, no-wrap
msgid "`--show-name`"
msgstr "`--show-name`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:70
msgid ""
"Show the filename in the original commit.  By default the filename is shown "
"if there is any line that came from a file with a different name, due to "
"rename detection."
msgstr ""
"元のコミットのファイル名を表示します。 デフォルトでは、名前変更の検出により、"
"別の名前のファイルからの行がある場合はファイル名が表示されます。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:71
#, no-wrap
msgid "`-n`"
msgstr "`-n`"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:72
#, no-wrap
msgid "`--show-number`"
msgstr "`--show-number`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:74
msgid "Show the line number in the original commit (Default: off)."
msgstr "元のコミットの行番号を表示します(デフォルト: オフ)。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:75
#, no-wrap
msgid "`-s`"
msgstr "`-s`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:77
msgid "Suppress the author name and timestamp from the output."
msgstr "作者名とタイムスタンプの出力を抑制します。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:78
#, no-wrap
msgid "`-e`"
msgstr "`-e`"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:79
#, no-wrap
msgid "`--show-email`"
msgstr "`--show-email`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:83
msgid ""
"Show the author email instead of author name (Default: off).  This can also "
"be controlled via the `blame.showEmail` config option."
msgstr ""
"作者名の代わりに作者の電子メールアドレス(author email)を表示します(デフォル"
"ト: オフ)。 これは、 `blame.showEmail` 構成オプションを介して制御することもで"
"きます。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:84
#, no-wrap
msgid "`-w`"
msgstr "`-w`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:87
msgid ""
"Ignore whitespace when comparing the parent's version and the child's to "
"find where the lines came from."
msgstr ""
"親のバージョンと子のバージョンを比較して、その行がどこから来たのかを見つける"
"ときは、空白(whitespace)を無視します。"

#. type: Labeled list
#: ../Documentation-sedout/git-blame.txt:88
#, no-wrap
msgid "`--abbrev=<n>`"
msgstr "`--abbrev=<n>`"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:94
msgid ""
"Instead of using the default 7+1 hexadecimal digits as the abbreviated "
"object name, use <m>+1 digits, where <m> is at least <n> but ensures the "
"commit object names are unique.  Note that 1 column is used for a caret to "
"mark the boundary commit."
msgstr ""
"デフォルトの7+1桁の16進数でオブジェクト名を省略する代わりに、<m>+1桁を使用し"
"ます。ここで<m>は少なくとも<n>ですが、コミットオブジェクト名が一意になるよう"
"な長さにします。 1列分はコミットの境界を示すカレット(`^`)に使用されることに注"
"意してください。"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:97
#, no-wrap
msgid "THE DEFAULT FORMAT"
msgstr "THE DEFAULT FORMAT"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:101
msgid ""
"When neither `--porcelain` nor `--incremental` option is specified, `git "
"blame` will output annotation for each line with:"
msgstr ""
"`--porcelain` オプションも `--incremental` オプションも指定されていない場合、"
"`git Blame` は各行の注釈を以下のとおり出力します:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:103
msgid "abbreviated object name for the commit the line came from;"
msgstr "行の元となったコミットのオブジェクトの省略名"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:105
msgid ""
"author ident (by default author name and date, unless `-s` or `-e` is "
"specified); and"
msgstr ""
"作者ID (`-s` または `-e` が指定されていない限り、デフォルトでは作者名と日付)"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:106
msgid "line number"
msgstr "行番号"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:108
msgid "before the line contents."
msgstr "上記を行の内容の前に表示します。"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:110
#, no-wrap
msgid "THE PORCELAIN FORMAT"
msgstr "THE PORCELAIN FORMAT(磁器形式)"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:114
msgid ""
"In this format, each line is output after a header; the header at the "
"minimum has the first line which has:"
msgstr ""
"この形式では、各行はヘッダーの後に出力されます。 少なくともヘッダーには、以下"
"のような最初の行があります:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:116
msgid "40-byte SHA-1 of the commit the line is attributed to;"
msgstr "その行が属するコミットの40バイトのSHA-1;"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:117
msgid "the line number of the line in the original file;"
msgstr "元のファイルの行の行番号;"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:118
msgid "the line number of the line in the final file;"
msgstr "最終ファイルの行の行番号;"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:121
msgid ""
"on a line that starts a group of lines from a different commit than the "
"previous one, the number of lines in this group.  On subsequent lines this "
"field is absent."
msgstr ""
"前のコミットとは異なるコミットからの行のグループを開始する行においては、その"
"グループの行数。以降の行では、このフィールドはありません。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:124
msgid ""
"This header line is followed by the following information at least once for "
"each commit:"
msgstr ""
"このヘッダー行の後には、コミットごとに少なくとも1回は以下の情報が続きます:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:128
msgid ""
"the author name (\"author\"), email (\"author-mail\"), time (\"author-"
"time\"), and time zone (\"author-tz\"); similarly for committer."
msgstr ""
"author name (\"author\") と email (\"author-mail\") と time (\"author-"
"time\") と time zone (\"author-tz\"); コミッターも同様。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:129
msgid "the filename in the commit that the line is attributed to."
msgstr "その行が属するコミット内のファイル名。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:130
msgid "the first line of the commit log message (\"summary\")."
msgstr "コミットログメッセージの最初の行(\"summary\")。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:134
msgid ""
"The contents of the actual line is output after the above header, prefixed "
"by a TAB. This is to allow adding more header elements later."
msgstr ""
"実際の行の内容は、上記のヘッダーの後にTABが前に付いて出力されます。 これは、"
"後でヘッダー要素を追加できるようにするためです。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:142
msgid ""
"The porcelain format generally suppresses commit information that has "
"already been seen. For example, two lines that are blamed to the same commit "
"will both be shown, but the details for that commit will be shown only once. "
"This is more efficient, but may require more state be kept by the reader. "
"The `--line-porcelain` option can be used to output full commit information "
"for each line, allowing simpler (but less efficient)  usage like:"
msgstr ""
"磁器形式(porcelain format)は、一般的に、既視のコミット情報を抑制します。 たと"
"えば、同じコミットのせいにされた2行が両方とも表示されますが、そのコミットの詳"
"細は1回だけ表示されます。これはより効率的ですが、リーダーがより多くの状態を保"
"持する必要がある場合があります。 `--line-porcelain` オプションを使用すると、"
"各行の完全なコミット情報を出力できるため、以下のように単純な(ただし効率の低"
"い)使用法が可能になります:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:147
#, no-wrap
msgid ""
"\t# count the number of lines attributed to each author\n"
"\tgit blame --line-porcelain file |\n"
"\tsed -n 's/^author //p' |\n"
"\tsort | uniq -c | sort -rn\n"
msgstr ""
"\t# count the number of lines attributed to each author\n"
"\tgit blame --line-porcelain file |\n"
"\tsed -n 's/^author //p' |\n"
"\tsort | uniq -c | sort -rn\n"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:150
#, no-wrap
msgid "SPECIFYING RANGES"
msgstr "SPECIFYING RANGES"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:156
msgid ""
"Unlike 'git blame' and 'git annotate' in older versions of git, the extent "
"of the annotation can be limited to both line ranges and revision ranges. "
"The `-L` option, which limits annotation to a range of lines, may be "
"specified multiple times."
msgstr ""
"古いバージョンのgitの `git blame` や `git annotate` と異なり、注釈の範囲は行"
"範囲とリビジョン範囲の両方で制限できます。注釈を行の範囲に制限する `-L` オプ"
"ションは、複数回指定できます。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:161
msgid ""
"When you are interested in finding the origin for lines 40-60 for file "
"`foo`, you can use the `-L` option like so (they mean the same thing -- both "
"ask for 21 lines starting at line 40):"
msgstr ""
"あなたがファイル `foo` の40〜60行目の行の原初を見つけることに関心がある場合"
"は、以下のように `-L` オプションを使用できます(2行とも同じ意味です。どちらも"
"40行目から21行を要求します):"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:164
#, no-wrap
msgid ""
"\tgit blame -L 40,60 foo\n"
"\tgit blame -L 40,+21 foo\n"
msgstr ""
"\tgit blame -L 40,60 foo\n"
"\tgit blame -L 40,+21 foo\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:166
msgid "Also you can use a regular expression to specify the line range:"
msgstr "また、正規表現を使用して行範囲を指定することもできます:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:168
#, no-wrap
msgid "\tgit blame -L '/^sub hello {/,/^}$/' foo\n"
msgstr "\tgit blame -L '/^sub hello {/,/^}$/' foo\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:170
msgid "which limits the annotation to the body of the `hello` subroutine."
msgstr "これは、注釈を `hello` サブルーチンの本体に制限します。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:174
msgid ""
"When you are not interested in changes older than version v2.6.18, or "
"changes older than 3 weeks, you can use revision range specifiers similar to "
"'git rev-list':"
msgstr ""
"あなたがバージョンv2.6.18より古い変更、または3週間より古い変更に関心がない場"
"合は、 `git rev-list` のようにリビジョン範囲指定子を使用できます:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:177
#, no-wrap
msgid ""
"\tgit blame v2.6.18.. -- foo\n"
"\tgit blame --since=3.weeks -- foo\n"
msgstr ""
"\tgit blame v2.6.18.. -- foo\n"
"\tgit blame --since=3.weeks -- foo\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:183
msgid ""
"When revision range specifiers are used to limit the annotation, lines that "
"have not changed since the range boundary (either the commit v2.6.18 or the "
"most recent commit that is more than 3 weeks old in the above example) are "
"blamed for that range boundary commit."
msgstr ""
"リビジョン範囲指定子を使用して注釈を制限すると、範囲境界以降に変更されていな"
"い行(上記の例で、コミットv2.6.18 または 3週間以上経過した最新のコミットのいず"
"れか)は、その範囲境界のコミットのblameになります。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:189
msgid ""
"A particularly useful way is to see if an added file has lines created by "
"copy-and-paste from existing files.  Sometimes this indicates that the "
"developer was being sloppy and did not refactor the code properly.  You can "
"first find the commit that introduced the file with:"
msgstr ""
"特に便利な方法は、追加されたファイルに、既存のファイルからコピペして作成され"
"た行があるかどうかを確認することです。 これは、開発者がだらしなく、コードを適"
"切にリファクタリングしなかったことを示している場合があります。 最初に、ファイ"
"ルを導入したコミットを以下のように見つけることができます:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:191
#, no-wrap
msgid "\tgit log --diff-filter=A --pretty=short -- foo\n"
msgstr "\tgit log --diff-filter=A --pretty=short -- foo\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:194
msgid ""
"and then annotate the change between the commit and its parents, using "
"`commit^!` notation:"
msgstr ""
"次に、 `commit^!` 表記を使用して、コミットとその親の間の変更に注釈を付けます:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:196
#, no-wrap
msgid "\tgit blame -C -C -f $commit^! -- foo\n"
msgstr "\tgit blame -C -C -f $commit^! -- foo\n"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:199
#, no-wrap
msgid "INCREMENTAL OUTPUT"
msgstr "INCREMENTAL OUTPUT"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:206
msgid ""
"When called with `--incremental` option, the command outputs the result as "
"it is built.  The output generally will talk about lines touched by more "
"recent commits first (i.e. the lines will be annotated out of order) and is "
"meant to be used by interactive viewers."
msgstr ""
"`--incremental` オプションを付けて呼び出すと、ビルドした結果を出力します。 出"
"力は一般に、より新しいコミットによって触れられた行から順に語られます(つまり、"
"行の注釈は順不同になります)。これは、対話的なビューアで使用するためのもので"
"す。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:210
msgid ""
"The output format is similar to the Porcelain format, but it does not "
"contain the actual lines from the file that is being annotated."
msgstr ""
"出力形式は磁器形式(Porcelain format)に似ていますが、注釈が付けられているファ"
"イルの実際の行は含まれていません。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:212
msgid "Each blame entry always starts with a line of:"
msgstr "各blame項目は必ず行で始まる:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:214
#, no-wrap
msgid "<40-byte hex sha1> <sourceline> <resultline> <num_lines>\n"
msgstr "<40-byte hex sha1> <sourceline> <resultline> <num_lines>\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:216
msgid "Line numbers count from 1."
msgstr "行番号は1から数えます。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:221
msgid ""
"The first time that a commit shows up in the stream, it has various other "
"information about it printed out with a one-word tag at the beginning of "
"each line describing the extra commit information (author, email, committer, "
"dates, summary, etc.)."
msgstr ""
"コミットがストリームに初めて現れるとき、追加のコミット情報(作成者、電子メー"
"ル、コミッター、日付、要約など)を説明する1語のタグが各行の先頭に出力されて、"
"コミットに関するその他のさまざまな情報が出力されます。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:224
msgid ""
"Unlike the Porcelain format, the filename information is always given and "
"terminates the entry:"
msgstr ""
"磁器形式(Porcelain format)とは異なり、ファイル名情報が常に与えられ、エントリ"
"を終了します:"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:226
#, no-wrap
msgid "\"filename\" <whitespace-quoted-filename-goes-here>\n"
msgstr "\"filename\" <whitespace-quoted-filename-goes-here>\n"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:229
msgid ""
"and thus it is really quite easy to parse for some line- and word-oriented "
"parser (which should be quite natural for most scripting languages)."
msgstr ""
"したがって、一部の行指向および単語指向のパーサーの解析は非常に簡単です(ほとん"
"どのスクリプト言語では非常に自然なはずです)。"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:237
msgid ""
"For people who do parsing: to make it more robust, just ignore any lines "
"between the first and last one (\"<sha1>\" and \"filename\" lines)  where "
"you do not recognize the tag words (or care about that particular one) at "
"the beginning of the \"extended information\" lines. That way, if there is "
"ever added information (like the commit encoding or extended commit "
"commentary), a blame viewer will not care."
msgstr ""
"構文解析を行う人の場合: より堅牢にするために、拡張情報行(extended "
"information lines)の先頭にあるタグワード(またはその特定のものを気にする)を認"
"識できない最初の行と最後の行の間の行(`<sha1>` 行や `filename` 行)はすべて無視"
"してください。 そうすれば、(コミットエンコーディング(commit encoding)や拡張コ"
"ミット解説(extended commit commentary)のような)情報が追加されたとしても、"
"blameビュワーは気にしません。"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:240
#, no-wrap
msgid "MAPPING AUTHORS"
msgstr "MAPPING AUTHORS"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:243
msgid "See linkgit:gitmailmap[5]."
msgstr "linkgit:gitmailmap[5] を参照してください。"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:245
#, no-wrap
msgid "CONFIGURATION"
msgstr "CONFIGURATION"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:252
#, no-wrap
msgid "SEE ALSO"
msgstr "SEE ALSO"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:254
msgid "linkgit:git-annotate[1]"
msgstr "linkgit:git-annotate[1]"

#. type: Title -
#: ../Documentation-sedout/git-blame.txt:256
#, no-wrap
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: ../Documentation-sedout/git-blame.txt:257
msgid "Part of the linkgit:git[1] suite"
msgstr "Part of the linkgit:git[1] suite"
