'\" t
.\"     Title: git-merge-tree
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-MERGE\-TREE" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-merge-tree \- インデックスまたは作業ツリーにに触れずに(without touching)マージを実行する
.SH "SYNOPSIS"
.sp
.nf
\fIgit merge\-tree\fR [\-\-write\-tree] [<options>] <branch1> <branch2>
\fIgit merge\-tree\fR [\-\-trivial\-merge] <base\-tree> <branch1> <branch2> (deprecated)
.fi
.sp
.SH "DESCRIPTION"
.sp
このコマンドには、 モダンな \fB\-\-write\-tree\fR モードと非推奨の \fB\-\-trivial\-merge\fR モードがあります。 最後の DEPRECATED DESCRIPTION セクションを除いて、このドキュメントの残りの部分では、モダンな \fB\-\-write\-tree\fR モードについて説明します。
.sp
マージを実行しますが、新しいコミットは作成せず、作業ツリーまたはインデックスからの読み取りも書き込みも行いません。
.sp
実行されるマージは、 以下を含む、「実際」の \fBgit-merge\fR(1) と同じ機能を使用します:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
個々のファイルの 3 方向のコンテンツ・マージ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
名前変更検出
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
適切な ディレクトリ/ファイル の競合処理
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
再帰的な祖先の統合(つまり、複数のマージ・ベースがある場合、マージ・ベースをマージして仮想マージ・ベースを作成)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
等々。
.RE
.sp
マージが完了すると、新しいトップレベル・ツリー・オブジェクトが作成されます。 詳細については、下記「OUTPUT」を参照してください。
.SH "OPTIONS"
.PP
\fB\-z\fR
.RS 4
<Conflicted file info> セクションでファイル名をクォートしないでください。各ファイル名は、改行(newline)ではなく NUL 文字で終了してください。 また、 改行(newline)の代わりに NUL 文字でメッセージ・セクションを開始します。 詳細については、 下記
the section called \(lqOUTPUT\(rq
を参照してください。
.RE
.PP
\fB\-\-name\-only\fR
.RS 4
競合するファイルの情報(Conflicted file info)セクションでは、競合するファイルの出力に (mode, oid, stage, path) のタプルのリストを書き込む代わりに、 競合するファイル名のリストを提供するだけです(そして、複数の競合するステージがある場合、ファイル名を複数回リストしません)。
.RE
.PP
\fB\-\-[no\-]messages\fR
.RS 4
「Auto\-merging <path>」や CONFLICT 通知などの情報メッセージを stdout の最後に書き込みます。 指定されていない場合、デフォルトでは、マージの競合がある場合はこれらのメッセージが含まれ、そうでない場合は省略されます。
.RE
.PP
\fB\-\-allow\-unrelated\-histories\fR
.RS 4
指定の 2 つのブランチの間に共通の履歴の共有が無い場合、 merge\-tree はデフォルトでエラーになります。 このフラグを指定して、 そのチェックをオーバーライドし、 とにかくマージを続行させることができます。
.RE
.SH "OUTPUT"
.sp
マージが成功した場合、 git\-merge\-tree からの出力は以下の 1 行だけです:
.sp
.if n \{\
.RS 4
.\}
.nf
<OID of toplevel tree>
.fi
.if n \{\
.RE
.\}
.sp
一方、競合するマージの場合、出力はデフォルトでは以下の形式になります:
.sp
.if n \{\
.RS 4
.\}
.nf
<OID of toplevel tree>
<Conflicted file info>
<Informational messages>
.fi
.if n \{\
.RE
.\}
.sp
これらについては、後で個別に説明します。
.SS "OID of toplevel tree"
.sp
これは、 \fBgit merge\fR の最後に作業ツリーでチェックアウトされるものを表すツリー・オブジェクトです。 競合があった場合、このツリー内のファイルには競合マーカーが埋め込まれている可能性があります。 このセクションの後には常に改行(newline)(または \fB\-z\fR が渡された場合は NUL)が続きます。
.SS "Conflicted file info"
.sp
これは、以下の形式の一連の行です
.sp
.if n \{\
.RS 4
.\}
.nf
<mode> <object> <stage> <filename>
.fi
.if n \{\
.RE
.\}
.sp
ファイル名は、 構成変数 \fBcore\&.quotePath\fR で説明されているようにクォートされます(\fBgit-config\fR(1) 参照)。 ただし、 \fB\-\-name\-only\fR オプションが渡された場合、モードとオブジェクトとステージは省略されます。 \fB\-z\fR が渡された場合、「行」は改行文字の代わりに NUL 文字で終了します。
.SS "Informational messages"
.sp
これは常に空行(または \fB\-z\fR が渡された場合は NUL)で始まり、これより前のセクションから区切られていて、その次にマージに関する自由形式のメッセージが続きます:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"Auto\-merging <file>"
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"CONFLICT (rename/delete): <oldfile> renamed\&...but deleted in\&..."
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"Failed to merge submodule <submodule> (<reason>)"
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"Warning: cannot merge binary files: <filename>"
.RE
.sp
注意: \fB\-z\fR が渡された場合でも、これらの自由形式のメッセージには、メッセージ内またはメッセージ間に NUL 文字が含まれないことに注意してください。 これは、出力の残りを占める大きなテキスト・ブロックです。
.SH "EXIT STATUS"
.sp
マージが競合せずに成功した場合、終了ステータス(exit status)は 0 です。 マージに競合がある場合、終了ステータスは 1 です。 何らかのエラーが原因でマージを完了(または開始)できない場合、終了ステータスは 0 や 1 以外の何かになります(そして、出力はありません)。
.SH "USAGE NOTES"
.sp
このコマンドは、 \fBgit-hash-object\fR(1) や \fBgit-mktree\fR(1) や \fBgit-commit-tree\fR(1) や \fBgit-write-tree\fR(1) や \fBgit-update-ref\fR(1) や \fBgit-mktag\fR(1) と同様に、低レベルの配管コマンドとして意図されています。 したがって、以下のような一連のステップの一部として使用できます:
.sp
.if n \{\
.RS 4
.\}
.nf
NEWTREE=$(git merge\-tree \-\-write\-tree $BRANCH1 $BRANCH2)
test $? \-eq 0 || die "There were conflicts\&.\&.\&."
NEWCOMMIT=$(git commit\-tree $NEWTREE \-p $BRANCH1 \-p $BRANCH2)
git update\-ref $BRANCH1 $NEWCOMMIT
.fi
.if n \{\
.RE
.\}
.sp
注意: 終了ステータス(exit status)がゼロ以外の場合、このシーケンスの \fBNEWTREE\fR には単なるツリーよりも多くの出力が含まれることに注意してください。
.sp
競合の場合、出力には \fBgit-merge\fR(1) で得られるものと同じ情報が含まれます:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
作業ツリーに何が書き込まれるか (OID of toplevel tree)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
インデックスに書き込まれる高次ステージ(Conflicted file info)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
stdout に出力されるメッセージ(Informational messages)
.RE
.SH "MISTAKES TO AVOID"
.sp
結果のトップレベル・ツリーを調べて、競合するファイルを見つけようと試みません。 代わりに Conflicted file info セクションをパースします。 大規模なリポジトリではツリー全体のパースが非常に遅くなるだけでなく、競合マーカーで表現できない競合の種類(変更/削除、モードの競合、両側で変更されたバイナリ・ファイル、ファイル/ディレクトリの競合、さまざまな名前変更の競合順列など)が数多くあります
.sp
空の Conflicted file info リストをクリーンなマージ(clean merge)として解釈(interpret)しないでください。終了ステータス(exit status)を確認します。 マージでは、個々のファイルが競合しなくても競合が発生する可能性があります(このカテゴリに分類されるいくつかのタイプのディレクトリ名変更の競合があり、他のものも将来追加される可能性があります)。
.sp
Conflicted file info リストから競合タイプを推測しようとしたり、ユーザーに推測させたりしないでください。 そこにある情報はそうするには不十分です。 例: Rename/rename(1to2) 競合(両側が同一ファイルの名前を別々に名前変更)により、3 つの異なるファイルが上位ステージ (ただし、それぞれ上位ステージは 1 つしかない) になり、 どの 3 つのファイルが関連しているかを (Informational messages セクション以外で、) 判断する方法がありません。 ファイル/ディレクトリの競合によっても、1 つだけ上位ステージを持つファイルが生成されます。 ディレクトリ名の変更に関与する可能性のある(Possibly\-involved\-in\-directory\-rename)競合 ( \fBmerge\&.directoryRenames\fR が設定されていない(unset)か、 あるいは \fBmerge\&.directoryRenames\fR が \fBconflicts\fR に設定されている(set)場合)も、正確に 1 つの上位ステージを持つファイルになります。 すべての場合において、 Informational messages セクションには必要な情報が含まれていますが、プログラムでパースできる(machine parseable)ようには設計されていません。
.sp
Conflicted file info からの各パスと、 Informational messages の論理的競合が 1 対 1 のマッピングを持っている、 または 1 対多のマッピングがあると想定しないでください。 マッピングではなく、 多対 1 のマッピングでもありません。 多対多のマッピングが存在します。つまり、各パスは 1 回のマージで多くの論理競合タイプを持つことができ、各論理競合タイプは多くのパスに影響を与える可能性があります。
.sp
Informational messages セクションにリストされているすべてのファイル名に競合があったと想定しないでください。 「Auto\-merging <file>」など、競合のないファイルにメッセージを含めることができます。
.sp
Conflicted file info から OID を取得し、それらを再マージして競合をユーザーに提示することは避けてください。 これにより、情報が失われます。 代わりに、 OID of toplevel tree 内で見つかったファイルのバージョンを検索し、代わりにそれを表示します。 特に、 後者には、マージされている元の ブランチ/コミット と、名前変更が含まれている場合は元のファイル名で注釈が付けられた競合マーカーがあります。 再マージ時に競合マーカーの注釈に元の ブランチ/コミット を含めることはできますが、 元のファイル名は Conflicted file info から入手できないため、ユーザーが競合を解決するのに役立つ情報を失うことになります。
.SH "DEPRECATED DESCRIPTION"
.sp
DESCRIPTION に従う、このドキュメントの残りの部分とは異なり、このセクションでは非推奨の \fB\-\-trivial\-merge\fR モードについて説明します。
.sp
オプションの \fB\-\-trivial\-merge\fR を除いて、このモードはオプションを受け入れません。
.sp
このモードは 3 つのツリーっぽいものを読み取り、些細なマージ(trivial merge)結果と競合するステージを準差分(semi\-diff)形式で標準出力に出力します。 これは、高レベルのスクリプトがその結果を使用してインデックスにマージするように設計されているため、 <branch1> に一致するエントリが省略されます。 この 2 番目の形式の結果は、 3 方向の \fBgit read\-tree \-m\fR と似ていますが、 結果をインデックスに格納する代わりに、そのコマンドはエントリを標準出力に出力します。
.sp
この形式は適用範囲が限られている(些細なマージ(trivial merge)では、個々のファイルの内容のマージのや、名前変更の検出や、適切な ディレクトリ/ファイル の競合の処理などを扱えません)だけでなく、出力形式も扱いにくく、通常、マージが成功した場合でも最初の形式よりもパフォーマンスが低下します(特に大規模なリポジトリで作業している場合)。
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
