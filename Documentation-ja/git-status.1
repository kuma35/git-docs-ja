'\" t
.\"     Title: git-status
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-STATUS" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-status \- 作業ツリーの状態を表示します
.SH "SYNOPSIS"
.sp
.nf
\fIgit status\fR [<options>\&...] [\-\-] [<pathspec>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
インデックスファイルと現在のHEADコミットの間に違いがあるパスや、作業ツリーとインデックスファイルの間に違いがあるパスや、Gitによって追跡されない(かつ \fBgitignore\fR(5) によって無視されない)作業ツリー内のパスを表示します。1つ目は、 \fBgit commit\fR を実行してコミットすることになるものです。 2番目と3番目は、 \fBgit commit\fR を実行する前に \fBgit add\fR を実行することでコミット可能になるものです。
.SH "OPTIONS"
.PP
\fB\-s\fR, \fB\-\-short\fR
.RS 4
短い形式で出力を提供します。
.RE
.PP
\fB\-b\fR, \fB\-\-branch\fR
.RS 4
短い形式でもブランチと追跡情報を表示します。
.RE
.PP
\fB\-\-show\-stash\fR
.RS 4
現在スタッシュされているエントリの数を表示します。
.RE
.PP
\fB\-\-porcelain[=<version>]\fR
.RS 4
スクリプトの出力を解析しやすい形式(easy\-to\-parse)で提供します。 これは短い出力に似ていますが、Gitのバージョン間で、ユーザー構成に関係なく安定しています。 詳細下記。
.sp
versionパラメーターは、フォーマットバージョンを指定するために使用されます。 これはオプションであり、デフォルトでオリジナルバージョンの「v1」形式になります。
.RE
.PP
\fB\-\-long\fR
.RS 4
長い形式で出力します。 これがデフォルトです。
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
変更されたファイルの名前に加えて、コミットされるようにステージングされたテキストの変更も表示します(つまり、
\fBgit diff \-\-cached\fR
の出力風です)。
\fB\-v\fR
が2回指定されている場合は、まだステージングされていない作業ツリーの変更も表示します(つまり、
\fBgit diff\fR
の出力風です)。
.RE
.PP
\fB\-u[<mode>]\fR, \fB\-\-untracked\-files[=<mode>]\fR
.RS 4
追跡されていないファイル(untracked files)を表示します。
.sp
modeパラメーターは、追跡されていないファイルの処理を指定するために使用されます。 これはオプションです。デフォルトは
\fBall\fR
であり、指定する場合は、オプションに串刺しする必要があります(たとえば、
\fB\-u no\fR
ではなく
\fB\-uno\fR)。
.PP
可能なオプションは以下のとおりです
.RS 4
.PP
\fBno\fR
.RS 4
追跡されていないファイル(untracked files)を表示します。
.RE
.PP
\fBnormal\fR
.RS 4
追跡されていないファイルとディレクトリを表示します。
.RE
.PP
\fBall\fR
.RS 4
追跡されていないディレクトリ内の個々のファイルも表示します。
.RE
.RE
.sp
\fB\-u\fR
オプションを使用しない場合、追跡されていないファイルとディレクトリが表示され(つまり、
\fBnormal\fR
を指定するのと同じ)、新しく作成されたファイルを追加するのを忘れないようにします。 ファイルシステムで、追跡されていないファイルを見つけるには余分な作業が必要なため、このモードは大きな作業ツリーでは時間がかかる場合があります。 サポートされている場合は、追跡されていないキャッシュと分割インデックスを有効にすることを検討してください(\fBgit update\-index \-\-untracked\-cache\fR
と
\fBgit update\-index \-\-split\-index\fR
を参照)。そうでない場合は、
\fBno\fR
を使用して、追跡されていないファイルを表示せずに
\fBgit status\fR
からより迅速に返ることができます。
.sp
デフォルトは、
\fBgit-config\fR(1)
に記載されている status\&.showUntrackedFiles 構成変数を使用して変更できます。
.RE
.PP
\fB\-\-ignore\-submodules[=<when>]\fR
.RS 4
変更を探すときは、サブモジュールへの変更を無視します。 <when> は、「none」、「untracked」、「dirty」、「all」のいずれかになります。「all」がデフォルトです。 「none」を使用すると、追跡されていないファイルまたは変更されたファイルが含まれている場合、またはそのHEADがスーパープロジェクトに記録されているコミットと異なる場合にサブモジュールが変更されたと見なされ、
\fBgit-config\fR(1)
または
\fBgitmodules\fR(5)
の「ignore」オプションの設定をオーバーライドするために使用できます。 「untracked」が使用されている場合、サブモジュールには追跡されていないコンテンツのみが含まれている場合、サブモジュールはダーティとは見なされません(ただし、変更されたコンテンツはスキャンされます)。 「dirty」を使用すると、サブモジュールの作業ツリーへのすべての変更が無視され、スーパープロジェクトに格納されているコミットへの変更のみが表示されます(これは1\&.7\&.0より前の振る舞いでした)。 「all」を使用すると、サブモジュールへのすべての変更が非表示になります(また、構成オプション
\fBstatus\&.submoduleSummary\fR
が設定されている場合、サブモジュールの要約の出力が抑制されます)。
.RE
.PP
\fB\-\-ignored[=<mode>]\fR
.RS 4
無視されたファイル(ignored files)も表示します。
.sp
modeパラメーターは、無視されたファイル(ignored files)の処理を指定するために使用されます。 これはオプションです。デフォルトは
\fBtraditional\fR
です。
.PP
可能なオプションは以下のとおりです
.RS 4
.PP
\fBtraditional\fR
.RS 4
\fB\-\-untracked\-files=all\fR
が指定されていない限り、無視されたファイルとディレクトリを表示します。指定されている場合、無視されたディレクトリ内の個々のファイルが表示されます。
.RE
.PP
\fBno\fR
.RS 4
無視されたファイル(ignored files)を表示しません。
.RE
.PP
\fBmatching\fR
.RS 4
無視パターンにマッチする、無視されたファイルとディレクトリを表示します。
.RE
.RE
.sp
\fBmatching\fR
モードが指定されている場合、無視されたパターンに明示的にマッチするパスが表示されます。 ディレクトリが無視パターンにマッチする場合、それは表示されますが、無視されたディレクトリに含まれるパスは表示されません。 ディレクトリが無視パターンにマッチしないが、すべてのコンテンツが無視される場合、ディレクトリは表示されませんが、すべてのコンテンツが表示されます。
.RE
.PP
\fB\-z\fR
.RS 4
LFではなくNULでエントリを終了します。 これは、他の形式が指定されていない場合、
\fB\-\-porcelain=v1\fR
出力形式の指定を含んでいます。
.RE
.PP
\fB\-\-column[=<options>]\fR, \fB\-\-no\-column\fR
.RS 4
追跡されていないファイルを列(columns)に表示します。 オプションの構文については、構成変数
\fBcolumn\&.status\fR
を参照してください。 オプションのない
\fB\-\-column\fR
と
\fB\-\-no\-column\fR
は、それぞれ
\fBalways\fR
と
\fBnever\fR
と同等です。
.RE
.PP
\fB\-\-ahead\-behind\fR, \fB\-\-no\-ahead\-behind\fR
.RS 4
アップストリームブランチに関連するブランチの詳細な 先行(ahead)/遅延(behind) カウントを、表示するか、または、表示しない。 デフォルトはtrueです。
.RE
.PP
\fB\-\-renames\fR, \fB\-\-no\-renames\fR
.RS 4
ユーザー構成に関係なく、名前変更検出の オン/オフ を切り替えます。
\fBgit-diff\fR(1)
の
\fB\-\-no\-renames\fR
も参照してください。
.RE
.PP
\fB\-\-find\-renames[=<n>]\fR
.RS 4
名前変更の検出をオンにし、オプションで類似性のしきい値を設定します。
\fBgit-diff\fR(1)
の
\fB\-\-find\-renames\fR
も参照してください。
.RE
.PP
<pathspec>\&...
.RS 4
\fBgitglossary\fR(7)
の「pathspec」エントリを参照してください。
.RE
.SH "OUTPUT"
.sp
このコマンドの出力は、コミットテンプレートのコメントとして使用するように設計されています。 デフォルトの長い形式は、人間が読める形式で、冗長で説明的なものになるように設計されています。 その内容と形式は予告なく変更される事があります。
.sp
他の多くのGitコマンドとは異なり、出力に記載されているパスは、サブディレクトリで作業している場合、現在のディレクトリを基準にして作成されます(これは、カット＆ペーストを支援するための意図的なものです)。 下記 status\&.relativePaths 構成オプションを参照してください。
.SS "Short Format"
.sp
短い形式では、各パスのステータスがこれらの形式の1つとして表示されます
.sp
.if n \{\
.RS 4
.\}
.nf
XY PATH
XY ORIG_PATH \-> PATH
.fi
.if n \{\
.RE
.\}
.sp
ここで、 \fBORIG_PATH\fR は、名前が 変更/コピー されたコンテンツの出所です。 \fBORIG_PATH\fR は、エントリの名前が変更またはコピーされた場合にのみ表示されます。 \fBXY\fR は2文字のステータスコードです。
.sp
フィールド(\fB\->\fR を含む)は、単一のスペースで互いに区切られています。 ファイル名に空白またはその他の印刷不可能な文字が含まれている場合、そのフィールドはC文字列リテラルの方法でクォートされます。ASCII二重引用符(34)キャラクタ(\fB"\fR)で囲まれ、内部の特殊文字はバックスラッシュ(\fB\e\fR)でエスケープされます。
.sp
この形式を使用して表示される状態には3つの異なるタイプがあり、それぞれが「XY」構文を異なる方法で使用します:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
マージが発生していてマージが成功した場合、またはマージ状況以外の場合、
\fBX\fR
はインデックスのステータスを示し、\fBY\fR
は作業ツリーのステータスを示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
マージの競合が発生し、まだ解決されていない場合、
\fBX\fR
と
\fBY\fR
は、共通の祖先と比較して、マージの各ヘッドによって導入された状態を示します。 これらのパスは「unmerged」と言われます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パスが追跡されていない場合、
\fBX\fR
と
\fBY\fR
はインデックスで不明(unknown)であるため、常に同一です。
\fB??\fR
は追跡されていないパスに使用されます。
\fB\-\-ignored\fR
が使用されない限り、無視されたファイルはリストされません。
\fB\-\-ignored\fR
が使用された場合、無視されたファイルは
\fB!!\fR
で示されます。
.RE
.sp
ここでのマージという用語には、デフォルトの `\-\-merge`戦略を使用したリベースや、チェリーピックや、マージ機構を使用したその他のものも含まれることに注意してください。
.sp
以下の表では、これら3つのクラスが別々のセクションに示されています。これらの文字は、追跡されたパスを示す最初の2つのセクションの \fBX\fR フィールドと \fBY\fR フィールドに使用されます。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
" " = 変更されていない
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBM\fR
= 変更された
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBT\fR
= ファイル・タイプが変更された(通常ファイル(regular file)またはシンボリック・リンク(symbolic link)またはサブモジュール(submodule))
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBA\fR
= 追加された
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBD\fR
= 削除された
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBR\fR
= 名前変更された
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBC\fR
= コピーされた (構成オプション
\fBstatus\&.renames\fR
が
\fBcopies\fR
に設定されている場合)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBU\fR
= 更新されたがマージされていない
.RE
.sp
.if n \{\
.RS 4
.\}
.nf
X          Y     Meaning
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
         [AMD]   not updated
M        [ MTD]  updated in index
T        [ MTD]  type changed in index
A        [ MTD]  added to index
D                deleted from index
R        [ MTD]  renamed in index
C        [ MTD]  copied in index
[MTARC]          index and work tree matches
[ MTARC]    M    work tree changed since index
[ MTARC]    T    type changed in work tree since index
[ MTARC]    D    deleted in work tree
            R    renamed in work tree
            C    copied in work tree
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
D           D    unmerged, both deleted
A           U    unmerged, added by us
U           D    unmerged, deleted by them
U           A    unmerged, added by them
D           U    unmerged, deleted by us
A           A    unmerged, both added
U           U    unmerged, both modified
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
?           ?    untracked
!           !    ignored
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.if n \{\
.RE
.\}
.PP
サブモジュールにはより多くの状態があり、代わりのレポートがあります
.RS 4
.PP
M
.RS 4
サブモジュールには、インデックスに記録されているものとは異なるHEADがあります
.RE
.PP
m
.RS 4
サブモジュールに変更されたコンテンツがあります
.RE
.PP
?
.RS 4
サブモジュールに追跡されていないファイル(untracked files)があります
.RE
.RE
.sp
これは、サブモジュール内の、変更されたコンテンツ、または、追跡されていないファイルは、コミットを準備するためにスーパープロジェクトの \fBgit add\fR を介して追加できないためです。
.sp
\fBm\fR と \fB?\fR は再帰的に適用されます。 たとえば、サブモジュール内のネストされたサブモジュールに、追跡されていないファイルが含まれている場合、これは同様に \fB?\fR として報告されます。
.sp
\fB\-b\fR が使用されている場合、短い形式のステータスの前に行が表示されます
.sp
.if n \{\
.RS 4
.\}
.nf
## branchname tracking info
.fi
.if n \{\
.RE
.\}
.SS "Porcelain Format Version 1"
.sp
バージョン 1 の磁器形式(porcelain format)は短い形式に似ていますが、Gitバージョン間またはユーザー構成に基づいて後方互換性のない方法で変更されないことが保証されています。 これにより、スクリプトによる解析に最適です。 上記の短い形式の説明では、いくつかの例外を除いて、磁器形式についても説明しています:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
ユーザーの color\&.status 構成は尊重されません。 色は常にオフになります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
ユーザーの status\&.relativePaths 構成は尊重されません。 表示されるパスは、常にリポジトリルートを基準にしています。
.RE
.sp
機械的パースで推奨される 代替 \fB\-z\fR 形式もあります。 この形式では、ステータスフィールドは同じですが、他のいくつかの点が異なります。 まず、名前変更エントリから \fB\->\fR が省略され、フィールドの順序が逆になります(たとえば、\fBfrom \-> to\fR は \fBto from\fR になります)。 次に、 NUL(ASCII 0)が各ファイル名の後に続き、スペースをフィールド区切り文字として置き換え、改行で終了します(ただし、スペースはステータスフィールドを最初のファイル名から分離します)。 第三に、特殊文字を含むファイル名は特別にフォーマットされません。 クォートや、バックスラッシュのエスケープは実行されません。
.sp
サブモジュールの変更は、 \fBm\fR または 単一の \fB?\fR ではなく、変更された \fBM\fR として報告されます。
.SS "Porcelain Format Version 2"
.sp
バージョン2形式では、ワークツリーの状態と変更されたアイテムに関するより詳細な情報が追加されます。 バージョン2では、パースが容易なオプションのヘッダーの拡張可能なセットも定義されています。
.sp
ヘッダー行は \fB#\fR で始まり、特定のコマンドライン引数に応じて追加されます。 パーサーは、認識できないヘッダーを無視する必要があります。
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBBranch Headers\fR
.RS 4
.sp
\fB\-\-branch\fR を指定すると、一連のヘッダー行に現在のブランチに関する情報が出力されます。
.sp
.if n \{\
.RS 4
.\}
.nf
Line                                     Notes
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
# branch\&.oid <commit> | (initial)        Current commit\&.
# branch\&.head <branch> | (detached)      Current branch\&.
# branch\&.upstream <upstream_branch>      If upstream is set\&.
# branch\&.ab +<ahead> \-<behind>           If upstream is set and
                                         the commit is present\&.
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBStash Information\fR
.RS 4
.sp
\fB\-\-show\-stash\fR が指定された場合に、スタッシュエントリの数が非ゼロの場合、スタッシュ・エントリの数を示す 1 行が出力されます:
.sp
.if n \{\
.RS 4
.\}
.nf
# stash <N>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBChanged Tracked Entries\fR
.RS 4
.sp
ヘッダーに続いて、追跡されたエントリの一連の行が印刷されます。 変更の種類に応じて、3つの異なる行形式のいずれかを使用してエントリを記述することができます。 追跡されたエントリは、未定義の順序で印刷されます。 パーサーは、3つの行タイプを任意の順序で混合できるようにする必要があります。
.sp
通常の、変更されたエントリの形式は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
1 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <path>
.fi
.if n \{\
.RE
.\}
.sp
名前変更またはコピーされたエントリの形式は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
2 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <X><score> <path><sep><origPath>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Field       Meaning
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
<XY>        short formatで記述されたステージされたXY値と
            ステージされていないXY値を含む2文字のフィー
            ルドで、変更されていない場合は空白
            ではなく "\&." で示されます。
<sub>       サブモジュールの状態説明の4文字フィールド。
            "N\&.\&.\&." when the entry is not a submodule\&.
            "S<c><m><u>" when the entry is a submodule\&.
            <c> is "C" if the commit changed; それ以外 "\&."\&.
            <m> is "M" if it has tracked changes; それ以外 "\&."\&.
            <u> is "U" if there are untracked changes; それ以外 "\&."\&.
<mH>        The octal file mode in HEAD\&.
<mI>        The octal file mode in the index\&.
<mW>        The octal file mode in the worktree\&.
<hH>        The object name in HEAD\&.
<hI>        The object name in the index\&.
<X><score>  The rename or copy score (移動またはコピーのソースと
            ターゲット間の類似性のパーセンテージを示します)
            例 "R100" or "C75"\&.
<path>      The pathname\&.  In a renamed/copied entry, this
            is the target path\&.
<sep>       When the `\-z` option is used, the 2 pathnames are separated
            with a NUL (ASCII 0x00) byte; otherwise, a tab (ASCII 0x09)
            byte separates them\&.
<origPath>  HEADでのコミットまたはインデックス内のパス名。
            これは、名前が 変更された/コピーされた エントリに
            のみ存在し、名前が変更された/コピーされた
            コンテンツがどこから来たかを示します。
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.if n \{\
.RE
.\}
.sp
アンマージエントリの形式は以下のとおりです。 最初の文字は、通常の変更されたエントリと区別するための「u」です。
.sp
.if n \{\
.RS 4
.\}
.nf
u <XY> <sub> <m1> <m2> <m3> <mW> <h1> <h2> <h3> <path>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Field       Meaning
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
<XY>        A 2 character field describing the conflict type
            as described in the short format\&.
<sub>       A 4 character field describing the submodule state
            as described above\&.
<m1>        The octal file mode in stage 1\&.
<m2>        The octal file mode in stage 2\&.
<m3>        The octal file mode in stage 3\&.
<mW>        The octal file mode in the worktree\&.
<h1>        The object name in stage 1\&.
<h2>        The object name in stage 2\&.
<h3>        The object name in stage 3\&.
<path>      The pathname\&.
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBOther Items\fR
.RS 4
.sp
追跡されたエントリに続いて(そして要求された場合)、ワークツリーで見つかった追跡されてない項目と無視される項目に対して、一連の行を出力します。
.sp
追跡されていないアイテムの形式は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
? <path>
.fi
.if n \{\
.RE
.\}
.sp
無視されるアイテムの形式は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
! <path>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBパス名の形式に関する注意と -z\fR
.RS 4
.sp
\fB\-z\fR オプションを指定すると、パス名はクォートされずにそのまま出力され、行はNUL(ASCII 0x00)バイトで終了します。
.sp
\fB\-z\fR オプションを指定しない場合、構成変数 \fBcore\&.quotePath\fR で説明されているように、「異常な」文字を含むパス名がクォートされます(\fBgit-config\fR(1) を参照)。
.RE
.SH "CONFIGURATION"
.sp
このコマンドは、 \fBcolor\&.status\fR (または \fBstatus\&.color\fR \(em 同じことを意味し、\fBstatus\&.color\fR は下位互換性のために保持されます)と \fBcolor\&.status\&.<slot>\fR 構成変数を尊重して出力を色付けします。
.sp
構成変数 \fBstatus\&.relativePaths\fR がfalseに設定されている場合、表示されるすべてのパスは、現在のディレクトリではなく、リポジトリルートを基準にしています。
.sp
\fBstatus\&.submoduleSummary\fR がゼロ以外の数値またはtrue(それぞれ \-1 または 無制限の数値 と同じ)に設定されている場合、サブモジュールの概要が長い形式で有効になり、変更されたサブモジュールのコミットの概要が表示されます(\fBgit-submodule\fR(1) の \fB\-\-summary\-limit\fR 参照)。 \fBdiff\&.ignoreSubmodules\fR が \fBall\fR に設定されている場合、または \fBsubmodule\&.<name>\&.ignore=all\fR であるサブモジュールに対してのみ、statusコマンドからの要約出力が抑制されることに注意してください。 無視されたサブモジュールの概要も表示するには、 \fB\-\-ignore\-submodules=dirty\fR マンドラインオプションまたは \fBgit submodule summary\fR コマンドを使用できます。これは同様の出力を表示しますが、これらの設定を尊重しません。
.SH "BACKGROUND REFRESH"
.sp
デフォルトでは、 \fBgit status\fR は自動的にインデックスを更新し、作業ツリーからキャッシュされた統計情報を更新し、結果を書き出します。 更新されたインデックスを書き出すことは、厳密には必要ではない最適化です(\fBstatus\fR はそれ自体の値を計算しますが、それらを書き出すことは、後続のプログラムが計算を繰り返さないようにするためだけです)。 \fBstatus\fR がバックグラウンドで実行されると、書き込み中に保持されたロックが他の同時プロセスと競合し、それらが失敗する可能性があります。 バックグラウンドで \fBstatus\fR を実行しているスクリプトは、 \fBgit \-\-no\-optional\-locks status\fR の使用を検討する必要があります(詳細については、 \fBgit\fR(1) を参照してください)。
.SH "SEE ALSO"
.sp
\fBgitignore\fR(5)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
