'\" t
.\"     Title: scalar
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "SCALAR" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
scalar \- 大規模 Git リポジトリ管理ツール
.SH "SYNOPSIS"
.sp
.nf
scalar clone [\-\-single\-branch] [\-\-branch <main\-branch>] [\-\-full\-clone] <url> [<enlistment>]
scalar list
scalar register [<enlistment>]
scalar unregister [<enlistment>]
scalar run ( all | config | commit\-graph | fetch | loose\-objects | pack\-files ) [<enlistment>]
scalar reconfigure [ \-\-all | <enlistment> ]
scalar diagnose [<enlistment>]
scalar delete <enlistment>
.fi
.sp
.SH "DESCRIPTION"
.sp
Scalar は、 大規模なリポジトリで使用するために Git を最適化するリポジトリ管理ツールです。 Scalar は、 高度な Git 設定を構成し、 バックグラウンドでリポジトリを保守し、 ネットワーク経由で送信されるデータを削減することで、 パフォーマンスを向上させます。
.sp
Scalar の重要な発想が enlistment です。 enlistment はプロジェクトの最上位ディレクトリで、 通常、 Gitワークツリーであるサブディレクトリ \fBsrc/\fR を含んでいます。 これにより、 追跡対象のファイル (\fBsrc/\fR 内) と、 ビルド生成物 (\fBsrc/\fR の外部) などの追跡対象外のファイルとの分離が促進されます。 名前が \fBsrc\fR ではない既存の Git ワークツリーを Scalar に登録(register)すると、 enlistment はワークツリーと同等になります。
.sp
\fBscalar\fR コマンドは、さまざまなサブコマンドと、 サブコマンドに応じたさまざまなオプションを実装します。 \fBclone\fR と \fBlist\fR と \fBreconfigure \-\-all\fR を除いて、 すべてのサブコマンドは enlistment の下で実行されることを想定しています。
.sp
以下のオプションはサブコマンドの「前で」指定可能です:
.PP
\fB\-C <directory>\fR
.RS 4
サブコマンドを実行する前に、 作業ディレクトリ(working directory)を変更してください。 このオプションは、
\fBgit\fR(1)
の同じオプションを模倣します。
.RE
.PP
\fB\-c <key>=<value>\fR
.RS 4
指定したサブコマンドを実行している間、 この設定を構成(configure)します。 このオプションは、
\fBgit\fR(1)
の同じオプションを模倣します。
.RE
.SH "COMMANDS"
.SS "Clone"
.PP
\fBclone [<options>] <url> [<enlistment>]\fR
.RS 4
\fBgit-clone\fR(1)
と同様に、 指定のリポジトリのクローンを作成します。 デフォルトでは、 コミットおよびツリー・オブジェクトのみがクローンされます。 完了すると、 ワークツリーは
\fB<enlistment>/src\fR
に配置されます。
.sp
(\fB\-\-full\-clone\fR
で実行した場合を除き、)スパース・チェックアウト機能が有効になり、存在するファイルは最上位ディレクトリにあるファイルのみです。
\fBgit sparse\-checkout set\fR
を使用してあなたが表示したいディレクトリのセットを展開するか、 または
\fBgit sparse\-checkout disable\fR
を使用してすべてのファイルを展開します(詳細については、
\fBgit-sparse-checkout\fR(1)
を参照してください)。
\fBgit ls\-tree HEAD[:<directory>]\fR
を使用して、 あなたのスパースチェックアウトの外側のサブディレクトリを調べることができます。
.RE
.PP
\fB\-b <name>\fR, \fB\-\-branch <name>\fR
.RS 4
クローンされたリポジトリの HEAD が指すブランチをチェックアウトする代わりに、
\fB<name>\fR
ブランチをチェックアウトします。
.RE
.PP
\fB\-\-[no\-]single\-branch\fR
.RS 4
\fB\-\-branch\fR
オプションで指定されるか、 プライマリ・ブランチ・リモートの
\fBHEAD\fR
が指す、 単一のブランチの先端につながる履歴のみをクローンします。
.sp
結果のリポジトリへの更なるフェッチは、 最初のクローン作成時に、このオプションが使われたブランチのリモート追跡ブランチのみが更新されます。
\fB\-\-single\-branch\fR
クローンが作成されたときに、 リモートの HEAD がどのブランチも指していなかった場合、 リモート追跡ブランチは作成されません。
.RE
.PP
\fB\-\-[no\-]full\-clone\fR
.RS 4
デフォルトでスパース・チェックアウトは初期化(initialized)されます。 この動作は、
\fB\-\-full\-clone\fR
でオフにすることができます。
.RE
.SS "List"
.PP
list
.RS 4
Scalar によって現在登録(register)されている enlistment を一覧表示します。 このサブコマンドは、 enlistment 内で実行する必要はありません。
.RE
.SS "Register"
.PP
\fBregister [<enlistment>]\fR
.RS 4
enlistment のリポジトリを登録済みリポジトリ(registered repositories)のリストに追加し、 バックグラウンド・メンテナンスを開始します。
\fB<enlistment>\fR
が指定されていない場合、 現在の作業ディレクトリに関連付けられた enlistment が登録(registere)されます。
.sp
注意: このサブコマンドが
\fBsrc/\fR
と呼ばれるワークツリーで呼び出されると、 その親ディレクトリは Scalar enlistment と見なされます。 ワークツリーが
\fBsrc/\fR
と呼ばれ「無い」場合、それ自体が Scalar enlistment であると見なされます。
.RE
.SS "Unregister"
.PP
\fBunregister [<enlistment>]\fR
.RS 4
Scalar に登録(register)されているリポジトリのリストから指定されたリポジトリを削除し、 スケジュールされたバックグラウンド・メンテナンスを停止します。
.RE
.SS "Run"
.PP
\fBscalar run ( all | config | commit\-graph | fetch | loose\-objects | pack\-files ) [<enlistment>]\fR
.RS 4
指定されたメンテナンス・タスク (\fBall\fR
が指定されている場合はすべてのタスク) を実行します。 このサブコマンドは
\fBall\fR
と
\fBconfig\fR
を除いて、 単純に
\fBgit-maintenance\fR(1)
に渡します (\fBfetch\fR
を
\fBprefetch\fR
に、
\fBpack\-files\fR
を
\fBincremental\-repack\fR
にマッピングします)。
.sp
これらのタスクは、リポジトリが Scalar に登録されるとすぐに、スケジュールされたメンテナンスの一部として自動的に実行されます。 したがって、このサブコマンドを手動で実行する必要はありません。
.sp
\fBconfig\fR
タスクは Scalar 固有であり、 Git が大規模なリポジトリでより効率的に動作するように、 独自のデフォルト設定のすべてを構成します。 このタスクは
\fBscalar clone\fR
の一部として自動的に実行されるため、 このタスクを明示的に呼び出す必要はほとんどありません。
.RE
.SS "Reconfigure"
.sp
Scalar のアップグレード後、または Scalar enlistment の構成が何らかの形で破損または誤って変更された場合、 このサブコマンドを使用して enlistment を再構成できます。
.sp
\fB\-\-all\fR オプションを使用すると、 現在 Scalar に登録されているすべての enlistment が再構成されます。 Scalar アップグレード後毎にこのオプションを使用します。
.SS "Diagnose"
.PP
\fBdiagnose [<enlistment>]\fR
.RS 4
Scalar に関する問題を報告する場合、 現在の enlistment のデータ形状を説明するログや特定の統計など、 このコマンドによって収集された情報を提供すると役立つことがよくあります。
.sp
このコマンドの出力は、
\fBsrc\fR
ディレクトリのワークツリーに隣接するディレクトリに書き込まれる
\fB\&.zip\fR
ファイルです。
.RE
.SS "Delete"
.PP
\fBdelete <enlistment>\fR
.RS 4
このサブコマンドを使用すると、 ローカル・ファイル・システムから既存の Scalar enlistment を削除して、 リポジトリを登録解除(unregister)できます。
.RE
.SH "SEE ALSO"
.sp
\fBgit-clone\fR(1), \fBgit-maintenance\fR(1)\&.
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
