'\" t
.\"     Title: git-sh-setup
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-SH\-SETUP" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-sh-setup \- 一般的なGitシェルスクリプトのセットアップコード
.SH "SYNOPSIS"
.sp
.nf
\fI\&. "$(git \-\-exec\-path)/git\-sh\-setup"\fR
.fi
.sp
.SH "DESCRIPTION"
.sp
これは、エンドユーザーが実行するコマンドではありません。この文書は、磁器風のスクリプトを研究している、および/または 新しいスクリプトを書いている人々を対象としています。
.sp
\fIgit sh\-setup\fR スクリプトレットは、他のシェルスクリプトから( \fB\&.\fR を使用して)実行(source)され、通常のGitディレクトリと、いくつかのヘルパーシェル関数を指す、いくつかの環境変数を設定するように設計されています。
.sp
実行(source)前に、スクリプトでいくつかの環境変数を設定する必要があります。\fBUSAGE\fR (および存在する場合は \fBLONG_USAGE\fR )は、 \fBusage()\fR シェル関数によって与えられるメッセージを定義するために使用されます。スクリプトが作業ツリーのサブディレクトリから実行できる場合は、 \fBSUBDIRECTORY_OK\fR を設定できます(一部のコマンドは実行できません)。
.sp
スクリプトレットは \fBGIT_DIR\fR と \fBGIT_OBJECT_DIRECTORY\fR シェル変数を設定しますが、それらを環境にエクスポートしません。
.SH "FUNCTIONS"
.PP
die
.RS 4
提供されたエラーメッセージを標準エラーストリームに出力した後に終了します。
.RE
.PP
usage
.RS 4
使用法メッセージで die します。
.RE
.PP
set_reflog_action
.RS 4
すでに設定されていない限り、
\fBGIT_REFLOG_ACTION\fR
環境変数を指定の文字列(通常はプログラムの名前)に設定します。スクリプトが、refを更新する
\fBgit\fR
コマンドを実行するたびに、この文字列の値を使用してreflogエントリが作成され、どのコマンドがrefを更新したかの記録が残されます。
.RE
.PP
git_editor
.RS 4
特定のファイルに対してユーザーが選択したエディター(GIT_EDITOR または core\&.editor または VISUAL または EDITOR)を実行しますが、エディターが指定されておらず、端末がダムの場合はエラーになります。
.RE
.PP
is_bare_repository
.RS 4
\fBtrue\fR
または
\fBfalse\fR
を標準出力ストリームに出力して、リポジトリがベアリポジトリであるかどうか(つまり、関連する作業ツリーがないかどうか)を示します。
.RE
.PP
cd_to_toplevel
.RS 4
作業ツリーのトップレベルまでchdirを実行します。
.RE
.PP
require_work_tree
.RS 4
現在のディレクトリがリポジトリの作業ツリー内にあるかどうかを確認し、そうでない場合は停止(die)します。
.RE
.PP
require_work_tree_exists
.RS 4
リポジトリに関連付けられている作業ツリーが存在するかどうかを確認し、存在しない場合は停止(die)します。多くの場合、cd_to_toplevelを呼び出す前に実行されますが、作業ツリーがない場合は実行できません。
.RE
.PP
require_clean_work_tree <action> [<hint>]
.RS 4
リポジトリに関連付けられている作業ツリーとインデックスに、追跡されたファイルへのコミットされていない変更がないことを確認します。それ以外の場合は、
\fBCannot <action>: <reason>\&. <hint>\fR
の形式のエラーメッセージを出力し、dieします。 例:
.sp
.if n \{\
.RS 4
.\}
.nf
require_clean_work_tree rebase "Please commit or stash them\&."
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
get_author_ident_from_commit
.RS 4
特定のコミットの GIT_AUTHOR_NAME と GIT_AUTHOR_EMAIL と GIT_AUTHOR_DATE 変数を設定するためにevalで使用するコードを出力します。
.RE
.PP
create_virtual_base
.RS 4
最初のファイルを変更して、2番目のファイルと共通の行だけが残るようにします。共通の資料が不十分な場合、最初のファイルは空のままになります。 結果は、3方向マージの仮想ベース入力として適しています。
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
