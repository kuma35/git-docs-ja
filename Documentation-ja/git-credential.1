'\" t
.\"     Title: git-credential
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-CREDENTIAL" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-credential \- ユーザー資格情報の取得と保存
.SH "SYNOPSIS"
.sp
.nf
\*(Aqgit credential\*(Aq (fill|approve|reject)
.fi
.sp
.SH "DESCRIPTION"
.sp
Gitには、システム固有のヘルパーから資格情報(credentials)を保存および取得したり、ユーザーにユーザー名とパスワードの入力を求めたりするための内部インターフェイスがあります。 git\-credentialコマンドは、Gitと同じ方法で資格情報を取得、保存、または要求する可能性のあるスクリプトにこのインターフェイスを公開します。 このスクリプト可能なインターフェイスの設計は、内部CAPIをモデル化しています。 概念の背景については、credential\&.hを参照してください。
.sp
git\-credentialは、コマンドラインで「action」オプション(\fBfill\fR または \fBapprove\fR または \fBreject\fR のいずれか)を取り、stdinで資格情報の説明(description)を読み取ります(INPUT/OUTPUT FORMAT を参照)
.sp
アクションが \fBfill\fR の場合、git\-credentialは、構成ファイルを読み取るか、構成された資格情報ヘルパーに連絡するか、ユーザーにプロンプトを表示することにより、説明(description)に「username」および「password」属性を追加しようとします。次に、資格情報の説明(description)のユーザー名とパスワードの属性が、すでに提供されている属性とともにstdoutに出力されます。
.sp
アクションが \fBapprove\fR(承認)の場合、git\-credentialは、構成された資格情報ヘルパーに説明(description)を送信します。ヘルパーは、後で使用するために資格情報を保存する場合があります。
.sp
アクションが \fBreject\fR の場合、git\-credentialは設定された資格情報ヘルパーに説明(description)を送信します。これにより、説明(description)に一致する保存済みの資格情報が消去される場合があります。
.sp
アクションが \fBapprove\fR(承認)または \fBreject\fR(拒否)の場合、出力は生成されません。
.SH "TYPICAL USE OF GIT CREDENTIAL"
.sp
git\-credentialを使用するアプリケーションは、通常、以下の手順に従って \fBgit credential\fR を使用します:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
コンテキストに基づいて資格情報の説明(description)を生成します。
.sp
たとえば、
\fBhttps://example\&.com/foo\&.git\fR
のパスワードが必要な場合は、以下の資格情報の説明(description)を生成できます(最後の空白行を忘れないでください。これは、アプリケーションがすべての情報の提供を終了したことを
\fBgit credential\fR
に通知します):
.sp
.if n \{\
.RS 4
.\}
.nf
protocol=https
host=example\&.com
path=foo\&.git
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
この説明(description)のユーザー名とパスワードを提供するようにgit\-credentialに依頼してください。 これは、
\fBgit credential fill\fR
を実行し、ステップ(1)の説明(description)を標準入力に送ることで実行されます。完全な資格情報の説明(description)(資格情報自体、つまりログインとパスワードを含む)は、以下のように標準出力へ生成されます。
.sp
.if n \{\
.RS 4
.\}
.nf
protocol=https
host=example\&.com
username=bob
password=secr3t
.fi
.if n \{\
.RE
.\}
.sp
ほとんどの場合、これは入力で指定された属性が出力で繰り返されることを意味しますが、Gitは資格情報の説明(description)を変更する場合もあります。たとえば、プロトコルがHTTP(s)であり、
\fBcredential\&.useHttpPath\fR
がfalseの場合、
\fBpath\fR
属性を削除します。
.sp
\fBgit credential\fR
が既にパスワードを知っていた場合、この手順では、ユーザーが
\fBpassword=secr3t\fR
を返す前に実際にこのパスワードを入力していなかった可能性があります(ユーザーが代わりにキーチェーンのロックを解除するためにパスワードを入力したか、キーチェーンがすでにロック解除している場合はユーザーの操作が行われなかった可能性があります)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
資格情報を使用し(たとえば、手順(2)のユーザー名とパスワードを使用してURLにアクセスします)、それが受け入れられるかどうかを確認します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
パスワードの成功または失敗について報告します。資格情報によって操作が正常に完了することが許可された場合は、「approve」アクションでマークを付けて、「git credential」に次の呼び出しで再利用するように指示できます。操作中に資格情報が拒否された場合は、「reject」アクションを使用して、
\fBgit credential\fR
が次の呼び出しで新しいパスワードを要求するようにします。 いずれの場合も、
\fBgit credential\fR
には、ステップ(2)で取得した資格情報の説明(description)(ステップ(1)で提供されたものも含まれます)を指定する必要があります。
.RE
.SH "INPUT/OUTPUT FORMAT"
.sp
\fBgit credential\fR は、標準入力/標準出力で(使用するアクションに応じて)資格情報を読み取り および/また は書き込みます。この情報は、 \fBgit credential\fR がログイン情報(ホスト、プロトコル、パスなど)を取得するキー、または取得する実際の資格データ(ユーザー名/パスワード)のいずれかに対応できます。
.sp
資格情報は、1行に1つの属性を持つ、名前付き属性のセットに分割されます。 各属性は、キーと値のペアで指定され、 \fB=\fR (等号)記号と、改行で続けます。
.sp
キーには、 \fB=\fR または改行またはNUL以外の任意のバイトを含めることができます。値には、改行またはNUL以外の任意のバイトを含めることができます。
.sp
どちらの場合も、すべてのバイトはそのまま扱われます(つまり、クォートせず、改行またはNULを含む値を送信することはできません)。属性のリストは、空白行またはファイルの終わりで終了します。
.sp
Gitは以下の属性を理解します:
.PP
\fBprotocol\fR
.RS 4
資格情報が使用されるプロトコル(例:
\fBhttps\fR)。
.RE
.PP
\fBhost\fR
.RS 4
ネットワーク資格情報のリモートホスト名。これには、ポート番号が指定されている場合はそれも含まれます(例:
\fBexample\&.com:8088\fR)。
.RE
.PP
\fBpath\fR
.RS 4
資格情報が使用されるパス。 たとえば、リモートhttpsリポジトリにアクセスする場合、これはサーバー上のリポジトリのパスになります。
.RE
.PP
\fBusername\fR
.RS 4
私達が既に持っている(たとえば、URL、構成、ユーザー、または以前に実行したヘルパーから)場合、資格情報のユーザー名。
.RE
.PP
\fBpassword\fR
.RS 4
資格情報のパスワード(私達が保存を要求している場合)。
.RE
.PP
\fBurl\fR
.RS 4
この特別な属性が
\fBgit credential\fR
によって読み取られると、値はURLとして解析され、その構成要素が読み取られたかのように扱われます(たとえば、
\fBurl=https://example\&.com\fR
は
\fBprotocol=https\fR
と
\fBhost=example\&.com\fR
が提供されたかのように振る舞います)。これは、発信者がURL自体を解析することを回避するのに役立ちます。
.sp
注意:プロトコルの指定は必須であり、そして、URLでホスト名が指定されていない場合(たとえば "cert:///path/to/file")、資格情報には、値が空の文字列であるホスト名属性が含まれることに注意してください。
.sp
URLから欠落しているコンポーネント(たとえば、上記の例にユーザー名がないとか)は未設定のままになります。
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
