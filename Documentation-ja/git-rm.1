'\" t
.\"     Title: git-rm
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-RM" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-rm \- 作業ツリーとインデックスからファイルを削除します
.SH "SYNOPSIS"
.sp
.nf
\fIgit rm\fR [\-f | \-\-force] [\-n] [\-r] [\-\-cached] [\-\-ignore\-unmatch]
          [\-\-quiet] [\-\-pathspec\-from\-file=<file> [\-\-pathspec\-file\-nul]]
          [\-\-] [<pathspec>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
pathspecに一致するファイルをインデックスから、または作業ツリーとインデックスから削除します。 \fBgit rm\fR は、作業ディレクトリだけからファイルを削除することはありません。 (作業ツリーからのみファイルを削除し、それをインデックスに保持するオプションはありません。必要に応じて、 \fB/bin/rm\fR を使用してください。) 削除されるファイルはブランチの先端と同一である必要があり、その内容の更新をインデックスにステージングすることはできませんが、そのデフォルトの動作は \fB\-f\fR オプションでオーバーライドできます。 \fB\-\-cached\fR が指定されている場合、ステージングされたコンテンツはブランチの先端またはディスク上のファイルのいずれかに一致する必要があり、ファイルをインデックスからのみ削除できます。 スパースチェックアウトが使用されている場合(\fBgit-sparse-checkout\fR(1) を参照)、 \fBgit rm\fR はスパースチェックアウトパターン内のパスのみを削除します。
.SH "OPTIONS"
.PP
<pathspec>\&...
.RS 4
削除するファイル。先頭のディレクトリ名(たとえば、削除する
\fBdir/file1\fR
や
\fBdir/file2\fR
の
\fBdir\fR)を指定して、ディレクトリ内のすべてのファイル削除でき、そして、
\fB\-r\fR
オプションを明示的に指定する必要がありますが、再帰的にすべてのサブディレクトリを削除できます。
.sp
このコマンドは、Gitに認識されているパスのみを削除します。
.sp
ファイルグロブはディレクトリの境界を越えて一致します。 したがって、2つのディレクトリ
\fBd\fR
と
\fBd2\fR
が与えられた場合、
\fBgit rm \*(Aqd*\*(Aq\fR
と
\fBgit rm \*(Aqd/*\*(Aq\fR
は異なります。前者はディレクトリ
\fBd2\fR
もすべて削除するからです。
.sp
詳細については、
\fBgitglossary\fR(7)
の「pathspec」エントリを参照してください。
.RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
更新チェックをオーバーライドします。
.RE
.PP
\fB\-n\fR, \fB\-\-dry\-run\fR
.RS 4
実際にファイルを削除することはありません。代わりに、インデックスに存在するか、でなければコマンドによって削除されるかを示すだけです。
.RE
.PP
\fB\-r\fR
.RS 4
先頭のディレクトリ名が指定されている場合は、再帰的な削除を許可します。
.RE
.PP
\fB\-\-\fR
.RS 4
このオプションは、コマンドラインオプションをファイルのリストから分離するために使用できます(ファイル名がコマンドラインオプションと間違えられる可能性がある場合に便利です)。
.RE
.PP
\fB\-\-cached\fR
.RS 4
このオプションを使用して、インデックス分のみパスをステージング解除して削除します。作業ツリーファイルは、変更されているかどうかに関係なく、そのまま残されます。
.RE
.PP
\fB\-\-ignore\-unmatch\fR
.RS 4
一致するファイルがない場合にも、ステータスがゼロで終了(exit)します。
.RE
.PP
\fB\-\-sparse\fR
.RS 4
スパース・チェックアウト・コーンの外側でインデックス・エントリを更新できるようにします。 通常、
\fBgit rm\fR
は、パスがスパース・チェックアウト・コーン内に収まらないインデックス・ エントリの更新を拒否します。 詳細については、\fBgit-sparse-checkout\fR(1)
を参照してください。
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
\fBgit rm\fR
は通常、削除されたファイルごとに1行(\fBrm\fR
コマンドの形式で)を出力します。 このオプションは、その出力を抑制します。
.RE
.PP
\fB\-\-pathspec\-from\-file=<file>\fR
.RS 4
パススペックは、コマンドライン引数の代わりに <file> で渡されます。 <file> が正確に
\fB\-\fR
の場合、標準入力が使用されます。 パススペック要素は、LFまたはCR/LFで区切られます。 パススペック要素は、構成変数
\fBcore\&.quotePath\fR
で説明されているようにクォートできます(\fBgit-config\fR(1)を参照)。
\fB\-\-pathspec\-file\-nul\fR
および グローバルの
\fB\-\-literal\-pathspecs\fR
も参照してください。
.RE
.PP
\fB\-\-pathspec\-file\-nul\fR
.RS 4
\fB\-\-pathspec\-from\-file\fR
でのみ意味があります。 パススペック要素はNUL文字で区切られ、他のすべての文字は文字通りに解釈されます(改行と引用符を含む)。
.RE
.SH "ファイルシステムから消えたファイルの削除"
.sp
\fBgit rm\fR には、ファイルシステムから消えたパスのみをインデックスから削除するオプションはありません。 ただし、ユースケースに応じて、実行できる方法がいくつかあります。
.SS "\fBgit commit \-a\fR の使用"
.sp
次回のコミットで、作業ツリー内の追跡対象ファイルのすべての変更を記録し、作業ツリーから削除されたファイルのすべての削除を(\fBgit rm\fR ではなく、) \fBrm\fR で記録する場合は、すべての削除を自動的に通知して記録するため、 \fBgit commit \-a\fR を使用します。 \fBgit add \-u\fR を使用してコミットせずに同様の効果を得ることもできます。
.SS "\fBgit add \-A\fR の使用"
.sp
ベンダーブランチの新しいコードドロップを受け入れる場合は、パスの削除と新しいパスの追加、および既存のパスの変更の両方を記録する必要があります。
.sp
通常、最初に以下のコマンドを使用して、追跡中のすべてのファイルを作業ツリーから削除します:
.sp
.if n \{\
.RS 4
.\}
.nf
git ls\-files \-z | xargs \-0 rm \-f
.fi
.if n \{\
.RE
.\}
.sp
.sp
次に、作業ツリーで新しいコードを解凍(untar)します。または、変更を作業ツリーに「rsync」することもできます。
.sp
その後、作業ツリーのすべての削除、追加、および変更を記録する最も簡単な方法は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
git add \-A
.fi
.if n \{\
.RE
.\}
.sp
.sp
\fBgit-add\fR(1) 参照。
.SS "Other ways"
.sp
あなたが本当にやりたいのは作業ツリーに存在しなくなったファイルをインデックスから削除することだけである場合(おそらく、作業ツリーが汚れているために \fBgit commit \-a\fR を使用できない)、以下のコマンドを使用します:
.sp
.if n \{\
.RS 4
.\}
.nf
git diff \-\-name\-only \-\-diff\-filter=D \-z | xargs \-0 git rm \-\-cached
.fi
.if n \{\
.RE
.\}
.sp
.SH "SUBMODULES"
.sp
リポジトリはスーパープロジェクトの \fB\&.git\fR ディレクトリ内にあるため、gitfileを使用するサブモジュール(つまり、Gitバージョン1\&.7\&.8以降で複製されたもの)のみが作業ツリーから削除されます。 サブモジュール(またはその中にネストされているものの1つ)がまだ \fB\&.git\fR ディレクトリを使用している場合、 \fBgit rm\fR はサブモジュールの履歴を保護するためにサブモジュールのgitディレクトリをスーパープロジェクトのgitディレクトリに移動します。 存在する場合は、 \fBgitmodules\fR(5) ファイルの submodule\&.<name> セクションも削除され、そのファイルがステージングされます(\fB\-\-cached\fR または \fB\-n\fR が使用されている場合を除く)。
.sp
HEADがインデックスに記録されているものと同じであり、追跡中のファイルが変更されておらず、無視されない追跡中でないファイルがサブモジュールの作業ツリーに存在しない場合、サブモジュールは最新であると見なされます。 無視されたファイルは消耗品と見なされ、サブモジュールの作業ツリーの削除を停止しません。
.sp
あなたが削除をコミットせずにサブモジュールのローカルチェックアウトのみを作業ツリーから削除する場合は、代わりに \fBgit-submodule\fR(1) の \fBdeinit\fR を使用してください。 サブモジュールの削除の詳細については、 \fBgitsubmodules\fR(7) も参照してください。
.SH "EXAMPLES"
.PP
\fBgit rm Documentation/\e*\&.txt\fR
.RS 4
\fBDocumentation\fR
ディレクトリとそのサブディレクトリの下にあるすべての
\fB*\&.txt\fR
ファイルをインデックスから削除します。
.sp
注意: この例では、アスタリスク(\fB*\fR)がシェルからクォートされていることに注意してください。これにより、シェルではなくGitが、\fBDocumentation/\fR
ディレクトリの下にあるファイルとサブディレクトリのパス名を展開できるようになります。
.RE
.PP
\fBgit rm \-f git\-*\&.sh\fR
.RS 4
この例では、シェルでアスタリスクを展開できるため(つまり、あなたはファイルを明示的にリストしているため)、
\fBsubdir/git\-foo\&.sh\fR
は削除されません。
.RE
.SH "BUGS"
.sp
スーパープロジェクトの更新により、入力されたサブモジュールが削除されるたびに(たとえば、削除の前後でコミットを切り替える場合)、古いサブモジュールのチェックアウトは古い場所に残ります。古いディレクトリの削除は、gitfileを使用している場合にのみ安全です。そうしないと、サブモジュールの履歴も削除されます。 この手順は、サブモジュールの再帰的な更新が実装されている場合は廃止されます。
.SH "SEE ALSO"
.sp
\fBgit-add\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
