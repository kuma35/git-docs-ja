'\" t
.\"     Title: git-pack-objects
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-PACK\-OBJECTS" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-pack-objects \- オブジェクトのパックされたアーカイブを作成する
.SH "SYNOPSIS"
.sp
.nf
\fIgit pack\-objects\fR [\-q | \-\-progress | \-\-all\-progress] [\-\-all\-progress\-implied]
        [\-\-no\-reuse\-delta] [\-\-delta\-base\-offset] [\-\-non\-empty]
        [\-\-local] [\-\-incremental] [\-\-window=<n>] [\-\-depth=<n>]
        [\-\-revs [\-\-unpacked | \-\-all]] [\-\-keep\-pack=<pack\-name>]
        [\-\-cruft] [\-\-cruft\-expiration=<time>]
        [\-\-stdout [\-\-filter=<filter\-spec>] | <base\-name>]
        [\-\-shallow] [\-\-keep\-true\-parents] [\-\-[no\-]sparse] < <object\-list>
.fi
.sp
.SH "DESCRIPTION"
.sp
標準入力からオブジェクトのリストを読み取り、指定されたベース名を持つ1つ以上のパックされたアーカイブをディスクに書き込むか、パックされたアーカイブを標準出力に書き出します。
.sp
パックされたアーカイブは、2つのリポジトリ間でオブジェクトのセットを転送するための効率的な方法であり、アクセス効率の高いアーカイブ形式でもあります。パックされたアーカイブでは、オブジェクトはその全体を圧縮したものとして、または他のオブジェクトとの差分として保存されます。後者はしばしばデルタ(delta)と呼ばれます。
.sp
パックされたアーカイブ形式(\&.pack)は、自己完結型であるように設計されているため、それ以上の情報がなくても解凍できます。したがって、デルタが依存する各オブジェクトがパック内に存在する必要があります。
.sp
パックインデックスファイル(\&.idx)が、パック内のオブジェクトへの高速でランダムなアクセスのために生成されます。インデックスファイル(\&.idx)とパックされたアーカイブ(\&.pack)の両方を $GIT_OBJECT_DIRECTORY の pack/ サブディレクトリ（または $GIT_ALTERNATE_OBJECT_DIRECTORIES の任意のディレクトリ)に配置すると、Gitはパックアーカイブから読み取ることができます。
.sp
\fBgit unpack\-objects\fR コマンドは、パックされたアーカイブを読み取り、パックに含まれるオブジェクトを「1ファイル1オブジェクト」形式に展開できます。これは通常、ピアによる効率的なネットワーク転送のためにパックがオンザフライで作成されるときに、smart\-pullコマンドによって実行されます。
.SH "OPTIONS"
.PP
base\-name
.RS 4
ファイルのペア(\&.packと\&.idx)に書き込み、そして、 <base\-name> を使用して、作成されたファイルの名前を決定します。このオプションを使用すると、ペアの2つのファイルが <base\-name>\-<SHA\-1>\&.{pack,idx} ファイルに書き込まれます。 <SHA\-1>は、パックの内容に基づくハッシュであり、コマンドの標準出力にも書き込まれます。
.RE
.PP
\fB\-\-stdout\fR
.RS 4
パックの内容(\&.packファイルに書き込まれる内容)を標準出力に書き込みます。
.RE
.PP
\fB\-\-revs\fR
.RS 4
個々のオブジェクト名ではなく、標準入力からリビジョン引数を読み取ります。リビジョン引数は、
\fBgit rev\-list\fR
と同じ方法で処理され、
\fB\-\-objects\fR
フラグはその「commit」引数を使用して、出力するオブジェクトのリストを作成します。結果のリストのオブジェクトはパックされます。リビジョンに加えて、
\fB\-\-not\fR
または
\fB\-\-shallow <SHA\-1>\fR
行も受け入れられます。
.RE
.PP
\fB\-\-unpacked\fR
.RS 4
これは
\fB\-\-revs\fR
の指定を含んでいます。標準入力から読み取られたリビジョン引数のリストを処理するときは、オブジェクトのパッキングを未だパックされていないオブジェクトに制限してください。
.RE
.PP
\fB\-\-all\fR
.RS 4
これは
\fB\-\-revs\fR
の指定を含んでいます。標準入力から読み取られたリビジョン引数のリストに加えて、
\fBrefs/\fR
の下のすべてのrefが含まれるように指定してあるかのように振る舞います。
.RE
.PP
\fB\-\-include\-tag\fR
.RS 4
参照するオブジェクトが結果のパックファイルに含まれている場合は、要求されていない注釈付きタグを含めます。これは、ネイティブGitクライアントに新しいタグを送信するのに役立ちます。
.RE
.PP
\fB\-\-stdin\-packs\fR
.RS 4
オブジェクト名やリビジョン引数ではなく、標準入力からパックファイル(例:
\fBpack\-1234abcd\&.pack\fR)のベース名を読み取ります。 結果のパックには、除外されたパック(
\fB^`で始まる)にリストされているオブジェクトを除く、含まれているパック(\fR^` で始まらないもの)にリストされているすべてのオブジェクトが含まれます。
.sp
互換性のある
\fB\-\-unpacked\fR
を除いて、` \-\-revs` または、
\fB\-\-revs\fR
を含むオプション(` \-\-all` など)とは互換性がありません。
.RE
.PP
\fB\-\-cruft\fR
.RS 4
到達不能なオブジェクトを、
\fB\&.mtimes\fR
ファイルの存在によって示される別の「クラフト・パック」にパックします。 通常は
\fBgit repack \-\-cruft\fR
で使用されます。 呼び出し元はパック名のリストを提供し、 リポジトリに残すパックと削除するパックを示します(接頭辞
\fB\-\fR
で示されます)。 クラフト・パックの内容は、猶予期間(下記
\fB\-\-cruft\-expiration\fR
参照)を超えていない、または、猶予期間を超えているが猶予期間を超えていない他のオブジェクトから到達可能な生き残ったパックに含まれていないすべてのオブジェクトです。
.sp
入力が到達可能なすべてのオブジェクトを含むパックをリストする(そして他のすべてのパックを削除保留中としてリストする)場合、 対応するクラフト・パックには、 すべての到達不能オブジェクト(\fB\-\-cruft\-expiration\fR
よりも新しい mtime)が含まれます。 mtime は
\fB\-\-cruft\-expiration\fR
よりも古いですが、 mtime が
\fB\-\-cruft\-expiration\fR
よりも新しい到達不能オブジェクトから到達可能です。
.sp
\fB\-\-unpack\-unreachable\fR
や
\fB\-\-keep\-unreachable\fR
や
\fB\-\-pack\-loose\-unreachable\fR
や
\fB\-\-stdin\-packs\fR
と、\fB\-\-revs\fR
を暗示するその他のオプションとは互換性がありません。
\fB\-\-max\-pack\-size\fR
とも互換性がありません。
\fB\-\-max\-pack\-size\fR
オプションが設定されている場合、パックの最大サイズは
\fBpack\&.packSizeLimit\fR
から推測されません。
.RE
.PP
\fB\-\-cruft\-expiration=<approxidate>\fR
.RS 4
指定されている場合、 mtime が
\fB<approxidate>\fR
よりも古いオブジェクトはクラフト・パック(cruft pack)から削除されます。 指定されていない(そして
\fB\-\-cruft\fR
が指定されている)場合、オブジェクトは削除されません。
.RE
.PP
\fB\-\-window=<n>\fR, \fB\-\-depth=<n>\fR
.RS 4
これらの2つのオプションは、パックに含まれるオブジェクトをデルタ圧縮を使用して格納する方法に影響します。オブジェクトは最初にタイプとサイズ、および、オプションで名前で、内部的にソートされ、
\fB\-\-window\fR
内の他のオブジェクトと比較されて、デルタ圧縮を使用することでスペースが節約されるかどうかが確認されます。
\fB\-\-depth\fR
は、最大デルタ深度を制限します。 深くしすぎると、必要なオブジェクトに到達するために差分データを何度も適用する必要があるため、パック解凍側のパフォーマンスに影響します。
.sp
\fB\-\-window\fR
のデフォルト値は10で、
\fB\-\-depth\fR
のデフォルト値は50です。
\fB\-\-depth\fR
の最大深度は4095です。
.RE
.PP
\fB\-\-window\-memory=<n>\fR
.RS 4
このオプションは、
\fB\-\-window\fR
に加えて追加の制限を提供します。ウィンドウサイズは、メモリ内で
\fB<n>\fR
バイトを超えないように動的に縮小されます。これは、大きなオブジェクトと小さなオブジェクトが混在するリポジトリで、大きなウィンドウでメモリを使い果たさないようにしつつ、小さなオブジェクトには大きなウィンドウを活用できるようにするために有効です。サイズには、「k」または「m」または「g」の接尾辞を付けることができます。
\fB\-\-window\-memory=0\fR
は、メモリ使用量を無制限にします。デフォルトは、
\fBpack\&.windowMemory\fR
構成変数から取得されます。
.RE
.PP
\fB\-\-max\-pack\-size=<n>\fR
.RS 4
めったにないシナリオですが、ファイルシステム上に特定のサイズより大きいファイルを作成できない場合があります。このオプションを使用して、出力パックファイルをそれぞれ指定されたサイズ以下の複数の独立したパックファイルに分割するようにコマンドに指示できます。 サイズには、「k」または「m」または「g」の接尾辞を付けることができます。許可される最小サイズは1MiBに制限されています。 構成変数
\fBpack\&.packSizeLimit\fR
が設定されていない限り、デフォルトは無制限です。このオプションを使用すると、リポジトリが大きくなり、速度が低下する可能性があることに注意してください。
\fBpack\&.packSizeLimit\fR
の説明を参照してください。
.RE
.PP
\fB\-\-honor\-pack\-keep\fR
.RS 4
このフラグにより、\&.keepファイルを含むローカルパックにすでに含まれているオブジェクトは、他の方法でパックされていたとしても無視されます。
.RE
.PP
\fB\-\-keep\-pack=<pack\-name>\fR
.RS 4
このフラグにより、指定のパックにすでに含まれているオブジェクトは、他の方法でパックされていたとしても無視されます。
\fB<pack\-name>\fR
は、先頭にディレクトリ名がないパックファイル名です(例:
\fBpack\-123\&.pack\fR)。このオプションは、複数のパックを保持するために複数回指定できます。
.RE
.PP
\fB\-\-incremental\fR
.RS 4
このフラグにより、すでにパックされているオブジェクトは、他の方法でパックされていたとしても無視されます。
.RE
.PP
\fB\-\-local\fR
.RS 4
このフラグにより、代替オブジェクトストアから借用されたオブジェクトは、他の方法でパックされていたとしても無視されます。
.RE
.PP
\fB\-\-non\-empty\fR
.RS 4
少なくとも1つのオブジェクトが含まれる場合にのみパックされたアーカイブを作成します。
.RE
.PP
\fB\-\-progress\fR
.RS 4
\fB\-q\fR
が指定されていない場合、進行状況は、端末に接続されている場合、デフォルトで標準エラーストリームに報告されます。このフラグは、標準エラーストリームが端末に送信されていない場合でも、進行状況を強制します。
.RE
.PP
\fB\-\-all\-progress\fR
.RS 4
\fB\-\-stdout\fR
を指定すると、進行状況レポートはオブジェクトのカウントおよび圧縮フェーズでは表示されますが、書き込みフェーズでは禁止されます。その理由は、場合によっては、出力ストリームが別のコマンドに直接リンクされており、受信パックデータを処理するときに独自の進行状況を表示したい場合があるためです。このフラグは
\fB\-\-progress\fR
に似ていますが、
\fB\-\-stdout\fR
が使用されている場合でも、書き込みフェーズの進行状況レポートを強制する点が異なります。
.RE
.PP
\fB\-\-all\-progress\-implied\fR
.RS 4
これは、進行状況の表示がアクティブになるたびに
\fB\-\-all\-progress\fR
の指定を含ませるために使用されます。
\fB\-\-all\-progress\fR
とは異なり、このフラグは実際には進行状況の表示を強制しません。
.RE
.PP
\fB\-q\fR
.RS 4
このフラグにより、コマンドは標準エラーストリームで進行状況を報告しなくなります。
.RE
.PP
\fB\-\-no\-reuse\-delta\fR
.RS 4
既存のパックがあるリポジトリに、パックされたアーカイブを作成する場合、コマンドは既存のデルタを再利用します。これにより、パックがわずかに最適化されない場合があります。このフラグは、既存のデルタを再利用せずに最初から計算するようにコマンドに指示します。
.RE
.PP
\fB\-\-no\-reuse\-object\fR
.RS 4
このフラグは、削除されていないオブジェクトを含め、既存のオブジェクトデータをまったく再利用しないようにコマンドに指示し、すべてを強制的に再圧縮します。 これは、
\fB\-\-no\-reuse\-delta\fR
の指定を含みます。パックされたデータに異なる圧縮レベルを大規模に適用する必要がある曖昧模糊なケースでのみ役立ちます。
.RE
.PP
\fB\-\-compression=<n>\fR
.RS 4
生成するパック内の新しく圧縮するデータの圧縮レベルを指定します。指定しない場合、パックの圧縮レベルは pack\&.compression 、core\&.compression の順で取得します。どちらも設定されていない場合は、zlibのデフォルトである \-1 になります。ソースに関係なくすべてのデータに均一な圧縮レベルを強制する場合は、
\fB\-no\-reuse\-object\fR
オプションを追加します。
.RE
.PP
\fB\-\-[no\-]sparse\fR
.RS 4
\fB\-\-revs\fR
オプションと組み合わせた場合、「スパース」(sparse)アルゴリズムを切り替えて、パックに含めるオブジェクトを決定します。このアルゴリズムは、新しいオブジェクトを導入するパスに現れるツリーのみをウォークします。これは、小さな変更を送信するためのパックを計算するときに、パフォーマンスに大きなメリットをもたらす可能性があります。ただし、含まれているコミットに特定の種類の直接名前変更(direct renames)含まれている場合は、パックファイルに追加のオブジェクトが追加される可能性があります。このオプションが含まれていない場合、デフォルトで
\fBpack\&.useSparse\fR
の値になります。
\fBpack\&.useSparse\fR
の値は、特に指定されていない限りtrueです。
.RE
.PP
\fB\-\-thin\fR
.RS 4
ネットワーク転送を減らすために、送信者と受信者の間の共通オブジェクトを省略して「薄い」(thin)パックを作成します。このオプションは、
\fB\-\-stdout\fR
と組み合わせた場合にのみ意味があります。
.sp
注意: 薄いパックは、必要なオブジェクトを省略するという理由でパックされたアーカイブ形式に違反するため、Gitは自己完結型にしないと使用できません。
\fBgit index\-pack \-\-fix\-thin\fR
(\fBgit-index-pack\fR(1)
を参照)を使用して、自己完結型のプロパティを復元します。
.RE
.PP
\fB\-\-shallow\fR
.RS 4
浅いリポジトリ(shallow repository)を持つクライアントに提供されるパックを最適化します。このオプションを
\fB\-\-thin\fR
と組み合わせると、速度を犠牲にしてパックを小さくすることができます。
.RE
.PP
\fB\-\-delta\-base\-offset\fR
.RS 4
パックされたアーカイブは、デルタのベースオブジェクトを20バイトのオブジェクト名またはストリーム内のオフセットのいずれかで表現できますが、Gitの古いバージョンは後者を理解していません。 デフォルトでは、
\fBgit pack\-objects\fR
は互換性を高めるために前者の形式のみを使用します。このオプションを使用すると、コマンドで後者の形式を使用してコンパクトにすることができます。平均デルタチェーンの長さに応じて、このオプションは通常、結果のパックファイルを3〜5パーセント縮小します。
.sp
注意: 最新のGitでは、
\fBgit gc\fR
(\fBgit-gc\fR(1)
参照)や
\fBgit repack\fR
(\fBgit-repack\fR(1)
参照)などの磁器コマンドは、あなたのリポジトリ内のファイルをパックファイルに入れるときに、デフォルトでこのオプションを渡します。バンドルを作成する
\fBgit bundle\fR
(\fBgit-bundle\fR(1)
参照)も同様です。
.RE
.PP
\fB\-\-threads=<n>\fR
.RS 4
最適なデルタマッチングを検索するときに生成するスレッドの数を指定します。これには、pack\-objectsをpthreadでコンパイルする必要があります。そうでない場合、このオプションは警告とともに無視されます。これは、マルチプロセッサマシンでのパッキング時間を短縮することを目的としています。ただし、デルタ検索ウィンドウに必要なメモリ量は、スレッド数で乗算されます。 0を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。
.RE
.PP
\fB\-\-index\-version=<version>[,<offset>]\fR
.RS 4
これは、テストスイートでのみ使用することを目的としています。生成するパックインデックスのバージョンを強制し、指定のオフセット上にあるオブジェクトに64ビットインデックスエントリを強制することができます。
.RE
.PP
\fB\-\-keep\-true\-parents\fR
.RS 4
このオプションを使用すると、graftsによって隠されている親はそれでもパックされます。
.RE
.PP
\fB\-\-filter=<filter\-spec>\fR
.RS 4
\fB\-\-stdout\fR
が必要です。結果のパックファイルから特定のオブジェクト(通常はブロブ)を省略します。 有効な
\fB<filter\-spec>\fR
形式ついては、
\fBgit-rev-list\fR(1)
を参照してください。
.RE
.PP
\fB\-\-no\-filter\fR
.RS 4
以前の任意の
\fB\-\-filter=\fR
引数をオフにします。
.RE
.PP
\fB\-\-missing=<missing\-action>\fR
.RS 4
将来の「partial clone」(部分クローン)開発に役立つデバッグオプション。このオプションは、欠落しているオブジェクトの処理方法を指定します。
.sp
\fB\-\-missing=error\fR
は、欠落しているオブジェクトが検出された場合に、pack\-objectsがエラーで停止することを要求します。リポジトリが部分クローン(partial clone)の場合は、欠落していると言う前に、欠落しているオブジェクトをフェッチしようとします。
\fB\-\-missing=error\fR
がデフォルトの操作です。
.sp
\fB\-\-missing=allow\-any\fR
は、欠落しているオブジェクトが検出された場合でも、オブジェクトの走査(object traversal)を続行できます。欠落しているオブジェクトのフェッチは発生しません。欠落しているオブジェクトは、結果から警告無しに黙って省略されます。
.sp
\fB\-\-missing=allow\-promisor\fR
は
\fBallow\-any\fR
に似ていますが、オブジェクトの走査は、「予想される」promisorが欠落しているオブジェクトに対してのみ続行できます。欠落しているオブジェクトのフェッチは発生しません。予期しないオブジェクトの欠落により、エラーが発生します。
.RE
.PP
\fB\-\-exclude\-promisor\-objects\fR
.RS 4
promisorリモートにあることがわかっているオブジェクトを省略します。 (このオプションは、ローカルで作成されたオブジェクトのみを操作することを目的としているため、再パックするときに、ローカルで作成されたオブジェクト[\&.promisor なし]とpromisorリモートのオブジェクト[\&.promisor あり]の区別を維持します。) これは部分クローン(partial clone)で使用されます。
.RE
.PP
\fB\-\-keep\-unreachable\fR
.RS 4
\fB\-\-unpacked=\fR
オプションで指定されたパック内の参照から到達不能なオブジェクトは、
\fB*\&.keep\fR
ファイルでマークされたパック内にない到達可能オブジェクトに加えて、結果のパックに追加されます。 これは
\fB\-\-revs\fR
の指定を含んでいます。
.RE
.PP
\fB\-\-pack\-loose\-unreachable\fR
.RS 4
到達不能な緩いオブジェクト(loose objects)をパックします(そしてそれらの緩いオブジェクトを削除します)。 これは
\fB\-\-revs\fR
の指定を含んでいます。
.RE
.PP
\fB\-\-unpack\-unreachable\fR
.RS 4
到達不能なオブジェクトは緩い(loose)オブジェクト形式のままにしてください。これは
\fB\-\-revs\fR
の指定を含んでいます。
.RE
.PP
\fB\-\-delta\-islands\fR
.RS 4
「islands」に基づいてデルタのマッチを制限します。 以下の DELTA ISLANDS を参照してください。
.RE
.SH "DELTA ISLANDS"
.sp
可能な場合、 \fBpack\-objects\fR は既存のディスク上のデルタを再利用して、その場で新しいデルタを検索する必要がないようにします。これは、フェッチを提供するための重要な最適化です。つまりこれは、サーバーがほとんどのオブジェクトの展開作業を回避し、ディスクから直接バイトを送信できることを意味するためです。この最適化は、受信側が持っていない(そしてまだ送信していない)ベースに対するデルタとしてオブジェクトが保存されている場合は機能しません。その場合、サーバーはデルタを「壊し」、CPUコストの高い新しいデルタを見つける必要があります。したがって、パフォーマンスにとって重要なのは、ディスク上のデルタ関係にあるオブジェクトのセットが、クライアントがフェッチするものと一致することです。
.sp
通常のリポジトリでは、これは自動的に機能する傾向があります。オブジェクトのほとんどはブランチとタグから到達可能であり、それがクライアントがフェッチするものです。サーバー上で検出されたデルタは、クライアントが既に持っているモノとこれから持つ予定のオブジェクトの間にある可能性があります。
.sp
ただし、一部のリポジトリ設定では、いくつかの関連しているが別個のref先端のグループがあり、クライアントはそれらのグループを個別にフェッチする傾向があります。 たとえば、単一の共有オブジェクトストアでリポジトリの複数の「フォーク」をホストし、クライアントがそれらを \fBGIT_NAMESPACE\fR を介して個別のリポジトリとして、または代替メカニズムを使用して個別のリポジトリとして表示できるようにする場合を考えてみます。素朴な再パックでは、オブジェクトの最適なデルタが、別のフォークでのみ検出されるベースに対してのものであることがわかる場合があります。ただし、クライアントがフェッチするとき、クライアントにはベースオブジェクトがないため、その場で新しいデルタを見つける必要があります。
.sp
関連するオブジェクトを指す \fBrefs/heads/\fR と \fBrefs/tags/\fR のほかに多くの参照がある場合(たとえば一部のホスティングプロバイダーで使用される \fBrefs/pull\fR や \fBrefs/Changes\fR )、同様の状況が存在する可能性があります。デフォルトでは、クライアントはヘッドとタグのみをフェッチし、それらの他のグループでのみ見つかったオブジェクトに対するデルタをそのまま送信することはできません。
.sp
デルタ島(delta islands)は、refを個別の「島」にグループ化できるようにすることで、この問題を解決します。 Pack\-objectsは、どのオブジェクトがどの島から到達可能かを計算し、全く \fBA\fR 島に存在しないベースに対してオブジェクト \fBA\fR からデルタを作成することを拒否します。これにより、パックがわずかに大きくなります(デルタ化の機会を逃すため)が、1つの島のフェッチで、島の境界を越えるためにその場でデルタを再計算する必要がないことが保証されます。
.sp
デルタ島(delta islands)で再パックする場合、デルタ窓は、構成によって禁止されている候補で詰まる傾向があります。大きな \fB\-\-window\fR で再梱包することが助けになります(コンテンツに対して計算を行う前に、島に基づいて一部のオブジェクトペアを拒否できるため、他の方法ほど長くはかかりません)。
.sp
島は、複数回指定できる \fBpack\&.island\fR オプションを介して構成されます。各値は、refnames に一致する左アンカーの正規表現(left\-anchored regular expressions)です。 例えば:
.sp
.if n \{\
.RS 4
.\}
.nf
[pack]
island = refs/heads/
island = refs/tags/
.fi
.if n \{\
.RE
.\}
.sp
.sp
ヘッドとタグを島に配置します(名前は空の文字列です。名前の詳細については、以下を参照してください)。 これらの正規表現に一致しない参照(例: \fBrefs/pull/123\fR)は、どの島にもありません。 したがって、 \fBrefs/pull/\fR からのみ到達可能(ヘッドやタグは不可)のオブジェクトは、 \fBrefs/heads/\fR のベースとして使用される候補にはなりません。
.sp
参照は「名前」に基づいて島にグループ化され、同じ名前を生成する2つの正規表現は同じ島にあると見なされます。名前は、正規表現で間に「\-」ダッシュがあるキャプチャグループを連結することにより、正規表現から計算されます(訳注:[0\-9]+ の部分)。(キャプチャグループがない場合、上記の例のように、名前は空の文字列になります。) これにより、任意の数の島を作成できます。 ただし、このようなキャプチャグループは最大14個しかサポートされていません。
.sp
たとえば、各フォークの参照を \fBrefs/virtual/ID\fR に格納するとします。ここで、 \fBID\fR は数値識別子です。 次に、以下を構成します:
.sp
.if n \{\
.RS 4
.\}
.nf
[pack]
island = refs/virtual/([0\-9]+)/heads/
island = refs/virtual/([0\-9]+)/tags/
island = refs/virtual/([0\-9]+)/(pull)/
.fi
.if n \{\
.RE
.\}
.sp
.sp
これにより、各フォークのヘッドとタグがそれぞれの島( "1234\(rq などの名前)に配置され、それぞれのプルrefsが独自の "1234\-pull" になります。
.sp
注意: 「最後の1つが勝つ」順序を使用して、正規表現ごとに1つの島を選択することに注意してください(これにより、リポジトリ固有の構成がユーザー全体の構成よりも優先されます)。
.SH "CONFIGURATION"
.sp
さまざまな構成変数がパッキングに影響します。 \fBgit-config\fR(1) を参照してください( pack および delta を検索してください)。
.sp
特に、デルタ圧縮は、 \fBcore\&.bigFileThreshold\fR 構成変数より大きいオブジェクト、および属性 \fBdelta\fR がfalseに設定されているファイルでは使用されません。
.SH "SEE ALSO"
.sp
\fBgit-rev-list\fR(1) \fBgit-repack\fR(1) \fBgit-prune-packed\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
