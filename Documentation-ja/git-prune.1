'\" t
.\"     Title: git-prune
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-PRUNE" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-prune \- オブジェクトデータベースで、到達不能なすべてのオブジェクトを剪定(prune)します
.SH "SYNOPSIS"
.sp
.nf
\fIgit prune\fR [\-n] [\-v] [\-\-progress] [\-\-expire <time>] [\-\-] [<head>\&...]
.fi
.sp
.SH "DESCRIPTION"
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
ほとんどの場合、ユーザーは \fIgit prune\fR を呼び出す \fIgit gc\fR を実行する必要があります。 以下の「NOTES」セクションを参照してください。
.sp .5v
.RE
.sp
これは、 \fBrefs/\fR で使用可能なすべてのrefを使用して \fIgit fsck \-\-unreachable\fR を実行し、オプションでコマンドラインで指定されたオブジェクトの追加セットを使用して、オブジェクトデータベースのこれらのヘッドオブジェクトから到達できないすべてのアンパックされたオブジェクトを剪定(prune)します。さらに、「git prune\-packed」を実行することにより、パック内にも同じモノがあるアンパックされたオブジェクトを剪定します。 また、どのrefからも到達できないエントリを \&.git/shallow から削除(removes)します。
.sp
注意: 到達不能なパックされたオブジェクトが残ることに注意してください。これが望ましくない場合は、 \fBgit-repack\fR(1) を参照してください。
.SH "OPTIONS"
.PP
\fB\-n\fR, \fB\-\-dry\-run\fR
.RS 4
何も削除しません。何が削除される予定かを報告するだけです。
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
削除されたすべてのオブジェクトを報告します。
.RE
.PP
\fB\-\-progress\fR
.RS 4
進捗状況を表示します。
.RE
.PP
\fB\-\-expire <time>\fR
.RS 4
<time> より古いルーズオブジェクトのみを期限切れにします。
.RE
.PP
\fB\-\-\fR
.RS 4
これ以降の引数をオプションとして解釈しないでください。
.RE
.PP
<head>\&...
.RS 4
我々の任意の参照から到達可能なオブジェクトに加えて、リストされた <head>s から到達可能なオブジェクトを保持します。
.RE
.SH "EXAMPLES"
.sp
リポジトリで使用されていないオブジェクト、またはリポジトリから \fB\&.git/objects/info/alternates\fR を介して借用しているオブジェクトを剪定(prune)するには:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git prune $(cd \&.\&./another && git rev\-parse \-\-all)
.fi
.if n \{\
.RE
.\}
.sp
.SH "NOTES"
.sp
ほとんどの場合、ユーザーは「git prune」を直接呼び出す必要はありませんが、代わりに「git gc」を呼び出す必要があります。これは、他の多くのハウスキーピングタスクとともに剪定(plune)を処理します。
.sp
剪定(prune)の対象と見なされるオブジェクトの説明については、「git fsck」の \fB\-\-unreachable\fR オプションを参照してください。
.SH "SEE ALSO"
.sp
\fBgit-fsck\fR(1), \fBgit-gc\fR(1), \fBgit-reflog\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
