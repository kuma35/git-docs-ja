'\" t
.\"     Title: git-stripspace
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-STRIPSPACE" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-stripspace \- 不要な空白(whitespace)を削除します
.SH "SYNOPSIS"
.sp
.nf
\fIgit stripspace\fR [\-s | \-\-strip\-comments]
\fIgit stripspace\fR [\-c | \-\-comment\-lines]
.fi
.sp
.SH "DESCRIPTION"
.sp
コミットメッセージ・メモ・タグ・ブランチの説明などのテキストを標準の入力から読み取り、Gitで使用されている作法でクリーンアップします。
.sp
引数なしの場合、この作法は以下のようになります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
全ての行の末尾の空白(whitespace)を取り除く
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
複数の連続する空行を1つの空行に折りたたむ
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
入力の最初と最後から空行を削除
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
必要に応じて、欠落している
\fI\en\fR
を最後の行に追加します。
.RE
.sp
入力がすべて空白文字(whitespace characters)で構成されている場合、出力は生成されません。
.sp
\fB注意\fR これはメタデータのクリーニングを目的としています。リポジトリ内のパッチまたは ファイルの空白を修正するには、 \fBgit-apply\fR(1) の \fB\-\-whitespace=fix\fR モードをお勧めします。
.SH "OPTIONS"
.PP
\fB\-s\fR, \fB\-\-strip\-comments\fR
.RS 4
コメント文字で始まるすべての行をスキップして削除します(デフォルトは
\fI#\fR
)。
.RE
.PP
\fB\-c\fR, \fB\-\-comment\-lines\fR
.RS 4
各行の前にコメント文字と空白を付けます。行は自動的に改行で終了します。 空行では、コメント文字のみが先頭に追加されます。
.RE
.SH "EXAMPLES"
.sp
以下のようなノイズの多い入力があるとします。 \fI$\fR は行の終わりを示しています:
.sp
.if n \{\
.RS 4
.\}
.nf
|A brief introduction   $
|   $
|$
|A new paragraph$
|# with a commented\-out line    $
|explaining lots of stuff\&.$
|$
|# An old paragraph, also commented\-out\&. $
|      $
|The end\&.$
|  $
.fi
.if n \{\
.RE
.\}
.sp
.sp
\fIgit stripspace\fR を引数無しで実行すると以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
|A brief introduction$
|$
|A new paragraph$
|# with a commented\-out line$
|explaining lots of stuff\&.$
|$
|# An old paragraph, also commented\-out\&.$
|$
|The end\&.$
.fi
.if n \{\
.RE
.\}
.sp
.sp
\fIgit stripspace \-\-strip\-comments\fR を使うと以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
|A brief introduction$
|$
|A new paragraph$
|explaining lots of stuff\&.$
|$
|The end\&.$
.fi
.if n \{\
.RE
.\}
.sp
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
