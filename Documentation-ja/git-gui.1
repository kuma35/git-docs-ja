'\" t
.\"     Title: git-gui
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-GUI" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-gui \- Gitのための移植性の高いGUI
.SH "SYNOPSIS"
.sp
.nf
\fIgit gui\fR [<command>] [<arguments>]
.fi
.sp
.SH "DESCRIPTION"
.sp
Gitの為の Tcl/Tk ベースのGUIです。「git gui」は、ユーザーが新しいコミットを作成し、既存のコミットを修正し、ブランチを作成し、ローカルマージを実行し、リモートリポジトリにフェッチ/プッシュすることでリポジトリに変更を加えることができるようにすることに重点を置いています。
.sp
gitk とは異なり、 \fBgit gui\fR はコミットの生成と単一ファイルの注釈に焦点を合わせており、プロジェクトの履歴は表示しません。 ただし、 \fBgit gui\fR 内から gitk セッションを開始するためのメニュー操作を提供します。
.sp
「git gui」は、すべての一般的なUNIXシステム、Mac OS X、およびWindows(CygwinとMSYSの両方)で動作することが知られています。可能な限り、OS固有のユーザーインターフェイスガイドラインに従い、「git gui」を各OSのユーザーにとってかなり自然なインターフェイスにしようとしています。
.SH "COMMANDS"
.PP
blame
.RS 4
指定されたバージョンの指定されたファイル(または指定されていない場合は作業ディレクトリ)でblameビューアを起動します。
.RE
.PP
browser
.RS 4
指定されたコミット内のすべてのファイルを表示するツリーブラウザを起動します。ブラウザで選択したファイルをblemeビューアで開きます。
.RE
.PP
citool
.RS 4
\fBgit gui\fR
を開始し、シェルを終了してシェルに戻る前に、正確に1つのコミットを行うように調整します。インターフェイスはコミットアクションのみに制限されているため、アプリケーションの起動時間がわずかに短縮され、メニューバーが簡素化されます。
.RE
.PP
version
.RS 4
現在実行中の「git gui」のバージョンを表示します。
.RE
.SH "EXAMPLES"
.PP
\fBgit gui blame Makefile\fR
.RS 4
現在の作業ディレクトリにあるファイル「Makefile」の内容を表示し、各行の元の作成者と、その行を現在の場所に移動した人の両方に注釈を付けます。コミットされていないファイルには注釈が付けられ、(存在する場合)コミットされていない変更は「まだコミットされていません」と明示されます。
.RE
.PP
\fBgit gui blame v0\&.99\&.8 Makefile\fR
.RS 4
リビジョン「v0\&.99\&.8」の「Makefile」の内容を表示し、各行に注釈を付けます。上記の例とは異なり、ファイルは作業ディレクトリではなくオブジェクトデータベースから読み取られます。
.RE
.PP
\fBgit gui blame \-\-line=100 Makefile\fR
.RS 4
上記のように注釈をロードし、100行目を中心にビューを自動的にスクロールします。
.RE
.PP
\fBgit gui citool\fR
.RS 4
1つのコミットを行い、完了したらシェルに戻ります。このコマンドは、コミットを行う以外の方法でウィンドウが閉じられた場合、ゼロ以外の終了コードを返します。
.RE
.PP
\fBgit gui citool \-\-amend\fR
.RS 4
インターフェイスの「Amend Last Commit」モードを自動的に開始します。
.RE
.PP
\fBgit gui citool \-\-nocommit\fR
.RS 4
通常のcitoolとして動作しますが、コミットを行う代わりに、ゼロの終了コードで終了します。インデックスにマージされていないエントリが含まれていないことを引き続きチェックするため、
\fBgit-mergetool\fR(1)
のGUIバージョンとして使用できます。
.RE
.PP
\fBgit citool\fR
.RS 4
\fBgit gui citool\fR
(上記)と同じです。
.RE
.PP
\fBgit gui browser maint\fR
.RS 4
maint ブランチのツリーのブラウザを表示します。ブラウザで選択したファイルは、内部のblameビューアで表示できます。
.RE
.SH "SEE ALSO"
.PP
\fBgitk\fR(1)
.RS 4
Gitリポジトリブラウザ。 ブランチ、コミット履歴、ファイルの差分を表示します。 gitkは、「git gui」のリポジトリ視覚化操作によって開始されるユーティリティです。
.RE
.SH "OTHER"
.sp
「git gui」は実際には独立したプロジェクトとして維持されていますが、エンドユーザーの便宜のために安定したバージョンがGitスイートの一部として配布されています。
.sp
\fBgit gui\fR プロジェクトの公式リポジトリは以下の場所にあります:
.sp
.if n \{\
.RS 4
.\}
.nf
https://github\&.com/prati0100/git\-gui\&.git/
.fi
.if n \{\
.RE
.\}
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
