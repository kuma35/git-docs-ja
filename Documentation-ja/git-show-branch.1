'\" t
.\"     Title: git-show-branch
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-SHOW\-BRANCH" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-show-branch \- ブランチとそのコミットを表示します
.SH "SYNOPSIS"
.sp
.nf
\fIgit show\-branch\fR [\-a|\-\-all] [\-r|\-\-remotes] [\-\-topo\-order | \-\-date\-order]
                [\-\-current] [\-\-color[=<when>] | \-\-no\-color] [\-\-sparse]
                [\-\-more=<n> | \-\-list | \-\-independent | \-\-merge\-base]
                [\-\-no\-name | \-\-sha1\-name] [\-\-topics]
                [(<rev> | <glob>)\&...]
\fIgit show\-branch\fR (\-g|\-\-reflog)[=<n>[,<base>]] [\-\-list] [<ref>]
.fi
.sp
.SH "DESCRIPTION"
.sp
<rev> または <glob> (または、 refs/heads および/または refs/tags の下のすべてのref)で名前が付けられたコミットから始まるコミットの祖先グラフを半視覚的に表示します。
.sp
一度に29を超えるブランチとコミットを表示することはできません。
.sp
コマンドラインで <rev> または <glob> が指定されていない場合は、 \fBshowbranch\&.default\fR の複数値(multi\-valued)の構成アイテムを使用します。
.SH "OPTIONS"
.PP
<rev>
.RS 4
通常はブランチヘッドまたはタグに名前を付ける任意の拡張SHA\-1式 (\fBgitrevisions\fR(7)
参照)。
.RE
.PP
<glob>
.RS 4
refs/ の下のブランチ名またはタグ名に一致するグロブパターン。 たとえば、 refs/heads/topic の下に多くのトピックブランチがある場合、
\fBtopic/*\fR
を指定するとそれらすべてが表示されます。
.RE
.PP
\fB\-r\fR, \fB\-\-remotes\fR
.RS 4
リモート追跡ブランチを表示します。
.RE
.PP
\fB\-a\fR, \fB\-\-all\fR
.RS 4
リモート追跡ブランチとローカルブランチの両方を表示します。
.RE
.PP
\fB\-\-current\fR
.RS 4
このオプションを使用すると、コマンドラインに指定されていない場合に表示されるrevのリストに現在のブランチが含まれます。
.RE
.PP
\fB\-\-topo\-order\fR
.RS 4
デフォルトでは、ブランチとそのコミットは新しい順に表示されます。このオプションを使用すると、トポロジカル順に表示されます(つまり、子孫のコミットは親の前に表示されます)。
.RE
.PP
\fB\-\-date\-order\fR
.RS 4
このオプションは、すべての子の前に親が来ないという意味で
\fB\-\-topo\-order\fR
に似ていますが、それ以外の場合、コミットはコミット日に従って順序付けられます。
.RE
.PP
\fB\-\-sparse\fR
.RS 4
デフォルトでは、出力には、表示されている1つの先端からのみ到達可能なマージが省略されています。このオプションにより、それらが表示されます。
.RE
.PP
\fB\-\-more=<n>\fR
.RS 4
通常、コマンドは、すべてのブランチの共通の祖先であるコミットを表示すると出力を停止します。このフラグは、それを超えて共通のコミットを <n> 回表示するようコマンドに指示します。 <n>が負の場合、コミットの祖先ツリーを表示せずに、指定された<reference>のみを表示します。
.RE
.PP
\fB\-\-list\fR
.RS 4
\fB\-\-more=\-1\fR
と同義です。
.RE
.PP
\fB\-\-merge\-base\fR
.RS 4
コミットリストを表示する代わりに、指定されたコミットの可能なマージベースを決定します。すべてのマージベースは、指定されたすべてのコミットに含まれます。 これは、
\fBgit-merge-base\fR(1)
が3つ以上のコミットの場合を処理する方法とは異なります。
.RE
.PP
\fB\-\-independent\fR
.RS 4
与えられた <reference> のうち、他の <reference> から到達できないもののみを表示します。
.RE
.PP
\fB\-\-no\-name\fR
.RS 4
各コミットの名前付け文字列(naming strings)を表示しません。
.RE
.PP
\fB\-\-sha1\-name\fR
.RS 4
ヘッドからコミットに到達するためのパスを使用してコミットに名前を付ける代わりに(たとえば、「master」の祖父母を意味する「master~2」)、オブジェクト名の一意のプレフィックスを使用してコミットに名前を付けます。
.RE
.PP
\fB\-\-topics\fR
.RS 4
指定された最初のブランチにないコミットのみを表示します。これは、すでに開発のメインラインにあるコミットを非表示にすることで、トピックブランチを追跡するのに役立ちます。
\fBgit show\-branch \-\-topics master topic1 topic2\fR
を指定すると、
\fBgit rev\-list {caret}master topic1 topic2\fR
で指定されたリビジョンが表示されます。
.RE
.PP
\fB\-g\fR, \fB\-\-reflog[=<n>[,<base>]] [<ref>]\fR
.RS 4
指定された参照の最新の参照ログエントリを<n>個表示します。<base>が指定されている場合、<n>エントリはそのエントリから戻ります。 <base>は、カウントまたは日付として指定できます。 明示的な<ref>パラメータが指定されていない場合、デフォルトで現在のブランチ(またはデタッチされている場合は
\fBHEAD\fR
)になります。
.RE
.PP
\fB\-\-color[=<when>]\fR
.RS 4
所属するブランチに対応する各コミットのステータス記号(\fB*\fR
\fB！\fR
\fB+\fR
\fB\-\fR
)に色を付けます。値は always (デフォルト) または never または auto である必要があります。
.RE
.PP
\fB\-\-no\-color\fR
.RS 4
構成ファイルでデフォルトのカラー出力が指定されている場合でも、カラー出力をオフにします。
\fB\-\-color=never\fR
と同じです。
.RE
.sp
\fB\-\-more@ と `\-list\fR と \fB\-independent\fR と \fB\-\-merge\-base\fR オプションは相互に排他的であることに注意してください。
.SH "OUTPUT"
.sp
N <references> が与えられた場合、最初のN行はコミットメッセージからの各1行説明です。 $GIT_DIR/HEAD が指すブランチヘッドには、アスタリスクの \fB*\fR 文字が接頭辞として付けられ、他のヘッドには、 \fB!\fR 文字が接頭辞として付けられます。
.sp
これらのN行に続いて、コミットごとに1行のログが表示され、N桁インデントされます。 コミットがI番目のブランチにある場合、I番目のインデント文字は \fB+\fR 記号を示します。それ以外の場合は、スペースが表示されます。 マージコミットは \fB\-\fR 記号で示されます。各コミットは、そのコミットに名前を付けるための拡張SHA\-1として使用できる短い名前が表示されます。
.sp
以下の例は、「master」と「fixes」と「mhf」の3つのブランチを示しています:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-branch master fixes mhf
* [master] Add \*(Aqgit show\-branch\*(Aq\&.
 ! [fixes] Introduce "reset type" flag to "git reset"
  ! [mhf] Allow "+remote:local" refspec to cause \-\-force when fetching\&.
\-\-\-
  + [mhf] Allow "+remote:local" refspec to cause \-\-force when fetching\&.
  + [mhf~1] Use git\-octopus when pulling more than one heads\&.
 +  [fixes] Introduce "reset type" flag to "git reset"
  + [mhf~2] "git fetch \-\-force"\&.
  + [mhf~3] Use \&.git/remote/origin, not \&.git/branches/origin\&.
  + [mhf~4] Make "git pull" and "git fetch" default to origin
  + [mhf~5] Infamous \*(Aqoctopus merge\*(Aq
  + [mhf~6] Retire git\-parse\-remote\&.
  + [mhf~7] Multi\-head fetch\&.
  + [mhf~8] Start adding the $GIT_DIR/remotes/ support\&.
*++ [master] Add \*(Aqgit show\-branch\*(Aq\&.
.fi
.if n \{\
.RE
.\}
.sp
.sp
これらの3つのブランチはすべて、共通のコミット[master]から分岐し、そのコミットメッセージは "Add \*(Aqgit show\-branch\*(Aq" です。 \fBfixes\fR ブランチは、 \fBgit reset\fR に \fBreset type\fR フラグを導入するコミットを1つ追加します。 \fBmhf\fR ブランチは、他の多くのコミットを追加します。 現在のブランチは \fBmaster\fR です。
.SH "EXAMPLES"
.sp
プライマリブランチを \fBrefs/heads\fR のすぐ下に置き、トピックブランチをそのサブディレクトリに保持する場合は、構成ファイルに以下の情報を含めると役立つ場合があります:
.sp
.if n \{\
.RS 4
.\}
.nf
[showbranch]
        default = \-\-topo\-order
        default = heads/*
.fi
.if n \{\
.RE
.\}
.sp
.sp
これにより、追加のパラメータがない \fBgit show\-branch\fR は、プライマリブランチのみを表示します。さらに、トピックブランチにいる場合は、それも表示されます。
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-branch \-\-reflog="10,1 hour ago" \-\-list master
.fi
.if n \{\
.RE
.\}
.sp
.sp
これは、1時間前の時点で先端から戻った10個のreflogエントリを示しています。 \fB\-\-list\fR がない場合、出力には、これらのヒントがトポロジ的に相互にどのように関連しているかも示されます。
.SH "CONFIGURATION"
.sp
このセクションの以下のすべては、 \fBgit-config\fR(1) ドキュメントの抜粋です。 内容は \fBgit-config\fR(1) ドキュメント にあるものと同一です:
.PP
showBranch\&.default
.RS 4
\fBgit-show-branch\fR(1)
のデフォルトのブランチセット。
\fBgit-show-branch\fR(1)
を参照してください。
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
