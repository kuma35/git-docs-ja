'\" t
.\"     Title: git-log
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-LOG" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-log \- コミットのログを表示
.SH "SYNOPSIS"
.sp
.nf
\fIgit log\fR [<options>] [<revision\-range>] [[\-\-] <path>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
コミットのログを表示します。
.sp
指定されたコミットから「親」リンクをたどることによって到達可能なコミットをリストしますが、その前に ^ が付いているコミットから到達可能なコミットは除外します。デフォルトでは、出力は時系列の逆順で表示されます。
.sp
これは集合演算と考えることができます。 コマンドラインで指定されたコミットのいずれかから到達可能なコミットのセットを形成し、 ^ が前に付いたコミットのいずれかから到達可能なコミットがそのセットから差し引かれます。差し引かれた残りのコミットは、コマンドの出力に出力されるものです。他のさまざまなオプションとパスパラメータ(pats parameters)を使用して、結果をさらに制限できます。
.sp
したがって、以下のコマンド:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git log foo bar ^baz
.fi
.if n \{\
.RE
.\}
.sp
.sp
は、「foo または bar から到達可能であるが、 baz からは到達できないすべてのコミットをリストする」を意味します。
.sp
特別な表記 \fB<commit1>\&.\&.<commit2>\fR は、 \fB^<commit1> <commit2>\fR の省略形として使用できます。たとえば、以下のどちらかを同じ意味で使用できます:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git log origin\&.\&.HEAD
$ git log HEAD ^origin
.fi
.if n \{\
.RE
.\}
.sp
.sp
もう1つの特別な表記法は、マージに役立つ \fB<commit1>\&.\&.\&.<commit2>\fR です。結果として得られるコミットのセットは、2つのオペランド間の対称差(symmetric difference)です。以下の2つのコマンドは同等です:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git log A B \-\-not $(git merge\-base \-\-all A B)
$ git log A\&.\&.\&.B
.fi
.if n \{\
.RE
.\}
.sp
.sp
このコマンドは、 \fBgit-rev-list\fR(1) コマンドに適用可能なオプションを使用して、表示内容と方法を制御し、そして \fBgit-diff\fR(1) コマンドに適用可能なオプションを使用して、各コミットによって導入される変更の表示方法を制御します。
.SH "OPTIONS"
.PP
\fB\-\-follow\fR
.RS 4
ファイル名が途中でリネームされていてもそこで中断することなく、そのファイルの一覧を続けて表示します(単一のファイルに対してのみ機能します)。
.RE
.PP
\fB\-\-no\-decorate\fR, \fB\-\-decorate[=short|full|auto|no]\fR
.RS 4
表示されているコミットのref名を出力します。 short が指定されている場合、ref名の接頭辞 refs/heads/ と refs/tags/ と refs/remotes/ は出力されません。 full が指定されている場合、完全なref名(接頭辞を含む)が出力されます。 auto が指定されている場合、出力が端末に送られると、ref名は short が指定されているかのように表示され、それ以外の場合はref名は表示されません。オプション
\fB\-\-decorate\fR
は
\fB\-\-decorate=short\fR
の省略形です。構成されている場合はデフォルトで構成値の
\fBlog\&.decorate\fR
になり、構成されていない場合は
\fBauto\fR
になります。
.RE
.PP
\fB\-\-decorate\-refs=<pattern>\fR, \fB\-\-decorate\-refs\-exclude=<pattern>\fR
.RS 4
候補ごとに、\fB\-\-decorate\-refs\-exclude\fR
に指定されたパターンのいずれにもマッチしない場合、または
\fB\-\-decorate\-refs\fR
に指定されたパターンのいずれにもマッチしない場合は、装飾に使用しないでください。
\fBlog\&.excludeDecoration\fR
構成オプションを使用すると、装飾からrefを除外できますが、明示的な
\fB\-\-decorate\-refs\fR
パターンは
\fBlog\&.excludeDecoration\fR
のマッチングをオーバーライドします。
.sp
これらのオプションまたは構成設定のいずれも指定されていない場合、参照が
\fBHEAD\fR
または
\fBrefs/heads/\fR
または
\fBrefs/remotes/\fR
または
\fBrefs/stash/\fR
または
\fBrefs/tags/\fR
にマッチする場合、参照は装飾(decoration)として使用されます。
.RE
.PP
\fB\-\-clear\-decorations\fR
.RS 4
このオプションを指定すると、以前のすべての
\fB\-\-decorate\-refs\fR
または
\fB\-\-decorate\-refs\-exclude\fR
オプションがクリアされ、すべての参照が含まれるようにデフォルトの装飾(decoration)フィルタが緩和されます。 このオプションは、構成値
\fBlog\&.initialDecorationSet\fR
が
\fBall\fR
に設定されている場合に想定されます。
.RE
.PP
\fB\-\-source\fR
.RS 4
各コミットがコマンドラインで指定のコミットのいずれかから到達できる祖先である場合、当該コミット毎にコマンドラインで指定のコミットのref名で表示します。
.RE
.PP
\fB\-\-[no\-]mailmap\fR, \fB\-\-[no\-]use\-mailmap\fR
.RS 4
mailmapファイルを使用して、作者名(author names)とコミッター名(committer names)と電子メールアドレス(email addresses)を、正式な本名と電子メールアドレスにマップします。
\fBgit-shortlog\fR(1)
参照。
.RE
.PP
\fB\-\-full\-diff\fR
.RS 4
このフラグがない場合、
\fBgit log \-p <path>\&.\&.\&.\fR
は、指定されたパスに関連(touch)するコミットを示し、その指定されたパスについての差分を取ります。これにより、指定されたパスに関連するコミットの完全な差分が表示されます。これは、 "<path>\&..." がコミットのみを制限し、それらのコミットの差分を制限しないことを意味します。
.sp
これは、例えば
\fB\-\-stat\fR
によって生成されたものなど、すべての差分ベースの出力タイプに影響することに注意してください。
.RE
.PP
\fB\-\-log\-size\fR
.RS 4
各コミットの出力に \(lqlog size <number>\(rq という行を含めます。ここで、 <number> はそのコミットのメッセージの長さ(バイト単位)です。プログラムがスペースをコミットのメッセージ読み込み前に割り当てられるようにして、
\fBgit log\fR
出力からログメッセージを読み取るツールを高速化することを目的としています。
.RE
.PP
\fB\-L<start>,<end>:<file>\fR, \fB\-L:<funcname>:<file>\fR
.RS 4
<file> 内で、
\fB<start>,<end>\fR
、または正規表現の関数名 <funcname> で指定された行範囲をトレースします。pathspec リミッターを指定することはできません。これは現在、単一のリビジョンから開始するウォークに制限されています。つまり、0個または1個の正のリビジョン引数のみを指定でき、 <start> と <end> (または <funcname>) が開始リビジョンに存在する必要があります。このオプションは複数回指定できます。これは
\fB\-\-patch\fR
オプションの機能を含んでいます。パッチ出力は
\fB\-\-no\-patch\fR
を使用して抑制できますが、他の差分形式(つまり、
\fB\-\-raw\fR,
\fB\-\-numstat\fR,
\fB\-\-shortstat\fR,
\fB\-\-dirstat\fR,
\fB\-\-summary\fR,
\fB\-\-name\-only\fR,
\fB\-\-name\-status\fR,
\fB\-\-check\fR)は現在実装されていません。
.sp
<start> と <end> は、以下のいずれかの形式です:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
数値
.sp
<start> または <end> が数値の場合、絶対行番号を指定します(行は1から数えます)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB/regex/\fR
.sp
この形式は、指定されたPOSIX正規表現に一致する最初の行を使用します。 <start> が正規表現の場合、前の
\fB\-L\fR
範囲の末尾から検索します。それ以外の場合は、ファイルの先頭から検索します。 <start> が
\fB^/regex/\fR
の場合、ファイルの先頭から検索します。 <end> が正規表現の場合、 <start> で指定された行から検索開始します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
+offset or \-offset
.sp
これは <end> に対してのみ有効であり、 <start> で指定された行の前後の行数を指定します。
.RE
.sp
<start> と <end> の代わりに
\fB:<funcname>\fR
が指定されている場合、これは <funcname> に一致する最初の関数名行から次の関数名行までの範囲を示す正規表現です。
\fB:<funcname>\fR
は、前の
\fB\-L\fR
範囲の末尾から検索します。それ以外の場合は、ファイルの先頭から検索します。
\fB^:<funcname>\fR
はファイルの先頭から検索します。関数名は、
\fBgit diff\fR
がパッチハンクヘッダーを処理するのと同じ方法で決定されます(\fBgitattributes\fR(5)
の「Defining a custom hunk\-header」参照)。
.RE
.PP
<revision\-range>
.RS 4
指定されたリビジョン範囲のコミットのみを表示します。 <revision\-range> が指定されていない場合、デフォルトで
\fBHEAD\fR
(つまり、現在のコミットにつながる履歴全体)になります。
\fBorigin\&.\&.HEAD\fR
は、現在のコミット(つまり、\fBHEAD\fR)から到達可能なすべてのコミットを指定しますが、`origin`からは指定しません。 <revision\-range> の綴り方の完全なリストについては、
\fBgitrevisions\fR(7)
の「Specifying Ranges」節を参照してください。
.RE
.PP
[\-\-] <path>\&...
.RS 4
指定されたパスに一致するファイルがどのようになったかを説明するのに必要十分なコミットのみを表示します。詳細およびその他の簡略化モードについては、以下の「History Simplification」を参照してください。
.sp
混乱が生じた場合、パスをオプションまたはリビジョン範囲から分離するために、パスの前に
\fB\-\-\fR
を付ける必要がある場合があります。
.RE
.SS "Commit Limiting"
.sp
ここで説明されている特別な表記法を使用してリストする必要があるコミットの範囲を指定することに加えて、追加のコミット制限が適用される場合があります。
.sp
より多くのオプションを使用すると、通常、出力がさらに制限されます(たとえば、\fB\-\-since=<date1>`は\fR<date1>\fBより新しいコミットに制限され、\fR\-\-grep=<pattern>\fBと一緒に使用すると、ログメッセージに\fR<pattern>`と一致する行があるコミットにさらに制限されます)。
.sp
注意: これらは、`\-\-reverse`などのコミット順序およびフォーマットオプションの前に適用されることに注意してください。
.PP
\fB\-<number>\fR, \fB\-n <number>\fR, \fB\-\-max\-count=<number>\fR
.RS 4
出力するコミットの数を制限します。
.RE
.PP
\fB\-\-skip=<number>\fR
.RS 4
コミット出力の表示を開始する前に、number 個のコミットをスキップします。
.RE
.PP
\-\-since=<date>, \fB\-\-after=<date>\fR
.RS 4
指定の日付よりも新しいコミットを表示します。
.RE
.PP
\fB\-\-since\-as\-filter=<date>\fR
.RS 4
特定の日付より新しいすべてのコミットを表示します。 これは、特定の日付より古い最初のコミットで停止するのではなく、範囲内のすべてのコミットを訪問します。
.RE
.PP
\fB\-\-until=<date>\fR, \fB\-\-before=<date>\fR
.RS 4
指定の日付より古いコミットを表示します。
.RE
.PP
\fB\-\-author=<pattern>\fR, \fB\-\-committer=<pattern>\fR
.RS 4
コミット出力を、指定されたパターン(正規表現)に一致する作者(author)/コミッター(committer)ヘッダー行を持つものに制限します。複数の
\fB\-\-author=<pattern>\fR
がある場合、作者が指定されたパターンのいずれかに一致するコミットが選択されます(複数の
\fB\-\-committer=<pattern>\fR
の場合も同様)。
.RE
.PP
\fB\-\-grep\-reflog=<pattern>\fR
.RS 4
コミット出力を、指定されたパターン(正規表現)に一致するreflogエントリを持つものに制限します。複数の`\-\-grep\-reflog`を使用すると、指定されたパターンのいずれかに一致するreflogメッセージを持つコミットが選択されます。`\-\-walk\-reflogs`が使用されていない限り、このオプションを使用するとエラーになります。
.RE
.PP
\fB\-\-grep=<pattern>\fR
.RS 4
コミット出力を、指定されたパターン(正規表現)に一致するログメッセージを持つものに制限します。複数の`\-\-grep=<pattern>\fBを使用すると、指定されたパターンのいずれかにメッセージが一致するコミットが選択されます(全てに一致するコミットだけを選択したい場合、\fR\-\-all\-match`を参照してください)。
.sp
`\-\-notes`が有効な場合、ノートからのメッセージは、ログメッセージの一部であるかのようにマッチングされます。
.RE
.PP
\fB\-\-all\-match\fR
.RS 4
コミット出力を、少なくとも1つに一致するものではなく、指定されたすべての`\-\-grep`に一致するものに制限します。
.RE
.PP
\fB\-\-invert\-grep\fR
.RS 4
コミット出力を、`\-\-grep=<pattern>`で指定されたパターンと一致しないログメッセージを持つものに制限します。
.RE
.PP
\fB\-i\fR, \fB\-\-regexp\-ignore\-case\fR
.RS 4
大文字小文字に関係なく、正規表現の制限パターンに一致します。
.RE
.PP
\fB\-\-basic\-regexp\fR
.RS 4
制限パターンを基本正規表現として扱います。これがデフォルトです。
.RE
.PP
\fB\-E\fR, \fB\-\-extended\-regexp\fR
.RS 4
制限パターンを、デフォルトの基本正規表現の代わりに拡張正規表現として扱います。
.RE
.PP
\fB\-F\fR, \fB\-\-fixed\-strings\fR
.RS 4
制限パターンを固定文字列として扱います(パターンを正規表現として解釈しないでください)。
.RE
.PP
\fB\-P\fR, \fB\-\-perl\-regexp\fR
.RS 4
制限パターンをPerl互換の正規表現として扱います。
.sp
これらのタイプの正規表現のサポートは、コンパイル時オプションに依存します。Gitが当該のサポート付きでコンパイルされていない場合、このオプションを提供すると、Gitが死にます(die)。
.RE
.PP
\fB\-\-remove\-empty\fR
.RS 4
指定されたパスがツリーから見えなくなったら停止(stop)します。
.RE
.PP
\fB\-\-merges\fR
.RS 4
マージコミットのみを印刷します。これは`\-\-min\-parents=2`とまったく同じです。
.RE
.PP
\fB\-\-no\-merges\fR
.RS 4
複数の親を持つコミットを出力しない。これは`\-\-max\-parents=1`とまったく同じです。
.RE
.PP
\fB\-\-min\-parents=<number>\fR, \fB\-\-max\-parents=<number>\fR, \fB\-\-no\-min\-parents\fR, \fB\-\-no\-max\-parents\fR
.RS 4
量の多少に関わらず、とにかく複数の親コミットがあるコミットのみを表示します。特に、\fB\-\-max\-parents=1`は\fR\-\-no\-merges`と同じであり、\fB\-\-min\-parents=2`は\fR\-\-merges`と同じです。\fB\-\-max\-parents=0`はすべてのルートコミットを提供し、\fR\-\-min\-parents=3`はすべてのタコ足マージ(octopus merges)を示します。
.sp
\fB\-\-no\-min\-parents`と\fR\-\-no\-max\-parents`は、これらの制限を(制限なしに)再度リセットします。同等の形式は、\fB\-\-min\-parents=0\fR(すべてのコミットに0個以上の親があります)および`\-\-max\-parents=\-1`(マイナスの数は上限がないことを示します)です。
.RE
.PP
\fB\-\-first\-parent\fR
.RS 4
インクルードするコミットを探すとき、マージ・コミットの最初の親コミットのみをたどります。 このオプションは、特定のトピックブランチの進化を表示するときに、より良い概要を提供できます。トピックブランチへのマージは、時々更新されるアップストリームに調整することだけである傾向があり、このオプションを使用すると、そのようなマージによって履歴に取り込まれた個々のコミットを無視できます。
.sp
このオプションは、マージコミットのデフォルトのdiff形式も`first\-parent`に変更します。詳細については、`\-\-diff\-merges=first\-parent`を参照してください。
.RE
.PP
\fB\-\-exclude\-first\-parent\-only\fR
.RS 4
(\fB^\fR
を使用して)除外するコミットを見つけるときは、判明したマージ・コミットの最初の親コミットのみに従います。 任意のマージが有効なトピック・ブランチの変更になる可能性がある場合、これを使用して、リモート・ブランチから分岐したポイントからトピック・ブランチ内の一連の変更を見つけることができます。
.RE
.PP
\fB\-\-not\fR
.RS 4
次に現れる
\fB\-\-not\fR
までの間、後続のすべてのリビジョン指定子の
\fB^\fR(カレット)接頭辞(またはその欠如)の意味を逆にします。
.RE
.PP
\fB\-\-all\fR
.RS 4
\fBrefs/\fR
内のすべてのrefが HEAD とともに、コマンドラインに <commit> としてリストされているかのように見せかけます。
.RE
.PP
\fB\-\-branches[=<pattern>]\fR
.RS 4
\fBrefs/heads\fR
内のすべてのrefがコマンドラインに <commit> としてリストされているかのように見せかけます。 <pattern> が指定されている場合、ブランチを指定されたシェルグロブ(shell glob)に一致するものに制限します。パターンに "?" または "*" または "[" がない場合、最後に "/*" が含まれます。
.RE
.PP
\fB\-\-tags[=<pattern>]\fR
.RS 4
\fBrefs/tags\fR
内のすべてのrefがコマンドラインに <commit> としてリストされているかのように見せかけます。 <pattern> が指定されている場合は、指定されたシェルグロブ(shell glob)に一致するタグにタグを制限します。パターンに "?" または "*" または "[" がない場合、最後に "/*" が含まれます。
.RE
.PP
\fB\-\-remotes[=<pattern>]\fR
.RS 4
\fBrefs/remotes\fR
内のすべてのrefがコマンドラインに <commit> としてリストされているかのように見せかけます。 <pattern> が指定されている場合、リモート追跡ブランチを指定されたシェルグロブ(shell glob)に一致するものに制限します。パターンに "?" または "*" または "[" がない場合、最後に "/*" が含まれます。
.RE
.PP
\fB\-\-glob=<glob\-pattern>\fR
.RS 4
シェルグロブ <glob\-pattern> に一致するすべてのrefがコマンドラインに <commit> としてリストされているかのように見せかけます。先頭の
\fBrefs/\fR
は、欠落している場合は自動的に先頭に追加されます。パターンに "?" または "*" または "[" がない場合、最後に "/*" が含まれます。
.RE
.PP
\fB\-\-exclude=<glob\-pattern>\fR
.RS 4
次の
\fB\-\-all\fR
または
\fB\-\-branches\fR
または
\fB\-\-tags\fR
または
\fB\-\-remotes\fR
または
\fB\-\-glob\fR
が別の方法で考慮する <glob\-pattern> に一致するrefを含めないでください。このオプションを繰り返すと、次の
\fB\-\-all\fR
または
\fB\-\-branches\fR
または
\fB\-\-tags\fR
または
\fB\-\-remotes\fR
または
\fB\-\-glob\fR
オプションまで除外パターンが蓄積されます(他のオプションまたは引数は、蓄積されたパターンをクリアしません)。
.sp
与えられたパターンは、それぞれ
\fB\-\-branches\fR
または
\fB\-\-tags\fR
または
\fB\-\-remotes\fR
に適用される場合、
\fBrefs/heads\fR
または
\fBrefs/tags\fR
または
\fBrefs/remotes\fR
で始まるべきではありません。
\fB\-\-glob\fR
または
\fB\-\-all\fR
に適用する場合は、
\fBrefs/\fR
で始める必要があります。末尾の "/*" を意図している場合は、明示的に指定する必要があります。
.RE
.PP
\fB\-\-reflog\fR
.RS 4
reflogsで言及されているすべてのオブジェクトがコマンドラインに <commit> としてリストされているかのように見せかけます。
.RE
.PP
\fB\-\-alternate\-refs\fR
.RS 4
代替リポジトリのref先端として言及されているすべてのオブジェクトがコマンドラインにリストされているかのように見せかけます。代替リポジトリは、オブジェクトディレクトリが`objects/info/alternates`で指定されているリポジトリです。インクルードされたオブジェクトのセットは、`core\&.alternateRefsCommand`などによって変更できます。\fBgit-config\fR(1)を参照してください。
.RE
.PP
\fB\-\-single\-worktree\fR
.RS 4
デフォルトでは、作業ツリーが複数ある場合、\fB\-\-all`と\fR\-reflog`と`\-\-indexed\-objects`では、すべての作業ツリーが検査されます(\fBgit-worktree\fR(1)を参照)。このオプションは、現在の作業ツリーのみを調べるように強制します。
.RE
.PP
\fB\-\-ignore\-missing\fR
.RS 4
入力に無効なオブジェクト名が含まれている場合、そもそもその不正な入力が行われていないかのように見せかけます。
.RE
.PP
\fB\-\-bisect\fR
.RS 4
コマンドラインで、bad bisection ref
\fBrefs/bisect/bad\fR
がリストされ、その後に
\fB\-\-not\fR
と good bisection ref
\fBrefs/bisect/good\-*\fR
が続くかのように見せかけます。
.RE
.PP
\fB\-\-stdin\fR
.RS 4
コマンドラインにリストされている <commit> に加えて、標準入力からそれらを読み取ります。
\fB\-\-\fR
区切り文字が表示された場合は、コミットの読み取りを停止し、パスの読み取りを開始して結果を制限します。
.RE
.PP
\fB\-\-cherry\-mark\fR
.RS 4
\fB\-\-cherry\-pick\fR（以下を参照）と同様ですが、同等のコミットを省略せずに
\fB=\fR
と印し、同等でないコミットを
\fB+\fR
と印します。
.RE
.PP
\fB\-\-cherry\-pick\fR
.RS 4
コミットの組を対称差(symmetric difference)に制限する場合、「反対側」の別のコミットと同じ変更を導入するコミットを省略します。
.sp
たとえば、\fBA\fR
と
\fBB\fR
の2つのブランチがある場合、それらの片側だけですべてのコミットを一覧表示する通常の方法は、
\fB\-\-left\-right\fR
を使用することです(\fB\-\-left\-right\fR
オプションの説明の以下の例を参照してください)。ただし、他のブランチからは(ブランチAと重複しない)厳選されたコミットが表示されます(たとえば、「3rd onb」はブランチAからチェリーピックされる可能性があります)。このオプションを使用すると、そのようなコミットのペアは出力から除外されます。
.RE
.PP
\fB\-\-left\-only\fR, \fB\-\-right\-only\fR
.RS 4
リストは、対称差のそれぞれの側でのみコミットします。つまり、\fB\-\-left\-right`で `<\fR
と印されるのだけか、あるいは`\-\-left\-right`で`>`と印されるものだけです。
.sp
たとえば、\fB\-\-cherry\-pick \-\-right\-only A\&.\&.\&.B`は、`A`にある、または`A`のコミットとパッチと同等のコミットを`B`から省略します。つまり、これは`git cherry A B`からの\fR+\fBコミットをリストします。より正確に書くと、\fR\-\-cherry\-pick \-\-right\-only \-\-no\-merges`により正確なリストを提供します。
.RE
.PP
\fB\-\-cherry\fR
.RS 4
`\-\-right\-only \-\-cherry\-mark \-\-no\-merges`の同義語です。出力を私たちの側のコミットに制限し、フォークされた履歴の反対の側に適用されたものを、`git cherry upstream mybranch`と同様に`git log \-\-cherry upstream\&...mybranch`で印するのに役立ちます。
.RE
.PP
\fB\-g\fR, \fB\-\-walk\-reflogs\fR
.RS 4
コミットの祖先チェーンをたどる代わりに、reflogエントリを最新のものから古いものに移動します。このオプションを使用する場合、除外するコミットを指定することはできません(つまり、 "^commit" や
\fBcommit1\&.\&.commit2\fR
や
\fBcommit1\&.\&.\&.commit2\fR
表記は使用できません)。
.sp
(明らかな理由で、)\fBoneline`と`reference`以外の\fR\-\-pretty`形式では、これにより、出力にreflogから取得された2行の追加情報が含まれます。出力のreflog指定子は、\fBref@{Nth}\fR
(\fBNth\fR
はreflogの逆時系列インデックス(reverse\-chronological index))または
\fBref@{timestamp}\fR
(そのエントリのタイムスタンプ付き)として表示されます。表示は下記のいくつかのルールに依存します:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
開始点が
\fBref@{Nth}\fR
として指定されている場合は、インデックス形式を表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
開始点が
\fBref@{now}\fR
として指定されている場合は、タイムスタンプ形式を表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
上記のどちらも使用されていないが、コマンドラインで`\-\-date`が指定されている場合は、`\-\-date`で要求された形式でタイムスタンプを表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
それ以外の場合は、インデックス形式を表示します。
.RE
.sp
\fB\-\-pretty = oneline`では、コミットメッセージの前にこの情報が同じ行に付けられます。このオプションを\fR\-\-reverse`と組み合わせることはできません。\fBgit-reflog\fR(1)も参照してください。
.sp
`\-\-pretty=reference`では、この情報はまったく表示されません。
.RE
.PP
\fB\-\-merge\fR
.RS 4
マージが失敗した後、競合があり、マージするすべてのheadに存在しないファイルに関連(touch)するrefを表示します。
.RE
.PP
\fB\-\-boundary\fR
.RS 4
除外された境界コミットを出力します。 境界コミットの前には `\-`が付いています。
.RE
.SS "History Simplification"
.sp
特定の<path>を変更するコミットなど、履歴の一部のみに関心がある場合があります。ただし、「履歴の簡略化」(History Simplification)は2つの部分から成ります。履歴を簡略化するためにはさまざまな戦略があるためです。その1つはコミットの選択であり、もう1つはそれを行う方法です。
.sp
以下のオプションは、表示するコミットを選択します:
.PP
<paths>
.RS 4
指定された<パス>を変更するコミットが選択されます。
.RE
.PP
\fB\-\-simplify\-by\-decoration\fR
.RS 4
いくつかのブランチまたはタグによって参照されるコミットが選択されます。
.RE
.sp
注意: 意味のある重要な履歴のために、追加のコミットを表示できることに注意してください。
.sp
以下のオプションは、簡略化の実行方法に影響します。
.PP
Default mode
.RS 4
履歴を、ツリーの最終状態を説明する最も単純な履歴に単純化します。最終結果が同じである場合(つまり、同じコンテンツのブランチをマージする場合)、いくつかの傍流ブランチ(side branches)を削除するため、最も単純です。
.RE
.PP
\fB\-\-show\-pulls\fR
.RS 4
デフォルトモードからのすべてのコミットを含めますが、最初の親へのTREESAMEではなく、後の親へのTREESAMEであるマージコミットも含めます。このモードは、ブランチに変更を「最初に導入した」マージコミットを表示するのに役立ちます。(訳注:TREESAME=pathspecが全く同一であるツリー)
.RE
.PP
\fB\-\-full\-history\fR
.RS 4
デフォルトモードと同じですが、一部の履歴を削除しません。
.RE
.PP
\fB\-\-dense\fR
.RS 4
選択したコミットのみが表示され、重大で意味のある履歴を持つコミットもいくつか表示されます。
.RE
.PP
\fB\-\-sparse\fR
.RS 4
簡略化された履歴内のすべてのコミットが表示されます。
.RE
.PP
\fB\-\-simplify\-merges\fR
.RS 4
このマージに寄与する選択されたコミットがないため、結果の履歴からいくつかの不要なマージを削除するための`\-\-full\-history`への追加オプション。
.RE
.PP
\fB\-\-ancestry\-path[=<commit>]\fR
.RS 4
表示するコミットの範囲を指定すると(例:
\fBcommit1\&.\&.commit2\fR
または
\fBcommit2 ^commit1\fR)、その範囲内で <commit> の祖先、<commit> の子孫、または <commit> 自身であるコミットのみを表示します。 コミットが指定されていない場合は、\fBcommit1\fR
(範囲の除外部分) を <commit> として使用します。 複数回渡すことができます。 その場合、あるコミットが指定されたコミットのいずれかであるか、それらのいずれかの祖先または子孫である場合、そのコミットは含まれます。
.RE
.sp
より詳細な説明は以下のとおりです。
.sp
<paths> として \fBfoo\fR を指定したとします。 \fBfoo\fR !TREESAME を変更するコミットを呼び出し、残りをTREESAMEと呼びます。( \fBfoo\fR のためにフィルタリングされた差分では、それぞれ異なって見えたりたり等しく見えたりします。）
.sp
以下、簡略化設定の違いを説明するために、同じ履歴例を使います。このコミットグラフでは、ファイル \fBfoo\fR をフィルタリングしていると想定しています:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\-N\-\-\-O\-\-\-P\-\-\-Q
         /     /   /   /   /   /
        I     B   C   D   E   Y
         \e   /   /   /   /   /
          `\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq   X
.fi
.if n \{\
.RE
.\}
.sp
.sp
履歴 A\-\-\-Q の水平線は、各マージの最初の親と見なされます。その各コミットは以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBI\fR
は最初のコミットであり、ファイル foo が内容 \(lqasdf\(rq で存在し、ファイル quux は内容 \(lqquux\(rq で存在します。最初のコミットは空のツリーと比較されるため、\fBI\fR
は !TREESAME です。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBA\fR
では、 foo には \(lqfoo\(rq だけが含まれています。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBB\fR
には
\fBA\fR
と同じ変更が含まれています。そのマージ
\fBM\fR
は些細なことであり、したがってすべての親にとって TREESAME です。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBC\fR
は
\fBfoo\fR
を変更しませんが、そのマージ
\fBN\fR
はそれを \(lqfoobar\(rq に変更するので、どの親にとっても TREESAME ではありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBD\fR
は
\fBfoo\fR
を \(lqbaz\(rq に設定します。そのマージ
\fBO\fR
は、
\fBN\fR
と
\fBD\fR
から \(lqfoobarbaz\(rq への文字列を結合します。つまり、どの親にとっても TREESAME ではありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBE\fR
は
\fBquux\fR
を \(lqxyzzy\(rq に変更し、そのマージ
\fBP\fR
は文字列を \(lqquuxxyzzy\(rq に結合します。
\fBP\fR
は
\fBO\fR
に対して TREESAME ですが、
\fBE\fR
に対してはそうではありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBX\fR
は、新ファイル
\fBside\fR
を追加し、
\fBY\fR
がそれを変更した独立したルートコミットです。
\fBY\fR
は
\fBX\fR
へのTREESAMEです。そのマージ
\fBQ\fR
は
\fBP\fR
に
\fBside\fR
を追加し、
\fBQ\fR
は
\fBP\fR
にはTREESAMEですが、\fBY\fR
に対してはそうではありません。
.RE
.sp
\fBrev\-list\fR は、 \fB\-\-full\-history\fR および/または、( \fB\-\-parents\fR または \fB\-\-children\fR を介して)親の書き換えが使用されているかどうかに基づいて、コミットを含めたり除外したりして、履歴を逆方向にウォークスルーします。以下の設定が可能です。
.PP
Default mode
.RS 4
コミットは、どの親に対してもTREESAMEでない場合に含まれます(これは変更できますが、以下の
\fB\-\-sparse\fR
を参照してください)。コミットがマージであり、一方の親に対するTREESAMEであった場合は、その親のみをフォローします。(TREESAMEの親が複数ある場合でも、そのうちの1つだけをフォローします)。それ以外の場合は、すべての親をフォローします。
.sp
これにより、以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-N\-\-\-O
         /     /   /
        I\-\-\-\-\-\-\-\-\-D
.fi
.if n \{\
.RE
.\}
.sp
TREESAMEの親のみに従うルールが利用可能な場合は、
\fBB\fR
を検討対象から完全に削除したことに注意してください。
\fBC\fR
は
\fBN\fR
を介して考慮されましたが、しかしそれはTREESAMEです。ルートコミットは空のツリーと比較されるため、
\fBI\fR
は !TREESAME です。
.sp
親子関係は
\fB\-\-parents\fR
でのみ表示されますが、デフォルトモードで選択されたコミットには影響しないため、親の行を示しました。
.RE
.PP
\fB\-\-full\-history without parent rewriting\fR
.RS 4
このモードは、デフォルトとはある一点で異なります。つまり、いずれかの親に対してTREESAMEであっても、常にマージのすべての親に従います。マージの複数の側にコミットが含まれている場合でも、これはマージ自体が含まれていることを意味するものではありません！ 例では以下のようになります。
.sp
.if n \{\
.RS 4
.\}
.nf
        I  A  B  N  D  O  P  Q
.fi
.if n \{\
.RE
.\}
.sp
\fBM\fR
は、両方の親にとってTREESAMEであるため、除外されました。
\fBE\fR
と
\fBC\fR
と
\fBB\fR
をすべて巡りましたが、
\fBB\fR
だけが !TREESAME だったので、他は表示されません。
.sp
注意: 親の書き換え(rewrite)がないと、コミット間の親子関係について話す(talk)ことは実際には不可能であるため、それらが切断されている(disconnected)ことを示していることに注意してください。
.RE
.PP
\fB\-\-full\-history with parent rewriting\fR
.RS 4
通常のコミットは !TREESAME の場合にのみ含まれます(これは変更できますが、以下の
\fB\-\-sparse\fR
を参照してください)。
.sp
マージは常に含まれます。ただし、親リストは書き直されます。各親に沿って、自分自身に含まれていないコミットを削除します。 これにより以下のようになります。
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\-N\-\-\-O\-\-\-P\-\-\-Q
         /     /   /   /   /
        I     B   /   D   /
         \e   /   /   /   /
          `\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
上記を書き直さずに
\fB\-\-full\-history\fR
と比較してください。
\fBE\fR
はTREESAMEであるため削除されましたが、Pの親リストは
\fBE\fR
の親
\fBI\fR
を含むように書き直されていることに注意してください。
\fBC\fR
と
\fBN\fR
および
\fBX\fR
と
\fBY\fR
と
\fBQ\fR
についても同じことが起こりました。
.RE
.sp
上記の設定に加えて、あなたはTREESAMEが包含に影響を与えるかどうかを変更できます:
.PP
\fB\-\-dense\fR
.RS 4
巡ったコミットは、親にとってTREESAMEでない場合に含まれます。
.RE
.PP
\fB\-\-sparse\fR
.RS 4
巡ったすべてのコミットが含まれます。
.sp
\fB\-\-full\-history\fR
がなくても、これによりマージが単純化されることに注意してください。親の1つがTREESAMEの場合、その1つだけに従うため、マージの反対側を巡ることはありません。
.RE
.PP
\fB\-\-simplify\-merges\fR
.RS 4
最初に、親を書き換えた
\fB\-\-full\-history\fR
と同じ方法で履歴グラフを作成します(上記を参照)。
.sp
それから、以下のルールに従って、各コミット
\fBC\fR
を最終履歴内の置換
\fBC\*(Aq\fR
に単純化します:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBC\*(Aq\fR
を
\fBC\fR
にセットします。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBC\*(Aq\fR
の各親
\fBP\fR
をその簡略化された
\fBP\*(Aq\fR
に置き換えます。その過程で、他の親の祖先であるか、ルートである親を削除すると、TREESAMEが空のツリーにコミットされ、重複が削除されますが、TREESAMEであるすべての親を削除しないように注意してください。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
この親の書き換え後、
\fBC\*(Aq\fR
がルートまたはマージコミット(0または >1 の親を持つ)、境界コミット、または !TREESAMEである場合、それは残ります。それ以外の場合は、唯一の親に置き換えられます。
.RE
.sp
この効果は、親の書き換えを使用した
\fB\-\-full\-history\fR
と比較することで最もよく示されます。例は以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\-N\-\-\-O
         /     /       /
        I     B       D
         \e   /       /
          `\-\-\-\-\-\-\-\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
注意:
\fB\-\-full\-history\fR
に対する
\fBN\fR
と
\fBP\fR
と
\fBQ\fR
の主な違いに注意してください:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBN\fR
の親リストは、他の親
\fBM\fR
の祖先であるため、
\fBI\fR
が削除されました。それでも、 !TREESAME なので
\fBN\fR
が残りました。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBP\fR
の親リストも同様に
\fBI\fR
が削除されました。
\fBP\fR
は、親が1つで TREESAMEであるため、完全に削除されました。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBQ\fR
の親リストでは、
\fBY\fR
が
\fBX\fR
に簡略化されていました。その後、
\fBX\fR
はTREESAMEルートであったため、削除されました。
\fBQ\fR
は、親が1つで TREESAMEであるため、完全に削除されました。
.RE
.RE
.sp
利用可能な別の簡略化モードがあります:
.PP
\fB\-\-ancestry\-path[=<commit>]\fR
.RS 4
表示されるコミットを <commit> の祖先、または <commit> の子孫、または <commit> 自身に制限します。
.sp
ユースケースの例として、以下のコミット履歴について考えます:
.sp
.if n \{\
.RS 4
.\}
.nf
            D\-\-\-E\-\-\-\-\-\-\-F
           /     \e       \e
          B\-\-\-C\-\-\-G\-\-\-H\-\-\-I\-\-\-J
         /                     \e
        A\-\-\-\-\-\-\-K\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-L\-\-M
.fi
.if n \{\
.RE
.\}
.sp
通常の
\fBD\&.\&.M\fR
は、
\fBM\fR
の祖先であるコミットのセットを計算しますが、
\fBD\fR
の祖先であるコミットは除外します。 これは、「
\fBM\fR
には
\fBD\fR
には存在しなかったものがある」という意味で、
\fBD\fR
以降の
\fBM`に至るまでの歴史に何が起こったのかを知るのに役立ちます。この例の結果は、 `A\fR
と
\fBB\fR
(そしてもちろん
\fBD\fR
自体)を除くすべてのコミットになります。
.sp
ただし、
\fBM\fR
のコミットが
\fBD\fR
で入ったバグで汚染されており、修正が必要な場合は、実際には
\fBD\fR
の子孫である
\fBD\&.\&.M\fR
のサブセットのみを表示する必要があります。つまり、
\fBC\fR
と
\fBK\fR
を除外します。これはまさに
\fB\-\-ancestry\-path\fR
オプションが行うことです。これを
\fBD\&.\&.M\fR
範囲に適用すると、以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
                E\-\-\-\-\-\-\-F
                 \e       \e
                  G\-\-\-H\-\-\-I\-\-\-J
                               \e
                                L\-\-M
.fi
.if n \{\
.RE
.\}
.sp
\fB\-\-ancestry\-path\fR
の代わりに
\fB\-\-ancestry\-path=D\fR
を使用することもできます。これは、\fBD\&.\&.M\fR
範囲に適用された場合と同じことを意味しますが、より明示的です。
.sp
代わりに、この範囲内の特定のトピックに関心があり、そのトピックによって影響を受けるすべてのコミットに関心がある場合、祖先パスにそのトピックを含む
\fBD\&.\&.M\fR
のサブセットのみを表示したい場合があります。 たとえば、\fB\-\-ancestry\-path=H D\&.\&.M\fR
を使用すると、以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
                E
                 \e
                  G\-\-\-H\-\-\-I\-\-\-J
                               \e
                                L\-\-M
.fi
.if n \{\
.RE
.\}
.sp
一方、\fB\-\-ancestry\-path=K D\&.\&.M\fR
は以下のようになります
.sp
.if n \{\
.RS 4
.\}
.nf
                K\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-L\-\-M
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
別のオプション \fB\-\-show\-pulls\fR について説明する前に、新しいサンプル履歴を作成する必要があります。
.sp
簡略化された履歴を見るときにユーザーが直面する一般的な問題は、ファイルを変更したことがわかっているコミットが、ファイルの簡略化された履歴に表示されないことです。そこで、新しい例を示し、その場合に \fB\-\-full\-history\fR や \fB\-\-simplify\-merges\fR などのオプションがどのように機能するかを示しましょう。
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\-\-\-C\-\-N\-\-\-O\-\-\-P
         /     / \e  \e  \e/   /   /
        I     B   \e  R\-\*(Aq`\-Z\*(Aq   /
         \e   /     \e/         /
          \e /      /\e        /
           `\-\-\-X\-\-\*(Aq  `\-\-\-Y\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
この例では、 \fBI\fR が \fBfile\&.txt\fR を作成し、それが \fBA\fR と`B` と \fBX\fR にてさまざまな方法で変更されたとします。ひとり親のコミット \fBC\fR と \fBZ\fR と \fBY\fR は \fBfile\&.txt\fR を変更していません。マージコミット \fBM\fR は、マージの競合を解決して、 \fBA\fR と \fBB\fR の両方の変更を含めることによって作成されたため、どちらにもTREESAMEではありません。ただし、マージコミット \fBR\fR は、 \fBM\fR の \fBfile\&.txt`の内容を無視し、 `X\fR の \fBfile\&.txt\fR の内容のみを取得することによって作成されました。 したがって、 \fBR\fR は \fBX\fR へのTREESAMEですが、 \fBM\fR はそうではありません。最後に、 \fBN\fR を作成するための自然なマージ解決は、 \fBR\fR で \fBfile\&.txt\fR の内容を取得することです。したがって、 \fBN\fR は \fBC\fR ではなく \fBR\fR へのTREESAMEです。マージコミット \fBO\fR と \fBP\fR は、最初の親にはTREESAMEですが、2番目の親である \fBZ\fR と \fBY\fR にはついてはそうではありません。
.sp
デフォルトモードを使用する場合、 \fBN\fR と \fBR\fR は両方ともTREESAMEの親を持っているため、これらのエッジはウォークされ、他のエッジは無視されます。結果の履歴グラフは以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
        I\-\-\-X
.fi
.if n \{\
.RE
.\}
.sp
.sp
\fB\-\-full\-history\fR を使用する場合、Gitはすべてのエッジを巡ります。これにより、コミット \fBA\fR と \fBB\fR と マージ \fBM\fR が検出されますが、マージコミット \fBO\fR と \fBP\fR も明らかになります。 親を書き換えると、結果のグラフは以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\-\-\-\-\-\-N\-\-\-O\-\-\-P
         /     / \e  \e  \e/   /   /
        I     B   \e  R\-\*(Aq`\-\-\*(Aq   /
         \e   /     \e/         /
          \e /      /\e        /
           `\-\-\-X\-\-\*(Aq  `\-\-\-\-\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
ここで、マージコミット \fBO\fR と \fBP\fR は、実際には \fBfile\&.txt\fR への変更を提供しなかったため、余分なノイズを提供します。古いバージョンの \fBfile\&.txt\fR に基づいたトピックのみをマージしました。これは、多くの寄稿者が並行して作業し、トピックブランチを単一のトランクに沿ってマージするワークフローを使用するリポジトリの一般的な問題です。 \fB\-\-full\-history\fR の結果には、関連のない多くのマージが表示されます。
.sp
\fB\-\-simplify\-merges\fR オプションを使用すると、コミット \fBO\fR と \fBP\fR が結果から消えます。 これは、 \fBO\fR と \fBP\fR の書き直された2番目の親が、最初の親から到達可能であるためです。これらのエッジが削除されると、コミットは、親にとってTREESAMEである単一の親のコミットのように見えます。これはコミット \fBN\fR にも発生し、以下のような履歴ビューが表示されます:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\&.
         /     /    \e
        I     B      R
         \e   /      /
          \e /      /
           `\-\-\-X\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
このビューでは、 \fBA\fR と \fBB\fR と \fBX\fR からの重要なひとり親の変更がすべて表示されます。また、慎重に解決されたマージ \fBM\fR とそれほど慎重に解決されていないマージ \fBR\fR も表示されます。これは通常、コミット \fBA\fR と \fBB\fR がデフォルトのビューの履歴から「消えた」理由を判断するのに十分な情報です。ただし、このアプローチにはいくつかの問題があります。
.sp
最初の問題はパフォーマンスです。以前のオプションとは異なり、 \fB\-\-simplify\-merges\fR オプションでは、単一の結果を返す前にコミット履歴全体をウォークする必要があります。これにより、非常に大規模なリポジトリでこのオプションを使用するのが難しくなる可能性があります。
.sp
2番目の問題は監査の1つです。多くの寄稿者が同じリポジトリで作業している場合、どのマージコミットが重要なブランチに変更を導入したかが重要です。上記の問題のあるマージ \fBR\fR は、重要なブランチにマージするために使用されたマージコミットではない可能性があります。 代わりに、マージ \fBN\fR を使用して \fBR\fR と \fBX\fR を重要なブランチにマージしました。このコミットには、変更 \fBX\fR がコミットメッセージの \fBA\fR と \fBB\fR からの変更を上書きするようになった理由に関する情報が含まれている可能性があります。
.PP
\fB\-\-show\-pulls\fR
.RS 4
デフォルトの履歴に表示されるコミットに加えて、最初の親にはTREESAMEではなく、後の親にはTREESAMEである各マージコミットを表示します。
.sp
マージコミットが
\fB\-\-show\-pulls\fR
に含まれている場合、マージは別のブランチから変更を「プル」したかのように扱われます。この例で
\fB\-\-show\-pulls\fR
を使用すると(他のオプションは使用しない場合、)結果のグラフは行かのようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
        I\-\-\-X\-\-\-R\-\-\-N
.fi
.if n \{\
.RE
.\}
.sp
ここで、コミット
\fBX\fR
と
\fBR\fR
をそれぞれベースブランチにプルしたため、マージコミット
\fBR\fR
と
\fBN\fR
が含まれています。これらのマージは、コミット
\fBA\fR
と
\fBB\fR
がデフォルトの履歴に表示されない理由です。
.sp
\fB\-\-show\-pulls\fR
が
\fB\-\-simplify\-merges\fR
とペアになっている場合、グラフには必要なすべての情報が含まれます:
.sp
.if n \{\
.RS 4
.\}
.nf
          \&.\-A\-\-\-M\-\-\&.   N
         /     /    \e /
        I     B      R
         \e   /      /
          \e /      /
           `\-\-\-X\-\-\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
\fBM\fR
は
\fBR\fR
から到達可能であるため、
\fBN\fR
から
\fBM\fR
へのエッジが単純化されていることに注意してください。ただし、
\fBN\fR
は、変更
\fBR\fR
をメインブランチに「プル」したため、重要なコミットとして履歴に表示されます。
.RE
.sp
\fB\-\-simplify\-by\-decoration\fR オプションを使用すると、タグで参照されていないコミットを省略して、履歴のトポロジの全体像のみを表示できます。コミットは、(1)タグによって参照されている場合、または (2)コマンドラインで指定されたパスの内容を変更した場合に、!TREESAMEとしてマークされます(つまり、上記の履歴簡略化ルールの後に保持されます)。他のすべてのコミットはTREESAMEとしてマークされます(簡略化される可能性があります)。
.SS "Commit Ordering"
.sp
デフォルトでは、コミットは新しい順に表示されます。
.PP
\fB\-\-date\-order\fR
.RS 4
すべての子が表示されるまで親を表示しませんが、それ以外の場合はコミットタイムスタンプの順序でコミットを表示します。
.RE
.PP
\fB\-\-author\-date\-order\fR
.RS 4
すべての子が表示されるまで親を表示しませんが、それ以外の場合は、作者(author)のタイムスタンプ順にコミットを表示します。
.RE
.PP
\fB\-\-topo\-order\fR
.RS 4
すべての子が表示されるまで親を表示せず、複数の履歴行が混在するコミットを表示しないようにします。
.sp
たとえば、以下のようなコミット履歴があります:
.sp
.if n \{\
.RS 4
.\}
.nf
    \-\-\-1\-\-\-\-2\-\-\-\-4\-\-\-\-7
        \e              \e
         3\-\-\-\-5\-\-\-\-6\-\-\-\-8\-\-\-
.fi
.if n \{\
.RE
.\}
.sp
ここで、数字はコミットタイムスタンプの順序を示し、
\fBgitrev\-list\fR
と
\fB\-\-date\-order\fR
のある友達は、タイムスタンプの順序でコミットを示します。つまり、8 7 6 5 4 3 2 1
.sp
\fB\-\-topo\-order\fR
を使用すると、8 6 5 3 7 4 2 1（または8 7 4 2 6 5 3 1）が表示されます。2つの並列開発トラックからのコミットが混在して表示されないようにするために、いくつかの古いコミットが新しいコミットの前に表示されます。
.RE
.PP
\fB\-\-reverse\fR
.RS 4
表示するように選択したコミットを逆の順序で出力します(上記の Commit Limiting 節を参照)。
\fB\-\-walk\-reflogs\fR
と組み合わせることはできません。
.RE
.SS "Object Traversal"
.sp
これらのオプションは、主にGitリポジトリのパッキングを対象としています。
.PP
\fB\-\-no\-walk[=(sorted|unsorted)]\fR
.RS 4
指定されたコミットのみを表示し、祖先をトラバースしない。範囲が指定されている場合、これは効果がありません。引数
\fBunsorted\fR
が指定されている場合、コミットはコマンドラインで指定された順序で表示されます。それ以外の場合(
\fBsorted\fR
または引数が指定されていない場合)、コミットはコミット時間の逆順に表示されます。
\fB\-\-graph\fR
と組み合わせることはできません。
.RE
.PP
\fB\-\-do\-walk\fR
.RS 4
以前の
\fB\-\-no\-walk\fR
を上書きします。
.RE
.SS "Commit Formatting"
.PP
\fB\-\-pretty[=<format>]\fR, \fB\-\-format=<format>\fR
.RS 4
コミットログの内容を指定された形式できれいに印刷(pretty\-print)します。 <format> は oneline、short、medium、full、fuller、reference、email、raw、format:<string>、tformat:<string> のいずれかになります。 <format> が上記のいずれでもなく、「%プレースホルダー」が含まれている場合、
\fB\-\-pretty=tformat:<format>\fR
が指定されたかのように動作します。
.sp
各フォーマットの詳細については、「PRETTY FORMATS」セクションを参照してください。
\fB=<format>\fR
の部分を省略すると、デフォルトで medium になります。
.sp
注意: リポジトリー構成でデフォルトのpretty formatを指定できます(\fBgit-config\fR(1)
参照)。
.RE
.PP
\fB\-\-abbrev\-commit\fR
.RS 4
40バイトの16進コミットオブジェクト名全体を表示する代わりに、オブジェクトに一意の名前を付けるプレフィックスを表示します。 "\-\-abbrev=<n>" (表示されている場合はdiff出力も変更します)オプションを使用して、プレフィックスの最小長を指定できます。
.sp
これにより、80桁幅の端末を使用している人にとって "\-\-pretty=oneline" がずっと読みやすくなるはずです。
.RE
.PP
\fB\-\-no\-abbrev\-commit\fR
.RS 4
完全な40バイトの16進コミットオブジェクト名を表示します。 これにより、明示的または "\-\-oneline" などの他のオプションによって暗黙的に示される
\fB\-\-abbrev\-commit\fR
が無効になります。また、
\fBlog\&.abbrevCommit\fR
変数をオーバーライドします。
.RE
.PP
\fB\-\-oneline\fR
.RS 4
これは、 "\-\-pretty=oneline \-\-abbrev\-commit" を一緒に使用するための省略形です。
.RE
.PP
\fB\-\-encoding=<encoding>\fR
.RS 4
コミットオブジェクトは、ログメッセージに使用される文字エンコードをエンコードヘッダーに記録します。このオプションを使用して、ユーザーが好むエンコーディングでコミットログメッセージを再コーディングするようにコマンドに指示できます。配管以外のコマンドの場合、これはデフォルトでUTF\-8になります。オブジェクトが
\fBX\fR
でエンコードされていると主張し、
\fBX\fR
で出力している場合、オブジェクトをそのまま出力することに注意してください。これは、元のコミットの無効なシーケンスが出力にコピーされる可能性があることを意味します。 同様に、 iconv(3) がコミットの変換に失敗した場合、 元のオブジェクトをそのまま黙って出力します。
.RE
.PP
\fB\-\-expand\-tabs=<n>\fR, \fB\-\-expand\-tabs\fR, \fB\-\-no\-expand\-tabs\fR
.RS 4
出力に表示する前に、ログメッセージでタブ展開を実行します(タブ幅を <n> とみなして <n> 境界に揃うように空白で調整する)。
\fB\-\-expand\-tabs\fR
は
\fB\-\-expand\-tabs=8\fR
の省略形であり、
\fB\-\-no\-expand\-tabs\fR
は
\fB\-\-expand\-tabs=0\fR
の省略形です。タブの展開を無効にします。
.sp
デフォルトでは、タブはログメッセージを4つのスペースでインデントするきれいな形式(pretty formats)で展開されます(つまり、medium (これがデフォルト) と full と fuller)。
.RE
.PP
\fB\-\-notes[=<ref>]\fR
.RS 4
コミットログメッセージを表示するときに、コミットに注釈を付けるnotes(\fBgit-notes\fR(1)
参照)を表示します。これは、コマンドラインに
\fB\-\-pretty\fR
、\fB\-\-format\fR
または
\fB\-\-oneline\fR
オプションが指定されていない場合の、
\fBgit log\fR
と
\fBgit show\fR
と ` git whatchanged` コマンドのデフォルトです。
.sp
デフォルトでは、表示されるnotesは、
\fBcore\&.notesRef\fR
および
\fBnotes\&.displayRef\fR
変数(または対応する環境変数オーバーライド)にリストされているnote refからのものです。詳細については
\fBgit-config\fR(1)
を参照してください。
.sp
オプションの <ref> 引数を使用して、refを使用して表示するnotesを検索します。 refは、
\fBrefs/notes/\fR
で始まる完全なrefnameを指定できます。
\fBnotes/\fR
で始まるか、
\fBrefs/\fR
で始まるか、それ以外で始まる場合、
\fBrefs/notes/\fR
が接頭辞として付けられ、refのフルネームを形成します。
.sp
複数の \-\-notes オプションを組み合わせて、表示するノートを制御できます。 例: "\-\-notes=foo" は "refs/notes/foo" からのnotesのみを表示します。 "\-\-notes=foo \-\-notes" は、 "refs/notes/foo" とデフォルトのnotes ref(s) の両方のnotesを表示します。
.RE
.PP
\fB\-\-no\-notes\fR
.RS 4
notesを表示しないでください。 これは、notesが表示されるnotes refのリストをリセットすることにより、上記の
\fB\-\-notes\fR
オプションを無効にします。 オプションは、コマンドラインで指定された順序で解析されます。 "\-\-notes \-\-notes=foo \-\-no\-notes \-\-notes=bar" は、 "refs/notes/bar" からのnotesのみを表示します。
.RE
.PP
\fB\-\-show\-notes[=<ref>]\fR, \fB\-\-[no\-]standard\-notes\fR
.RS 4
これらのオプションは非推奨です。 代わりに、上記の \-\-notes/\-\-no\-notes オプションを使用してください。
.RE
.PP
\fB\-\-show\-signature\fR
.RS 4
署名を
\fBgpg \-\-verify\fR
に渡して、署名されたコミットオブジェクトの有効性を確認し、出力を表示します。
.RE
.PP
\fB\-\-relative\-date\fR
.RS 4
\fB\-\-date=relative\fR
と同じ。
.RE
.PP
\fB\-\-date=<format>\fR
.RS 4
\fB\-\-pretty\fR
を使用する場合など、人間が読める形式で表示される日付に対してのみ有効になります。
\fBlog\&.date\fR
構成変数(config variable)は、logコマンドの
\fB\-\-date\fR
オプションのデフォルト値を設定します。デフォルトでは、日付は元のタイムゾーン(コミッターの、または作者のいずれか)で表示されます。フォーマットに
\fB\-local\fR
が追加されている場合(例:
\fBiso\-local\fR
)、代わりにユーザーのローカルタイムゾーンが使用されます。
.sp
\fB\-\-date=relative\fR
は、現在の時刻を基準にした日付を示します。例: \(lq2 hours ago\(rq 。
\fB\-local\fR
オプションは
\fB\-\-date = relative\fR
には効果がありません。
.sp
\fB\-\-date=local\fR
は
\fB\-\-date=default\-local\fR
のエイリアスです。
.sp
\fB\-\-date=iso\fR
(または
\fB\-\-date=iso8601\fR
)は、タイムスタンプをISO 8601のような形式で表示します。厳密なISO 8601形式との違いは以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBT\fR
日付/時刻区切り文字の代わりにスペース
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
時間とタイムゾーンの間のスペース
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
タイムゾーンの時間と分の間にコロンがありません
.RE
.sp
\fB\-\-date=iso\-strict\fR
(または
\fB\-\-date=iso8601\-strict\fR
)は、タイムスタンプを厳密なISO 8601形式で表示します。
.sp
\fB\-\-date=rfc\fR
(または
\fB\-\-date=rfc2822\fR
)は、RFC 2822形式のタイムスタンプを示します。これは、電子メールメッセージでよく見られます。
.sp
\fB\-\-date=short\fR
は、日付のみを表示し、時刻は表示せず、
\fBYYYY\-MM\-DD\fR
形式で表示します。
.sp
\fB\-\-date=raw\fR
は、エポック(1970\-01\-01 00:00:00 UTC)からの秒数、スペース、UTCからのオフセット(\fB+\fR
または
\fB\-\fR
の付いた4桁数字で、最初の2つは時間、次の2つは分です)。つまり、タイムスタンプが
\fBstrftime("%s %z")\fR
でフォーマットされているかのようになります。
\fB\-local\fR
オプションは、seconds\-since\-epoch値(常にUTCで測定されます)には影響しませんが、付随するタイムゾーン値を切り替えることに注意してください。
.sp
\fB\-\-date=human\fR
は、タイムゾーンが現在のタイムゾーンと一致しない場合はタイムゾーンを表示し、一致する場合は日付全体を印刷しません(つまり、「今年」の日付の場合は年の印刷をスキップしますが、何があったか覚えてるような過去数日については日付自体もスキップします)。 古い日付の場合、時と分も省略されます。
.sp
\fB\-\-date=unix\fR
は、日付をUnixエポックタイムスタンプ(1970年からの秒数)として表示します。
\fB\-\-raw\fR
と同様に、これは常にUTCであるため、 ` \-local` は効果がありません。
.sp
\fB\-\-date=format:\&.\&.\&.\fR
は、内部で処理される%sと%zと%Zを除いて、フォーマット
\fB\&.\&.\&.\fR
をあなたのシステムの
\fBstrftime\fR
に送ります。
\fB\-\-date=format:%c\fR
を使用して、システムロケールの推奨形式で日付を表示します。フォーマットプレースホルダーの完全なリストについては、
\fBstrftime\fR
マニュアルを参照してください。
\fB\-local\fR
を使用する場合、正しい構文は
\fB\-\-date=format\-local:\&.\&.\&.\fR
です。
.sp
\fB\-\-date=default\fR
はデフォルトの形式であり、いくつかの例外を除いて
\fB\-\-date=rfc2822\fR
に似ています:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
曜日の後にコンマはありません
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ローカルタイムゾーンを使用する場合、タイムゾーンは省略されます
.RE
.RE
.PP
\fB\-\-parents\fR
.RS 4
コミットの親も出力します( "commit parent\&..." の形式で)。親の書き換えも可能にします。上記「History Simplification」を参照してください。
.RE
.PP
\fB\-\-children\fR
.RS 4
コミットの子も出力します( "commit child\&..." の形式で)。親の書き換えも可能にします。上記「History Simplification」を参照してください。
.RE
.PP
\fB\-\-left\-right\fR
.RS 4
対称差のどちら側からコミットに到達できるかをマークします。左側からのコミットには
\fB<\fR
が付けられ、右側からのコミットには
\fB>\fR
が付けられます。
\fB\-\-boundary\fR
と組み合わせると、それらのコミットの前に
\fB\-\fR
が付きます。
.sp
たとえば、以下のトポロジーの場合:
.sp
.if n \{\
.RS 4
.\}
.nf
             y\-\-\-b\-\-\-b  branch B
            / \e /
           /   \&.
          /   / \e
         o\-\-\-x\-\-\-a\-\-\-a  branch A
.fi
.if n \{\
.RE
.\}
.sp
以下のような出力が得られます:
.sp
.if n \{\
.RS 4
.\}
.nf
        $ git rev\-list \-\-left\-right \-\-boundary \-\-pretty=oneline A\&.\&.\&.B

        >bbbbbbb\&.\&.\&. 3rd on b
        >bbbbbbb\&.\&.\&. 2nd on b
        <aaaaaaa\&.\&.\&. 3rd on a
        <aaaaaaa\&.\&.\&. 2nd on a
        \-yyyyyyy\&.\&.\&. 1st on b
        \-xxxxxxx\&.\&.\&. 1st on a
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\fB\-\-graph\fR
.RS 4
出力の左側に、コミット履歴のテキストベースのグラフィック表現を描画します。グラフ履歴を適切に描画するために、コミットの間に余分な行が出力される可能性があります。
\fB\-\-no\-walk\fR
と組み合わせることはできません。
.sp
これにより、親の書き換えが可能になります。上記「History Simplification」を参照してください。
.sp
これは、デフォルトで
\fB\-\-topo\-order\fR
オプションを意味しますが、
\fB\-\-date\-order\fR
オプションも指定できます。
.RE
.PP
\fB\-\-show\-linear\-break[=<barrier>]\fR
.RS 4
\-\-graph を使用しない場合、すべての履歴ブランチがフラット化されるため、2つの連続するコミットが線形ブランチに属していないことがわかりにくくなる可能性があります。このオプションは、その場合、それらの間に障壁を置きます。
\fB<barrier>\fR
が指定されている場合、デフォルトの障壁文字列の代わりに
\fB<barrier>\fR
が表示されます。
.RE
.SH "PRETTY FORMATS"
.sp
コミットがマージであり、 pretty\-format が \fBoneline\fR または \fBemail\fR または \fBraw\fR で無い場合、 \fBAuthor:\fR 行の前に追加の行が挿入されます。この行は "Merge: " で始まり、先祖のコミットのハッシュがスペースで区切られて出力されます。履歴の表示を制限している場合、たとえば、特定のディレクトリまたはファイルに関連する変更のみに関心がある場合、リストされたコミットは必ずしも \fB直接\fR の親コミットのリストではない可能性があることに注意してください。
.sp
いくつかの組み込みフォーマットがあります。そして以下で説明するように、 pretty\&.<name> 構成オプション(config option)を別のフォーマット名または \fBformat:\fR 文字列に設定することで、追加のフォーマットを定義できます(\fBgit-config\fR(1) 参照)。組み込みフォーマットの詳細は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBoneline\fR
.sp
.if n \{\
.RS 4
.\}
.nf
<hash> <title\-line>
.fi
.if n \{\
.RE
.\}
.sp
これは、可能な限りコンパクトになるように設計されています。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBshort\fR
.sp
.if n \{\
.RS 4
.\}
.nf
commit <hash>
Author: <author>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<title\-line>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmedium\fR
.sp
.if n \{\
.RS 4
.\}
.nf
commit <hash>
Author: <author>
Date:   <author\-date>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<title\-line>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<full\-commit\-message>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfull\fR
.sp
.if n \{\
.RS 4
.\}
.nf
commit <hash>
Author: <author>
Commit: <committer>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<title\-line>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<full\-commit\-message>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfuller\fR
.sp
.if n \{\
.RS 4
.\}
.nf
commit <hash>
Author:     <author>
AuthorDate: <author\-date>
Commit:     <committer>
CommitDate: <committer\-date>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<title\-line>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<full\-commit\-message>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBreference\fR
.sp
.if n \{\
.RS 4
.\}
.nf
<abbrev\-hash> (<title\-line>, <short\-author\-date>)
.fi
.if n \{\
.RE
.\}
.sp
この形式は、コミットメッセージ内の別のコミットを参照するために使用され、
\fB\-\-pretty=\*(Aqformat:%C(auto)%h (%s, %ad)\*(Aq\fR
と同じです。 デフォルトでは、別の
\fB\-\-date\fR
オプションが明示的に指定されていない限り、日付は
\fB\-\-date=short\fR
でフォーマットされます。formatプレースホルダーを使用する他の
\fBformat:\fR
と同様に、その出力は、
\fB\-\-decorate\fR
や
\fB\-\-walk\-reflogs\fR
などの他のオプションの影響を受けません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBemail\fR
.sp
.if n \{\
.RS 4
.\}
.nf
From <hash> <date>
From: <author>
Date: <author\-date>
Subject: [PATCH] <title\-line>
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
<full\-commit\-message>
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmboxrd\fR
.sp
\fBemail\fR
と同様ですが、コミットメッセージの "From " で始まる行(前に0個以上の
\fB>\fR
が付いている)は
\fB>\fR
でクォートされているため、新しいコミットの開始と混同されることはありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBraw\fR
.sp
\fBraw\fR
形式は、コミットオブジェクトに格納されているとおりにコミット全体を正確に表示します。とりわけ
\fB\-\-abbrev\fR
または
\fB\-\-no\-abbrev\fR
のどちらが使用されているかに関係なく、ハッシュは完全に表示され、「親」(parents)情報は、移植や履歴の単純化を考慮せずに、真の親のコミットを示します。この形式は、コミットの表示方法に影響しますが、いわゆる
\fBgit log \-\-raw\fR
の差分の表示方法ではありません。生のdiff形式で完全なオブジェクト名を取得するには、
\fB\-\-no\-abbrev\fR
を使用します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fIformat:<format\-string>\fR
.sp
\fBformat:<format\-string>\fR
形式を使用すると、表示する情報を指定できます。注意: これはprintf書式に少し似ていますが、
\fB\en\fR
の代わりに
\fB%n\fR
を使用して改行を取得するという例外に注意してください。
.sp
例:
\fBformat:"The author of %h was %an, %ar%nThe title was >>%s<<%n"\fR
は以下のように表示されます:
.sp
.if n \{\
.RS 4
.\}
.nf
The author of fe6e0ee was Junio C Hamano, 23 hours ago
The title was >>t4119: test autocomputing \-p<n> for traditional diff input\&.<<
.fi
.if n \{\
.RE
.\}
.sp
さて、以下がプレースホルダー達です:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
単一のリテラル文字に展開されるプレースホルダー:
.PP
\fB%n\fR
.RS 4
改行(newline)
.RE
.PP
\fB%%\fR
.RS 4
`%`そのもの
.RE
.PP
\fB%x00\fR
.RS 4
16進数のバイト値を出力
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
うしろのプレースホルダーのフォーマッティングに影響するプレースホルダー:
.PP
\fB%Cred\fR
.RS 4
赤色に切り替える
.RE
.PP
\fB%Cgreen\fR
.RS 4
緑色に切り替える
.RE
.PP
\fB%Cblue\fR
.RS 4
青色に切り替える。
.RE
.PP
\fB%Creset\fR
.RS 4
色をリセットする
.RE
.PP
\fB%C(\&.\&.\&.)\fR
.RS 4
\fBgit-config\fR(1)
の「CONFIGURATION FILE」の Values で説明されている色の指定。 デフォルトでは、色はログ出力が有効になっている場合にのみ表示されます\*(Aq(\fBcolor\&.diff\fR
または
\fBcolor\&.ui\fR
または
\fB\-\-color\fR
によって、ターミナルに出す場合は前者の
\fBauto\fR
設定を尊重します)。
\fB%C(auto,\&.\&.\&.)\fR
は、 default の歴史的同義語として受け入れられます(例:
\fB%C(auto,red)\fR)。
\fB%C(always,\&.\&.\&.)\fR
を指定すると、色が有効になっていない場合でも色が表示されます(この形式やgitが色付けする可能性のある他のすべてのものを含め、出力全体の色を有効にするために
\fB\-\-color=always\fR
の使用を検討してください)。
\fBauto\fR
のみ(つまり、
\fB%C(auto)\fR)は、色が再び切り替わるまで、これに続くプレースホルダーで自動色付けをオンにします。
.RE
.PP
\fB%m\fR
.RS 4
左(\fB<\fR) または 右(\fB>\fR) または 境界 (\fB\-\fR) の印
.RE
.PP
\fB%w([<w>[,<i1>[,<i2>]]])\fR
.RS 4
\fBgit-shortlog\fR(1)
の \-w オプションのように、 行の折り返しを切り替えます。
.RE
.PP
\fB%<(<N>[,trunc|ltrunc|mtrunc])\fR
.RS 4
次のプレースホルダーに少なくともN列を使用させ、 必要に応じて右側にスペースを埋め込みます。オプションで、出力がN列より長い場合は、先頭(ltrunc)または中間(mtrunc)または末尾(trunc)で切り捨てます。注意: 切り捨ては、 N >= 2 でのみ正しく機能することに注意してください。
.RE
.PP
\fB%<|(<N>)\fR
.RS 4
次のプレースホルダーを少なくともN番目の列まで取得し、 必要に応じて右側にスペースを埋め込みます
.RE
.PP
\fB%>(<N>)\fR, \fB%>|(<N>)\fR
.RS 4
それぞれ
\fB%<(<N>)\fR
、
\fB%<|(<N>)\fR
に似ていますが、 左側にスペースが埋め込まれています
.RE
.PP
\fB%>>(<N>)\fR, \fB%>>|(<N>)\fR
.RS 4
\fB%>(<N>)\fR
、
\fB%>|(<N>)\fR
とそれぞれ似ていますが、 次のプレースホルダーが指定されたよりも多くのスペースを取り、その左側にスペースがある場合は、それらのスペースを使用します。
.RE
.PP
\fB%><(<N>)\fR, \fB%><|(<N>)\fR
.RS 4
それぞれ
\fB%<(<N>)\fR
、
\fB%<|(<N>)\fR
に似ていますが、 両側にパディングがあります(つまり、テキストが中央に配置されます)
.RE
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
コミットから抽出された情報に展開するプレースホルダー:
.PP
\fB%H\fR
.RS 4
コミットハッシュ
.RE
.PP
\fB%h\fR
.RS 4
省略されたコミットハッシュ
.RE
.PP
\fB%T\fR
.RS 4
ツリーハッシュ
.RE
.PP
\fB%t\fR
.RS 4
省略されたツリーハッシュ
.RE
.PP
\fB%P\fR
.RS 4
親のハッシュ達
.RE
.PP
\fB%p\fR
.RS 4
省略された親のハッシュ達
.RE
.PP
\fB%an\fR
.RS 4
作者名
.RE
.PP
\fB%aN\fR
.RS 4
作者名( \&.mailmap に関しては、\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
を参照)
.RE
.PP
\fB%ae\fR
.RS 4
作者電子メールアドレス
.RE
.PP
\fB%aE\fR
.RS 4
作者電子メールアドレス(\&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
を参照)
.RE
.PP
\fB%al\fR
.RS 4
作者電子メールアドレスアカウント名(local\-part)(\fB@\fR
の前の部分)
.RE
.PP
\fB%aL\fR
.RS 4
作者電子メールアドレスアカウント名(local\-part)(\fB%al\fR
参照) \&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%ad\fR
.RS 4
作成日(フォーマットに関しては \-\-date= オプション参照)
.RE
.PP
\fB%aD\fR
.RS 4
作成日 RFC2822形式
.RE
.PP
\fB%ar\fR
.RS 4
作成日 相対(relative)形式
.RE
.PP
\fB%at\fR
.RS 4
作成日 UNIXタイムスタンプ形式
.RE
.PP
\fB%ai\fR
.RS 4
作成日 ISO 8601風形式
.RE
.PP
\fB%aI\fR
.RS 4
作成日 厳密なISO 8601形式
.RE
.PP
\fB%as\fR
.RS 4
作成日 短い形式(\fBYYYY\-MM\-DD\fR)
.RE
.PP
\fB%ah\fR
.RS 4
作成日 human形式(
\fBgit-rev-list\fR(1)
の
\fB\-\-date=human\fR
オプションのようなかんじ)
.RE
.PP
\fB%cn\fR
.RS 4
コミッター名
.RE
.PP
\fB%cN\fR
.RS 4
作者名( \&.mailmap に関しては、\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%ce\fR
.RS 4
コミッター電子メールアドレス
.RE
.PP
\fB%cE\fR
.RS 4
コミッター電子メールアドレス(\&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%cl\fR
.RS 4
コミッター電子メールアドレスアカウント名(local\-part)(
\fB@\fR
の前の部分)
.RE
.PP
\fB%cL\fR
.RS 4
コミッター電子メールアドレスアカウント名(local\-part)(
\fB%cl\fR
参照) \&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%cd\fR
.RS 4
コミッター日付(フォーマットに関しては
\fB\-\-date=\fR
オプション参照)
.RE
.PP
\fB%cD\fR
.RS 4
コミッター日付 RFC2822形式
.RE
.PP
\fB%cr\fR
.RS 4
コミッター日付 相対(relative)形式
.RE
.PP
\fB%ct\fR
.RS 4
コミッター日付 UNIXタイムスタンプ形式
.RE
.PP
\fB%ci\fR
.RS 4
コミッター日付 ISO 8601風形式
.RE
.PP
\fB%cI\fR
.RS 4
コミッター日付 厳密なISO 8601形式
.RE
.PP
\fB%cs\fR
.RS 4
コミッター日付 短い形式(\fBYYYY\-MM\-DD\fR)
.RE
.PP
\fB%ch\fR
.RS 4
コミッター日付 human形式(\fBgit-rev-list\fR(1)
の
\fB\-\-date=human\fR
オプションのようなかんじ)
.RE
.PP
\fB%d\fR
.RS 4
ref名
\fBgit-log\fR(1)
の \-\-decorate オプションみたいなの
.RE
.PP
\fB%D\fR
.RS 4
" (", ")" で囲ってないref名
.RE
.PP
\fB%(describe[:options])\fR
.RS 4
\fBgit-describe\fR(1)
のような人間が読める名前。 説明できないコミットの場合は空の文字列。
\fBdescribe\fR
文字列の後には、コロンと0個以上のカンマ区切りオプションを続けることができます。タグが同時に追加または削除されると、説明に一貫性がなくなる可能性があります。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtags[=<bool\-value>]\fR: 注釈付きタグ(annotated tags)だけを考慮するのではなく、軽量タグ(lightweight tags)も考慮してください。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBabbrev=<number>\fR: 短縮ブジェクト名のデフォルトの 16 進数の桁数 (デフォルトは 7 で、リポジトリ内のオブジェクトの数によって異なります) を使用する代わりに、 <number> 桁を使用するか、または 一意のオブジェクト名を形成するために必要な桁数。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmatch=<pattern>\fR:
\fBrefs/tags/\fR
プレフィックスを除いて、指定された
\fBglob(7)\fR
パターンに一致するタグのみを考慮します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBexclude=<pattern>\fR:
\fBrefs/tags/\fR
プレフィックスを除いて、指定された
\fBglob(7)\fR
パターンに一致するタグを対象にしません。
.RE
.RE
.PP
\fB%S\fR
.RS 4
コミットに到達したコマンドラインで指定されたref名 (
\fBgit log \-\-source\fR
など)は、
\fBgit log\fR
でのみ機能します
.RE
.PP
\fB%e\fR
.RS 4
エンコーディング
.RE
.PP
\fB%s\fR
.RS 4
件名(subject)
.RE
.PP
\fB%f\fR
.RS 4
ファイル名に適した、サニタイズされた件名
.RE
.PP
\fB%b\fR
.RS 4
本文(body)
.RE
.PP
\fB%B\fR
.RS 4
生本文(raw body)(ラップされてない件名と本文)
.RE
.PP
\fB%N\fR
.RS 4
コミットノート(commit notes)
.RE
.PP
\fB%GG\fR
.RS 4
署名されたコミットの為のGPSからの生の検証メッセージ
.RE
.PP
\fB%G?\fR
.RS 4
.PP
G
.RS 4
良い(good)な(有効な)署名の場合はこの文字に置換されます。
.RE
.PP
B
.RS 4
悪い署名(bad signature)の場合はこの文字に置換されます。
.RE
.PP
U
.RS 4
有効性が不明(unknown validity)な良い署名の場合はこの文字に置換されます。
.RE
.PP
X
.RS 4
期限切れ(eXpired)の良い署名の場合はこの文字に置換されます。
.RE
.PP
Y
.RS 4
期限切れのキーで作成された良い署名の場合はこの文字に置換されます。
.RE
.PP
R
.RS 4
取り消されたキーによって作成された良い署名の場合はこの文字に置換されます。
.RE
.PP
E
.RS 4
署名を確認できない場合(キーの欠落など)の場合はこの文字に置換されます。
.RE
.PP
N
.RS 4
署名がない場合の場合はこの文字に置換されます。
.RE
.RE
.PP
\fB%GS\fR
.RS 4
署名されたコミットの署名者の名前を表示する
.RE
.PP
\fB%GK\fR
.RS 4
署名されたコミットに署名するために使用されるキーを表示する
.RE
.PP
\fB%GF\fR
.RS 4
署名されたコミットに署名するために使用されるキーのフィンガープリントを表示する
.RE
.PP
\fB%GP\fR
.RS 4
署名されたコミットに署名するためにサブキーが使用された 主キーのフィンガープリントを表示します
.RE
.PP
\fB%GT\fR
.RS 4
署名されたコミットに署名するために使用されるキーの信頼レベル(trust level)を表示します
.RE
.PP
\fB%gD\fR
.RS 4
reflogセレクター(例:\fBrefs/stash@{1}\fR
or
\fBrefs/stash@{2 minutes ago}\fR) この形式は、
\fB\-g\fR
オプションで説明されている規則に従います。
\fB@\fR
の前の部分は、コマンドラインで指定されたrefnameです(したがって、
\fBgit log \-g refs/heads/master\fR
は
\fBrefs/heads/master@{0}\fR
を生成します)。
.RE
.PP
\fB%gd\fR
.RS 4
短縮されたreflogセレクター。
\fB%gD\fR
と同じですが、 人間が読みやすいようにrefname部分が短縮されています(したがって、
\fBrefs/heads/master\fR
は単に
\fBmaster\fR
になります)。
.RE
.PP
\fB%gn\fR
.RS 4
reflog ID名
.RE
.PP
\fB%gN\fR
.RS 4
reflog ID名( \&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%ge\fR
.RS 4
reflog ID 電子メールアドレス
.RE
.PP
\fB%gE\fR
.RS 4
reflog ID 電子メールアドレス( \&.mailmap に関しては
\fBgit-shortlog\fR(1)
または
\fBgit-blame\fR(1)
参照)
.RE
.PP
\fB%gs\fR
.RS 4
reflog 件名
.RE
.PP
\fB%(trailers[:options])\fR
.RS 4
\fBgit-interpret-trailers\fR(1)
によって解釈されるようにボディのトレーラーを表示します。
\fBtrailers\fR
文字列の後には、コロンと0個以上のカンマ区切りオプションを続けることができます。いずれかのオプションが複数回提供された場合、それぞれ最後のものが優先されます。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBkey=<key>\fR: 指定された <key> を持つトレーラーのみを表示します。マッチングは大文字と小文字を区別せずに行われ、末尾のコロンはオプションです。オプションが複数回指定されている場合、いずれかのキーに一致するトレーラー行が表示されます。このオプションは自動的に
\fBonly\fR
オプションを有効にして、トレーラーブロック内の非トレーラー行が非表示になるようにします。それが望ましくない場合は、
\fBonly=false\fR
で無効にすることができます。 たとえば、
\fB%(trailers:key=Reviewed\-by)\fR
は、キーが `Reviewed\-by`のトレーラー行を表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBonly[=<bool>]\fR: トレーラーブロックに非トレーラー行を含めるかどうかを選択します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBseparator=<sep>\fR: トレーラー行の間に挿入される区切り文字を指定します。このオプションが指定されていない場合、各トレーラー行は改行文字で終了します。文字列 <sep> には、上記のリテラルフォーマットコードが含まれる場合があります。区切り文字としてコンマを使用するには、次のオプションとして解析されないよう
\fB%x2C\fR
を使用する必要があります。 たとえば、
\fB%(trailers:key=Ticket,separator=%x2C )\fR
は、キーが
\fBTicket\fR
であるすべてのトレーラー行をカンマとスペースで区切って表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBunfold[=<bool>]\fR: interpret\-trailer の
\fB\-\-unfold\fR
オプションが指定されたかのように動作させます。たとえば、
\fB%(trailers:only,unfold=true)\fR
が展開され、すべてのトレーラー行が表示されます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBkeyonly[=<bool>]\fR: トレーラーのキー部分のみを表示。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBvalueonly[=<bool>]\fR: トレーラーの値部分のみ表示。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBkey_value_separator=<sep>\fR: トレーラー行の間に挿入される区切り文字を指定します。このオプションが指定されていない場合、各トレーラーのキーと値のペアは ": " で区切られます。 それ以外の場合は、上記の
\fBseparator=<sep>\fR
と同じセマンティクスを共有します。
.RE
.RE
.RE
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
一部のプレースホルダーは、リビジョントラバーサルエンジンに指定された他のオプションに依存する場合があります。 たとえば、 \fB%g*\fR reflogオプションは、reflogエントリをトラバースしない限り(たとえば、 \fBgit log \-g\fR によって)空の文字列を挿入します。コマンドラインで \fB\-\-decorate\fR がまだ指定されていない場合、 \fB%d\fR と \fB%D\fR プレースホルダーは「短い」(short)装飾形式を使用します。
.sp .5v
.RE
.sp
ブール値オプションは、オプションの値 \fB[=<bool\-value>]\fR を受け入れます。 値 \fBtrue\fR 、\fBfalse\fR 、 \fBon\fR 、\fBoff\fR などはすべて受け入れられます。 \fBgit-config\fR(1) の "EXAMPLES" の "boolean" サブセクションを参照してください。ブール値オプションが値なしで指定された場合、それは有効を指定した事になります。
.sp
プレースホルダーの \fB%\fR の後に \fB+\fR (プラス記号)を追加すると、プレースホルダーが空でない文字列に展開される場合に限り、展開の直前に改行が挿入されます。
.sp
プレースホルダーの \fB%\fR の後に \fB\-\fR (マイナス記号)を追加すると、プレースホルダーが空の文字列に展開された場合にのみ、展開の直前の連続するすべての改行が削除されます。
.sp
プレースホルダーの \fB%\fR の後に " " (スペース)を追加すると、プレースホルダーが空でない文字列に展開される場合に限り、展開の直前にスペースが挿入されます。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtformat:\fR
.sp
\fBtformat:\fR
形式は、 "separator" セマンティクスの代わりに "terminator" セマンティクスを提供することを除いて、
\fBformat:\fR
とまったく同じように機能します。 つまり、各コミットには、エントリ間に区切り文字を配置するのではなく、メッセージターミネータ文字(通常は改行)が追加されます。 これは、「1行」形式と同様に、1行形式の最終エントリが新しい行で適切に終了することを意味します。 例えば:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git log \-2 \-\-pretty=format:%h 4da45bef \e
  | perl \-pe \*(Aq$_ \&.= " \-\- NO NEWLINE\en" unless /\en/\*(Aq
4da45be
7134973 \-\- NO NEWLINE

$ git log \-2 \-\-pretty=tformat:%h 4da45bef \e
  | perl \-pe \*(Aq$_ \&.= " \-\- NO NEWLINE\en" unless /\en/\*(Aq
4da45be
7134973
.fi
.if n \{\
.RE
.\}
.sp
加えて、
\fB%\fR
が含まれている認識されない文字列は、その前に
\fBtformat:\fR
があるかのように解釈(interpret)されます。 たとえば、以下の2つは同等です:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git log \-2 \-\-pretty=tformat:%h 4da45bef
$ git log \-2 \-\-pretty=%h 4da45bef
.fi
.if n \{\
.RE
.\}
.sp
.RE
.SH "DIFF FORMATTING"
.sp
デフォルトでは、 \fBgit log\fR はdiff出力を生成しません。以下のオプションを使用して、各コミットによって行われた変更を表示できます。
.sp
注意: \fB\-\-diff\-merges\fR のバリエーション(短い \fB\-m\fR、 \fB\-c\fR、 \fB\-\-cc\fR オプションを含む)の1つが明示的に指定されていない限り、マージコミットはdiffを表示しませんし、\fB\-\-patch`のようなdiff書式が選択されていても、\fR\-S`のような検索オプションと一致しません。例外は、`\-\-first\-parent`が使用されている場合です。この場合、`first\-parent`がデフォルトの書式です。
.PP
\fB\-p\fR, \fB\-u\fR, \fB\-\-patch\fR
.RS 4
パッチを生成します(generating patches に関するセクションを参照)。
.RE
.PP
\fB\-s\fR, \fB\-\-no\-patch\fR
.RS 4
diff出力を抑制します。デフォルトでパッチを表示する
\fBgit show\fR
のようなコマンド、または
\fB\-\-patch\fR
の効果をキャンセルする場合に便利です。
.RE
.PP
\fB\-\-diff\-merges=(off|none|on|first\-parent|1|separate|m|combined|c|dense\-combined|cc|remerge|r)\fR, \fB\-\-no\-diff\-merges\fR
.RS 4
マージコミットに使用するdiff形式を指定します。
\fB\-\-first\-parent\fR
が使用されている場合を除き、デフォルトは
\fBoff\fR
です。使用されている場合は、
\fBfirst\-parent\fR
がデフォルトです。
.PP
\fB\-\-diff\-merges=(off|none)\fR, \fB\-\-no\-diff\-merges\fR
.RS 4
マージコミットのdiffの出力を無効にします。暗黙の値を上書きするのに便利です。
.RE
.PP
\fB\-\-diff\-merges=on\fR, \fB\-\-diff\-merges=m\fR, \fB\-m\fR
.RS 4
このオプションにより、マージコミットのdiff出力がデフォルトの形式で表示されます。
\fB\-m\fR
は、
\fB\-p\fR
も指定されている場合にのみ出力を生成します。デフォルトの形式は、
\fBlog\&.diffMerges\fR
構成パラメーター(configuration parameter)を使用して変更できます。デフォルト値は
\fBseparate\fR
です。
.RE
.PP
\fB\-\-diff\-merges=first\-parent\fR, \fB\-\-diff\-merges=1\fR
.RS 4
このオプションにより、マージコミットは最初の親に関してのみ完全なdiffを表示します。
.RE
.PP
\fB\-\-diff\-merges=separate\fR
.RS 4
これにより、マージコミットは各親に関して完全なdiffを表示します。親ごとに個別のログエントリとdiffが生成されます。
.RE
.PP
\fB\-\-diff\-merges=remerge\fR, \fB\-\-diff\-merges=r\fR, \fB\-\-remerge\-diff\fR
.RS 4
このオプションを使用すると、2 つの親マージ・コミットが再マージされて、一時的なツリー・オブジェクトが作成されます。 \(em  これには、競合マーカーなどを含むファイルが含まれる可能性があります。 次に、その一時ツリーと実際のマージ・コミットの間の差分が表示されます。
.sp
このオプションが使用されたときの出力は変更される可能性があり、他のオプションとの相互作用も変更される可能性があります (明示的に文書化されていない限り)。
.RE
.PP
\fB\-\-diff\-merges=combined\fR, \fB\-\-diff\-merges=c\fR, \fB\-c\fR
.RS 4
このオプションを使用すると、マージコミットのdiff出力は、親と結果のペアごとの差分を一度に1つずつ表示するのではなく、各親からの差分をマージ結果に同時に表示します。さらに、すべての親から変更されたファイルのみが一覧表示されます。
\fB\-c\fR
は
\fB\-p\fR
の機能を含んでいます。
.RE
.PP
\fB\-\-diff\-merges=dense\-combined\fR, \fB\-\-diff\-merges=cc\fR, \fB\-\-cc\fR
.RS 4
このオプションを使用すると、
\fB\-\-diff\-merges=Combined\fR
によって生成される出力は、親のコンテンツに2つの派生(variants)しかない、興味のないハンクを省略してさらに圧縮され、マージ結果は変更なしでそのうちの1つを選択します。
\fB\-\-cc\fR
は
\fB\-p\fR
の機能を含んでいます。
.RE
.RE
.PP
\fB\-\-combined\-all\-paths\fR
.RS 4
このフラグにより、結合された差分(マージコミットに使用)にすべての親からのファイルの名前が一覧表示されます。したがって、これは
\fB\-\-diff\-merges=[dense\-]combined\fR
が使用されている場合にのみ有効であり、ファイル名の変更が検出された場合(つまり、名前の変更またはコピーの検出が要求された場合)にのみ役立つ可能性があります。
.RE
.PP
\fB\-U<n>\fR, \fB\-\-unified=<n>\fR
.RS 4
通常の3行ではなく、<n> 行の内容でdiffを生成します。
\fB\-\-patch\fR
の機能を含んでいます。
.RE
.PP
\fB\-\-output=<file>\fR
.RS 4
stdout ではなく指定のファイルに出力します。
.RE
.PP
\fB\-\-output\-indicator\-new=<char>\fR, \fB\-\-output\-indicator\-old=<char>\fR, \fB\-\-output\-indicator\-context=<char>\fR
.RS 4
生成されたパッチの新しい行、古い行、またはコンテキスト行を示すために使用される文字を指定します。 通常、それらはそれぞれ "+"、 "\-"、 " " です。
.RE
.PP
\fB\-\-raw\fR
.RS 4
コミットごとに、生の差分形式を使用して変更の概要を表示します。
\fBgit-diff\fR(1)
の "RAW OUTPUT FORMAT" セクションを参照してください。 これは、ログ自体をraw形式で表示することとは異なります。 これは
\fB\-\-format=raw\fR
で 実現できます。
.RE
.PP
\fB\-\-patch\-with\-raw\fR
.RS 4
\fB\-p \-\-raw\fR
の同義語。
.RE
.PP
\fB\-t\fR
.RS 4
diff出力にツリーオブジェクトを表示します。
.RE
.PP
\fB\-\-indent\-heuristic\fR
.RS 4
diffハンクの境界をずらす(shift)ヒューリスティックを有効にして、パッチを読みやすくします。 これがデフォルトです。
.RE
.PP
\fB\-\-no\-indent\-heuristic\fR
.RS 4
インデントヒューリスティック(indent heuristic)を無効にします。
.RE
.PP
\fB\-\-minimal\fR
.RS 4
より多くの時間を費やして、可能な限り最小のdiffが生成されるようにします。
.RE
.PP
\fB\-\-patience\fR
.RS 4
"patience diff" アルゴリズムを使用してdiffを生成します。
.RE
.PP
\fB\-\-histogram\fR
.RS 4
"histogram diff" アルゴリズムを使用してdiffを生成します。
.RE
.PP
\fB\-\-anchored=<text>\fR
.RS 4
"anchored diff" アルゴリズムを使用してdiffを生成します。
.sp
このオプションは複数回指定できます。
.sp
行がソースと宛先の両方に存在し、1回だけ存在し、このテキストで始まる場合、このアルゴリズムは、その行が出力に削除または追加として表示されないようにします。内部で "patience diff" アルゴリズムを使用します。
.RE
.PP
\fB\-\-diff\-algorithm={patience|minimal|histogram|myers}\fR
.RS 4
diffアルゴリズムを選択します。その派生(variants)は以下のとおりです:
.PP
\fBdefault\fR, \fBmyers\fR
.RS 4
基本的な貪欲な差分アルゴリズム(greedy diff algorithm)。現在、これがデフォルトです。
.RE
.PP
\fBminimal\fR
.RS 4
より多くの時間を費やして、可能な限り最小のdiffが生成されるようにします。
.RE
.PP
\fBpatience\fR
.RS 4
パッチを生成する時に "patience diff" アルゴリズムを使います。
.RE
.PP
\fBhistogram\fR
.RS 4
このアルゴリズムは、忍耐アルゴリズム(patience algorithm)を拡張して、「発生率の低い共通要素をサポート」(support low\-occurrence common elements)します。
.RE
.sp
たとえば、 あなたが
\fBdiff\&.algorithm\fR
変数をデフォルト以外の値に設定した上で、それでもデフォルト値を使用する場合は、\fB\-\-diff\-algorithm=default\fR
オプションを使用する必要があります。
.RE
.PP
\fB\-\-stat[=<width>[,<name\-width>[,<count>]]]\fR
.RS 4
diffstatを生成します。 デフォルトでは、必要なだけのスペースがファイル名部分に使用され、残りはグラフ部分に使用されます。最大幅はデフォルトで端末幅、または端末に接続されていない場合は80桁であり、
\fB<width>\fR
で上書きできます。ファイル名部分の幅は、コンマの後に別の幅
\fB<name\-width>\fR
を指定することで制限できます。グラフ部分の幅は、
\fB\-\-stat\-graph\-width=<width>\fR
(統計グラフを生成するすべてのコマンドに影響します)を使用するか、
\fBdiff\&.statGraphWidth=<width>\fR
(
\fBgit format\-patch\fR
に影響しません)を設定することによって制限できます。3番目のパラメータ
\fB<count>\fR
を指定することにより、出力を最初の
\fB<count>\fR
行に制限し、それに
\fB\&.\&.\&.\fR
が続く形にできます。
.sp
これらのパラメータは、
\fB\-\-stat\-width=<width>\fR
と
\fB\-\-stat\-name\-width=<name\-width>\fR
と
\fB\-\-stat\-count=<count>\fR
を使用して個別に設定することもできます。
.RE
.PP
\fB\-\-compact\-summary\fR
.RS 4
ファイルの作成や削除( "new" または "gone" 。オプションでシンボリックリンクの場合は "+l" )、diffstatのモード変更(実行可能ビットを追加または削除する場合は、それぞれ "+x" または "\-x" )など、拡張ヘッダー情報の要約を出力します。情報はファイル名部分とグラフ部分の間に置かれます。本機能は
\fB\-\-stat\fR
の機能を含んでいます。
.RE
.PP
\fB\-\-numstat\fR
.RS 4
\fB\-\-stat\fR
に似ていますが、プログラムで処理しやすい(machine friendly)ように、追加および削除された行数を10進表記とパス名で省略形なしで表示します。バイナリファイルの場合、
\fB0 0\fR
の代わりに2つの
\fB\-\fR
を出力します。
.RE
.PP
\fB\-\-shortstat\fR
.RS 4
変更されたファイルの総数と、追加および削除された行の数を含む
\fB\-\-stat\fR
形式の最後の行のみを出力します。
.RE
.PP
\fB\-X[<param1,param2,\&.\&.\&.>]\fR, \fB\-\-dirstat[=<param1,param2,\&.\&.\&.>]\fR
.RS 4
各サブディレクトリの相対的な変更量の分布を出力します。
\fB\-\-dirstat\fR
の動作は、パラメータのコンマ区切りリストを渡すことでカスタマイズできます。デフォルトは、
\fBdiff\&.dirstat\fR
構成変数によって制御されます(\fBgit-config\fR(1)
参照)。以下のパラメータを使用できます:
.PP
\fBchanges\fR
.RS 4
ソースから削除された、または宛先に追加された行をカウントして、dirstat数を計算します。これは、ファイル内の純粋なコード移動の量を無視します。つまり、ファイル内の行の再配置は、他の変更ほどカウントされません。これは、パラメーターが指定されていない場合のデフォルトの動作です。
.RE
.PP
\fBlines\fR
.RS 4
通常の行ベースのdiff分析を実行し、削除/追加された行数を合計して、dirstat数を計算します。 (バイナリファイルの場合、バイナリファイルには行の概念がないため、代わりに64バイトのチャンクをカウントします)。 これは
\fBchanges\fR
動作よりも高価な
\fB\-\-dirstat\fR
動作ですが、他の変更と同じようにファイル内の再配置された行をカウントします。結果の出力は、他の
\fB\-\-*stat\fR
オプションから得られるものと一致しています。
.RE
.PP
\fBfiles\fR
.RS 4
変更されたファイルの数を数えて、dirstat数を計算します。変更された各ファイルは、dirstat分析で等しくカウントされます。これは、ファイルの内容をまったく調べる必要がないため、計算コストが最もかからない
\fB\-\-dirstat\fR
の動作です。
.RE
.PP
\fBcumulative\fR
.RS 4
親ディレクトリの子ディレクトリの変更も同様にカウントします。
\fBcumulative\fR(累積的) を使用する場合、報告されるパーセンテージの合計が100%を超える場合があることに注意してください。デフォルトの(非累積的な)動作は、\fBnoncumulative\fR
パラメーターで指定できます。
.RE
.PP
<limit>
.RS 4
整数パラメーターは、カットオフパーセント(デフォルトでは3%)を指定します。指定の割合より少ないディレクトリは、出力に表示されません。
.RE
.sp
例: 変更されたファイルの総数の10%未満のディレクトリを無視し、親ディレクトリに子ディレクトリの数を累積しながら、変更されたファイルをカウント:
\fB\-\-dirstat=files,10,cumulative\fR
.RE
.PP
\fB\-\-cumulative\fR
.RS 4
\fB\-\-dirstat=cumulative\fR
と同義語
.RE
.PP
\fB\-\-dirstat\-by\-file[=<param1,param2>\&.\&.\&.]\fR
.RS 4
\fB\-\-dirstat=files,param1,param2\&.\&.\&.\fR
と同義語
.RE
.PP
\fB\-\-summary\fR
.RS 4
作成、名前変更、モード変更などの拡張ヘッダー情報の短い要約(condensed summary)を出力します。
.RE
.PP
\fB\-\-patch\-with\-stat\fR
.RS 4
\fB\-p \-\-stat\fR
と同義語。
.RE
.PP
\fB\-z\fR
.RS 4
改行(newline)ではなく、NULでコミットを区切ります。
.sp
また、
\fB\-\-raw\fR
または
\fB\-\-numstat\fR
を指定した場合は、パス名を難読化(munge)したり、出力フィールドターミネータとしてNULを使用したりしないでください。
.sp
このオプションがないと、構成変数
\fBcore\&.quotePath\fR
で説明されているように、 通常の文字以外(unusual characters)を含むパス名が引用符で囲まれます(\fBgit-config\fR(1)
参照)。
.RE
.PP
\fB\-\-name\-only\fR
.RS 4
変更されたファイルの名前のみを表示します。 多くの場合、ファイル名はUTF\-8でエンコードされます。 詳細については、
\fBgit-log\fR(1)
のマニュアルページにあるエンコーディングに関する議論(the discussion about encoding)を参照してください。
.RE
.PP
\fB\-\-name\-status\fR
.RS 4
変更されたファイルの名前とステータスのみを表示します。ステータス文字の意味については、
\fB\-\-diff\-filter\fR
オプションの説明を参照してください。
\fB\-\-name\-only\fR
と同じように、ファイル名はしばしばUTF\-8でエンコードされます。
.RE
.PP
\fB\-\-submodule[=<format>]\fR
.RS 4
サブモジュールの違いをどのように表示するかを指定します。
\fB\-\-submodule=short\fR
を指定する場合、 short形式が使用されます。この形式は、範囲の最初と最後にコミットの名前を表示するだけです。
\fB\-\-submodule\fR
または
\fB\-\-submodule=log\fR
が指定されている場合、 log形式が使用されます。この形式では、
\fBgit-submodule\fR(1)
\fBsummary\fR
のように範囲内のコミットが一覧表示されます。
\fB\-\-submodule=diff\fR
が指定されている場合、 diff形式が使用されます。この形式は、コミット範囲間のサブモジュールの内容の変更のインラインdiffを示します。configオプションが設定されていない場合、デフォルトは
\fBdiff\&.submodule\fR
または
\fBshort\fR
形式です。
.RE
.PP
\fB\-\-color[=<when>]\fR
.RS 4
色付きのdiffを表示します。
\fB\-\-color\fR
(つまり、
\fB=<when>\fR
無し) は
\fB\-\-color=always\fR
と同じです。 <when> は、 always または never または auto のいずれかになります。
.RE
.PP
\fB\-\-no\-color\fR
.RS 4
カラーdiffをオフにします。
\fB\-\-color=never\fR
と同じです。
.RE
.PP
\fB\-\-color\-moved[=<mode>]\fR
.RS 4
ソースコードの移動した行を別の色にします。 <mode>は、オプションが指定されていない場合はデフォルトで no になり、 モードが指定されていないオプションが指定されている場合は zebra になります。 モードは以下のいずれかでなければなりません:
.PP
no
.RS 4
移動行をハイライトしません。
.RE
.PP
default
.RS 4
zebra の同義語です。これは、将来、より賢明なモードに変更される可能性があります。
.RE
.PP
plain
.RS 4
ある場所で追加され、別の場所で削除された行は、
\fBcolor\&.diff\&.newMoved\fR
で色付けされます。 同様に、
\fBcolor\&.diff\&.oldMoved\fR
は、差分の別の場所に追加された削除された行に使用されます。このモードは移動された行をピックアップしますが、コードのブロックが順列なしで移動されたかどうかを判断することはレビューではあまり役に立ちません。
.RE
.PP
blocks
.RS 4
少なくとも20文字の英数字の移動テキストのブロックが貪欲に検出されます。検出されたブロックは、
\fBcolor\&.diff\&.{old,new}Moved\fR
色のいずれかを使用して色付けされます。隣接するブロックを区別することはできません。
.RE
.PP
zebra
.RS 4
移動されたテキストのブロックは、
\fBblocks\fR
モードの場合と同様に検出されます。 ブロックは、
\fBcolor\&.diff\&.{old,new}Moved\fR
色または
\fBcolor\&.diff\&.{old,new}MovedAlternative\fR
色のいずれかを使用して色付けされます。2つの色の間の変化は、新しいブロックが検出されたことを示します。
.RE
.PP
dimmed\-zebra
.RS 4
\fBzebra\fR
に似ていますが、移動されたコードの重要でない部分の追加の調光(dimmed)が実行されます。隣接する2つのブロックの境界線は興味深いと見なされ、残りは興味深いものではありません。
\fBdimmed_zebra\fR
は非推奨の同義語です。
.RE
.RE
.PP
\fB\-\-no\-color\-moved\fR
.RS 4
移動検出をオフにします。 これは、構成設定を上書きするために使用できます。
\fB\-\-color\-moved=no\fR
と同じです。
.RE
.PP
\fB\-\-color\-moved\-ws=<modes>\fR
.RS 4
これは、
\fB\-\-color\-moved\fR
の移動検出を実行するときに空白を無視する方法を設定します。 これらのモードは、コンマ区切りのリストとして指定できます:
.PP
no
.RS 4
移動行検出を実行するときに、空白(whitespace)を無視しない。
.RE
.PP
ignore\-space\-at\-eol
.RS 4
行末(EOL)での空白(whitespace)の変更を無視します。
.RE
.PP
ignore\-space\-change
.RS 4
空白(whitespace)の数の変更は無視してください。これは、行末の空白(whitespace)を無視し、1つ以上の空白文字(whitespace characters)の他のすべてのシーケンスを同等と見なします。
.RE
.PP
ignore\-all\-space
.RS 4
行を比較するときは空白(whitespace)を無視します。これにより、一方の行に空白があり、もう一方の行に空白がない場合でも、違いは無視されます。
.RE
.PP
allow\-indentation\-change
.RS 4
最初に移動検出で空白(whitespace)を無視し、空白(whitespace)の変更が行ごとに同じである場合にのみ、移動されたコードブロックをブロックにグループ化します。 これは他のモードと互換性がありません。
.RE
.RE
.PP
\fB\-\-no\-color\-moved\-ws\fR
.RS 4
移動検出を実行するときは、空白(whitespace)を無視しないでください。これは、構成設定を上書きするために使用できます。
\fB\-\-color\-moved\-ws=no\fR
と同じです。
.RE
.PP
\fB\-\-word\-diff[=<mode>]\fR
.RS 4
<mode> を使用して変更された単語を区切ることにより、単語のdiffを表示します。デフォルトでは、単語は空白で区切られます。 以下の
\fB\-\-word\-diff\-regex\fR
を参照してください。 <mode> のデフォルトは
\fBplain\fR
です。 <mode> は以下のいずれかである必要があります:
.PP
color
.RS 4
変更された単語(word)を色のみを使用して強調表示します。
\fB\-\-color\fR
を意味します。
.RE
.PP
plain
.RS 4
単語を
\fB[\-removed\-]\fR
および
\fB{+added+}\fR
として表示します。 区切り文字が入力に表示されている場合、区切り文字をエスケープしようとしないため、出力があいまいになる可能性があります。
.RE
.PP
porcelain
.RS 4
スクリプトの使用を目的とした特別な行ベースの形式を使用します。追加/削除/無変更については、通常の統一されたdiff形式で印刷され、行の先頭の
\fB+\fR/\fB\-\fR/` ` 文字で始まり、行の終わりまで続きます。入力の改行は、それ自体の行のチルダ
\fB~\fR
で表されます。
.RE
.PP
none
.RS 4
単語(word)のdiffを再度無効にします。
.RE
.sp
注意: 最初のモードの名前にもかかわらず、有効になっている場合、すべてのモードで変更された部分を強調するために色が使用されることに注意してください。
.RE
.PP
\fB\-\-word\-diff\-regex=<regex>\fR
.RS 4
空白以外を単語と見なす代わりに、 <regex> を使用して単語が何であるかを決定します。また、すでに有効になっていない限り、この機能は
\fB\-\-word\-diff\fR
の機能を含んでいます。
.sp
<regex> の重複しないマッチはすべて、単語と見なされます。これらのマッチの間のすべては空白と見なされ、違いを見つけるためとしては無視されます！ 正規表現に
\fB|[^[:space:]]\fR
を追加して、空白以外のすべての文字とマッチすることを確認することをお勧めします。改行を含むマッチは、改行で黙って切り捨てられます！
.sp
たとえば、
\fB\-\-word\-diff\-regex=\&.\fR
は各文字を単語として扱い、それに応じて文字ごとの違いを表示します。
.sp
正規表現は、diffドライバーまたは構成オプション(configuration option)を介して設定することもできます。
\fBgitattributes\fR(5)
または
\fBgit-config\fR(1)
を参照してください。これを指定すると、diffドライバーまたは構成設定(configuration settings)が明示的にオーバーライドされます。diffドライバーは構成設定を上書きします。
.RE
.PP
\fB\-\-color\-words[=<regex>]\fR
.RS 4
\fB\-\-word\-diff=color\fR
に
\fB\-\-word\-diff\-regex=<regex>\fR
を加えたものに相当します(正規表現が指定されている場合)。
.RE
.PP
\fB\-\-no\-renames\fR
.RS 4
構成ファイルにデフォルトで指定されている場合でも、名前変更の検出をオフにします。
.RE
.PP
\fB\-\-[no\-]rename\-empty\fR
.RS 4
名前変更ソースとして空のブロブを使用するかどうか。
.RE
.PP
\fB\-\-check\fR
.RS 4
変更によって競合マーカーまたは空白エラーが発生した場合に警告します。空白エラーと見なされるものは、
\fBcore\&.whitespace\fR
構成によって制御されます。 デフォルトでは、末尾の空白(空白のみで構成される行を含む)と、行の最初のインデント内で直後にタブ文字が続くスペース文字は、空白エラーと見なされます。問題が見つかった場合は、ゼロ以外のステータスで終了します。なお、 \-\-exit\-code とは互換性がありません。
.RE
.PP
\fB\-\-ws\-error\-highlight=<kind>\fR
.RS 4
diffの
\fBcontext\fR
または
\fBold\fR
または
\fBnew\fR
行の空白エラーを強調表示します。複数の値はコンマで区切られ、
\fBnone\fR
は前の値をリセットし、
\fBdefault\fR
はリストを
\fBnew\fR
にリセットし、
\fBall\fR
は old、new、context の省略形です。このオプションが指定されておらず、構成変数
\fBdiff\&.wsErrorHighlight\fR
が設定されていない場合、
\fBnew\fR
行の空白エラーのみが強調表示されます。空白エラーは
\fBcolor\&.diff\&.whitespace\fR
で色分けされています。
.RE
.PP
\fB\-\-full\-index\fR
.RS 4
パッチ形式の出力を生成するときは、最初の一握りの文字(first handful of characters)の代わりに、「インデックス」行にイメージ前およびイメージ後の完全ブロブオブジェクト名を表示します。
.RE
.PP
\fB\-\-binary\fR
.RS 4
\fB\-\-full\-index\fR
に加えて、
\fBgit\-apply\fR
で適用できるバイナリ差分を出力します。
\fB\-\-patch\fR
の機能を含んでいます。
.RE
.PP
\fB\-\-abbrev[=<n>]\fR
.RS 4
完全な40バイトの16進オブジェクト名をdiff\-raw形式の出力とdiff\-treeヘッダー行に表示する代わりに、オブジェクトを一意に参照する、少なくとも <n> 桁の16進数の長さの最短のプレフィックスを表示します。diffパッチ出力形式では、
\fB\-\-full\-index\fR
が優先されます。つまり、
\fB\-\-full\-index\fR
が指定されている場合、
\fB\-\-abbrev\fR
に関係なく、完全なブロブ名が表示されます。デフォルト以外の桁数は、
\fB\-\-abbrev=<n>\fR
で指定できます。
.RE
.PP
\fB\-B[<n>][/<m>]\fR, \fB\-\-break\-rewrites[=[<n>][/<m>]]\fR
.RS 4
完全な書き換えの変更を削除と作成のペアに分割します。これには以下の2つの目的があります:
.sp
これは、ファイルの完全な書き換えに相当する変更が、コンテキストとしてテキストで一致する非常に少数の行と混合された一連の削除と挿入としてではなく、古いものすべての単一の削除とそれに続く すべての新しいものを1回挿入し、数値
\fBm\fR
が \-B オプションのこの側面を制御します(デフォルトは60%)。
\fB\-B/70%\fR
は、Gitがそれを完全な書き換えと見なすために、元の30%未満が結果に残る必要があることを指定します(つまり、結果のパッチは、コンテキスト行と混合された一連の削除と挿入になります)。
.sp
\-M と一緒に使用すると、完全に書き換えられたファイルも名前変更のソースと見なされ(通常、 \-M は、消えたファイルのみを名前変更のソースと見なします)、数
\fBn\fR
が \-Bオプションのこの側面を制御します(デフォルトは50%)。
\fB\-B20%\fR
は、ファイルのサイズの20%以上と比較して、追加および削除を伴う変更が、別のファイルへの名前変更の可能なソースとして取得される資格があることを指定します。
.RE
.PP
\fB\-M[<n>]\fR, \fB\-\-find\-renames[=<n>]\fR
.RS 4
diffを生成する場合は、コミットごとに名前の変更を検出して報告します。 履歴をトラバースしながら名前を変更してファイルをフォローする方法については、
\fB\-\-follow\fR
を参照してください。
\fBn\fR
が指定されている場合、それは類似性インデックスのしきい値です (つまり、ファイルのサイズと比較した追加/削除の量)。 たとえば、
\fB\-M90%\fR
は、ファイルの90%以上が変更されていない場合、 Gitが削除/追加のペアを名前変更と見なす必要があることを意味します。
\fB%\fR
記号がない場合、数値は小数として読み取られ、その前に小数点が付きます。 つまり、
\fB\-M5\fR
は0\&.5になるため、\fB\-M50%\fR
と同じになります。 同様に、
\fB\-M05\fR
は
\fB\-M5%\fR
と同じです。 検出を正確な名前変更に制限するには、
\fB\-M100%\fR
を使用します。 デフォルトの類似性インデックスは50%です。
.RE
.PP
\fB\-C[<n>]\fR, \fB\-\-find\-copies[=<n>]\fR
.RS 4
名前と同様コピーを検出します。
\fB\-\-find\-copies\-harder\fR
\fBも参照してください。 `n\fR
を指定すると、
\fB\-M<n>\fR
と同じ意味になります。
.RE
.PP
\fB\-\-find\-copies\-harder\fR
.RS 4
パフォーマンス上の理由から、デフォルトでは、
\fB\-C\fR
オプションは、コピーの元のファイルが同じ変更組(changeset)で変更された場合にのみコピーを検索します。このフラグにより、コマンドは変更されていないファイルをコピー元の候補として検査します。これは大規模なプロジェクトでは非常にコストのかかる操作であるため、注意して使用してください。 複数の
\fB\-C\fR
オプションを指定しても同じ効果があります。
.RE
.PP
\fB\-D\fR, \fB\-\-irreversible\-delete\fR
.RS 4
削除するプレイメージ(preimage)を省略します。つまり、ヘッダーのみを出力し、プレイメージと
\fB/dev/null\fR
の差分は出力しません。結果のパッチは、
\fBpatch\fR
または
\fBgit apply\fR
で適用されることを意図していません。これは、変更後にテキストを確認することに集中したい人のためだけのものです。さらに、出力には明らかに、そのようなパッチを手動でも逆に適用するのに十分な情報が不足しているため、オプションの名前が付けられています。
.sp
\fB\-B\fR
と併用する場合は、削除/作成ペアの削除部分のプリイメージ(preimage)も省略してください。
.RE
.PP
\fB\-l<num>\fR
.RS 4
\fB\-M\fR
および
\fB\-C\fR
オプションには、名前変更/コピーのサブセットを安価に検出できるいくつかの準備手順が含まれ、その後に、残りのすべてのペアになっていない宛先をすべての関連ソースと比較する徹底的なフォールバック部分が続きます。(名前の変更の場合、残りのペアになっていないソースのみが関係します。コピーの場合、すべての元のソースが関係します)。Nのソースと宛先の場合、この徹底的なチェックのコストは O(N^2) です。このオプションは、関係するソース/宛先ファイルの数が指定された数を超えた場合に、名前変更/コピー検出の完全な部分が実行されないようにします。デフォルトは diff\&.renameLimit です。 値0は無制限として扱われることに注意してください。
.RE
.PP
\fB\-\-diff\-filter=[(A|C|D|M|R|T|U|X|B)\&.\&.\&.[*]]\fR
.RS 4
追加(Add)・コピー(Copy)・削除(Delete)・変更(Modify)・名前変更(Rename)されたファイル、タイプが変更されたファイル(T)、マージされていないファイル(U)、不明なファイル(X)、またはペアリングが壊れているファイル(B)のみを選択します。フィルタ文字(無しも含む)の任意の組み合わせを使用できます。 組み合わせに
\fB*\fR
(全てまたは無し)が追加されると、比較で他の基準に一致するファイルがある場合、すべてのパスが選択されます。 他の基準に一致するファイルがない場合、何も選択されません。
.sp
また、逆に、除外したい時はこれらの各大文字指定を小文字にして指定します。例えば
\fB\-\-diff\-filter=ad\fR
は、追加および削除されたパスを除外します。
.sp
注意:すべてのdiffがすべてのタイプを特徴とするわけではないことに注意してください。 たとえば、これらのタイプの検出(detection)が無効になっている場合、コピーされたエントリと名前変更されたエントリは表示されません。
.RE
.PP
\fB\-S<string>\fR
.RS 4
ファイル内の指定の文字列(つまり、 addition 、deletion)の出現回数の差分を調べます。スクリプターが使用することを目的としています。
.sp
(構造体など)コードの正確なブロックを探していて、そのブロックが最初に作成されてからの履歴を知りたい場合に便利です。この機能を繰り返し使用して、プリイメージ(preimage)内の興味深いブロックを
\fB\-S\fR
にフィードバックし、そしてあなたはそれをブロックの最初のバージョンを取得するまで続けます。
.sp
バイナリファイルも検索されます。
.RE
.PP
\fB\-G<regex>\fR
.RS 4
パッチテキストに <regex> にマッチする 追加/削除 された行が含まれている差分を探します。
.sp
\fB\-S<regex> \-\-pickaxe\-regex\fR
と
\fB\-G<regex>\fR
の違いを説明するために、同じファイル内で以下のdiffを使用してコミットすることを検討してください:
.sp
.if n \{\
.RS 4
.\}
.nf
+    return frotz(nitfol, two\->ptr, 1, 0);
\&.\&.\&.
\-    hit = frotz(nitfol, mf2\&.ptr, 1, 0);
.fi
.if n \{\
.RE
.\}
.sp
\fBgit log \-G"frotz\e(nitfol"\fR
はこのコミットを表示しますが、
\fBgit log \-S"frotz\e(nitfol" \-\-pickaxe\-regex\fR
は表示しません(その文字列の出現回数が変更されなかったため)。
.sp
\fB\-\-text\fR
が提供されていない限り、 textconv フィルターのないバイナリファイルのパッチは無視されます。
.sp
詳細については
\fBgitdiffcore\fR(7)
の「pickaxe」エントリを参照してください。
.RE
.PP
\fB\-\-find\-object=<object\-id>\fR
.RS 4
指定されたオブジェクトの出現回数を変更する違いを探します。
\fB\-S\fR
と同様に、引数だけが異なり、特定の文字列ではなく特定のオブジェクトIDを検索します。
.sp
オブジェクトは、ブロブまたはサブモジュールのコミットにすることができます。 これは、
\fBgit\-log\fR
の
\fB\-t\fR
オプションがツリーも探すことを意味します。
.RE
.PP
\fB\-\-pickaxe\-all\fR
.RS 4
\fB\-S\fR
または
\fB\-G\fR
が変更を見つけたら、 <string> の変更を含むファイルだけでなく、その変更セット(changeset)のすべての変更を表示します。
.RE
.PP
\fB\-\-pickaxe\-regex\fR
.RS 4
\fB\-S\fR
に指定した <string> を拡張POSIX正規表現として扱います。
.RE
.PP
\fB\-O<orderfile>\fR
.RS 4
ファイルが出力に表示される順序を制御します。これは
\fBdiff\&.orderFile\fR
構成変数をオーバーライドします(\fBgit-config\fR(1)
参照)。
\fBdiff\&.orderFile\fR
をキャンセルするには、
\fB\-O/dev/null\fR
を使用します。
.sp
出力順序は、 <orderfile> 内のglobパターンの順序によって決定されます。最初のパターンに一致するパス名を持つすべてのファイルが最初に出力され、2番目のパターンに一致する(ただし最初のパターンには一致しない)パス名を持つすべてのファイルが次に出力されます。パス名がどのパターンとも一致しないすべてのファイルは、ファイルの最後に暗黙のすべて一致パターンがあるかのように、最後に出力されます。複数のパス名のランクが同じである場合(同じパターンに一致するが、以前のパターンには一致しない)、相互の出力順序は通常の順序です。
.sp
<orderfile> は以下のとおりパースされます:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
空白行は無視されるため、読みやすくするための区切りとして使用できます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ハッシュ ("\fB#\fR") で始まる行は無視されるため、コメントに使用できます。 パターンがハッシュで始まる場合は、パターンの先頭にバックスラッシュ(訳注:日本では環境により円記号)("\fB\e\fR") を追加します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
他の各行には、単一のパターンが含まれています。
.RE
.sp
パターンは、 FNM_PATHNAME フラグなしで fnmatch(3) に使用されるパターンと同じ構文とセマンティクスを持ちますが、最終的なパス名コンポーネントをいくつも削除するとパターンと一致する場合、パス名もパターンと一致する点が異なります。 たとえば、パターン "\fBfoo*bar\fR" は、 "\fBfooasdfbar\fR" および "\fBfoo/bar/baz/asdf\fR" と一致しますが、 "\fBfoobarx\fR" とは一致しません。
.RE
.PP
\fB\-\-skip\-to=<file>\fR, \fB\-\-rotate\-to=<file>\fR
.RS 4
名前付き <file> の前のファイルを出力から破棄するか(スキップして)、出力の最後に移動させます(ローテーションさせます)。 これらは主に
\fBgit difftool\fR
コマンドを使用するために考案されたものであり、それ以外の場合はあまり役に立たない可能性があります。
.RE
.PP
\fB\-R\fR
.RS 4
2つの入力を交換します。 つまり、インデックスまたはディスク上のファイルとツリーの内容の違いを表示します。
.RE
.PP
\fB\-\-relative[=<path>]\fR, \fB\-\-no\-relative\fR
.RS 4
プロジェクトのサブディレクトリから実行する場合、このオプションを使用して、ディレクトリ外の変更を除外し、それに関連するパス名を表示するように指示できます。サブディレクトリ(ベアリポジトリなど)にいない場合は、引数として <path> を指定することで、出力を作成するサブディレクトリに名前を付けることができます。
\fB\-\-no\-relative`は、 `diff\&.relative\fR
設定オプションと以前の
\fB\-\-relative\fR
の両方を打ち消すために使用できます。
.RE
.PP
\fB\-a\fR, \fB\-\-text\fR
.RS 4
すべてのファイルをテキストとして扱います。
.RE
.PP
\fB\-\-ignore\-cr\-at\-eol\fR
.RS 4
比較を行うときは、行末のキャリッジリターン(carriage\-return)を無視します。
.RE
.PP
\fB\-\-ignore\-space\-at\-eol\fR
.RS 4
行末(EOL)での空白(whitespace)の変更を無視します。
.RE
.PP
\fB\-b\fR, \fB\-\-ignore\-space\-change\fR
.RS 4
空白(whitespace)の数の変更は無視してください。これは、行末の空白(whitespace)を無視し、1つ以上の空白文字(whitespace characters)の他のすべてのシーケンスを同等と見なします。
.RE
.PP
\fB\-w\fR, \fB\-\-ignore\-all\-space\fR
.RS 4
行を比較するときは空白を無視します。 これにより、一方の行に空白があり、もう一方の行に空白がない場合でも、違いは無視されます。
.RE
.PP
\fB\-\-ignore\-blank\-lines\fR
.RS 4
全て空白の行の変更は無視します。
.RE
.PP
\fB\-I<regex>\fR, \fB\-\-ignore\-matching\-lines=<regex>\fR
.RS 4
すべての行が <regex> にマッチする変更を無視します。このオプションは複数回指定できます。
.RE
.PP
\fB\-\-inter\-hunk\-context=<lines>\fR
.RS 4
指定された行数までの差分ハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。デフォルトは
\fBdiff\&.interHunkContext\fR
で、設定オプションが設定されていない場合は0です。
.RE
.PP
\fB\-W\fR, \fB\-\-function\-context\fR
.RS 4
関数全体を各変更のコンテキスト行として表示します。関数名は、
\fBgit diff\fR
がパッチハンクヘッダーを処理するのと同じ方法で決定されます(\fBgitattributes\fR(5)
の「Defining a custom hunk\-header」参照)。
.RE
.PP
\fB\-\-ext\-diff\fR
.RS 4
外部diffヘルパーの実行を許可します。
\fBgitattributes\fR(5)
を使用して外部diffドライバーを設定する場合は、
\fBgit-log\fR(1)
およびその仲間と一緒にこのオプションを使用する必要があります。
.RE
.PP
\fB\-\-no\-ext\-diff\fR
.RS 4
外部diffドライバーを禁止します。
.RE
.PP
\fB\-\-textconv\fR, \fB\-\-no\-textconv\fR
.RS 4
バイナリファイルを比較するときに、外部テキスト変換フィルターの実行を許可(または禁止)します。 詳細については、
\fBgitattributes\fR(5)
を参照してください。textconvフィルターは通常、一方向の変換であるため、結果のdiffは人間の消費に適していますが、適用(apply)することはできません。このため、textconvフィルターは、
\fBgit-diff\fR(1)
および
\fBgit-log\fR(1)
に対してのみデフォルトで有効になりますが、
\fBgit-format-patch\fR(1)
またはdiff配管コマンドに対しては有効になりません。
.RE
.PP
\fB\-\-ignore\-submodules[=<when>]\fR
.RS 4
diff生成のサブモジュールへの変更を無視します。 <when> は、 none・untracked・dirty・allのいずれかになります。これがデフォルトです。noneを使用すると、追跡されていないファイルまたは変更されたファイルが含まれている場合、またはそのHEADがスーパープロジェクトに記録されているコミットと異なる場合にサブモジュールが変更されたと見なされ、
\fBgit-config\fR(1)
または
\fBgitmodules\fR(5)
の ignoreオプションの設定をオーバーライドするために使用できます。untrackedが使用されている場合、サブモジュールには追跡されていないコンテンツのみが含まれている場合、サブモジュールはダーティとは見なされません(ただし、変更されたコンテンツはスキャンされます)。「dirty」を使用すると、サブモジュールの作業ツリーへのすべての変更が無視され、スーパープロジェクトに格納されているコミットへの変更のみが表示されます(これは1\&.7\&.0までの動作でした)。「all」を使用すると、サブモジュールへのすべての変更が非表示になります。
.RE
.PP
\fB\-\-src\-prefix=<prefix>\fR
.RS 4
"a/" の代わりに、与えられたソースプレフィックス(source prefix)を表示します。
.RE
.PP
\fB\-\-dst\-prefix=<prefix>\fR
.RS 4
"b/" の代わりに、指定された宛先プレフィックス(destination prefix)を表示します。
.RE
.PP
\fB\-\-no\-prefix\fR
.RS 4
送信元(source)または宛先(destination)のプレフィックスを表示しません。
.RE
.PP
\fB\-\-line\-prefix=<prefix>\fR
.RS 4
出力のすべての行に追加のプレフィックスを付加します。
.RE
.PP
\fB\-\-ita\-invisible\-in\-index\fR
.RS 4
デフォルトでは、 "git add \-N" によって追加されたエントリは、 "git diff" に既存の空のファイルとして表示され、 "git diff \-\-cached" に新しいファイルとして表示されます。このオプションを使用すると、エントリは "git diff" では新しいファイルとして表示され、 "git diff \-\-cached" では存在しません。このオプションは、
\fB\-\-ita\-visible\-in\-index\fR
で元に戻すことができます。どちらのオプションも実験的なものであり、将来削除される可能性があります。
.RE
.sp
これらの一般的なオプションの詳細については、 \fBgitdiffcore\fR(7) も参照してください。
.SH "GENERATING PATCH TEXT WITH \-P"
.sp
\fBgit-diff\fR(1) 、 \fBgit-log\fR(1) 、 \fBgit-show\fR(1) 、 \fBgit-diff-index\fR(1) 、 \fBgit-diff-tree\fR(1) 、 \fBgit-diff-files\fR(1) に \fB\-p\fR オプションを付けて実行するとパッチテキストを生成します。パッチテキストの作成は、 \fBGIT_EXTERNAL_DIFF\fR と \fBGIT_DIFF_OPTS\fR 環境変数( \fBgit\fR(1) 参照)、および \fBdiff\fR 属性( \fBgitattributes\fR(5) 参照)を介してカスタマイズできます。
.sp
\-pオプションが生成するものは、従来のdiff形式とは少々異なります:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
先行して、以下のような "git diff" ヘッダーがあります:
.sp
.if n \{\
.RS 4
.\}
.nf
diff \-\-git a/file1 b/file2
.fi
.if n \{\
.RE
.\}
.sp
名前の変更/コピーが含まれない限り、
\fBa/\fR
と
\fBb/\fR
のファイル名は同じです。 特に、作成または削除の場合でも、
\fBa/\fR
または
\fBb/\fR
ファイル名の代わりに
\fB/dev/ null\fR
が使用されることはありません。
.sp
名前変更/コピーが含まれる場合、
\fBfile1\fR
と`file2` は、それぞれ名前変更/コピーのソースファイルの名前と、名前変更/コピーが生成するファイルの名前を示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
その後に、1つ以上の拡張ヘッダー行達が続きます:
.sp
.if n \{\
.RS 4
.\}
.nf
old mode <mode>
new mode <mode>
deleted file mode <mode>
new file mode <mode>
copy from <path>
copy to <path>
rename from <path>
rename to <path>
similarity index <number>
dissimilarity index <number>
index <hash>\&.\&.<hash> <mode>
.fi
.if n \{\
.RE
.\}
.sp
ファイルモードは、ファイルタイプとファイル許可ビットを含む6桁の8進数として出力されます。
.sp
拡張ヘッダーのパス名には、
\fBa/\fR
および
\fBb/\fR
プレフィックスは含まれません。
.sp
類似インデックス(similarity index)は変更されていない行のパーセンテージであり、非類似インデックス(dissimilarity index)は変更された行のパーセンテージです。これは切り捨てられた整数であり、その後にパーセント記号が続きます。したがって、100％の類似インデックス値は2つの等しいファイルを表し、100％の非類似性は古いファイルから新しいファイルに移行された行がないことを意味します。
.sp
インデックス行には、変更前後のブロブオブジェクト名が含まれます。 <mode> は、ファイルモードが変更されない場合に含まれます。それ以外の場合、別々の行は古いモードと新しいモードを示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
通常の文字でないキャラクタ(\e"unusual\e" characters)を含むパス名は、構成変数
\fBcore\&.quotePath\fR
で説明されているように引用符で囲まれています(
\fBgit-config\fR(1)参照)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
出力内のすべての
\fBfile1\fR
ファイルはコミット前のファイルを参照し、すべての
\fBfile2\fR
ファイルはコミット後のファイルを参照します。各変更を各ファイルに順番に適用するのは誤りです。たとえば、以下のパッチはaとbを交換します:
.sp
.if n \{\
.RS 4
.\}
.nf
diff \-\-git a/a b/b
rename from a
rename to b
diff \-\-git a/b b/a
rename from b
rename to a
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
ハンクのヘッダーには、ハンクが適用される関数の名前が記載されています。特定の言語に合わせてこれを調整する方法の詳細については、
\fBgitattributes\fR(5)
の "Defining a custom hunk\-header" を参照してください。
.RE
.SH "COMBINED DIFF FORMAT"
.sp
diffを生成するコマンドは、マージを表示するときに \fB\-c\fR または \fB\-\-cc\fR オプションを使用して「合成diff」(combined diff)を生成できます。これは \fBgit-diff\fR(1) または \fBgit-show\fR(1) でのマージを表示するときのデフォルトの形式です。 注意: これらのコマンドのいずれかに適切な \fB\-\-diff\-merges\fR オプションを指定して、特定の形式で差分を強制的に生成できることにも注意してください。
.sp
合成diff形式は以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
diff \-\-combined describe\&.c
index fabadb8,cc95eb0\&.\&.4866510
\-\-\- a/describe\&.c
+++ b/describe\&.c
@@@ \-98,20 \-98,12 +98,20 @@@
        return (a_date > b_date) ? \-1 : (a_date == b_date) ? 0 : 1;
  }

\- static void describe(char *arg)
 \-static void describe(struct commit *cmit, int last_one)
++static void describe(char *arg, int last_one)
  {
 +      unsigned char sha1[20];
 +      struct commit *cmit;
        struct commit_list *list;
        static int initialized = 0;
        struct commit_name *n;

 +      if (get_sha1(arg, sha1) < 0)
 +              usage(describe_usage);
 +      cmit = lookup_commit_reference(sha1);
 +      if (!cmit)
 +              usage(describe_usage);
 +
        if (!initialized) {
                initialized = 1;
                for_each_ref(get_name);
.fi
.if n \{\
.RE
.\}
.sp

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
まず "git diff" ヘッダーがあり、以下のようになります(
\fB\-c\fR
オプションが使用されている場合):
.sp
.if n \{\
.RS 4
.\}
.nf
diff \-\-combined file
.fi
.if n \{\
.RE
.\}
.sp
または、以下のようになります(
\fB\-\-cc\fR
オプションが使用されている場合):
.sp
.if n \{\
.RS 4
.\}
.nf
diff \-\-cc file
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
その後に1つ以上の拡張ヘッダー行が続きます(以下の例は、2つの親とのマージを示しています):
.sp
.if n \{\
.RS 4
.\}
.nf
index <hash>,<hash>\&.\&.<hash>
mode <mode>,<mode>\&.\&.<mode>
new file mode <mode>
deleted file mode <mode>,<mode>
.fi
.if n \{\
.RE
.\}
.sp
\fBmode <mode>,<mode>\&.\&.<mode>\fR
行は、<mode> の少なくとも1つが他の <mode> と異なる場合にのみ表示されます。検出されたコンテンツの移動(名前の変更とコピーの検出)に関する情報を含む拡張ヘッダーは、2つの <tree\-ish> のdiffで機能するように設計されており、合成diff形式では使用されません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
その後に2行の from\-file/to\-file ヘッダーが続きます
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-\- a/file
+++ b/file
.fi
.if n \{\
.RE
.\}
.sp
従来の統一diff形式の2行ヘッダーと同様に、
\fB/dev/null\fR
は、作成または削除されたファイルを通知するために使用されます。
.sp
ただし、 \-\-combined\-all\-paths オプションが指定されている場合、2行の from\-file/to\-file の代わりに、 N+1 行の from\-file/to\-file ヘッダーが取得されます。ここで、 N はマージコミットの親の数です。
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-\- a/file
\-\-\- a/file
\-\-\- a/file
+++ b/file
.fi
.if n \{\
.RE
.\}
.sp
この拡張形式は、名前変更またはコピー検出がアクティブな場合に役立ち、別の親のファイルの元の名前を確認できます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
チャンクヘッダーの形式が変更され、誤って
\fBpatch\-p1\fR
にフィードされるのを防ぎます。合成差分形式は、マージコミットの変更を確認するために作成されたものであり、適用されることを意図したものではありません。この変更は、拡張された「インデックス」ヘッダーの変更に似ています:
.sp
.if n \{\
.RS 4
.\}
.nf
@@@ <from\-file\-range> <from\-file\-range> <to\-file\-range> @@@
.fi
.if n \{\
.RE
.\}
.sp
合成diff形式のチャンクヘッダーには親の数+1の
\fB@\fR
文字があります。
.RE
.sp
従来の統一diff形式とは異なり、2つのファイルAとBが、 \fB\-\fR (マイナスはAに表示されますが、Bでは削除されます) または \fB+\fR (プラスはAにはありませんが、Bには追加されます)、または \fB" "\fR（スペースは変更なし) プレフィックスを持つ単一の列で表示される場合、この形式は2つ以上のファイル file1, file2,\&... を1つのファイルXと比較し、Xが各 fileN とどのように異なるかを示します。ファイルNごとに1つの列が出力行の前に追加され、Xの行が出力行とどのように異なるかを示します。
.sp
列Nの \fB\-\fR 文字は、その行が fileN に表示されているが、結果には表示されていないことを意味します。 列Nの \fB+\fR 文字は、結果に行が表示され、 fileN にその行がないことを意味します(つまり、その親の観点から見て行が追加されたことを示す)。
.sp
上記の出力例では、関数のシグネチャが両方のファイルから見て変更されています(したがって、 file1 と file2 の両方から2つの \fB\-\fR が削除され、さらに \fB++\fR が追加されたため、 file1 と file2 のどちらにも表示されません)。また、他の8行は file1 と同じですが、 file2 には表示されません(したがって、接頭辞として \fB+\fR が付けられます)。
.sp
\fBgit diff\-tree \-c\fR で表示される場合、マージコミットの親をマージ結果と比較します(つまり、 file1\&.\&.fileN が親です)。 \fBgit diff\-files \-c\fR で表示される場合、2つの未解決のマージ親を作業ツリーファイルと比較します(つまり、 file1 はステージ2、別名「私たちのバージョン」、 file2 はステージ3、別名「彼らのバージョン」です)。
.SH "EXAMPLES"
.PP
\fBgit log \-\-no\-merges\fR
.RS 4
コミット履歴全体を表示しますが、マージはスキップします
.RE
.PP
\fBgit log v2\&.6\&.12\&.\&. include/scsi drivers/scsi\fR
.RS 4
バージョン v2\&.6\&.12 以降で include/scsi または drivers/scsi サブディレクトリ内のファイルの変更がある、すべてのコミットを表示します
.RE
.PP
\fBgit log \-\-since="2 weeks ago" \-\- gitk\fR
.RS 4
gitk ファイルの変更について過去2週間の範囲で表示します。
\fB\-\-\fR
は「ブランチ名のgitk」と混同しないようにするために必要です。
.RE
.PP
\fBgit log \-\-name\-status release\&.\&.test\fR
.RS 4
「test」ブランチにはあるがまだ「release」ブランチにはないコミットを、各コミットが変更するパスのリストとともに表示します。
.RE
.PP
\fBgit log \-\-follow builtin/rev\-list\&.c\fR
.RS 4
ファイルに現在の名前が付けられる前に発生したコミット(訳注:つまりファイル名が変更される前の当該ファイル)を含め、\fBbuiltin/rev\-list\&.c\fR
を変更したコミットを表示します。
.RE
.PP
\fBgit log \-\-branches \-\-not \-\-remotes=origin\fR
.RS 4
ローカルブランチ origin にあり、 origin のリモート追跡ブランチのいずれにも存在していないコミットを表示します。
.RE
.PP
\fBgit log master \-\-not \-\-remotes=*/master\fR
.RS 4
ローカルmasterにはあるが、リモートリポジトリmasterブランチにはないすべてのコミットを表示します。
.RE
.PP
\fBgit log \-p \-m \-\-first\-parent\fR
.RS 4
変更の差分を含む履歴を表示しますが、「主ブランチ」の観点からのみ、マージされたブランチからのコミットをスキップし、マージによって導入された変更の完全な差分を表示します。これは、単一の統合ブランチにとどまり、そのブランチにすべてのトピックブランチをマージするという厳格なポリシーに従う場合にのみ意味があります。
.RE
.PP
\fBgit log \-L \*(Aq/int main/\*(Aq,/^}/:main\&.c\fR
.RS 4
ファイル
\fBmain\&.c\fR
の関数
\fBmain()\fR
が時間の経過とともにどのように進化したかを示します。
.RE
.PP
\fBgit log \-3\fR
.RS 4
表示するコミットの数を3個に制限します。
.RE
.SH "DISCUSSION"
.sp
Gitは、ある程度までは文字エンコードに依存しません。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ブロブオブジェクトの内容は、解釈されていないバイトのシーケンスです。コアレベルでのエンコーディング変換はありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パス名はUTF\-8正規化形式C(UTF\-8 normalization form C)でエンコードされます。これは、ツリーオブジェクト、インデックスファイル、ref名、およびコマンドライン引数、環境変数、構成ファイル(
\fB\&.git/config\fR
(\fBgit-config\fR(1)
参照) と
\fBgitignore\fR(5)
と
\fBgitattributes\fR(5)
と
\fBgitmodules\fR(5)) のパス名に適用されます。
.sp
コアレベルのGitは、パス名を単に非NULバイトのシーケンスとして扱い、パス名をエンコードする変換はありません(MacとWindowsを除く)。したがって、非ASCIIパス名の使用は、レガシー拡張ASCIIエンコーディングを使用するプラットフォームやファイルシステムでもほとんど機能します。ただし、そのようなシステムで作成されたリポジトリは、UTF\-8ベースのシステム(Linux、Mac、Windowsなど)では正しく機能しません。その逆も同様です。さらに、多くのGitベースのツールは、パス名がUTF\-8であると単純に想定しており、他のエンコーディングを正しく表示できません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
コミットログメッセージは通常UTF\-8でエンコードされますが、他の拡張ASCIIエンコードもサポートされています。これには、ISO\-8859\-x、CP125xなどが含まれますが、UTF\-16/32、EBCDIC、およびCJKマルチバイトエンコーディング(GBK、Shift\-JIS、Big5、EUC\-x、CP9xxなど)は含まれません。
.RE
.sp
我々はコミットログメッセージをUTF\-8でエンコードすることをお勧めしますが、コアとGit Porcelainはどちらも、プロジェクトでUTF\-8を強制しないように設計されています。特定のプロジェクトのすべての参加者がレガシーエンコーディングを使用する方が便利だと感じた場合、Gitはそれを禁止しません。 ただし、覚えておくべきことがいくつかあります。
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
\fBgit commit\fR
と
\fBgit commit\-tree\fR
は、プロジェクトがレガシーエンコーディングを使用していることを明示的に指定しない限り、与えられたコミットログメッセージが有効なUTF\-8文字列のように見えない場合に警告を発します。明示的に指定する方法は、以下のように、
\fB\&.git/config\fR
ファイルに
\fBi18n\&.commitEncoding\fR
を含めることです。
.sp
.if n \{\
.RS 4
.\}
.nf
[i18n]
        commitEncoding = ISO\-8859\-1
.fi
.if n \{\
.RE
.\}
.sp
上記の設定で作成されたコミットオブジェクトは、
\fBencoding\fR
ヘッダーに
\fBi18n\&.commitEncoding\fR
の値を記録します。 これは、後でそれらを見る他の人々を助けるためです。このヘッダーがないということは、コミットログメッセージがUTF\-8でエンコードされていることを意味します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
\fBgit log\fR
や
\fBgit show\fR
や
\fBgit blame\fR
とその仲間たちは、コミットオブジェクトの
\fBencoding\fR
ヘッダーを見て、特に指定がない限り、ログメッセージをUTF\-8に再コーディングしようとします。あなたは以下のように、
\fB\&.git/config\fR
ファイルの
\fBi18n\&.logOutputEncoding\fR
を使用して目的の出力エンコーディングを指定できます。
.sp
.if n \{\
.RS 4
.\}
.nf
[i18n]
        logOutputEncoding = ISO\-8859\-1
.fi
.if n \{\
.RE
.\}
.sp
この構成変数がない場合は、代わりに
\fBi18n\&.commitEncoding\fR
の値が使用されます。
.RE
.sp
UTF\-8への再コーディングは必ずしも可逆的な操作ではないため、我々はコミットが行われたときにコミットログメッセージを再コーディングしないことを意図的に選択したことに注意してください。
.SH "CONFIGURATION"
.sp
コア変数については \fBgit-config\fR(1) を、diff生成に関連する設定については \fBgit-diff\fR(1) を参照してください。
.PP
format\&.pretty
.RS 4
\fB\-\-format\fR
オプションのデフォルト。(上記「Pretty Formats」を参照してください。)デフォルトは medium です。
.RE
.PP
i18n\&.logOutputEncoding
.RS 4
ログを表示するときに使用するエンコーディング。(上記「Discussion」を参照してください。)デフォルトでは、設定されている場合は
\fBi18n\&.commitEncoding\fR
の値になり、そうでない場合は UTF\-8 になります。
.RE
.sp
このセクションのこの行より上にあるものはすべて、 \fBgit-config\fR(1) ドキュメントには含まれていません。 以下の内容に関しては、\fBgit-config\fR(1) ドキュメント にあるものと同一です。
.PP
log\&.abbrevCommit
.RS 4
trueの場合、 linkgit:git\-log [1] と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
に
\fB\-\-abbrev\-commit\fR
を想定させます。 このオプションは
\fB\-\-no\-abbrev\-commit\fR
で上書きできます。
.RE
.PP
log\&.date
.RS 4
\fBlog\fR
コマンドのデフォルトの日時モードを設定します。 log\&.dateの値の設定は、
\fBgit log\fR
の
\fB\-\-date\fR
オプションと同様です。 詳細については、
\fBgit-log\fR(1)
を参照してください。
.sp
形式が
\fBauto:foo\fR
に設定されていて、ページャーが使用されている場合、形式
\fBfoo\fR
が日付形式に使用されます。 それ以外の場合は、
\fBdefault\fR
が使用されます。
.RE
.PP
log\&.decorate
.RS 4
logコマンドで表示されるコミットのref名を出力します。
\fBshort\fR
が指定されている場合、ref名の接頭辞
\fBrefs/heads/\fR
と
\fBrefs/tags/\fR
と
\fBrefs/remotes/\fR
は出力されません。
\fBfull\fR
が指定されている場合、完全なref名(接頭辞を含む)が出力されます。
\fBauto\fR
が指定されている場合、出力が端末に送られる場合、ref名は
\fBshort\fR
が指定されているかのように表示されます。それ以外の場合、ref名は表示されません。 これは、
\fBgit log\fR
の
\fB\-\-decorate\fR
オプションと同じです。
.RE
.PP
log\&.initialDecorationSet
.RS 4
デフォルトでは、
\fBgit log\fR
は特定の既知の ref 名前空間の装飾(decorations)のみを表示します。
\fBall\fR
が指定されている場合は、すべてのrefを装飾として表示します。
.RE
.PP
log\&.excludeDecoration
.RS 4
ログ装飾(log decorations)から指定されたパターンを除外します。 これは
\fB\-\-decorate\-refs\-exclude\fR
コマンドラインオプションに似ていますが、構成オプションは
\fB\-\-decorate\-refs\fR
オプションで上書きできます。
.RE
.PP
log\&.diffMerges
.RS 4
マージコミットに使用されるデフォルトのdiff形式を設定します。 詳細については、
\fBgit-log\fR(1)
の
\fB\-\-diff\-merges\fR
を参照してください。 デフォルトは
\fBseparate\fR
です。
.RE
.PP
log\&.follow
.RS 4
\fBtrue\fR
の場合、
\fBgit log\fR
は、単一の<path>が指定されたときに
\fB\-\-follow\fR
オプションが使用されたかのように機能します。 これには
\fB\-\-follow\fR
と同じ制限があります。つまり、複数のファイルを追跡するために使用することはできず、非線形履歴ではうまく機能しません。
.RE
.PP
log\&.graphColors
.RS 4
\fBgit log \-\-graph\fR
で履歴線(history lines)を描画するために使用できる、コンマで区切られた色のリスト。
.RE
.PP
log\&.showRoot
.RS 4
trueの場合、最初のコミットは大きな作成イベントとして表示されます。 これは、空のツリーに対するdiffに相当します。
\fBgit-log\fR(1)
や
\fBgit-whatchanged\fR(1)
などのツールは、通常はルートコミットを隠していますが、今後は表示されるようになります。 デフォルトでは True です。
.RE
.PP
log\&.showSignature
.RS 4
trueの場合、
\fBgit-log\fR(1)
と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
に
\fB\-\-show\-signature\fR
を想定させます。
.RE
.PP
log\&.mailmap
.RS 4
trueの場合、
\fBgit-log\fR(1)
と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
で
\fB\-\-use\-mailmap\fR
を想定させ、それ以外の場合は
\fB\-\-no\-use\-mailmap\fR
を想定させます。 デフォルトではtrueです。
.RE
.PP
notes\&.mergeStrategy
.RS 4
ノートの競合を解決するときにデフォルトで選択するマージ戦略。
\fBmanual\fR
、` ours`、
\fBtheirs\fR、` union` 、\fBcat_sort_uniq\fR
のいずれかである必要があります。 デフォルトは
\fBmanual\fR
です。 各戦略の詳細については、
\fBgit-notes\fR(1)
の「NOTES MERGE STRATEGIES」セクションを参照してください。
.sp
この設定は、
\fB\-\-strategy\fR
オプションを
\fBgit-notes\fR(1)
に渡すことでオーバーライドできます。
.RE
.PP
notes\&.<name>\&.mergeStrategy
.RS 4
\fBrefs/notes/<name>\fR
にノートをマージするときに、どのマージ戦略を選択するか。 これは、より一般的な
\fBnotes\&.mergeStrategy\fR
をオーバーライドします。 利用可能な戦略の詳細については、
\fBgit-notes\fR(1)
の「NOTES MERGE STRATEGIES」セクションを参照してください。
.RE
.PP
notes\&.displayRef
.RS 4
\fBgit log\fR
系のコマンドでコミット・メッセージを表示する際に、
\fBcore\&.notesRef\fR
や
\fBGIT_NOTES_REF\fR
で設定したデフォルトに加えて、どのref (グロブ、または複数回指定されている場合は複数ref)からノートを読み込むかを指定します。
.sp
この設定は、
\fBGIT_NOTES_DISPLAY_REF\fR
環境変数でオーバーライドでき、環境変数はコロンで区切られたrefまたはグロブ(glob)のリストである必要があります。
.sp
存在しないrefsに対しては警告が発行されますが、どのrefsにもマッチしないグロブは黙って無視されます。
.sp
この設定は、コマンドの
\fBgit log\fR
系の
\fB\-\-no\-notes\fR
オプション、またはこれらのコマンドで受け入れられる
\fB\-\-notes=<ref>\fR
オプションによって無効にすることができます。
.sp
\fBcore\&.notesRef\fR
の有効な値(GIT_NOTES_REFによってオーバーライドされる可能性があります)も、表示されるrefのリストに暗黙的に追加されます。
.RE
.PP
notes\&.rewrite\&.<command>
.RS 4
<command> (現在は
\fBamend\fR
または
\fBrebase\fR)でコミットを書き換え、 そして、 この変数が
\fBfalse\fR
に設定されている場合、git はノートを元のコミットから書き換えられたコミットにコピーしません。 デフォルトは
\fBtrue\fR
です。 下記
\fBnotes\&.rewriteRef\fR
も参照してください。
.sp
この設定は、
\fBGIT_NOTES_REWRITE_REF\fR
環境変数でオーバーライドでき、環境変数はコロンで区切られたrefまたはグロブ(glob)のリストである必要があります。
.RE
.PP
notes\&.rewriteMode
.RS 4
書き換え時にノートをコピーする場合(\fBnotes\&.rewrite\&.<command>\fR
オプション参照)、ターゲットコミットにすでにノートがある場合の対処方法を決定します。
\fBoverwrite\fR
、
\fBconcatenate\fR
、
\fBcat_sort_uniq\fR
、
\fBignore\fR
のいずれかである必要があります。 デフォルトは
\fBconcatenate\fR
です。
.sp
この設定は、
\fBGIT_NOTES_REWRITE_MODE\fR
環境変数でオーバーライドできます。
.RE
.PP
notes\&.rewriteRef
.RS 4
書き換え中にノートをコピーする場合は、ノートをコピーする(完全修飾された)refを指定します。 グロブと見なしたら、マッチするすべてのrefのノートがコピーされます。 この構成を複数回指定することもできます。
.sp
デフォルト値はありません。 ノートの書き換えを有効にするには、この変数を構成する必要があります。 デフォルトのコミットノートの書き換えを有効にするには、これを
\fBrefs/notes/commits\fR
に設定します。
.sp
\fBGIT_NOTES_REWRITE_REF\fR
環境変数でオーバーライドできます。 その形式の詳細については、上記
\fBnotes\&.rewrite\&.<command>\fR
を参照してください。
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
