'\" t
.\"     Title: git-check-ignore
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-CHECK\-IGNORE" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-check-ignore \- gitignoreや除外ファイルのデバッグ
.SH "SYNOPSIS"
.sp
.nf
\fIgit check\-ignore\fR [<options>] <pathname>\&...
\fIgit check\-ignore\fR [<options>] \-\-stdin
.fi
.sp
.SH "DESCRIPTION"
.sp
コマンドラインまたは \fB\-\-stdin\fR を介してファイルから指定されたパス名ごとに、ファイルが \fB\&.gitignore\fR (またはexcludeメカニズムへの他の入力ファイル)によって除外されているかどうかを確認し、除外されている場合はそのパスを出力します。
.sp
デフォルトでは、追跡中のファイル(tracked files)は除外ルールの対象ではないため、まったく表示されません。但し、 \(oq\-\-no\-index\(cq もご覧下さい。
.SH "OPTIONS"
.PP
\fB\-q, \-\-quiet\fR
.RS 4
何も出力せず、終了ステータスを設定するだけです。 これは、単一のパス名でのみ有効です。
.RE
.PP
\fB\-v, \-\-verbose\fR
.RS 4
除外されたパスを出力する代わりに、除外パターンに一致するパスごとに、パスと一緒に除外パターンを出力します。 (通常、除外パターンに一致することはパスが除外されることを意味しますが、パターンが "\fB!\fR" で始まる場合、それは否定パターンであり、一致することはパスが除外されないことを意味します。)
.sp
除外ソース内および除外ソース間の優先ルールについては、
\fBgitignore\fR(5)
を参照してください。
.RE
.PP
\fB\-\-stdin\fR
.RS 4
コマンドラインからではなく、標準入力から1行に1つずつパス名を読み取ります。
.RE
.PP
\fB\-z\fR
.RS 4
出力フォーマットは、マシン解析可能になるように変更されます(以下を参照)。
\fB\-\-stdin\fR
も指定されている場合、入力パスは改行文字ではなくNUL文字で区切られます。
.RE
.PP
\fB\-n, \-\-non\-matching\fR
.RS 4
どのパターンにも一致しないパスを表示します。これは、
\fB\-\-verbose\fR
が有効になっている場合にのみ意味があります。有効になっていないと、パターンに一致するパスと一致しないパスを区別できません。
.RE
.PP
\fB\-\-no\-index\fR
.RS 4
チェックを行うときにインデックスを調べません。これは、例えば
\fBgit add \&.\fR
で追跡されたパスが、ユーザーの期待通りにルールで無視されなかった場合のデバッグに使用できます。また、以前に
\fBgit add \-f\fR
で追加したパスにマッチするように、否定を含むパターンを開発するときにも使用できます。
.RE
.SH "OUTPUT"
.sp
デフォルトでは、指定されたパス名のうち無視パターンに一致するパスが1行に1つずつ出力されます。特定のパスに一致する無視パターンがない場合、そのパスについては何も出力されません。これは、そのパスが無視されないことを意味します。
.sp
\fB\-\-verbose\fR が指定されている場合、出力の各行は以下の形式になります:
.sp
<source> <COLON> <linenum> <COLON> <pattern> <HT> <pathname>
.sp
<pathname> はクエリ対象のファイルのパス、 <pattern> は一致するパターン、 <source> はパターンのソースファイル、 <linenum> はそのソース内のパターンの行番号です。 パターンに "\fB!\fR" 接頭辞または "\fB/\fR" 接尾辞が含まれている場合、 それは出力でも保持されます。 <source> は、 \fBcore\&.excludesFile\fR で構成されたファイルを参照する場合は絶対パス、 \fB\&.git/info/exclude\fR またはディレクトリごとの除外ファイルを参照する場合はリポジトリルートを基準とします。
.sp
\fB\-z\fR が指定されている場合、出力のパス名はヌル文字で区切られます。 \fB\-\-verbose\fR も指定されている場合、コロンとハードタブの代わりにヌル文字も使用されます:
.sp
<source> <NULL> <linenum> <NULL> <pattern> <NULL> <pathname> <NULL>
.sp
\fB\-n\fR または \fB\-\-non\-matching\fR が指定されている場合、一致しないパス名も出力されます。その場合、 <pathname> を除く各出力レコードのすべてのフィールドが空になります。これは、非対話的に実行する場合に役立ちます。これにより、ファイル達を長時間実行されるチェック無視プロセスのSTDINに段階的にストリーミングでき、これらのファイルごとに、STDOUTはそのファイルがパターンに一致するかどうかを示します。 (このオプションがないと、特定のファイルの出力がないということは、どのパターンとも一致しなかったのか、出力がまだ生成されていないのかを判断することはできません。)
.sp
バッファリングは、 \fBgit\fR(1) の \fBGIT_FLUSH\fR オプションに記載されているように行われます。呼び出し元は、入力バッファーのオーバーフィルまたは空の出力バッファーからの読み取りによって引き起こされるデッドロックを回避する責任があります。
.SH "EXIT STATUS"
.PP
0
.RS 4
提供されたパスの1つ以上が無視されます。
.RE
.PP
1
.RS 4
提供されたパスはどれも無視されません。
.RE
.PP
128
.RS 4
致命的なエラーが発生しました。
.RE
.SH "SEE ALSO"
.sp
\fBgitignore\fR(5) \fBgit-config\fR(1) \fBgit-ls-files\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
