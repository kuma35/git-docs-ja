'\" t
.\"     Title: git-add
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-ADD" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-add \- ファイルの内容をインデックスに追加します
.SH "SYNOPSIS"
.sp
.nf
\fIgit add\fR [\-\-verbose | \-v] [\-\-dry\-run | \-n] [\-\-force | \-f] [\-\-interactive | \-i] [\-\-patch | \-p]
          [\-\-edit | \-e] [\-\-[no\-]all | \-\-[no\-]ignore\-removal | [\-\-update | \-u]] [\-\-sparse]
          [\-\-intent\-to\-add | \-N] [\-\-refresh] [\-\-ignore\-errors] [\-\-ignore\-missing] [\-\-renormalize]
          [\-\-chmod=(+|\-)x] [\-\-pathspec\-from\-file=<file> [\-\-pathspec\-file\-nul]]
          [\-\-] [<pathspec>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
このコマンドは、作業ツリーで見つかった現在のコンテンツを使用してインデックスを更新し、次のコミットのためにステージングされたコンテンツを準備します。 通常、既存のパスの現在のコンテンツを全体として追加しますが、一部のオプションを使用して、作業ツリーファイルに加えられた変更の一部のみを適用したコンテンツを追加したり、作業ツリーにもう存在しないパスを削除したりすることもできます。
.sp
「インデックス」は作業ツリーのコンテンツのスナップショットを保持し、次のコミットのコンテンツとして取得されるのはこのスナップショットです。 したがって、作業ツリーに変更を加えた後、commitコマンドを実行する前に、 \fBadd\fR コマンドを使用して新しいファイルまたは変更されたファイルをインデックスに追加する必要があります。
.sp
このコマンドは、コミット前に複数回実行できます。 addコマンドの実行時に指定されたファイルのコンテンツのみが追加されます。 その次のコミットに後続の変更を含める場合は、 \fBgit add\fR を再度実行して、新しいコンテンツをインデックスに追加する必要があります。
.sp
\fBgit status\fR コマンドを使用して、次のコミットのためにステージングされる変更が含まれているファイルの概要を取得できます。
.sp
\fBgit add\fR コマンドは、デフォルトでは無視されたファイル(ignored files)を追加しません。 無視されたファイル(ignored files)をコマンドラインで明示的に指定した場合、 \fBgit add\fR は無視されたファイルのリストにより失敗します。 Gitによって実行されたディレクトリ再帰またはファイル名グロブ(シェル展開される前にあなたのグロブをクォートしておく)によって到達した無視されたファイルは、黙って無視されます。 \fB\-f\fR (force)オプションとともに \fBgit add\fR コマンドを使用すると無視されたファイルを追加できます。
.sp
コミットにコンテンツを追加する別の方法については、 \fBgit-commit\fR(1) を参照してください。
.SH "OPTIONS"
.PP
<pathspec>\&...
.RS 4
コンテンツを追加するファイル。 ファイルグロブ(例:
\fB*\&.c\fR)を指定して、マッチするすべてのファイルを追加できます。 また、先頭のディレクトリ名(たとえば
\fBdir\fR
で
\fBdir/file1\fR
と
\fBdir/file2\fR
を追加)を指定して、ディレクトリ全体の現在の状態に一致するようにインデックスを更新することもできます(たとえば、
\fBdir\fR
を指定すると、作業ツリーで変更されたファイル
\fBdir/file1\fR
の変更記録や、作業ツリーに追加されたファイル
\fBdir/file2\fR
の追加記録だけでなく、作業ツリーから削除されたファイル
\fBdir/file3\fR
の削除記録も行われます)。 古いバージョンのGitでは、削除されたファイルを無視していたことに注意してください。 変更されたファイルまたは新しいファイルを追加し、削除されたファイルを無視する場合は、
\fB\-\-no\-all\fR
オプションを使用します。
.sp
<pathspec>構文の詳細については、
\fBgitglossary\fR(7)
の「pathspec」エントリを参照してください。
.RE
.PP
\fB\-n\fR, \fB\-\-dry\-run\fR
.RS 4
実際にファイルを追加するのではなく、ファイルが存在するかどうか、および/または 無視されるかどうかを表示します。
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
おしゃべりにします。
.RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
これ以外の場合は無視されるファイルの追加を許可します。
.RE
.PP
\fB\-\-sparse\fR
.RS 4
スパース・チェックアウト・コーン(sparse\-checkout cone)の外側のインデックス・エントリを更新できるようにします。 通常、
\fBgit add\fR
はパスがスパース・チェックアウト・コーン内に収まらないインデックス・エントリの更新を拒否します。これらのファイルは警告なしに作業ツリーから削除される可能性があるためです。 詳細については、
\fBgit-sparse-checkout\fR(1)
を参照してください。
.RE
.PP
\fB\-i\fR, \fB\-\-interactive\fR
.RS 4
作業ツリーの変更されたコンテンツを対話的にインデックスに追加します。 オプションのパス引数を指定して、操作を作業ツリーのサブセットに制限することができます。 詳細については、「Interactive mode」を参照してください。
.RE
.PP
\fB\-p\fR, \fB\-\-patch\fR
.RS 4
インデックスと作業ツリーの間でパッチの塊(hunk)を対話的に選択し、それらをインデックスに追加します。 これにより、ユーザーは、変更されたコンテンツをインデックスに追加する前に、違いを確認することができます。
.sp
これは効果的に
\fBadd \-\-interactive\fR
を実行しますが、初期コマンドメニューをバイパスし、
\fBpatch\fR
サブコマンドに直接ジャンプします。 詳細については、「Interactive mode」を参照してください。
.RE
.PP
\fB\-e\fR, \fB\-\-edit\fR
.RS 4
差分とインデックスをエディタで開き、ユーザに編集させる。 エディタを閉じた後、ハンクヘッダ(hunk headers)を調整し、インデックスにパッチを適用する。
.sp
このオプションの目的は、適用するパッチの行を選択すること、またはステージングする行の内容を変更することです。 これは、対話的なハンク選択器(interactive hunk selector)を使用するよりも迅速かつ柔軟になります。 しかしながら、混乱してインデックスに適用されないパッチを作成するのも簡単にできてしまいます。以下の「EDITING PATCHES」を参照してください。
.RE
.PP
\fB\-u\fR, \fB\-\-update\fR
.RS 4
<pathspec>にマッチするエントリがすでにある場所でインデックスを更新します。 これにより、作業ツリーにマッチするようにインデックスエントリが削除および変更されますが、新しいファイルは追加されません。
.sp
\fB\-u\fR
オプションが使用されているときに<pathspec>が指定されていない場合、作業ツリー全体で追跡されているファイル(tracked files)すべてが更新されます(Gitの古いバージョンでは、更新を現在のディレクトリとそのサブディレクトリに制限するために使用されていました)。
.RE
.PP
\fB\-A\fR, \fB\-\-all\fR, \fB\-\-no\-ignore\-removal\fR
.RS 4
作業ツリーに<pathspec>にマッチするファイルがある場合だけでなく、インデックスにすでにエントリがある場合にも、インデックスを更新します。 これにより、作業ツリーにマッチするようにインデックスエントリが 追加や変更や削除 されます。
.sp
\fB\-A\fR
オプションが使用されているときに<pathspec>が指定されていない場合、作業ツリー全体のすべてのファイルが更新されます(Gitの古いバージョンでは、現在のディレクトリとそのサブディレクトリに更新を制限するために使用されていました)。
.RE
.PP
\fB\-\-no\-all\fR, \fB\-\-ignore\-removal\fR
.RS 4
インデックスに未知の新しいファイルや、作業ツリーで変更されたファイルを追加してインデックスを更新するが、作業ツリーから削除されたファイルは無視する。 <pathspec> が使用されていない場合、このオプションは何もしません。
.sp
このオプションは主に、
\fBgit add <pathspec>\&.\&.\&.\fR
が
\fBgit add \-\-no\-all <pathspec>\&.\&.\&.\fR
つまり、削除されたファイルの無視、の同義語であった、古いバージョンのGitに慣れているユーザーを支援するためのものです。
.RE
.PP
\fB\-N\fR, \fB\-\-intent\-to\-add\fR
.RS 4
パスが後で追加されるという事実のみを記録します。 パスのエントリは、コンテンツなしでインデックスに配置されます。 これは、特に、そのようなファイルのステージングされていないコンテンツを
\fBgit diff\fR
で表示し、それらを
\fBgit commit \-a\fR
でコミットする場合に役立ちます。
.RE
.PP
\fB\-\-refresh\fR
.RS 4
ファイルを追加しません。 ただし、インデックス内の stat() 情報のみ更新します。
.RE
.PP
\fB\-\-ignore\-errors\fR
.RS 4
一部のファイルのインデックス作成エラーが原因で追加できなかった場合は、操作を中止せずに、他のファイルの追加を続行します。 コマンドは、ゼロ以外のステータスで終了します。 構成変数
\fBadd\&.ignoreErrors\fR
をtrueに設定して、これをデフォルトの動作にすることができます。
.RE
.PP
\fB\-\-ignore\-missing\fR
.RS 4
このオプションは、
\fB\-\-dry\-run\fR
と一緒にのみ使用できます。 このオプションを使用することにより、ユーザーは、指定されたファイルがすでに作業ツリーに存在するかどうかに関係なく、それらのファイルのどれが無視されるかどうかを確認できます。
.RE
.PP
\fB\-\-no\-warn\-embedded\-repo\fR
.RS 4
デフォルトでは、
\fBgit submodule add\fR
を使用して
\fB\&.gitmodules\fR
にエントリを作成せずに、埋め込みリポジトリ(embedded repository)をインデックスに追加すると、
\fBgit add\fR
が警告を表示します。 このオプションは、警告を抑制します(たとえば、サブモジュールで手動で操作を実行している場合)。
.RE
.PP
\fB\-\-renormalize\fR
.RS 4
全ての追跡されたファイル(tracked files)に「クリーン」(clean)プロセスを新たに適用して、それらをインデックスに強制的に再度追加します。 これは、誤った CRLF/LF 行末で追加されたファイルを修正するために、
\fBcore\&.autocrlf\fR
構成または
\fBtext\fR
属性を変更した後に役立ちます。 このオプションは
\fB\-u\fR
の指定を含んでいます。 単独の CR 文字は変更されないため、CRLF は LF にクリーンアップされますが、 CRCRLF シーケンスは部分的にのみ CRLF にクリーンアップされます。
.RE
.PP
\fB\-\-chmod=(+|\-)x\fR
.RS 4
追加されたファイルの実行可能ビットを上書きします。 実行可能ビットはインデックス内でのみ変更され、ディスク上のファイルは変更されません。
.RE
.PP
\fB\-\-pathspec\-from\-file=<file>\fR
.RS 4
パススペックは、コマンドライン引数の代わりに
\fB<file>\fR
で渡されます。
\fB<file>\fR
が正確に
\fB\-\fR
の場合、標準入力が使用されます。 パススペック要素は、LFまたは CR/LF で区切られます。 パススペック要素は、構成変数
\fBcore\&.quotePath\fR
で説明されているようにクォートできます(\fBgit-config\fR(1)
参照)。
\fB\-\-pathspec\-file\-nul\fR
および グローバル
\fB\-\-literal\-pathspecs\fR
も参照してください。
.RE
.PP
\fB\-\-pathspec\-file\-nul\fR
.RS 4
\fB\-\-pathspec\-from\-file\fR
でのみ意味があります。 pathspec要素はNUL文字で区切られ、他のすべての文字は文字通りに解釈されます(改行と引用符を含む)。
.RE
.PP
\fB\-\-\fR
.RS 4
このオプションは、コマンドラインオプションをファイルのリストから分離するために使用できます(ファイル名がコマンドラインオプションと間違えられる可能性がある場合に便利です)。
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBDocumentation\fR
ディレクトリとそのサブディレクトリの下にあるすべての
\fB*\&.txt\fR
ファイルからコンテンツを追加します:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git add Documentation/\e*\&.txt
.fi
.if n \{\
.RE
.\}
.sp
注意: この例では、アスタリスク
\fB*\fR
がシェルからクォートされていることに注意してください。 これにより、コマンドに
\fBDocumentation/\fR
ディレクトリのサブディレクトリからのファイルを含めることができます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
すべての git\-*\&.sh スクリプトからコンテンツを追加することを検討します:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git add git\-*\&.sh
.fi
.if n \{\
.RE
.\}
.sp
この例では、シェルがアスタリスクを展開できてしまうため(つまり、ファイルを明示的にリストしているため)、
\fBsubdir/git\-foo\&.sh\fR
は考慮されません。
.RE
.SH "INTERACTIVE MODE"
.sp
コマンドが対話モード(interactive mode)に入ると、「status」サブコマンドの出力が表示され、対話コマンドループに入ります。
.sp
コマンドループは、使用可能なサブコマンドのリストを表示し、 \fBWhat now> ` というプロンプトを表示します。 一般に、プロンプトが単一の `>\fR で終了する場合、以下のように、指定された選択肢の1つだけを選択し、returnキーをタイプできます:
.sp
.if n \{\
.RS 4
.\}
.nf
    *** Commands ***
      1: status       2: update       3: revert       4: add untracked
      5: patch        6: diff         7: quit         8: help
    What now> 1
.fi
.if n \{\
.RE
.\}
.sp
.sp
選択が一意である限り、上記のは「s」または「sta」または「status」と言うことができます。
.sp
メインコマンドループには6つのサブコマンドがあります(加えてhelpとquitがあります)。
.PP
status
.RS 4
これは、HEADとインデックスの間の変更(つまり、
\fBgit commit\fR
とした場合にコミットされるもの)、および、各パスのインデックスと作業ツリーファイルの間の変更(つまり、
\fBgit add\fR
を使用して、
\fBgit commit\fR
する前にさらにステージングできるもの)を示しています。 出力例は以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
              staged     unstaged path
     1:       binary      nothing foo\&.png
     2:     +403/\-35        +1/\-1 git\-add\-\-interactive\&.perl
.fi
.if n \{\
.RE
.\}
.sp
foo\&.pngにはHEADとの違いがあり(ただし、これはバイナリであるため、行数を表示できません)、インデックスされたコピーと作業ツリーのバージョンに違いはありません(作業ツリーのバージョンも異なる場合、
\fBbinary\fR
が
\fBnothing\fR
の代わりに表示されます)。 もう1つのファイル
\fBgit\-add{litdd}Interactive\&.perl\fR
では、インデックスにあるものをコミットすると403行が追加されて35行が削除され、作業ツリーファイルにはさらに変更が加えられます(1回の追加と1回の削除)。
.RE
.PP
update
.RS 4
これにより、ステータス情報が表示され、
\fBUpdate>>\fR
プロンプトが表示されます。 プロンプトが二重の
\fB>>\fR
で終わる場合は、空白またはコンマで連結して複数の選択を行うことができます。 また、範囲指定もできます。 例えば、
\fB2\-5 7,9\fR
でリストから 2,3,4,5,7,9 を選択します。 範囲内の2番目の数字を省略すると、残りのすべてのパッチが適用されます。 例えば、
\fB7\-\fR
はリストから 7,8,9 を選択します。
\fB*\fR
で全選択できます。
.sp
あなたが選択したものは、以下のように
\fB*\fR
で強調表示されます:
.sp
.if n \{\
.RS 4
.\}
.nf
           staged     unstaged path
  1:       binary      nothing foo\&.png
* 2:     +403/\-35        +1/\-1 git\-add\-\-interactive\&.perl
.fi
.if n \{\
.RE
.\}
.sp
選択を削除するには、以下のように入力の前に
\fB\-\fR
を付けます:
.sp
.if n \{\
.RS 4
.\}
.nf
Update>> \-2
.fi
.if n \{\
.RE
.\}
.sp
選択後、空行で答えて、インデックス内の選択されたパスの作業ツリーファイルの内容をステージングします。
.RE
.PP
revert
.RS 4
これは「update」と非常によく似たUIを持ち、選択されたパスのステージングされた情報はHEADバージョンの情報に戻されます(revert)。 新しいパスを元に戻すと、追跡されなくなります。
.RE
.PP
add untracked
.RS 4
これは、「update」および「revert」と非常によく似たUIを備えており、追跡されていないパスをインデックスに追加できます。
.RE
.PP
patch
.RS 4
これにより、選択に似た
\fBstatus\fR
から1つのパスを選択できます。 パスを選択すると、インデックスと作業ツリーファイルの差分が表示され、各ハンクの変更をステージングするかどうかを尋ねられます。 以下のオプションのいずれかを選択してからreturnキーをタイプできます。
.sp
.if n \{\
.RS 4
.\}
.nf
y \- stage this hunk
n \- do not stage this hunk
q \- quit; do not stage this hunk or any of the remaining ones
a \- stage this hunk and all later hunks in the file
d \- do not stage this hunk or any of the later hunks in the file
g \- select a hunk to go to
/ \- search for a hunk matching the given regex
j \- leave this hunk undecided, see next undecided hunk
J \- leave this hunk undecided, see next hunk
k \- leave this hunk undecided, see previous undecided hunk
K \- leave this hunk undecided, see previous hunk
s \- split the current hunk into smaller hunks
e \- manually edit the current hunk
? \- print help
.fi
.if n \{\
.RE
.\}
.sp
すべてのハンクの運命を決定した後、選択されたハンク達がある場合、インデックスは選択されたハンク達によって更新されます。
.sp
構成変数
\fBinteractive\&.singleKey\fR
を
\fBtrue\fR
に設定することにより、あなたはここでreturnキーをタイプする必要をなくすことができます。
.RE
.PP
diff
.RS 4
これにより、コミットされる内容(つまり、HEAD〜インデックス間)を確認できます。
.RE
.SH "EDITING PATCHES"
.sp
\fBgit add \-e\fR を呼び出すか、対話的ハンク選択器(interactive hunk selector)で \fBe\fR を選択すると、エディタでパッチを開きます。 エディタが終了すると、結果がインデックスに適用されます。 パッチに任意の変更を加えることは自由ですが、一部の変更は混乱を招く結果をもたらす可能性があること、または適用できないパッチをもたらす可能性があることに注意してください。 操作を完全に中止する場合(つまり、インデックスに新しいものをステージングしない場合)は、パッチのすべての行を削除するだけです。 以下のリストは、パッチに見られる一般的なものと、それらに対して意味のある編集操作を示しています。
.PP
added content
.RS 4
追加されたコンテンツは、 + で始まる行で表されます。 追加行を削除することで、追加行のステージングを防ぐことができます。
.RE
.PP
removed content
.RS 4
削除されたコンテンツは、
\fB\-\fR
で始まる行で表されます。
\fB\-\fR
を ` ` (スペース)に変換することで、ステージングによる削除を防ぐことができます。
.RE
.PP
modified content
.RS 4
変更されたコンテンツは、
\fB\-\fR
行(古いコンテンツを削除)とそれに続く + 行(置換コンテンツを追加)で表されます。
\fB\-\fR
行を ` ` に変換し、 + 行を削除することで、変更のステージングを防ぐことができます。 ペアの半分だけを変更すると、インデックスに紛らわしい変更が加えられる可能性があることに注意してください。
.RE
.sp
実行できるより複雑な操作もあります。 ただし、パッチはインデックスにのみ適用され、作業ツリーには適用されないため、作業ツリーはインデックスの変更を「元に戻す」(undo)ように見えることに注意してください。 たとえば、HEADにも作業ツリーにも存在しないインデックスに新しい行を導入すると、コミットのために新しい行がステージングされますが、その行は作業ツリーで元に戻されている(revert)ように見えます。
.sp
これらの構成を使用しないようにするか、または、細心の注意を払って使用してください。
.PP
removing untouched content
.RS 4
インデックスと作業ツリーの間で異なって無いコンテンツが、 ` ` (スペース)で始まるコンテキスト行に表示される場合があります。 スペースを
\fB\-\fR
に変換することで、削除するコンテキスト行としてステージングできます。 その結果、再度追加してくださいと、その作業ツリーファイルが表示されます。
.RE
.PP
modifying existing content
.RS 4
(` ` を
\fB\-\fR
に変換することにより、)削除のためにステージングして、新しいコンテンツに + 行を追加することにより、コンテキスト行を変更することもできます。 同様に、既存の追加または変更のために + 行を変更できます。 いずれの場合も、新しい変更は作業ツリーに戻されて表示されます。
.RE
.PP
new content
.RS 4
パッチに存在しない新しいコンテンツを追加することもできます。 それぞれが + で始まる新しい行を追加するだけです。 追加は、作業ツリーに戻されて表示されます。
.RE
.sp
パッチが適用できなくなるため、完全に回避する必要のある操作もいくつかあります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
コンテキスト行達(" ")または削除行達("\-")の追加
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
コンテキスト行達または削除行達の削除
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
コンテキスト行達または削除行達の内容を変更する
.RE
.SH "CONFIGURATION"
.sp
このセクションの以下のすべては、 \fBgit-config\fR(1) ドキュメントの抜粋です。 内容は \fBgit-config\fR(1) ドキュメント にあるものと同一です:
.PP
add\&.ignoreErrors, add\&.ignore\-errors (非推奨)
.RS 4
インデックスエラーのために一部のファイルを追加できない場合にファイルの追加を続行するように
\fBgit add\fR
に指示します。
\fBgit-add\fR(1)
の
\fB\-\-ignore\-errors\fR
オプションと同等です。
\fBadd\&.ignore\-errors\fR
は、構成変数の通常の命名規則に従わないため、非推奨になりました。
.RE
.PP
add\&.interactive\&.useBuiltin
.RS 4
組み込みバージョンではなく、
\fBgit-add\fR(1)
の対話型バージョンの元の Perl 実装にフォールバックするには、\fBfalse\fR
に設定します。 デフォルトでは
\fBtrue\fR
です。
.RE
.SH "SEE ALSO"
.sp
\fBgit-status\fR(1) \fBgit-rm\fR(1) \fBgit-reset\fR(1) \fBgit-mv\fR(1) \fBgit-commit\fR(1) \fBgit-update-index\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
