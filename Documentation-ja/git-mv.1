'\" t
.\"     Title: git-mv
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-MV" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-mv \- ファイルまたはディレクトリまたはシンボリックリンクを移動(move)または名前変更(rename)します
.SH "SYNOPSIS"
.sp
.nf
\fIgit mv\fR <options>\&... <args>\&...
.fi
.sp
.SH "DESCRIPTION"
.sp
ファイルまたはディレクトリまたはシンボリックリンクを移動または名前変更します。
.sp
.if n \{\
.RS 4
.\}
.nf
git mv [\-v] [\-f] [\-n] [\-k] <source> <destination>
git mv [\-v] [\-f] [\-n] [\-k] <source> \&.\&.\&. <destination directory>
.fi
.if n \{\
.RE
.\}
.sp
最初の形式では、ファイル・シンボリックリンク・ディレクトリのいずれかである必要がある <source> の名前を <destination> に変更します。2番目の形式では、最後の引数は既存のディレクトリである必要があります。指定のソースはこのディレクトリに移動されます。
.sp
正常に完了するとインデックスは更新されますが、変更はコミットする必要があります。
.SH "OPTIONS"
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
ターゲットが存在する場合でも、ファイルの名前変更または移動を強制します
.RE
.PP
\fB\-k\fR
.RS 4
エラー状態になる移動または名前変更をスキップします。ソースが存在せず、Gitによって制御されていない場合、または
\fB\-f\fR
が指定されていない限り、ソースが既存のファイルを上書きする場合、エラーが発生します。
.RE
.PP
\fB\-n\fR, \fB\-\-dry\-run\fR
.RS 4
何も操作しない。何が起こるかを示すだけです。
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
移動するファイルの名前を報告します。
.RE
.SH "SUBMODULES"
.sp
gitfile(つまり、Gitバージョン1\&.7\&.8以降で複製された)を使用してサブモジュールを移動すると、gitfileとcore\&.worktreeの設定が更新され、サブモジュールが新しい場所で機能するようになります。また、 \fBgitmodules\fR(5) ファイルの submodule\&.<name>\&.path 設定を更新し、そのファイルをステージングしようとします( \fB\-n\fR が使用されている場合を除く)。
.SH "BUGS"
.sp
スーパープロジェクトの更新により、入力されたサブモジュールが移動されるたびに(たとえば、移動の前後でコミットを切り替える場合)、古いサブモジュールのチェックアウトは古い場所に残り、空のディレクトリが新しい場所に表示されます。新しい場所にサブモジュールを再度入力するには、後で「git submodule update」を実行する必要があります。古いディレクトリの削除は、gitfileを使用している場合にのみ安全です。そうでなければ、サブモジュールの履歴も削除されます。再帰的なサブモジュールの更新が実装されている場合、これらの手順は廃止されるでしょう。
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
