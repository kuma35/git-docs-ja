'\" t
.\"     Title: git-submodule
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-SUBMODULE" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-submodule \- サブモジュールを初期化、更新、または検査します
.SH "SYNOPSIS"
.sp
.nf
\fIgit submodule\fR [\-\-quiet] [\-\-cached]
\fIgit submodule\fR [\-\-quiet] add [<options>] [\-\-] <repository> [<path>]
\fIgit submodule\fR [\-\-quiet] status [\-\-cached] [\-\-recursive] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] init [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] deinit [\-f|\-\-force] (\-\-all|[\-\-] <path>\&...)
\fIgit submodule\fR [\-\-quiet] update [<options>] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] set\-branch [<options>] [\-\-] <path>
\fIgit submodule\fR [\-\-quiet] set\-url [\-\-] <path> <newurl>
\fIgit submodule\fR [\-\-quiet] summary [<options>] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] foreach [\-\-recursive] <command>
\fIgit submodule\fR [\-\-quiet] sync [\-\-recursive] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] absorbgitdirs [\-\-] [<path>\&...]
.fi
.sp
.SH "DESCRIPTION"
.sp
サブモジュールを検査、更新、管理します。
.sp
サブモジュールの詳細については、 \fBgitsubmodules\fR(7) を参照してください。
.SH "COMMANDS"
.sp
引数なしで、既存のサブモジュールのステータスを示します。 サブモジュールで操作を実行するために、いくつかのサブコマンドを使用できます。
.PP
add [\-b <branch>] [\-f|\-\-force] [\-\-name <name>] [\-\-reference <repository>] [\-\-depth <depth>] [\-\-] <repository> [<path>]
.RS 4
現在のプロジェクトの次にコミットされるチェンジセットへの指定のパスで、指定のポジトリをサブモジュールとして追加します。現在のプロジェクトは「スーパープロジェクト」と呼ばれます。
.sp
<repository> は、新しいサブモジュールの元リポジトリのURLです。これは、絶対URLまたは、(
\fB\&./\fR
または
\fB\&.\&./\fR
で始まる場合、)スーパープロジェクトのデフォルトのリモートリポジトリに相対的な場所のいずれかです(スーパープロジェクト
\fBbar\&.git\fR
のすぐ隣にあるリポジトリ
\fBfoo\&.git\fR
を指定するには、
\fB\&./foo\&.git\fR
の代わりに
\fB\&.\&./foo\&.git\fR
を使用する必要があることに注意してください \(em 相対 URL の規則に従っていれば、期待通りになるでしょう \(em Git における相対 URL の評価は相対ディレクトリの場合と同じだからです)。
.sp
デフォルトのリモートは、現在のブランチのリモート追跡ブランチのリモートです。そのようなリモート追跡ブランチが存在しないか、または、HEADが切り離されている場合、「origin」がデフォルトのリモートであると見なされます。 スーパープロジェクトにデフォルトのリモートが構成されていない場合、スーパープロジェクトはそれ自身に権限のあるアップストリームであり、代わりに現在の作業ディレクトリが使用されます。
.sp
オプションの引数 <path> は、複製されたサブモジュールがスーパープロジェクト内で存在するための相対的な場所です。 <path> が指定されていない場合、ソースリポジトリの正規部分(canonical part)が使用されます(\fB/path/to/repo\&.git\fR
の場合は「repo」、
\fBhost\&.xz:foo/\&.git\fR
の場合は「foo」)。 <path> が存在し、すでに有効なGitリポジトリである場合、クローンを作成せずにコミット用にステージングされます。 <path> は、
\fB\-\-name\fR
を使用して論理名を指定しない限り、構成エントリでサブモジュールの論理名としても使用されます。
.sp
指定のURLは、スーパープロジェクトのクローンを作成する後続のユーザーが使用できるように
\fB\&.gitmodules\fR
に記録されます。 URLがスーパープロジェクトのリポジトリに関連して指定されている場合、スーパープロジェクトとサブモジュールのリポジトリは同じ相対位置にまとめられ、スーパープロジェクトのURLのみを指定する必要があると想定します。 git\-submoduleは、
\fB\&.gitmodules\fR
の相対URLを使用してサブモジュールを正しく検索します。
.RE
.PP
status [\-\-cached] [\-\-recursive] [\-\-] [<path>\&...]
.RS 4
サブモジュールの状態を表示します。これにより、各サブモジュールの現在チェックアウトされているコミットの SHA\-1 が、サブモジュールのパスと SHA\-1 の
\fBgit describe\fR
の出力と共に出力されます。各 SHA\-1 には、サブモジュールが初期化されていない場合は
\fB\-\fR
、現在チェックアウトされているサブモジュールコミットが、含まれているリポジトリのインデックスにある SHA\-1 と一致しない場合は
\fB+\fR
、サブモジュールにマージ競合がある場合は
\fBU\fR
、 という接頭辞が付く可能性があります。
.sp
\fB\-\-cached\fR
が指定されている場合、このコマンドは代わりに、各サブモジュールのスーパープロジェクトに記録されたSHA\-1を出力します。
.sp
\fB\-\-recursive\fR
が指定されている場合、このコマンドはネストされたサブモジュールに再帰し、それらのステータスも表示します。
.sp
あなたがインデックスまたはHEADに記録されたコミットに関して、現在初期化されているサブモジュールの変更のみに関心がある場合は、
\fBgit-status\fR(1)
および
\fBgit-diff\fR(1)
もその情報を提供します(サブモジュールの作業ツリーへの変更も報告します)。
.RE
.PP
init [\-\-] [<path>\&...]
.RS 4
インデックスに記録されたサブモジュール(他の場所で追加およびコミットされたサブモジュール)を初期化するには、
\fB\&.git/config\fR
に
\fBsubmodule\&.$name\&.url\fR
を設定します。テンプレートとして
\fB\&.gitmodules\fR
と同じ設定を使用します。URLが相対的な場合は、デフォルトのリモートを使用して解決されます。デフォルトのリモートがない場合、現在のリポジトリはアップストリームであると見なされます。
.sp
オプションの <path> 引数は、初期化されるサブモジュールを制限します。パスが指定されておらず、 submodule\&.active が構成されている場合、アクティブになるように構成されたサブモジュールが初期化されます。そうでない場合、すべてのサブモジュールが初期化されます。
.sp
存在する場合は、
\fBsubmodule\&.$name\&.update\fR
の値もコピーします。このコマンドは、
\fB\&.git/config\fR
の既存の情報を変更しません。あなたは次に、ローカル設定用に
\fB\&.git/config\fR
のサブモジュールクローンURLをカスタマイズして、
\fBgit submodule update\fR
に進むことができます。サブモジュールの場所をカスタマイズする予定がない場合は、明示的な「init」ステップなしで
\fBgit submodule update \-\-init\fR
を使用することもできます。
.sp
デフォルトのリモートの定義については、add サブコマンドを参照してください。
.RE
.PP
deinit [\-f|\-\-force] (\-\-all|[\-\-] <path>\&...)
.RS 4
指定のサブモジュールの登録を解除します。つまり、\fB\&.git/config\fR
から
\fBsubmodule\&.$name\fR
セクション全体をその作業ツリーとともに削除します。さらに
\fBgit submodule update\fR
と
\fBgit submodule foreach\fR
と
\fBgit submodule sync\fR
を呼び出すと、 未登録のサブモジュールが再び初期化されるまでスキップされるので、作業ツリーにあるサブモジュールのローカルチェックアウトをもうこれ以上やりたくない場合は、このコマンドを使用してください。
.sp
コマンドをpathspecなしで実行すると、間違いを防ぐために、すべてを無効にするのではなく、エラーが発生します。
.sp
\fB\-\-force\fR
が指定されている場合、サブモジュールの作業ツリーは、ローカルの変更が含まれていても削除されます。
.sp
あなたが本当にリポジトリからサブモジュールを削除してコミットしたい場合は、代わりに
\fBgit-rm\fR(1)
を使用してください。削除オプションについては、
\fBgitsubmodules\fR(7)
を参照してください。
.RE
.PP
update [\-\-init] [\-\-remote] [\-N|\-\-no\-fetch] [\-\-[no\-]recommend\-shallow] [\-f|\-\-force] [\-\-checkout|\-\-rebase|\-\-merge] [\-\-reference <repository>] [\-\-depth <depth>] [\-\-recursive] [\-\-jobs <n>] [\-\-[no\-]single\-branch] [\-\-filter <filter spec>] [\-\-] [<path>\&...]
.RS 4
登録されたサブモジュールを更新して、欠落しているサブモジュールのクローンを作成し、サブモジュールで欠落しているコミットをフェッチし、サブモジュールの作業ツリーを更新して、スーパープロジェクトが期待するものと一致させます。「更新」は、コマンドラインオプションと
\fBsubmodule\&.<name>\&.update\fR
構成変数の値に応じていくつかの方法で実行できます。 コマンドラインオプションは、構成変数よりも優先されます。 どちらも指定されていない場合、「checkout」が実行されます。 コマンドラインと
\fBsubmodule\&.<name>\&.update\fR
構成の両方でサポートされる「update」手順は以下のとおりです:
.PP
checkout
.RS 4
スーパープロジェクトに記録されたコミットは、 切り離されたHEAD(detached HEAD)のサブモジュール(submodule)でチェックアウトされます。
.RE
.sp
+
\fB\-\-force\fR
が指定された場合、サブモジュールは(\fBgit checkout \-\-force\fR
を使って)チェックアウトされます。たとえ含んでいるリポジトリのインデックスで指定されたコミットが、すでにサブモジュールでチェックアウトしたコミットに一致していてもです。
.PP
rebase
.RS 4
サブモジュールの現在のブランチは、 スーパープロジェクトに記録されたコミットに基づいてリベースされます。
.RE
.PP
merge
.RS 4
スーパープロジェクトに記録されたコミットは、 サブモジュールの現在のブランチにマージされます。
.RE
.sp
以下の「update」手順は、
\fBsubmodule\&.<name>\&.update\fR
構成変数を介してのみ使用できます:
.PP
custom command
.RS 4
単一の引数 (スーパープロジェクトに記録されたコミットのsha1)をとる 任意のシェルコマンドが実行されます。
\fBsubmodule\&.<name>\&.update\fR
が
\fB!command\fR
に設定されている場合、 感嘆符(\fB!\fR)の後の残りはカスタムコマンドです。
.RE
.PP
none
.RS 4
サブモジュールは更新されません。
.RE
.sp
サブモジュールがまだ初期化されておらず、
\fB\&.gitmodules\fR
に格納されている設定を使用するだけの場合、 あなたは
\fB\-\-init\fR
オプションを使用してサブモジュールを自動的に初期化できます。
.sp
\fB\-\-recursive\fR
が指定されている場合、このコマンドは登録されたサブモジュールに再帰し、その中でネストされたサブモジュールを更新します。
.sp
\fB\-\-filter <filter spec>\fR
が指定されている場合、 指定の部分(partial)クローン・フィルタがサブモジュールに適用されます。 フィルター仕様の詳細については、
\fBgit-rev-list\fR(1)
を参照してください。
.RE
.PP
set\-branch (\-b|\-\-branch) <branch> [\-\-] <path>, set\-branch (\-d|\-\-default) [\-\-] <path>
.RS 4
サブモジュールのデフォルトのリモート追跡ブランチを設定します。
\fB\-\-branch\fR
オプションを使用すると、リモートブランチを指定できます。
\fB\-\-default\fR
オプションを使用すると、 submodule\&.<name>\&.branch 構成キーを削除し、これにより、追跡ブランチはデフォルトでリモートの「HEAD」になります。
.RE
.PP
set\-url [\-\-] <path> <newurl>
.RS 4
指定されたサブモジュールのURLを <newurl> に設定します。そしてその次に、サブモジュールの新しいリモートURL構成を自動的に同期します。
.RE
.PP
summary [\-\-cached|\-\-files] [(\-n|\-\-summary\-limit) <n>] [commit] [\-\-] [<path>\&...]
.RS 4
指定のコミット(デフォルトはHEAD)と 作業ツリー/インデックス の間のコミットの概要を表示します。問い合わせがサブモジュールの場合、指定のスーパープロジェクトコミットと、インデックスまたは作業ツリー(\fB\-\-cached\fR
によって切り替えられる)の間のサブモジュール内の一連のコミットが表示されます。オプション
\fB\-\-files\fR
が指定されている場合は、スーパープロジェクトのインデックスとサブモジュールの作業ツリーの間の、サブモジュールでの一連のコミットを表示します(このオプションでは、
\fB\-\-cached\fR
オプションを使用したり、明示的なコミットを提供したりすることはできません)。
.sp
\fBgit-diff\fR(1)
で
\fB\-\-submodule=log\fR
オプションを使用すると、その情報も提供されます。
.RE
.PP
foreach [\-\-recursive] <command>
.RS 4
チェックアウトされた各サブモジュールで任意のシェルコマンドを評価します。このコマンドは、変数 $name と $sm_path と $displaypath と $sha1 と$toplevel にアクセスできます。$name は、
\fB\&.gitmodules\fR
の関連するサブモジュールセクションの名前で、 $sm_path は、直接のスーパープロジェクト(immediate superproject)に記録されているサブモジュールのパスで、 $displaypath には、現在の作業ディレクトリからサブモジュールのルートディレクトリへの相対パスが含まれ、 $sha1 は、直接のスーパープロジェクト(immediate superproject)に記録されているコミットで、 $toplevel は、直接のスーパープロジェクト(immediate superproject)のトップレベルへの絶対パスです。Windowsでの
\fB$PATH\fR
との競合を避けるために、
\fB$path\fR
変数は
\fB$sm_path\fR
変数の非推奨の同義語になっていることに注意してください。スーパープロジェクトで定義されているがチェックアウトされていないサブモジュールは、このコマンドでは無視されます。\fB\-\-quiet\fR
が指定されていない限り、foreachはコマンドを評価する前に各サブモジュールの名前を出力します。
\fB\-\-recursive\fR
が指定されている場合、サブモジュールは再帰的にトラバースされます(つまり、指定のシェルコマンドはネストされたサブモジュールでも評価されます)。 サブモジュールのコマンドからゼロ以外の値が返されると、処理が終了(terminate)します。これは、コマンドの最後に
\fB|| :\fR
を追加することでオーバーライドできます。
.sp
例として、以下のコマンドは、各サブモジュールのパスと現在チェックアウトされているコミットを表示します:
.sp
.if n \{\
.RS 4
.\}
.nf
git submodule foreach \*(Aqecho $sm_path `git rev\-parse HEAD`\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
sync [\-\-recursive] [\-\-] [<path>\&...]
.RS 4
サブモジュールのリモートURL構成設定を
\fB\&.gitmodules\fR
で指定された値に同期します。 これは、\fB\&.git/config\fR
にすでにURLエントリがあるサブモジュールにのみ影響します(これは、初期化されたとき、または新しく追加されたときの場合です)。これは、サブモジュールのURLがアップストリームで変更され、それに応じてローカルリポジトリを更新する必要がある場合に役立ちます。
.sp
\fBgit submodule sync\fR
はすべてのサブモジュールを同期しますが、
\fBgit submodule sync \-\- A\fR
はサブモジュール "A" のみを同期します。
.sp
\fB\-\-recursive\fR
が指定されている場合、このコマンドは登録されたサブモジュールに再帰し、その中でネストされたサブモジュールを同期します。
.RE
.PP
absorbgitdirs
.RS 4
サブモジュールのgitディレクトリがサブモジュール内にある場合、サブモジュールのgitディレクトリをそのスーパープロジェクトの
\fB$GIT_DIR/modules\fR
パスに移動し、次に、
\fBcore\&.worktree\fR
を設定して、gitディレクトリとその作業ディレクトリを接続し、そして、スーパープロジェクトのgitディレクトリに埋め込んだサブモジュールのgitディレクトリを指す \&.git ファイルを追加します。
.sp
独立して複製され、後でサブモジュールまたは古いセットアップとして追加されたリポジトリでは、スーパープロジェクトのgitディレクトリに埋め込まれるのではなく、サブモジュール内にサブモジュールのgitディレクトリがあります。
.sp
このコマンドはデフォルトで再帰的に実行されます。
.RE
.SH "OPTIONS"
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
エラーメッセージのみを出力します。
.RE
.PP
\fB\-\-progress\fR
.RS 4
このオプションは、addおよびupdateコマンドにのみ有効です。
\fB\-q\fR
が指定されていない限り、進行状況は、端末に接続されている場合、デフォルトで標準エラーストリームに報告されます。このフラグは、標準エラーストリームが端末に送信されていない場合でも、進行状況を強制します。
.RE
.PP
\fB\-\-all\fR
.RS 4
このオプションは、deinitコマンドに対してのみ有効です。 作業ツリーのすべてのサブモジュールの登録を解除します。
.RE
.PP
\fB\-b <branch>\fR, \fB\-\-branch <branch>\fR
.RS 4
サブモジュールとして追加するリポジトリのブランチ。ブランチの名前は、\fBupdate \-\-remote\fR
の
\fB\&.gitmodules\fR
に
\fBsubmodule\&.<name>\&.branch\fR
として記録されます。 特別な値
\fB\&.\fR
は、サブモジュール内のブランチの名前が現在のリポジトリ内の現在のブランチと同じ名前でなければならないことを示すために使用されます。オプションが指定されていない場合、デフォルトでリモートの「HEAD」になります。
.RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
このオプションは、addとdeinitとupdateコマンドにのみ有効です。addを実行するときは、無視されるサブモジュールパスの追加を許可します。 deinitを実行するときは、ローカルの変更が含まれている場合でも、サブモジュールの作業ツリーが削除されます。 updateを実行するときは(checkout手順でのみ有効)、別のコミットに切り替えるときにサブモジュールのローカル変更を破棄し、そして、含まれているリポジトリのインデックスにリストされているコミットがサブモジュールでチェックアウトされたコミットと一致する場合でも、常にサブモジュールでチェックアウト操作を実行します。
.RE
.PP
\fB\-\-cached\fR
.RS 4
このオプションは、statusコマンドとsummaryコマンドにのみ有効です。これらのコマンドは通常、サブモジュールHEADにあるコミットを使用しますが、このオプションを使用すると、代わりにインデックスに格納されているコミットが使用されます。
.RE
.PP
\fB\-\-files\fR
.RS 4
このオプションは、summaryコマンドにのみ有効です。 このコマンドを使用すると、インデックス内のコミットと、サブモジュールHEAD内のコミットが比較されます。
.RE
.PP
\fB\-n\fR, \fB\-\-summary\-limit\fR
.RS 4
このオプションは、summaryコマンドにのみ有効です。 サマリーサイズ(合計で表示されるコミットの数)を制限します。 0を指定すると、要約が無効になります。 負の数は無制限(デフォルト)を意味します。この制限は、変更されたサブモジュールにのみ適用されます。 追加/削除/タイプ変更された サブモジュールのサイズは常に1に制限されます。
.RE
.PP
\fB\-\-remote\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。 スーパープロジェクトの記録されたSHA\-1を使用してサブモジュールを更新する代わりに、サブモジュールのリモート追跡ブランチのステータスを使用します。 使用されるリモートはブランチのリモート(\fBbranch\&.<name>\&.remote\fR)で、デフォルトは
\fBorigin\fR
です。 使用されるリモートブランチのデフォルトはリモートの
\fBHEAD\fR
ですが、ブランチ名は、
\fB\&.git / config\fR
または
\fB\&.gitmodules\fR
のいずれかで
\fBsubmodule\&.<name>\&.branch\fR
オプションを設定することでオーバーライドできます(\fB\&.git / config\fR
が優先されます)。
.sp
これは、サポートされている更新手順(\fB\-\-checkout\fR
、\fB\-\-rebase\fR
など)のいずれでも機能します。唯一の変更は、ターゲットSHA\-1のソースです。 たとえば、
\fBsubmodule update \-\-remote \-\-merge\fR
はアップストリームのサブモジュールの変更をサブモジュールにマージし、
\fBsubmodule update \-\-merge\fR
はスーパープロジェクトのgitlinkの変更をサブモジュールにマージします。
.sp
現在の追跡ブランチの状態を確認するために、
\fBupdate \-\-remote\fR
はSHA\-1を計算する前にサブモジュールのリモートリポジトリをフェッチします。フェッチしたくない場合は、
\fBsubmodule update \-\-remote \-\-no\-fetch\fR
を使用する必要があります。
.sp
このオプションを使用して、アップストリームサブプロジェクトからの変更をサブモジュールの現在のHEADと統合します。または、サブモジュールから
\fBgit pull\fR
を実行することもできます。これは、リモートブランチ名を除いて同等です。\fBupdate \-\-remote\fR
はデフォルトのアップストリームリポジトリと
\fBsubmodule\&.<name>\&.branch\fR
を使用し、
\fBgit pull\fR
はサブモジュールの
\fBbranch\&.<name>\&.merge\fR
を使用します。スーパープロジェクトでデフォルトのアップストリームブランチを配布する場合は
\fBsubmodule\&.<name>\&.branch\fR
を、サブモジュール自体で作業しているときによりネイティブな感じが必要な場合は
\fBbranch\&.<name>\&.merge\fR
を使用してください。
.RE
.PP
\fB\-N\fR, \fB\-\-no\-fetch\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。リモートサイトから新しいオブジェクトをフェッチしません。
.RE
.PP
\fB\-\-checkout\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。サブモジュールの切り離されたHEAD(detached HEAD)のスーパープロジェクトに記録されたコミットをチェックアウトします。これはデフォルトの動作です。このオプションの主な用途は、
\fBcheckout\fR
以外の値に設定されたときに
\fBsubmodule\&.$name\&.update\fR
をオーバーライドすることです。 キー
\fBsubmodule\&.$name\&.update\fR
が明示的に設定されていないか、
\fBcheckout\fR
に設定されている場合、このオプションが暗黙に指定されています。
.RE
.PP
\fB\-\-merge\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。 スーパープロジェクトに記録されたコミットをサブモジュールの現在のブランチにマージします。 このオプションを指定すると、サブモジュールのHEADは切り離されません。 マージの失敗によりこの処理が妨げられる場合は、通常の競合解決ツールを使用して、サブモジュール内で発生する競合を解決する必要があります。 キー
\fBsubmodule\&.$name\&.update\fR
が
\fBmerge\fR
に設定されている場合、このオプションが暗黙に指定されます。
.RE
.PP
\fB\-\-rebase\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。 現在のブランチをスーパープロジェクトに記録されたコミットにリベースします。 このオプションを指定すると、サブモジュールのHEADは切り離されません。 マージの失敗によりこのプロセスが妨げられる場合は、
\fBgit-rebase\fR(1)
を使用してこれらの失敗を解決する必要があります。 キー
\fBsubmodule\&.$name\&.update\fR
が
\fBrebase\fR
に設定されている場合、このオプションが暗黙に指定されます。
.RE
.PP
\fB\-\-init\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。更新する前に、これまで
\fBgit submodule init\fR
が呼び出されていないすべてのサブモジュールを初期化します。
.RE
.PP
\fB\-\-name\fR
.RS 4
このオプションは、addコマンドに対してのみ有効です。 サブモジュールの名前を、デフォルトのパスではなく、指定の文字列に設定します。 名前はディレクトリ名として有効である必要があり、
\fB/\fR
で終わらせることはできません。
.RE
.PP
\fB\-\-reference <repository>\fR
.RS 4
このオプションは、addとupdateコマンドにのみ有効です。これらのコマンドでは、リモートリポジトリのクローンを作成する必要がある場合があります。その場合、このオプションを
\fBgit-clone\fR(1)
コマンドに渡します。
.sp
\fB注意\fR:
\fBgit-clone\fR(1)
の
\fB\-\-reference\fR
と
\fB\-\-shared\fR
と
\fB\-\-dissociate\fR
オプションに関するNOTEを注意深く読んでいない限り、 このオプションを使用しないでください。
.RE
.PP
\fB\-\-dissociate\fR
.RS 4
このオプションは、addとupdateコマンドにのみ有効です。これらのコマンドでは、リモートリポジトリのクローンを作成する必要がある場合があります。その場合、このオプションを
\fBgit-clone\fR(1)
コマンドに渡します。
.sp
\fB注意\fR:
\fB\-\-reference\fR
オプションについては NOTE を参照してください。
.RE
.PP
\fB\-\-recursive\fR
.RS 4
このオプションは、foreachとupdateとstatusとsyncコマンドにのみ有効です。サブモジュールを再帰的にトラバースします。この操作は、現在のリポジトリのサブモジュールだけでなく、それらのサブモジュール内のネストされたサブモジュール(など)でも実行されます。
.RE
.PP
\fB\-\-depth\fR
.RS 4
このオプションは、addとupdateコマンドに有効です。 指定のリビジョン数に切り捨てられた履歴を持つ「浅い」クローン(shallow clone)を作成します。
\fBgit-clone\fR(1)
を参照してください。
.RE
.PP
\fB\-\-[no\-]recommend\-shallow\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。サブモジュールの初期クローンは、デフォルトで
\fB\&.gitmodules\fR
ファイルによって提供される推奨される
\fBsubmodule\&.<name>\&.shallow\fR
を使用します。 提案を無視するには、\fB\-\-no\-recommend\-shallow\fR
を使用します。
.RE
.PP
\fB\-j <n>\fR, \fB\-\-jobs <n>\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。多くのジョブと並行して新しいサブモジュールのクローンを作成します。デフォルトは
\fBsubmodule\&.fetchJobs\fR
オプションです。
.RE
.PP
\fB\-\-[no\-]single\-branch\fR
.RS 4
このオプションは、updateコマンドに対してのみ有効です。 HEAD または、
\fB\-\-branch\fR
で指定されたブランチは、更新中に1つのブランチのみを複製します
.RE
.PP
<path>\&...
.RS 4
サブモジュールへのパス。これを指定すると、指定したパスで見つかったサブモジュールでのみ動作するようにコマンドが制限されます。(この引数はaddでは必須です)。
.RE
.SH "FILES"
.sp
サブモジュールを初期化するとき、含まれているリポジトリの最上位ディレクトリにある \fB\&.gitmodules\fR ファイルを使用して、各サブモジュールのURLを検索します。 このファイルは、 \fB$GIT_DIR/config\fR と同じ方法でフォーマットする必要があります。各サブモジュールURLのキーは、「submodule\&.$name\&.url」です。 詳細については、 \fBgitmodules\fR(5) を参照してください。
.SH "SEE ALSO"
.sp
\fBgitsubmodules\fR(7), \fBgitmodules\fR(5)\&.
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
