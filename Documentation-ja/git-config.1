'\" t
.\"     Title: git-config
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-CONFIG" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-config \- リポジトリオプションまたはグローバルオプションを、取得および設定する
.SH "SYNOPSIS"
.sp
.nf
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-\-fixed\-value] [\-\-show\-origin] [\-\-show\-scope] [\-z|\-\-null] <name> [<value> [<value\-pattern>]]
\fIgit config\fR [<file\-option>] [\-\-type=<type>] \-\-add <name> <value>
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-\-fixed\-value] \-\-replace\-all <name> <value> [<value\-pattern>]
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-\-show\-origin] [\-\-show\-scope] [\-z|\-\-null] [\-\-fixed\-value] \-\-get <name> [<value\-pattern>]
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-\-show\-origin] [\-\-show\-scope] [\-z|\-\-null] [\-\-fixed\-value] \-\-get\-all <name> [<value\-pattern>]
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-\-show\-origin] [\-\-show\-scope] [\-z|\-\-null] [\-\-fixed\-value] [\-\-name\-only] \-\-get\-regexp <name\-regex> [<value\-pattern>]
\fIgit config\fR [<file\-option>] [\-\-type=<type>] [\-z|\-\-null] \-\-get\-urlmatch <name> <URL>
\fIgit config\fR [<file\-option>] [\-\-fixed\-value] \-\-unset <name> [<value\-pattern>]
\fIgit config\fR [<file\-option>] [\-\-fixed\-value] \-\-unset\-all <name> [<value\-pattern>]
\fIgit config\fR [<file\-option>] \-\-rename\-section <old\-name> <new\-name>
\fIgit config\fR [<file\-option>] \-\-remove\-section <name>
\fIgit config\fR [<file\-option>] [\-\-show\-origin] [\-\-show\-scope] [\-z|\-\-null] [\-\-name\-only] \-l | \-\-list
\fIgit config\fR [<file\-option>] \-\-get\-color <name> [<default>]
\fIgit config\fR [<file\-option>] \-\-get\-colorbool <name> [<stdout\-is\-tty>]
\fIgit config\fR [<file\-option>] \-e | \-\-edit
.fi
.sp
.SH "DESCRIPTION"
.sp
このコマンドを使用して、オプションを照会(query)/設定(set)/置換(replace)/設定解除(unset;削除)できます。名前は実際にはドットで区切られたセクションとキーであり、値はエスケープされます。
.sp
\fB\-\-add\fR オプションを使用すると、オプションに複数の行を追加できます。複数行で発生する可能性のあるオプションを更新または設定解除する場合は、\fBvalue\-pattern\fR ( \fB\-\-fixed\-value\fR オプションが指定されていない限り、拡張正規表現)を指定する必要があります。パターンに一致する既存の値のみが更新または設定解除されます。パターンと「一致しない」行を処理する場合は、前に1つの感嘆符(\fB!\fR)を追加するだけです(the section called \(lqEXAMPLES\(rq も参照下さい)が、ただし、これは \fB\-\-fixed\-value\fR オプションが使用されていない場合のみ機能することに注意してください。
.sp
\fB\-\-type=<type>\fR オプションは「git config」に指示して、指定の<type>の下で入力値(incoming value)と出力値(outgoing value)が正規化可能であることを確認します。 \fB\-type=<type>\fR が指定されていない場合、正規化は実行されません。 呼び出し元は、既に指定済の \fB\-\-type\fR 指定子を \fB\-\-no\-type\fR で設定解除できます。
.sp
読み取り時、値はデフォルトでシステム、グローバル、リポジトリのローカル構成ファイルから読み取られ、オプション \fB\-\-system\fR 、\fB\-\-global\fR 、 \fB\-\-local\fR 、 \fB\-\-worktree\fR 、 `\-\-file <filename> ` を使用して、その場所から「のみ」読み取るようにコマンドに指示できます(the section called \(lqFILES\(rq 参照)。
.sp
書き込み時、新しい値はデフォルトでリポジトリのローカル構成ファイルに書き込まれます。オプション \fB\-\-system\fR 、\fB\-\-global\fR 、 \fB\-\-worktree\fR 、\fB\-\-file <filename> ` を使用すれば、コマンドにその場所に書き込むよう指示できます(あなたは `\-\-local\fR と言うこともでき、そしてこれはデフォルトです)。
.sp
このコマンドは、エラー時にゼロ以外のステータスで失敗します。 いくつかの終了コードは以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
セクションキーが不正(ret=1)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
セクションまたは名前が与えられてない(ret=2)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
configファイルが不正(ret=3)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
configファイルに書き込みできない(ret=4)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
存在しないオプションの設定を削除(unseet)しようとしました(ret=5)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
あなたは、複数の行が一致するオプションを設定(set)/削除(unset)しようとしています(ret=5)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
不正な正規表現を使おうとしています(ret=6)
.RE
.sp
成功の場合、コマンドは終了コード 0 を返します。
.sp
使用可能なすべての構成変数のリストは、 \fBgit help \-\-config\fR コマンドを使用して取得できます。
.SH "OPTIONS"
.PP
\fB\-\-replace\-all\fR
.RS 4
デフォルトの振る舞いでは最大1行を置き換えますが、このオプションより、キー(およびオプションで
\fBvalue\-pattern\fR)に一致するすべての行が置換されます。
.RE
.PP
\fB\-\-add\fR
.RS 4
既存の値を変更せずに、オプションに新しい「行を追加」します。 これは
\fB\-\-replace\-all\fR
の
\fBvalue\-pattern\fR
として
\fB^$\fR
を指定しても同じ事が可能です。
.RE
.PP
\fB\-\-get\fR
.RS 4
指定されたキーの値を取得します(オプションで、値に一致する正規表現でフィルタリングされます)。キーが見つからなかった場合はエラーコード1を返し、複数のキー値が見つかった場合は「最後の値」を返します。
.RE
.PP
\fB\-\-get\-all\fR
.RS 4
\fB\-\-get\fR
と同様ですが、複数値キー(複数行;multivar)のすべての値を返します。
.RE
.PP
\fB\-\-get\-regexp\fR
.RS 4
\fB\-\-get\-all\fR
と同様ですが、名前を正規表現として解釈し、キー名を書き出します。正規表現の照合では現在、大文字と小文字が区別され、セクション名と変数名が小文字になっている正規化されたバージョンのキーに対して実行されますが、サブセクション名は大文字と小文字が区別されません。
.RE
.PP
\fB\-\-get\-urlmatch <name> <URL>\fR
.RS 4
2つの部分からなる名前 section\&.key を指定すると、 <URL> 部分が指定したURLに最もよく一致する section\&.<URL>\&.key の値が返されます(そのようなキーが存在しない場合は、 section\&.keyの値にフォールバックします)。セクションだけを名前として指定した合は、当該セクション内のすべてのキー・値をリストします。値が見つからない場合はエラーコード1を返します。
.RE
.PP
\fB\-\-global\fR
.RS 4
オプション書き込みの場合: リポジトリの
\fB\&.git/config\fR
ではなくグローバル
\fB~/\&.gitconfig\fR
\fB$XDG_CONFIG_HOME/git/config\fR
ファイルがある場合は
\fB$XDG_CONFIG_HOME/git/config\fR
ファイルに書き込みます。
.sp
オプション読み取りの場合: 使用可能なすべてのファイルからではなく、グローバル
\fB~/\&.gitconfig\fR
と
\fB$XDG_CONFIG_HOME/git/config\fR
からのみ読み取ります。
.sp
the section called \(lqFILES\(rq
も参照して下さい。
.RE
.PP
\fB\-\-system\fR
.RS 4
オプション書き込みの場合: リポジトリの
\fB\&.git/config\fR
ではなくシステム全体の
\fB$(prefix)/etc/gitconfig\fR
に書き込みます。
.sp
オプション読み取りの場合: 使用可能なすべてのファイルからではなく、システム全体の
\fB$(prefix)/etc/gitconfig\fR
からのみ読み取ります。
.sp
the section called \(lqFILES\(rq
も参照して下さい。
.RE
.PP
\fB\-\-local\fR
.RS 4
オプションを書き込む場合: リポジトリの
\fB\&.git/config\fR
ファイルに書き込みます。これがデフォルトの動作です。
.sp
読み取りオプションの場合: 使用可能なすべてのファイルからではなく、リポジトリ
\fB\&.git/config\fR
からのみ読み取ります。
.sp
the section called \(lqFILES\(rq
も参照して下さい。
.RE
.PP
\fB\-\-worktree\fR
.RS 4
\fBextensions\&.worktreeConfig\fR
が有効な場合に
\fB$GIT_DIR/config\&.worktree\fR
が読み書きされることを除いて、
\fB\-\-local\fR
と同様です。 そうでない場合は
\fB\-\-local\fR
と同じです。
\fB$GIT_DIR\fR
は、メインの作業ツリーでは
\fB$GIT_COMMON_DIR\fR
と同じですが、他の作業ツリーでは
\fB$GIT_DIR/worktrees/<id>/\fR
の形式であることに注意してください。
\fBextensions\&.worktreeConfig\fR
を有効にする方法については、
\fBgit-worktree\fR(1)
を参照してください。
.RE
.PP
\fB\-f <config\-file>\fR, \fB\-\-file <config\-file>\fR
.RS 4
オプション書き込みの場合: リポジトリの
\fB\&.git/config\fR
ではなく、指定のファイルに書き込みます。
.sp
オプション読み取りの場合: 使用可能なすべてのファイルからではなく、指定のファイルからのみ読み取ります。
.sp
the section called \(lqFILES\(rq
も参照して下さい。
.RE
.PP
\fB\-\-blob <blob>\fR
.RS 4
\fB\-\-file\fR
に似ていますが、ファイルの代わりに指定のブロブを使用します。例えば、
\fBmaster:\&.gitmodules\fR
を使用して、masterブランチのファイル
\fB\&.gitmodules\fR
から値を読み取ることができます。ブロブ名の綴りのより完全なリストについては、
\fBgitrevisions\fR(7)
の「SPECIFYING REVISIONS」セクションを参照してください。
.RE
.PP
\fB\-\-remove\-section\fR
.RS 4
指定のセクションを構成ファイルから削除します。
.RE
.PP
\fB\-\-rename\-section\fR
.RS 4
指定のセクションの名前を新しい名前に変更します。
.RE
.PP
\fB\-\-unset\fR
.RS 4
キーに一致する行を構成ファイルから削除します。
.RE
.PP
\fB\-\-unset\-all\fR
.RS 4
キーに一致するすべての行を構成ファイルから削除します。
.RE
.PP
\fB\-l\fR, \fB\-\-list\fR
.RS 4
構成ファイルに「設定されている」すべての変数とその値を一覧表示します(訳注:使用可能なすべての構成変数のリストは、
\fBgit help \-\-config\fR)。
.RE
.PP
\fB\-\-fixed\-value\fR
.RS 4
\fBvalue\-pattern\fR
引数と一緒に使用する場合、
\fBvalue\-pattern\fR
を正規表現ではなく単なる文字列として扱います。これにより、値が
\fBvalue\-pattern\fR
と完全に等しいものにのみ一致する、名前/値のペアだけに制限されます。
.RE
.PP
\fB\-\-type <type>\fR
.RS 4
「git config」は、入力または出力が指定された型(type)の制約の下で有効であることを保証し、その型の正規形式で出力値を正規化します。
.sp
有効な型には以下のものがあります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbool\fR: 値を
\fBtrue\fR
または `false`として正規化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBint\fR: 値を単純な10進数として正規化します。オプションのサフィックス
\fBk\fR
また
\fBm`または `g\fR
を使用すると、入力時に値にそれぞれ1,024または1,048,576(10242)または1,073,741,824(10243)が掛け算されます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbool\-or\-int\fR: 上記のように、
\fBbool\fR
または
\fBint\fR
のいずれかに従って正規化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBpath\fR:
\fB$HOME\fR
の値を意味する
\fB~\fR
を先頭に追加し、指定のユーザのホームディレクトリを
\fB~user\fR
として正規化します。この
\fB~\fR
は値を書き込むときには効果がありません(ただし、あなたはコマンドラインから
\fBgit config section\&.variable ~/\fR
と実行してシェルに展開をさせることができます)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBexpiry\-date\fR: 固定または相対の日付文字列からタイムスタンプに変換することで正規化します。この指定は値を書き込むときには効果がありません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcolor\fR: 値を取得するときに、ANSIカラーエスケープシーケンスに変換して正規化します。値を設定するとき、指定された値がANSIカラーとして正規化可能であることを確認するために健全性チェックが実行されますが、正規化自体は行われず、そのまま書き込まれます。
.RE
.RE
.PP
\fB\-\-bool\fR, \fB\-\-int\fR, \fB\-\-bool\-or\-int\fR, \fB\-\-path\fR, \fB\-\-expiry\-date\fR
.RS 4
タイプ指定子を選択するための歴史的オプション。 代わりに
\fB\-\-type\fR
を優先します(上記参照)。
.RE
.PP
\fB\-\-no\-type\fR
.RS 4
(これ以前に設定されていた場合、)これ以前に設定された型指定子の設定を解除します。このオプションは、「git config」が取得した変数を正規化しないように要求します。
\fB\-\-no\-type\fR
は、\fB\-\-type=<type>\fR
または
\fB\-\-<type>\fR
が無い場合は何の効果もありません。
.RE
.PP
\fB\-z\fR, \fB\-\-null\fR
.RS 4
値やキーを出力するすべてのオプションで、値を(改行ではなく)常にヌルバイト(\e0)で終了します。代わりに、キーと値の間の区切り文字として改行を使用します。これにより、例えば、改行を含む値を混乱することなく、出力を安全にパースできます。
.RE
.PP
\fB\-\-name\-only\fR
.RS 4
\fB\-\-list\fR
または
\fB\-\-get\-regexp\fR
の構成変数で名前のみを出力します。
.RE
.PP
\fB\-\-show\-origin\fR
.RS 4
照会されたすべての構成オプションの出力に、その構成オプションの出処の種類(ファイル、標準入力、blob、コマンドライン)と実際の出処(設定ファイルのパス、参照、または該当する場合はblobのID)を追加します。
.RE
.PP
\fB\-\-show\-scope\fR
.RS 4
\fB\-\-show\-origin\fR
と同様に、クエリされたすべての設定オプションの出力をその値のスコープ(worktree, local, global, system, command)で拡張します。
.RE
.PP
\fB\-\-get\-colorbool <name> [<stdout\-is\-tty>]\fR
.RS 4
\fBname\fR
の色設定(たとえば
\fBcolor\&.diff\fR)を見つけて、
\fBtrue\fR
または
\fBfalse\fR
を出力します。
\fB<stdout\-is\-tty>\fR
は
\fBtrue\fR
または
\fBfalse\fR
のいずれかである必要があり、構成で
\fBauto`と表示されている場合に考慮されます。 `<stdout\-is\-tty>\fR
がない場合は、コマンド自体の標準出力をチェックし、色を使用する場合はステータス0で終了し、それ以外の場合はステータス1で終了します。
\fBname\fR
の色設定が未定義の場合、コマンドはフォールバックとして
\fBcolor\&.ui\fR
を使用します。
.RE
.PP
\fB\-\-get\-color <name> [<default>]\fR
.RS 4
\fBname\fR
(例:
\fBcolor\&.diff\&.new\fR) に設定されている色を見つけて、ANSIカラーエスケープシーケンスとして標準出力に出力します。
\fBname\fR
に色が設定されていない場合は、オプションの
\fBdefault\fR
パラメータが代わりに使用されます。
.sp
\fB\-\-type=color [\-\-default=<default>]\fR
は
\fB\-\-get\-color\fR
よりも優先されます(ただし、
\fB\-\-get\-color\fR
は、
\fB\-\-type=color\fR
によって出力される末尾の改行を省略します)。
.RE
.PP
\fB\-e\fR, \fB\-\-edit\fR
.RS 4
指定の構成ファイルを変更するためのエディタを開きます。指定できるのは、
\fB\-\-system\fR
または
\fB\-\-global\fR
または「リポジトリ」(指定なし;デフォルト)、のいずれかです。
.RE
.PP
\fB\-\-[no\-]includes\fR
.RS 4
値を検索するときは、設定ファイルの
\fBinclude\&.*\fR
ディレクティブを尊重します。特定のファイルが指定されている場合(たとえば、
\fB\-\-file\fR
、\fB\-\-global\fR
などを使用した場合)はデフォルトで
\fBoff\fR
になり、すべての構成ファイルを検索する場合は
\fBon\fR
になります。
.RE
.PP
\fB\-\-default <value>\fR
.RS 4
\fB\-\-get\fR
を使用していて、要求した変数が見つからない場合、 <value> がその変数に割り当てられた値であるかのように動作します。
.RE
.SH "CONFIGURATION"
.sp
\fBpager\&.config\fR は、構成を一覧表示する場合、つまり、 ` \-\-list` 、または複数の結果を返す可能性のある \fB\-\-get\-*\fR のいずれか、を使用する場合にのみ尊重されます。デフォルトでは pager を使用します。
.SH "FILES"
.sp
デフォルトでは、 「git config」は複数のファイルから構成オプションを読み取ります:
.PP
$(prefix)/etc/gitconfig
.RS 4
システム全体(PC毎)の構成ファイル
.RE
.PP
$XDG_CONFIG_HOME/git/config, ~/\&.gitconfig
.RS 4
ユーザー固有の構成ファイル。 XDG_CONFIG_HOME 環境変数が設定されていないか空の場合、 $XDG_CONFIG_HOME として $HOME/\&.config/ が使用されます。
.sp
これらは「グローバル」(global)構成ファイルとも呼ばれます。 両方のファイルが存在する場合、両方のファイルが上記の順序で読み取られます。
.RE
.PP
$GIT_DIR/config
.RS 4
リポジトリ毎の構成ファイル。
.RE
.PP
$GIT_DIR/config\&.worktree
.RS 4
これはオプションであり、
\fBextensions\&.worktreeConfig\fR
が $GIT_DIR/config に存在する場合にのみ検索されます。
.RE
.sp
任意の git コマンドを実行するとき、 \fB\-c\fR オプションを使用して、 追加の構成パラメーターを指定することもできます。 詳細については、 \fBgit\fR(1) を参照してください。
.sp
オプションは、利用可能なこれらすべてのファイルから読み取られます。 グローバルまたはシステム全体の構成ファイルが見つからないか読み取れない場合、それらは無視されます。 リポジトリ構成ファイルが見つからないか読み取れない場合、 「git config」はゼロ以外のエラー・コードで終了します。 ファイルが読み取れない場合はエラー・メッセージが生成されますが、見つからない場合は生成されません。
.sp
ファイルは上記の順序で読み取られ、「最後」に見つかった値が前に読み取った値よりも優先されます。なお、複数値(multiple values)を取得すると、すべてのファイルのキーのすべての値が使用されます。
.sp
デフォルトでは、オプションはリポジトリ固有の構成ファイルにのみ書き込まれます。 これは、 \fB\-\-replace\-all\fR や \fB\-\-unset\fR などのオプションにも影響することに注意してください。 「\fBgit config\fR は、一度に 1 つのファイルのみを変更します。」
.sp
ファイルのパスを \fB\-\-file\fR オプションで指定したり、構成スコープ(configuration scope)を \fB\-\-system\fR または \fB\-\-global\fR または \fB\-\-local\fR または \fB\-\-worktree\fR で指定することにより、どの構成ソース(configuration sources)を読み書きするかを制限することが可能です。 詳しくは、上記の the section called \(lqOPTIONS\(rq を参照してください。
.SH "SCOPES"
.sp
各構成ソース(configuration source)は、構成スコープ(configuration scope)内にあります。それらスコープは以下のとおりです:
.PP
system
.RS 4
$(prefix)/etc/gitconfig
.RE
.PP
global
.RS 4
$XDG_CONFIG_HOME/git/config
.sp
~/\&.gitconfig
.RE
.PP
local
.RS 4
$GIT_DIR/config
.RE
.PP
worktree
.RS 4
$GIT_DIR/config\&.worktree
.RE
.PP
command
.RS 4
GIT_CONFIG_{COUNT,KEY,VALUE} 環境変数 (下記
the section called \(lqENVIRONMENT\(rq
参照)
.sp
\fB\-c\fR
オプション
.RE
.sp
\fBcommand\fR を除いて、各スコープは各コマンド・ライン・オプションに対応します: \fB\-\-system\fR, \fB\-\-global\fR, \fB\-\-local\fR, \fB\-\-worktree\fR
.sp
オプションを読み取るとき、スコープを指定すると、そのスコープ内のファイル達からオプション達のみが読み取られます。 オプションを記述するときに、スコープを指定すると、(リポジトリ固有の構成ファイルではなく) そのスコープ内のファイルに書き込まれます。 完全な説明については、上記 the section called \(lqOPTIONS\(rq を参照してください。
.sp
ほとんどの構成オプションは、定義されているスコープに関係なく適用されますが、一部のオプションは特定のスコープでのみ適用されます。 詳細については、それぞれのオプションのドキュメントを参照してください。
.SS "Protected configuration"
.sp
保護された構成(protected configuration)は、 \fBsystem\fR と \fBglobal\fR と \fBcommand\fR スコープを参照します。 セキュリティ上の理由から、特定のオプションは、保護された構成で指定されている場合にのみ尊重され、それ以外の場合は無視されます。
.sp
Gitはこれらのスコープを、あたかもユーザーまたは信頼できる管理者によって制御されているかのように扱います。これは、これらのスコープを制御する攻撃者は、Gitを使用せずに実質的な害を与えることができるのだから、当然、ユーザーの環境は攻撃者からこれらのスコープを保護しているに違いないはずだと想定するのです。(訳注:ユーザ側で攻撃されないようにちゃんと保護しといてください、Git側では責任もてません の意)
.SH "ENVIRONMENT"
.PP
GIT_CONFIG_GLOBAL, GIT_CONFIG_SYSTEM
.RS 4
グローバルまたはシステムレベルの構成からではなく、指定されたファイルから構成を取得します。詳細については
\fBgit\fR(1)
を参照してください。
.RE
.PP
GIT_CONFIG_NOSYSTEM
.RS 4
システム全体(PC毎)の $(prefix)/etc/gitconfig ファイルからの設定の読み取りをスキップするかどうか。詳細については
\fBgit\fR(1)
を参照してください。
.RE
.sp
the section called \(lqFILES\(rq も参照して下さい。
.PP
GIT_CONFIG_COUNT, GIT_CONFIG_KEY_<n>, GIT_CONFIG_VALUE_<n>
.RS 4
GIT_CONFIG_COUNTが正の数に設定されている場合、その数までのすべての環境ペア GIT_CONFIG_KEY_<n> と GIT_CONFIG_VALUE_<n> がプロセスのランタイム構成に追加されます。構成ペアはゼロインデックスです。キーまたは値が欠落している場合は、エラーとして扱われます。空のGIT_CONFIG_COUNTは、GIT_CONFIG_COUNT=0と同じように扱われます。つまり、ペアは処理されません。これらの環境変数は構成ファイルの値をオーバーライドしますが、
\fBgit \-c\fR
を介して渡された明示的なオプションによってオーバーライドされます。
.sp
これは、共通の構成で複数のgitコマンドを生成したいが、スクリプトを作成する場合など、構成ファイルに依存できない場合に役立ちます。
.RE
.PP
GIT_CONFIG
.RS 4
\fBgit config\fR
に
\fB\-\-file\fR
オプションが指定されていない場合は、
\fB\-\-file\fR
を介して提供されているかのように
\fBGIT_CONFIG\fR
によって指定されたファイルを使用します。この変数は他のGitコマンドには影響せず、主に歴史的な互換性のためのものです。 通常、
\fB\-\-file\fR
オプションの代わりに使用する理由はありません。
.RE
.SH "EXAMPLES"
.sp
以下の \&.git/config が与えられているものとします:
.sp
.if n \{\
.RS 4
.\}
.nf
#
# This is the config file, and
# a \*(Aq#\*(Aq or \*(Aq;\*(Aq character indicates
# a comment
#

; core variables
[core]
        ; Don\*(Aqt trust file modes
        filemode = false

; Our diff algorithm
[diff]
        external = /usr/local/bin/diff\-wrapper
        renames = true

; Proxy settings
[core]
        gitproxy=proxy\-command for kernel\&.org
        gitproxy=default\-proxy ; for all the rest

; HTTP
[http]
        sslVerify
[http "https://weak\&.example\&.com"]
        sslVerify = false
        cookieFile = /tmp/cookie\&.txt
.fi
.if n \{\
.RE
.\}
.sp
.sp
あなたは以下のようにしてfilemodeをtrueに設定できます
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.filemode true
.fi
.if n \{\
.RE
.\}
.sp
.sp
この架空のプロキシ・コマンド・エントリには、実際には適用先の URL を識別するための接尾辞があります。 kernel\&.org のエントリを \fBssh\fR に変更する方法は以下のとおりです:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.gitproxy \*(Aq"ssh" for kernel\&.org\*(Aq \*(Aqfor kernel\&.org$\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
これにより、kernel\&.orgのキーと値のペアのみが置き換えられます。
.sp
renamesのエントリを削除するには
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-unset diff\&.renames
.fi
.if n \{\
.RE
.\}
.sp
.sp
マルチ変数(multivar)(上記のcore\&.gitproxyなど)のエントリを削除する場合は、正確に1行の値に一致する正規表現を指定する必要があります。
.sp
特定のキーの値を照会するには、次のようにします。
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get core\&.filemode
.fi
.if n \{\
.RE
.\}
.sp
.sp
または
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.filemode
.fi
.if n \{\
.RE
.\}
.sp
.sp
また、マルチ変数(multivar)の照会は:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get core\&.gitproxy "for kernel\&.org$"
.fi
.if n \{\
.RE
.\}
.sp
.sp
マルチ変数のすべての値を知りたい場合は、次のようにします:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-get\-all core\&.gitproxy
.fi
.if n \{\
.RE
.\}
.sp
.sp
あなたが危険極まりない人生を送りたい場合は、以下のようにして core\&.gitproxy の「全て」を新しいものに置き換えることができます。
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-replace\-all core\&.gitproxy ssh
.fi
.if n \{\
.RE
.\}
.sp
.sp
しかし、あなたが本当にデフォルトプロキシの行、つまり「for \&...」の接尾辞のない行だけを置き換えたい場合は、次のようにします:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config core\&.gitproxy ssh \*(Aq! for \*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
感嘆符(\fB!\fR)と実際に一致させるには、以下のことを行う必要があります。
.sp
.if n \{\
.RS 4
.\}
.nf
% git config section\&.key value \*(Aq[!]\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
既存のプロキシを変更せずに新しいプロキシを追加するには、以下を使用します。
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-add core\&.gitproxy \*(Aq"proxy\-command" for example\&.com\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
.sp
あなたのスクリプトで構成からカスタマイズされた色を使う例:
.sp
.if n \{\
.RS 4
.\}
.nf
#!/bin/sh
WS=$(git config \-\-get\-color color\&.diff\&.whitespace "blue reverse")
RESET=$(git config \-\-get\-color "" "reset")
echo "${WS}your whitespace color or blue reverse${RESET}"
.fi
.if n \{\
.RE
.\}
.sp
.sp
URL が \fBhttps://weak\&.example\&.com\fR の場合、 \fBhttp\&.sslVerify\fR はfalseに設定され、他のすべてのURLでは \fBtrue\fR に設定されます:
.sp
.if n \{\
.RS 4
.\}
.nf
% git config \-\-type=bool \-\-get\-urlmatch http\&.sslverify https://good\&.example\&.com
true
% git config \-\-type=bool \-\-get\-urlmatch http\&.sslverify https://weak\&.example\&.com
false
% git config \-\-get\-urlmatch http https://weak\&.example\&.com
http\&.cookieFile /tmp/cookie\&.txt
http\&.sslverify false
.fi
.if n \{\
.RE
.\}
.sp
.SH "CONFIGURATION FILE"
.sp
Git構成ファイルには、Gitコマンドの動作に影響を与えるいくつかの変数が含まれています。各リポジトリ内のファイル \fB\&.git/config\fR と、オプションで \fBconfig\&.worktree\fR (\fBgit-worktree\fR(1) の「CONFIGURATION FILE」セクションを参照)は、そのリポジトリの設定を保存するために使用され、 \fB$HOME/\&.gitconfig\fR は、ユーザーごとの構成を \fB\&.git/config\fR ファイルのフォールバック値として保存するために使用されます。 ファイル \fB/etc/gitconfig\fR を使用して、システム全体のデフォルト設定を保存できます。
.sp
構成変数は、Git配管コマンドとGit磁器コマンドの両方で使用されます。変数はセクションに分割されます。変数自体の完全修飾変数名は最後のドット区切りセグメントであり、セクション名は最後のドットより前のすべてです。変数名では大文字と小文字が区別されず、英数字(alphanumeric)と \fB\-\fR(\ex2d) のみが許可され、英字(alphabetic)で始まる必要があります。一部の変数は複数回現れる場合があり、その変数はmultivalueであると言います(訳注:multiple lines(複数行)という表現とmultivalueと言う表現が混在する。configでは同じ意味)。
.SS "Syntax"
.sp
構文はかなり柔軟で寛容です。空白(whitespace)はほとんど無視されます。 \fI#\fR と \fI;\fR 文字はそこからその行の行末までコメントにします。空白行は無視されます。
.sp
このファイルは、セクションと変数で構成されています。セクションは角括弧内(\fB[\*(Aq \&... `]\*(Aq)のセクションの名前で始まり、次のセクションが始まるまで続きます。セクション名では大文字と小文字は区別されません。セクション名には、英数字(alphanumeric) と `\-\fR (\ex2d) と \fB\&.\fR (\ex2e) のみを使用できます。各変数はあるセクションに属している必要があります。つまり、変数の最初の設定の前にセクションヘッダーが必要です。
.sp
セクションはさらにサブセクションに分割できます。サブセクションを開始するには、以下の例のように、セクションヘッダーで、セクション名からスペースで区切って、その名前を二重引用符で囲みます:
.sp
.if n \{\
.RS 4
.\}
.nf
        [section "subsection"]
.fi
.if n \{\
.RE
.\}
.sp
.sp
サブセクション名では大文字と小文字が区別され、改行とヌルバイト(\ex00)以外の任意の文字を含めることができます。 二重引用符 \fB"\fR (\ex22)と バックスラッシュ(\ex5c;日本の環境では円記号で表示される事がある)は、それぞれ \fB\e"\fR と \fB\e\e\fR としてエスケープすることで含めることができます。 他の文字の前にあるバックスラッシュは、読み取るときに削除されます。 たとえば、 \fB\et\fR は \fBt\fR として読み取られ、 \fB\e0\fR は \fB0\fR として読み取られます。セクションヘッダーは複数行にまたがることはできません。変数は、セクションまたは特定のサブセクションに直接属する場合があります。 \fB[section" subsection "]\fR がある場合は \fB[section]\fR も使用できますが、必須ではありません。
.sp
非推奨の \fB[section\&.subsection]\fR 構文があります。この構文では、サブセクション名は小文字に変換され、大文字と小文字が区別されて比較されます。これらのサブセクション名は、セクション名と同じ制限に従います。
.sp
他のすべての行(およびセクションヘッダーの後の行の残りの部分)は、「name = value」(または単に「name」)の形式で設定変数として認識されます(「name」形式は「name = true」の省略形で、変数をブール値「true」に設定します)。変数名では大文字と小文字が区別されず、英数字(alphanumeric)と \fB\-\fR (\ex2d) のみが許可され、英字(alphabetic)で始まる必要があります。
.sp
値を定義する行は、 \fB\e\fR (\ex5c) で終了することにより、次の行に続けることができます。続けた時、バックスラッシュと行末は削除されて認識されます。 \fIname =\fR の後の先頭の空白と、その行で最初に現れるコメント文字 \fI#\fR または \fI;\fR 以降行末まで、または、行末尾の空白は、二重引用符で囲まれていない限り破棄されます。値内の内部空白はそのまま保持されます。
.sp
ダブルクォートで囲まれた中では、ダブルクォート \fB"\fR とバックスラッシュ \fB\e\fR 文字はエスケープしなければなりません。 \fB"\fR を表わすには \fB\e"\fR を使い、 \fB\e\fR を表わすには \fB\e\e\fR を使ってください。
.sp
( \fB\e"\fR と \fB\e\e\fR に加えて)認識されるエスケープシーケンスは、改行文字(NL;newline)が \fB\en\fR 、水平タブ(HT;TAB)が \fB\et\fR 、バックスペース(BS)が \fB\eb\fR です。他のエスケープシーケンス(8進エスケープシーケンスを含む)は無効です。
.SS "Includes"
.sp
\fBinclude\fR セクションと \fBincludeIf\fR セクションを使用すると、別のソースからの設定ディレクティブを含めることができます。これら２つのセクションは、条件がtrueと評価されない場合 \fBincludeIf\fR セクションが無視されることを除いて、同様に動作します。 以下の「Conditional includes」を参照してください。
.sp
特別な \fBinclude\&.path\fR (または \fBincludeIf\&.*\&.path\fR )変数をインクルードするファイルの名前に設定することにより、別の構成ファイルをインクルードできます。 変数はその値としてパス名を取り、チルダ展開の対象となります。これらの変数は複数回指定できます。
.sp
インクルードファイルの内容は、includeディレクティブの場所で見つかったかのように、すぐに挿入されます。変数の値が相対パスである場合、そのパスは、includeディレクティブが見つかった構成ファイルからの相対パスであると見なされます。例については、以下を参照してください。
.SS "Conditional includes"
.sp
\fBincludeIf\&.<condition>\&.path\fR 変数をインクルードするファイルの名前に設定することにより、条件付きで別の構成ファイルをインクルードできます。
.sp
条件は、キーワードで始まり、その後にコロンと、形式と意味がキーワードによって異なるいくつかのデータが続きます。サポートされているキーワードは以下のとおりです:
.PP
\fBgitdir\fR
.RS 4
キーワード
\fBgitdir:\fR
続くデータは、グロブパターンとして使用されます。 \&.git ディレクトリの場所がパターンと一致する場合、インクルード条件が満たされます。
.sp
\fB\&.git\fR
の場所は自動検出されるか、
\fB$GIT_DIR\fR
環境変数から取得されます。 リポジトリが \&.git ファイルを介して(つまり、サブモジュールやリンクされたワークツリーなどから)自動検出される場合、最終的に検出される \&.git の場所とは、 \&.git ファイルの場所ではなく \&.git ファイルからたどった \&.gitディレクトリの場所です。
.sp
パターンには、標準のグロブワイルドカードと、複数のパス部分に一致する可能性のある2つの追加のワイルドカード
\fB**/\fR
と
\fB/**\fR
を含めることができます。詳細については、
\fBgitignore\fR(5)
を参照してください。便宜上、以下の記法が使えます:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パターンが
\fB~/\fR
で始まる場合、
\fB~\fR
は環境変数
\fBHOME\fR
の内容に置き換えられます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パターンが
\fB\&./\fR
で始まる場合、現在の設定ファイルを含むディレクトリに置き換えられます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パターンが
\fB~/\fR
・
\fB\&./\fR
・
\fB/\fR
のいずれでも始まらない場合、
\fB**/\fR
自動的に先頭に追加されます。たとえば、パターン
\fBfoo/bar\fR
は
\fB**/foo/bar\fR
になり、
\fB/any/path/to/foo/bar\fR
と一致します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パターンが
\fB/\fR
で終わる場合、
\fB**\fR
が自動的に追加されます。 たとえば、パターン
\fBfoo/\fR
は
\fBfoo/**\fR
になります。言い換えると、「foo」ディレクトリとその中のすべてに再帰的に一致します。
.RE
.RE
.PP
\fBgitdir/i\fR
.RS 4
これは、照合が大文字と小文字を区別せずに行われることを除いて、
\fBgitdir\fR
と同じです(大文字と小文字を区別しないファイルシステムなど)。
.RE
.PP
\fBonbranch\fR
.RS 4
キーワード
\fBonbranch:\fR
に続くデータは、標準のグロブワイルドカードと、複数のパス部分に一致する可能性のある2つの追加のワイルドカード
\fB**/\fR
と
\fB/**\fR
を含むパターンと見なされます。現在チェックアウトされているブランチの名前がパターンと一致するワークツリーにいる場合、インクルード条件が満たされます。
.sp
パターンが
\fB/\fR
で終わる場合、
\fB**\fR
が自動的に追加されます。 たとえば、パターン
\fBfoo/\fR
は
\fBfoo/**\fR
になります。つまり、
\fBfoo/\fR
で始まるすべてのブランチに一致します。これは、ブランチが階層的に編成されていて、その階層内のすべてのブランチに構成を適用する場合に役立ちます。
.RE
.PP
\fBhasconfig:remote\&.*\&.url:\fR
.RS 4
このキーワードに続くデータは、標準のグロブ・ワイルドカード(globbing wildcards)と、複数コンポーネントに一致する 2 つの追加ワイルドカード
\fB**/\fR
と
\fB/**\fR
を使用したパターンと見なされます。 このキーワードが最初に表れた時、構成ファイルの残りでremote URL がスキャンされます(値は適用されません)。 このパターンに一致するremote URL が少なくとも 1 つ存在する場合、インクルード条件が満たされます。
.sp
このオプションによって (直接的または間接的に) インクルードされるファイルには、remote URL を含めることはできません。
.sp
注意:他の includeIf 条件とは異なり、この条件の解決は、条件を読み取る時点ではまだわかっていない情報に依存することに注意してください。 典型的なユース・ケースは、このオプションがシステム・レベルまたはグローバル・レベルの構成として存在し、 remote URL がローカル・レベルの構成にあるというものです。 したがって、この状態を解決するときは前方をスキャンする必要があります。 インクルードされる可能性のあるファイルが、そのようなファイルがインクルードされる可能性があるかどうかに影響を与える、鶏が先か卵が先かという問題を回避するために、Git は、これらのファイルがこれらの条件の解決に影響を与えることを禁止する (したがって remote URL を宣言することを禁止する) ことで、この循環を断ち切ります。
.sp
このキーワードの命名に関しては、より変数ベースのインクルード条件をサポートする命名スキームとの前方互換性のためですが、現在、Git は上記の正確なキーワードのみをサポートしています。
.RE
.sp
\fBgitdir\fR と \fBgitdir/i\fR を介したマッチングに関するいくつかの注意事項:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB$GIT_DIR\fR
の中のシンボリックリンクは、マッチ前に解決されません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
シンボリックリンクバージョンとrealpathバージョンの両方のパスが、
\fB$GIT_DIR\fR
の値と照合されます。例えば
\fB~/git\fR
が
\fB/mnt/storage/git\fR
へのシンボリックリンクである場合、
\fBgitdir:~/git\fR
と
\fBgitdir:/mnt/storage/git\fR
の両方が一致します。
.sp
これは、Git v2\&.13\&.0 でのこの機能の最初のリリースには当てはまりませんでした。これは、realpathバージョンにのみ一致していました。この機能の初期リリースとの互換性を希望する構成では、realpathバージョンのみ、あるいは両方のバージョンを指定する必要があります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
注意: 「\&.\&./」は特別なものではなく、文字通り一致することに注意してください。これは、あなたが望むものではない可能性があります。
.RE
.SS "Example"
.sp
.if n \{\
.RS 4
.\}
.nf
# Core variables
[core]
        ; Don\*(Aqt trust file modes
        filemode = false

# Our diff algorithm
[diff]
        external = /usr/local/bin/diff\-wrapper
        renames = true

[branch "devel"]
        remote = origin
        merge = refs/heads/devel

# Proxy settings
[core]
        gitProxy="ssh" for "kernel\&.org"
        gitProxy=default\-proxy ; for the rest

[include]
        path = /path/to/foo\&.inc ; include by absolute path
        path = foo\&.inc ; find "foo\&.inc" relative to the current file
        path = ~/foo\&.inc ; find "foo\&.inc" in your `$HOME` directory

; include if $GIT_DIR is /path/to/foo/\&.git
[includeIf "gitdir:/path/to/foo/\&.git"]
        path = /path/to/foo\&.inc

; include for all repositories inside /path/to/group
[includeIf "gitdir:/path/to/group/"]
        path = /path/to/foo\&.inc

; include for all repositories inside $HOME/to/group
[includeIf "gitdir:~/to/group/"]
        path = /path/to/foo\&.inc

; relative paths are always relative to the including
; file (if the condition is true); their location is not
; affected by the condition
[includeIf "gitdir:/path/to/group/"]
        path = foo\&.inc

; include only if we are in a worktree where foo\-branch is
; currently checked out
[includeIf "onbranch:foo\-branch"]
        path = foo\&.inc

; include only if a remote with the given URL exists (note
; that such a URL may be provided later in a file or in a
; file read after this file is read, as seen in this example)
[includeIf "hasconfig:remote\&.*\&.url:https://example\&.com/**"]
        path = foo\&.inc
[remote "origin"]
        url = https://example\&.com/git
.fi
.if n \{\
.RE
.\}
.sp
.SS "Values"
.sp
多くの変数の値は単純な文字列として扱われますが、特定のタイプの値をとる変数があり、それらの綴り方に関する規則があります。
.PP
boolean
.RS 4
変数がブール値をとると言われるとき、「true」と「false」の多くの同義語が受け入れられます。なお、これらはすべて大文字と小文字を区別しません。
.PP
true
.RS 4
ブール値 true のリテラルは、
\fByes\fR
と
\fBon\fR
と
\fBtrue\fR
と
\fB1`です。 また、値の指定無し( `= <value>\fR
無し) の変数は true と見なされます。
.RE
.PP
false
.RS 4
ブール値 false リテラルは、
\fBno\fR
と
\fBoff\fR
と
\fBfalse\fR
と
\fB0\fR
と 空文字列です。
.sp
\fB\-\-type = bool\fR
型指定子を使用して値を正規形に変換する場合、
\fIgit config\fR
は、値の出力を「true」または「false」（小文字で表記）にします。
.RE
.RE
.PP
integer
.RS 4
さまざまなサイズを指定する多くの変数の値には、「k」、「M」などの接尾辞を付けることができます。これは、「数値に1024掛けた値に」、「数値に1024x1024を掛けた値に」などを意味します。
.RE
.PP
color
.RS 4
色をとる変数の値は、スペースで区切られた色(最大で2つ、1つは前景用(foreground)、もう1つは背景用(background))と、(必要な数の)属性(attribute)の「リスト」です。
.sp
使用できる基本色は、
\fBnormal\fR
と
\fBblack\fR
と
\fBred\fR
と
\fBgreen\fR
と
\fByellow\fR
と
\fBblue\fR
と
\fBmagenta\fR
と
\fBcyan\fR
と
\fBwhite\fR
と
\fBdefault\fR
です。与えられた最初の色は前景用です。2番目は背景用です。
\fBnormal\fR
と
\fBdefault\fR
を除くすべての基本色には、
\fBbrightred\fR
のように色の前に
\fBbright\fR
と付けることで指定できる明るいバリエーションがあります。
.sp
色
\fBnormal\fR
は色を変更しません。 空の文字列と同じですが、背景色のみを指定する場合の前景色として使用できます (たとえば、
\fBnormal red\fR)。
.sp
色
\fBdefault\fR
は、色を端末のデフォルトに明示的にリセットします。たとえば、クリアされた背景を指定します。 端末によって異なりますが、これは通常
\fBwhite black\fR
に設定するのと同じではありません。
.sp
色は0から255までの数字で指定することもできます。これらはANSI256色モードを使用します(ただし、すべての端末がこれをサポートしているわけではないことに注意してください)。端末が24ビットRGB値をサポートしている場合は
\fB#ff0ab3\fR
のように16進数として指定することもできます。
.sp
受け入れられる属性(attribute)は、
\fBbold\fR
と
\fBdim\fR
と
\fBul\fR
と
\fBblink\fR
と
\fBreverse\fR
と
\fBitalic\fR
と
\fBstrike\fR
(取り消し線(cross\-out)または「取り消し線」の文字(strikethrough letters)の場合) です。色に関する属性の位置(前、後、または中間)は重要ではありません。特定の属性は、それらの前に「no」または「no\-」を付けることによってオフにすることができます(たとえば、「noreverse」、「no\-ul」など)。
.sp
疑似属性
\fBreset\fR
は、指定された色を適用する前に、すべての色と属性をリセットします。 たとえば、\fBreset green\fR
は、アクティブな属性のない緑の前景とデフォルトの背景になります。
.sp
空のカラー文字列は、色の効果をまったく生成しません。 これは、色を完全に無効にすることなく、特定の要素の色付けを回避するために使用できます。
.sp
gitで事前定義されたカラースロットの場合、属性は、カラー出力の各アイテムの先頭でリセットされることを意図しています。したがって、
\fBcolor\&.decorate\&.branch`を\fR
black`に設定すると、同じ出力行の前のものが
\fBbold\fR
または他の属性でペイントされるように設定されている場合(たとえば
\fBlog \-\-decorate\fR
出力のブランチ名のリストの前で括弧を開く)でも、そのブランチ名がプレーンな
\fBblack\fR
でペイントされます。ただし、カスタムログ形式では、より複雑で階層化された色付けが行われる場合があり、否定された形式が役立つ場合があります。
.RE
.PP
pathname
.RS 4
パス名の値をとる変数には、
\fB~/\fR
または
\fB~user/\fR
で始まる文字列を指定できます。このような文字列には、通常のチルダ展開が行われます。
\fB~/\fR
は
\fB$HOME\fR
の値に展開され、
\fB~user/\fR
は指定のユーザーのホームディレクトリに展開されます。
.sp
パスが
\fB%(prefix)/\fR
で始まる場合、残りはGitの「ランタイムプレフィックス」に関連するパス、つまりGit自体がインストールされた場所に関連するパスとして解釈されます。 たとえば、
\fB%(prefix)/bin/\fR
は、Git実行可能ファイル自体が存在するディレクトリを指します。Gitがランタイムプレフィックスのサポートなしでコンパイルされた場合、代わりにコンパイルされたプレフィックスが置き換えられます。万が一、展開してはならないリテラルパスを指定する必要がある場合は、
\fB\&./%(prefix)/bin\fR
のように接頭辞
\fB\&./\fR
を付ける必要があります。
.RE
.SS "Variables"
.sp
注意: このリストは包括的ではなく、必ずしも完全ではないことに注意してください。コマンド固有の変数については、適切なマニュアルページに詳細な説明があります。
.sp
他のgit関連ツールは、独自の変数を使用する場合があります。独自のツールで使用する新しい変数を考案するときは、それらの名前がGit自体や他の一般的なツールで使用されているものと競合しないことを確認し、ドキュメントに記述してください。
.PP
advice\&.*
.RS 4
これらの変数は、新しいユーザーを支援するために設計されたさまざまなオプションのヘルプメッセージを制御します。すべての「advice\&.*」変数はデフォルトで「true」に設定されており、これらを「false」に設定することで、ヘルプが不要であることをGitに伝えることができます。
.PP
ambiguousFetchRefspec
.RS 4
複数のremoteトの fetch refspec が同一のリモート追跡ブランチ名前空間に マップされ、ブランチ追跡のセットアップが失敗する場合に 表示されるアドバイス。
.RE
.PP
fetchShowForcedUpdates
.RS 4
\fBgit-fetch\fR(1)がrefの更新後に強制更新を計算したり、 チェックが無効になっていることを警告したりするのに 長い時間がかかる場合に表示されるアドバイス。
.RE
.PP
pushUpdateRejected
.RS 4
\fBpushNonFFCurrent\fR
と
\fBpushNonFFMatching\fR
と
\fBpushAlreadyExists\fR
と
\fBpushFetchFirst\fR
と
\fBpushNeedsForce\fR
と
\fBpushRefNeedsUpdate\fR
を 同時に無効にする場合は、この変数を
\fBfalse\fR
に設定します。
.RE
.PP
pushNonFFCurrent
.RS 4
現在のブランチへの non\-fast\-forward 更新が原因で
\fBgit-push\fR(1)
が失敗した場合に表示されるアドバイス。
.RE
.PP
pushNonFFMatching
.RS 4
\fBgit-push\fR(1)
を実行し、 「matching refs」を明示的にプッシュ(つまり あなたは「:」を使用したか、 あなたの現在のブランチではないrefspecを指定した)して、 「non\-fast\-forward」エラーが発生したときに表示されるアドバイスです。
.RE
.PP
pushAlreadyExists
.RS 4
\fBgit-push\fR(1)
が、 fast\-forwarding の対象とならない更新(タグなど)を拒否した場合に表示されます。
.RE
.PP
pushFetchFirst
.RS 4
\fBgit-push\fR(1)
が、私たちが持っていないオブジェクトを指す リモート参照を上書きしようとする更新を 拒否した場合に表示されます。
.RE
.PP
pushNeedsForce
.RS 4
\fBgit-push\fR(1)
が、 コミットっぽくないオブジェクトを指すリモートrefを上書きしようとする更新、 またはコミットっぽくないブジェクトを指すリモートrefを作成しようとする更新を 拒否した場合に表示されます。
.RE
.PP
pushUnqualifiedRefname
.RS 4
\fBgit-push\fR(1)
が、 ソースと宛先のrefsに基づいて、 ソースが属するリモートref名前空間を推測しようとするのをあきらめたときに表示されます。 ただし、 ソースオブジェクトのタイプに基づいて、 refs/heads/* または refs/tags/* のいずれかにプッシュすることを提案できる場合もあります。
.RE
.PP
pushRefNeedsUpdate
.RS 4
\fBgit-push\fR(1)
が、 リモート追跡refにローカルにない更新がある場合に、 ブランチの強制更新を拒否した場合に表示されます。
.RE
.PP
skippedCherryPicks
.RS 4
\fBgit-rebase\fR(1)
が、 アップストリームブランチにすでにチェリーピックされているコミットをスキップした場合に表示されます。
.RE
.PP
statusAheadBehind
.RS 4
\fBgit-status\fR(1)
が、 リモート追跡refと比較したローカルrefの先行(ahead)/遅延(behind)カウントを計算し、 その計算に予想よりも時間がかかる場合に表示されます。
\fBstatus\&.aheadBehind\fR
がfalseの場合、 またはオプション
\fB\-\-no\-ahead\-behind\fR
が指定されている場合は表示されません。
.RE
.PP
statusHints
.RS 4
\fBgit-status\fR(1)
の出力や、
\fBgit-commit\fR(1)
の コミットメッセージ記入時のテンプレート表示や、
\fBgit-switch\fR(1)
または
\fBgit-checkout\fR(1)
の ブランチ切り替え時のヘルプメッセージに、 現在の状態からどのように進めていくかの指示を表示します。
.RE
.PP
statusUoption
.RS 4
コマンドが、 追跡されていないファイルを列挙するのに2秒以上かかる場合は、
\fBgit-status\fR(1)
で
\fB\-u\fR
オプション使用の検討をアドバイスします。
.RE
.PP
commitBeforeMerge
.RS 4
\fBgit-merge\fR(1)
がローカルの変更を上書きしないようにマージを拒否した場合に、 アドバイスが表示されます。
.RE
.PP
resetNoRefresh
.RS 4
コマンドがリセット後にインデックスをリフレッシュするのに2秒以上かかる場合、
\fBgit-reset\fR(1)
に
\fB\-\-no\-refresh\fR
オプションを使用することを 検討するようにアドバイスします。
.RE
.PP
resolveConflict
.RS 4
競合が原因で操作が実行できない場合に、 さまざまなコマンドによって表示されるアドバイス。
.RE
.PP
sequencerInUse
.RS 4
シーケンサーコマンドがすでに進行中の場合に表示されるアドバイス。
.RE
.PP
implicitIdentity
.RS 4
システムのユーザー名とドメイン名から 情報が推測される場合のID構成の設定方法に 関するアドバイス。
.RE
.PP
detachedHead
.RS 4
\fBgit-switch\fR(1)
または
\fBgit-checkout\fR(1)
を使用して HEADのデタッチ状態に移行し、 事後にローカルブランチを作成する方法を 指示したときに表示されるアドバイス。
.RE
.PP
suggestDetachingHead
.RS 4
\fBgit-switch\fR(1)
が明示的な
\fB\-\-detach\fR
オプション無しで HEAD の切り離し(detach)を拒否した場合に表示されるアドバイス。
.RE
.PP
checkoutAmbiguousRemoteBranchName
.RS 4
\fBgit-checkout\fR(1)
と
\fBgit-switch\fR(1)
の引数が、 明確な引数によらず リモート追跡ブランチがチェックアウトされる状況で、 複数のリモート上のリモート追跡ブランチに対して あいまいに解決される場合に表示されるアドバイス。 このアドバイスが出力される状況で、 特定のリモートをデフォルトで 使用するように設定する方法については、
\fBcheckout\&.defaultRemote\fR
構成変数を参照してください。
.RE
.PP
amWorkDir
.RS 4
\fBgit-am\fR(1)
がパッチファイルの適用に失敗した場合に パッチファイルの場所を示すアドバイス。
.RE
.PP
rmHints
.RS 4
\fBgit-rm\fR(1)
の出力に失敗した場合、 現在の状態からどのように進めるかについての指示を表示します。
.RE
.PP
addEmbeddedRepo
.RS 4
誤って、あるgitリポジトリを別のリポジトリ内に追加した 場合の対処方法に関するアドバイス。
.RE
.PP
ignoredHook
.RS 4
フックが実行可能ファイルとして設定されていないために フックが無視された場合に表示されるアドバイス。
.RE
.PP
waitingForEditor
.RS 4
Gitがユーザーからのエディタ入力を待機しているときは、 いつでも端末にメッセージを出力します。
.RE
.PP
nestedTag
.RS 4
ユーザーがタグオブジェクトに再帰的にタグを付けようとした 場合に表示されるアドバイス。
.RE
.PP
submoduleAlternateErrorStrategyDie
.RS 4
「die」に設定された submodule\&.alternateErrorStrategy オプションが 致命的なエラーを引き起こす場合に表示されるアドバイス。
.RE
.PP
submodulesNotUpdated
.RS 4
\fBgit submodule update \-\-init\fR
が実行されなかったために失敗した サブモジュール・コマンドをユーザーが実行したときに表示されるアドバイス。
.RE
.PP
addIgnoredFile
.RS 4
ユーザーが、無視されたファイルをインデックスに追加しようとした 場合に表示されるアドバイス。
.RE
.PP
addEmptyPathspec
.RS 4
ユーザーがpathspecパラメーターを指定せずに addコマンドを実行した場合に表示されるアドバイス。
.RE
.PP
updateSparsePath
.RS 4
\fBgit-add\fR(1)
または
\fBgit-rm\fR(1)
のいずれかが、 現在のスパースチェックアウト外のインデックスエントリを 更新するように求められたときに表示されるアドバイス。
.RE
.RE
.PP
core\&.fileMode
.RS 4
作業ツリー内のファイルの実行可能ビットを尊重するかどうかをGitに通知します。
.sp
一部のファイルシステムでは、実行可能としてマークされたファイルがチェックアウトされるか、実行可能ビットがオンになっている実行不可能なファイルをチェックアウトすると、実行可能ビットを失います。
\fBgit-clone\fR(1)
または
\fBgit-init\fR(1)
は、ファイルシステムを調査して、実行可能ビットを正しく処理し、この変数が必要に応じて自動的に設定されるかどうかを確認します。
.sp
リポジトリはファイルモードを正しく処理するファイルシステム上にある可能性があり、この変数は作成時に「true」に設定されますが、後でファイルモードを失う別の環境からアクセスできるようになる可能性があります(たとえば、CIFSマウントを介したext4のエクスポート。CygwinがGit for WindowsまたはEclipseでリポジトリを作成た時など)。このような場合、この変数を「false」に設定する必要がある場合があります。
\fBgit-update-index\fR(1)
を参照してください。
.sp
(設定ファイルでcore\&.filemodeが指定されていない場合、)デフォルトはtrueです。
.RE
.PP
core\&.hideDotFiles
.RS 4
(Windowsのみ)trueの場合、名前がドットで始まる、新しく作成されたディレクトリと新しく作成されたファイルを非表示としてマークします。
\fBdotGitOnly\fR
の場合、
\fB\&.git/\fR
ディレクトリのみが非表示になり、ドットで始まる他のファイルは非表示になりません。デフォルトのモードは
\fBdotGitOnly\fR
です。
.RE
.PP
core\&.ignoreCase
.RS 4
APFS、HFS+、FAT、NTFSなどの大文字と小文字を区別しないファイルシステムでGitをより適切に機能させるためのさまざまな回避策を可能にする内部変数。たとえば、Gitが「Makefile」を予期しているときにディレクトリリストで「makefile」が見つかった場合、Git それは実際には同じファイルであると想定し、「Makefile」として記憶し続けます。
.sp
デフォルトはfalseですが、
\fBgit-clone\fR(1)
または
\fBgit-init\fR(1)
は、リポジトリの作成時に必要に応じてcore\&.ignoreCaseを調査してtrueに設定します。
.sp
あなたのオペレーティングシステムとファイルシステムに関して、Gitは、この変数の適切な構成に依存しています。この値を変更すると、予期しない動作が発生する可能性があります。
.RE
.PP
core\&.precomposeUnicode
.RS 4
このオプションは、GitのMacOS実装でのみ使用されます。 core\&.precomposeUnicode=true の場合、GitはMacOSによって行われたファイル名のUnicode分解(unicode decomposition)を元に戻します。これは、MacOSとLinuxまたはWindowsの間でリポジトリを共有する場合に便利です。 (Git for Windows 1\&.7\&.10以降、または Git under cygwin 1\&.7 が必要です)。 falseの場合、ファイル名はGitによって完全に透過的に処理されます。これは、古いバージョンのGitとの下位互換性があります。
.RE
.PP
core\&.protectHFS
.RS 4
trueに設定されている場合、 HFS+ ファイルシステムで
\fB\&.git\fR
と同等と見なされるパスのチェックアウトを許可しないでください。デフォルトはMacOSでは
\fBtrue\fR
、それ以外の場合は
\fBfalse\fR
です。
.RE
.PP
core\&.protectNTFS
.RS 4
trueに設定されている場合、NTFSファイルシステムで問題を引き起こす可能性のあるパスのチェックアウトを許可しないでください。 例えば、 8\&.3 の「短い」名前と競合します。デフォルトは、Windowsでは「true」、それ以外の場合は「false」です。
.RE
.PP
core\&.fsmonitor
.RS 4
true に設定すると、この作業ディレクトリのための組み込みファイル・システム・モニター・デーモンが有効になります(\fBgit-fsmonitor--daemon\fR(1))。
.sp
フック・ベースのファイル・システム・モニター(hook\-based file system monitors)と同様に、組み込みのファイル・システム・モニターは、多数のファイルを含む作業ディレクトリで Git インデックスを更新する必要がある Git コマンド (例:
\fBgit status\fR) を高速化できます。 組み込みのモニターにより、外部のサードパーティ ツールをインストールして維持する必要がなくなります。
.sp
組み込みのファイル・システム・モニターは、現在のところ、サポートされているプラットフォームの限られたセットでのみ使用できます。 現在、これには Windows と MacOS が含まれます。
.sp
.if n \{\
.RS 4
.\}
.nf
それ以外の場合、この変数には fsmonitorフック・コマンドの
パス名が含まれます。
.fi
.if n \{\
.RE
.\}
.sp
このフック・コマンドは、要求された日時以降に変更された可能性のあるすべてのファイルを識別するために使用されます。 この情報は、変更されていないファイルの不要なスキャンを回避することで git を高速化するために使用されます。
.sp
\fBgithooks\fR(5)
の「fsmonitor\-watchman」セクションを参照してください。
.sp
注意: コマンド・ラインでとあるバージョンを使用し、 IDEツールで別のバージョンを使用するなど、Gitの複数のバージョンを同時に使用する場合、
\fBcore\&.fsmonitor\fR
の定義が拡張され、フック・パス名に加えてブール値が許可されることに注意してください。 Git バージョン 2\&.35\&.1 以前はブール値を認識せず、
\fBtrue\fR
または
\fBfalse\fR
の値を呼び出されるフック・パス名と見なします。 Git バージョン 2\&.26 〜 2\&.35\&.1 までは、デフォルトでプロトコルV2 をフックし、 fsmonitor 無し (フル スキャン) にフォールバックします。 2\&.26 より前のバージョンの Git は、デフォルトでプロトコルV1 をフックし、報告する変更がない(スキャンなし)と暗黙のうちに想定するため、ステータス・コマンドは不完全な結果を報告する場合があります。 このため、組み込みのファイル・システム・モニターを使用する前に、すべての Git バージョンをアップグレードすることをお勧めします。
.RE
.PP
core\&.fsmonitorHookVersion
.RS 4
「fsmonitor」フックを呼び出すときに使用するプロトコル・バージョンを設定します。
.sp
現在、バージョン1と2があります。これが設定されていない場合、バージョン2が最初に試行され、失敗した場合はバージョン1が試行されます。 バージョン1は、入力としてtimpstampを使用して、それ以降に変更があったファイルを判別しますが、watchmanなどの一部のモニターでは、timestampを使用すると競合状態になります。バージョン2はopaque stringを使用しているため、モニターは競合状態なしで変更されたファイルを判別するために使用できるものを返すことができます。
.RE
.PP
core\&.trustctime
.RS 4
falseの場合、インデックスと作業ツリー間のctimeの違いは無視されます。iノードの変更時刻がGitの外部の何か(ファイルシステムクローラーおよび一部のバックアップシステム)によって定期的に変更される場合に役立ちます。
\fBgit-update-index\fR(1)
を参照してください。デフォルトではtrueです。
.RE
.PP
core\&.splitIndex
.RS 4
trueの場合、インデックスの分割インデックス機能が使用されます。
\fBgit-update-index\fR(1)
を参照してください。 デフォルトではfalseです。
.RE
.PP
core\&.untrackedCache
.RS 4
インデックスの追跡されていないモノのキャッシュ機能をどうするかを決定します。この変数が設定されていない(unset)か、
\fBkeep\fR
に設定されている場合、キャッシュが保持されます。
\fBtrue\fR
に設定すると、自動的に追加されます。 また、
\fBfalse\fR
に設定すると、自動的に削除されます。
\fBtrue\fR
に設定する前に、mtimeがシステムで正しく機能していることを確認する必要があります。
\fBgit-update-index\fR(1)
を参照してください。 この設定をデフォルトで
\fBtrue\fR
に設定する
\fBfeature\&.manyFiles\fR
が有効になっていない限り、デフォルトは
\fBkeep\fR
です。
.RE
.PP
core\&.checkStat
.RS 4
core\&.checkStat が設定されていないか
\fBdefault\fR
に設定されている場合、Gitがファイルを調べてからファイルが変更されたかどうかを検出するために、stat構造体の多くのフィールドがチェックされます。この構成変数が
\fBminimal\fR
に設定されている場合、mtimeとctimeの1秒未満の部分、ファイルの所有者のuidとgid、iノード番号(およびGitがそれを使用するようにコンパイルされている場合はデバイス番号も)はチェック対象から除外され、mtimeの2分の1の部分(および
\fBcore\&.trustCtime\fR
が設定されている場合はctime)とファイルサイズチェックのみがチェック対象として残ります。
.sp
(JGitなど)一部のフィールドに使用可能な値を残さないGitの実装があります。これらのフィールドを比較から除外することにより、
\fBminimal\fR
モードは、同じリポジトリがこれらの他のシステムによって同時に使用される場合の相互運用性に役立つ可能性があります。
.RE
.PP
core\&.quotePath
.RS 4
パスを出力するコマンド(例:
\fBls\-files\fR
、
\fBdiff\fR)は、パス名を二重引用符で囲み(\fB"\&.\&.\&."\fR)、Cが制御文字をエスケープするのと同じ方法でそれらの文字をバックスラッシュ(\fB\e\fR)でエスケープすることにより、パス名の「異常な」文字をクォートします(例: TABの場合は
\fB\et\fR
、LFの場合は
\fB\en\fR
、バックスラッシュの場合は
\fB\e\e\fR
)、または0x80より大きい値のバイト(たとえば、UTF\-8の "micro" の場合は8進数
\fB\e302\e265\fR)。この変数がfalseに設定されている場合、0x80を超えるバイトは「異常」とは見なされなくなります。この変数の設定に関係なく、二重引用符(\fB"\fR)、バックスラッシュ(\fB\e\fR)、および制御文字は常にエスケープされます。単純なスペース文字は「異常」とは見なされません。多くのコマンドは、
\fB\-z\fR
オプションを使用してパス名を完全にそのままで出力できます。デフォルト値はtrueです。
.RE
.PP
core\&.eol
.RS 4
作業ディレクトリ内で、(
\fBtext\fR
属性を設定するか、\fBtext=auto\fR
とGitがコンテンツをテキストとして自動検出することにより)テキストとしてマークされたファイルが使用する行末タイプを設定します。 代替手段は、
\fBlf\fR
と
\fBcrlf\fR
と プラットフォームの生来の行末を使用する
\fBnative\fR
があります。デフォルト値は
\fBnative\fR
です。行末変換の詳細については、
\fBgitattributes\fR(5)
を参照してください。注意:
\fBcore\&.autocrlf\fR
が
\fBtrue\fR
または
\fBinput\fR
に設定されている場合、この値は無視されることに注意してください。
.RE
.PP
core\&.safecrlf
.RS 4
trueの場合、行末変換がアクティブなときに
\fBCRLF\fR
の変換が可逆的かどうかをGitにチェックさせます。 Gitは、コマンドが作業ツリー内のファイルを直接または間接的に変更するかどうかを確認します。たとえば、あるファイルをコミットしてから同じファイルをチェックアウトすると、作業ツリーに元のファイルが生成されます。この操作が
\fBcore\&.autocrlf\fR
の現在の設定に当てはまらない場合、Gitはそのファイルを拒否します。変数を
\fBwarn\fR
に設定でき、その場合、Gitは不可逆的な変換についてのみ警告はしますが、操作を続行します。
.sp
CRLF変換には、データが破損する可能性がわずかにあります。有効にすると、Gitはコミット時にCRLFをLFに変換し、チェックアウト時にLFをCRLFに変換します。コミット前にLFとCRLFが混在しているファイルは、Gitでは復元できません。リポジトリにLF行末のみが含まれるように行末を修正するのは、テキストファイルの場合は正しい操作です。しかし、誤ってテキストとして分類されたバイナリファイルの場合、変換によってデータが破損する可能性があります。
.sp
あなたがこのような破損を早期に認識した場合は、 \&.gitattributes で変換タイプを明示的に設定することで簡単に修正できます。コミットした直後は、作業ツリーに元のファイルが残っており、このファイルはまだ破損していません。 このファイルはバイナリファイルなのだからと、Gitがファイルを適切に処理することをGitに明示的に伝えることができます。
.sp
残念ながら、行末が混在するテキストファイルをクリーンアップするという望ましい効果と、バイナリファイルを破損するという望ましくない効果を区別することはできません。どちらの場合も、CRLFは元に戻せない方法で削除されます。テキストファイルの場合、CRLFは行末であるため、これは正しいことですが、バイナリファイルの場合、CRLFを変換するとデータが破損します。
.sp
注意: この安全性チェックは、チェックアウトによって、
\fBcore\&.eol\fR
と
\fBcore\&.autocrlf\fR
の異なる設定に対して元のファイルと同じファイルが生成されることを意味するのではなく、現在のファイルに対してのみ生成されることに注意してください。 たとえば、
\fBLF\fR
を含むテキストファイルは
\fBcore\&.eol=lf\fR
で受け入れられ、後で ` core\&.eol=crlf` でチェックアウトできます。この場合、結果のファイルには
\fBCRLF\fR
が含まれますが、 元のファイルには
\fBLF`が含まれていました。 ただし、両方の作業ツリーで、行末は一貫しています。つまり、すべて `LF\fR
または、 すべて
\fBCRLF\fR
のいずれかですが、混合されることはありません。行末が混在するファイルは、
\fBcore\&.safecrlf\fR
メカニズムによって報告されます。
.RE
.PP
core\&.autocrlf
.RS 4
この変数を「true」に設定することは、すべてのファイルで「text」属性を「auto」に設定し、core\&.eolを「crlf」に設定することと同じです。 作業ディレクトリに
\fBCRLF\fR
行末があり、リポジトリにLF行末がある場合は、trueに設定します。 この変数は「input」に設定できます。この場合、出力変換は実行されません。
.RE
.PP
core\&.checkRoundtripEncoding
.RS 4
\fBworking\-tree\-encoding\fR
属性で使用された場合に Git が UTF\-8 のラウンドトリップチェックを行うエンコーディングの、カンマや空白で区切られたリスト(\fBgitattributes\fR(5)
を参照)。デフォルト値は
\fBSHIFT\-JIS\fR
です。
.RE
.PP
core\&.symlinks
.RS 4
falseの場合、シンボリックリンクは、リンクテキストを含む小さなプレーンファイルとしてチェックアウトされます。
\fBgit-update-index\fR(1)
と
\fBgit-add\fR(1)
は、記録されたタイプを通常のファイルに変更しません。シンボリックリンクをサポートしないFATのようなファイルシステムで役立ちます。
.sp
デフォルトは true ですが、\fBgit-clone\fR(1)
や
\fBgit-init\fR(1)
はリポジトリの作成時に core\&.symlinks を調査して必要に応じて core\&.symlinks を false に設定します。
.RE
.PP
core\&.gitProxy
.RS 4
フェッチにGitプロトコルを使用する場合、リモートサーバーへの直接接続を確立する代わりに(「コマンドホストポート」として)実行する「プロキシコマンド」。変数値が「COMMAND for DOMAIN」形式の場合、コマンドは、指定されたドメイン文字列で終わるホスト名にのみ適用されます。この変数は複数回設定でき、指定された順序で照合されます。最初にマッチしたものが採用されます。
.sp
\fBGIT_PROXY_COMMAND\fR
環境変数(特別な「for」処理なしで常に普遍的に適用されます)によってオーバーライドできます。
.sp
特別な文字列
\fBnone\fR
をプロキシコマンドとして使用して、特定のドメインパターンにプロキシを使用しないように指定できます。これは、ファイアウォール内のサーバをプロキシの使用から除外する一方で、外部ドメインには共通のプロキシをデフォルトで使用する場合に便利です。
.RE
.PP
core\&.sshCommand
.RS 4
この変数が設定されている場合、
\fBgit fetch\fR
と
\fBgit push\fR
は、リモートシステムに接続する必要があるときに、
\fBssh\fR
の代わりに指定したコマンドを使用します。このコマンドは
\fBGIT_SSH_COMMAND\fR
環境変数と同じ形式であり、環境変数が設定されると上書きされます。
.RE
.PP
core\&.ignoreStat
.RS 4
trueの場合、Gitはインデックスと作業ツリーの両方で同じように更新された追跡ファイルの「assume\-unchanged」(無変更と仮定する)ビットを設定することにより、ファイルが変更されたかどうかを検出するための lstat() 呼び出しを回避します。
.sp
ファイルがGitの外部で変更される場合、ユーザーは変更されたファイルを明示的にステージングする必要があります(たとえば、
\fBgit-update-index\fR(1)
の「Examples」セクションを参照)。 Gitは通常、これらのファイルへの変更を検出しません。
.sp
これは、 CIFS/Microsoft Windows など、 lstat() 呼び出しが非常に遅いシステムで役立ちます。
.sp
false がデフォルトです。
.RE
.PP
core\&.preferSymlinkRefs
.RS 4
HEADおよびその他のシンボリック参照ファイルのデフォルトの「symref」形式の代わりに、シンボリックリンクを使用します。これは、HEADがシンボリックリンクであることを期待する古いスクリプトを操作するために必要になる場合があります。
.RE
.PP
core\&.alternateRefsCommand
.RS 4
alternateから利用可能な履歴のヒントをアドバタイズする場合は、
\fBgit-for-each-ref\fR(1)
の代わりに、シェルを使用して指定されたコマンドを実行します。最初の引数は、alternateの絶対パスです。出力には、1行に1つの16進オブジェクトIDが含まれている必要があります(つまり、
\fBgit for\-each\-ref \-\-format=\*(Aq%(objectname)\*(Aq\fR
によって生成されたものと同じある必要があります)。
.sp
注意: 通常、 あなたは
\fBgit for\-each\-ref\fR
をconfig値に直接入れることはできません。これは、リポジトリパスを引数として受け取らないためです(ただし、あなたは上記のコマンドをシェルスクリプトでラップすることはできます)。
.RE
.PP
core\&.alternateRefsPrefixes
.RS 4
alternateからの参照を一覧表示する場合は、指定のプレフィックスで始まる参照のみを一覧表示します。プレフィックスは
\fBgit-for-each-ref\fR(1)
への引数として指定されたかのようにマッチングします。複数のプレフィックスを一覧表示するには、それらを空白で区切ります。
\fBcore\&.alternateRefsCommand\fR
が設定されている場合、
\fBcore\&.alternateRefsPrefixes\fR
を設定しても効果ありません。
.RE
.PP
core\&.bare
.RS 4
trueの場合、このリポジトリは「ベア」(bare;ベアリポジトリ)であると見なされ、作業ディレクトリは関連付けられていません。この場合、
\fBgit-add\fR(1)
や
\fBgit-merge\fR(1)
など、作業ディレクトリを必要とする多くのコマンドが無効になります。
.sp
この設定は、リポジトリの作成時に
\fBgit-clone\fR(1)
または
\fBgit-init\fR(1)
によって自動的に推測されます。 デフォルトでは、
\fB/\&.git\fR
で終わるリポジトリはベアではないと見なされ(bare = false)、他のすべてのリポジトリはベアであると見なされます(bare = true)。
.RE
.PP
core\&.worktree
.RS 4
作業ツリーのルートへのパスを設定します。
\fBGIT_COMMON_DIR\fR
環境変数が設定されている場合、 core\&.worktree は無視され、作業ツリーのルートを決定するために使用されません。core\&.worktree は
\fBGIT_WORK_TREE\fR
環境変数と
\fB\-\-work\-tree\fR
コマンドラインオプションで上書きできます。値は、絶対パスまたは
\fB\&.git\fR
ディレクトリへの相対パスにすることができます。これは、
\fB\-\-git\-dir\fR
または GIT_DIR 環境変数で指定されるか、\fB\-\-git\-dir\fR
や GIT_DIR 環境変数の指定が無い場合は自動的に検出されます。\fB\-\-work\-tree\fR
と GIT_WORK_TREE と core\&.worktree のいずれも指定されていない場合、現在の作業ディレクトリが作業ツリーの最上位と見なされます。
.sp
注意: この変数は、ディレクトリの
\fB\&.git｀ サブディレクトリ内の構成ファイルに設定されている場合でも適用され、その値は前者のディレクトリとは異なることに注意してください(たとえば、 `/path/to/\fR
ディレクトリの
\fB\&.git\fR
サブディレクトリ内の構成ファイル
\fB/path/to/\&.git/config\fR
内の core\&.worktree が
\fB/different/path\fR
に設定されていたとする)、これはおそらく設定ミスです。あなたが
\fB/path/to\fR
ディレクトリでGitコマンドを実行すると、引き続き
\fB/different/path\fR
が作業ツリーのルートとして使用され、あなたが何をしているのか分かっている(たとえば、リポジトリの通常の作業ツリーとは異なる場所に同じインデックスの読み取り専用スナップショットを作成している)のでない限り混乱を招く可能性があります。
.RE
.PP
core\&.logAllRefUpdates
.RS 4
reflogを有効にします。新旧のSHA\-1の追加や、日付/時刻・理由の更新による、refである <ref> の更新は、ファイル
\fB$GIT_DIR/logs/<ref>\fR
が存在する場合のみ、そのファイルにロギングされます。この構成変数が
\fBtrue\fR
に設定されている場合、欠落している
\fB$GIT_DIR/logs/<ref>\fR
ファイルがブランチヘッド(つまり、
\fBrefs/heads/\fR
下)、リモートref(つまり、 refs/ 下)、note refs(つまり、
\fBrefs/notes/\fR
下)、およびシンボリックref
\fBHEAD\fR
。
\fBalways`に設定されている場合、欠落しているreflogは、 `refs/\fR
下のすべてのrefに対して自動的に作成されます。
.sp
この情報を使用して、「2日前」(2 days ago)にブランチの先端であったコミットを判別できます。
.sp
この値は、作業ディレクトリが関連付けられているリポジトリではデフォルトでtrueになり、ベアリポジトリではデフォルトでfalseになります。
.RE
.PP
core\&.repositoryFormatVersion
.RS 4
リポジトリの形式とレイアウトのバージョンを識別する内部変数。
.RE
.PP
core\&.sharedRepository
.RS 4
\fBgroup\fR
(または
\fBtrue\fR
)の場合、リポジトリはグループ内の複数のユーザー間で共有可能になります(すべてのファイルとオブジェクトがグループ書き込み可能であることを確認してください)。
\fBall\fR
(または
\fBworld\fR
または
\fBeverybody\fR)の場合、リポジトリはグループ共有可能であることに加えて、すべてのユーザーが読み取り可能になります。
\fBumask\fR
(または
\fBfalse\fR
)の場合、Gitは umask(2) によって報告された権限を使用します。
\fB0xxx\fR
(\fB0xxx\fR
は8進数)の場合、リポジトリ内のファイルはこのモード値になります。「0xxx」はユーザーのumask値をオーバーライドします(他のオプションはユーザーのumask値の要求された部分のみをオーバーライドします)。例:
\fB0660\fR
は、所有者とグループがリポジトリを 読み取り/書き込み 可能にしますが、他のユーザーはアクセスできません(umaskが
\fB0022\fR
などでない限り、
\fBgroup\fR
と同等です)。
\fB0640\fR
は、グループで読み取り可能ですが、グループで書き込み可能ではないリポジトリです。
\fBgit-init\fR(1)
を参照してください。 デフォルトでは False です。
.RE
.PP
core\&.warnAmbiguousRefs
.RS 4
trueの場合、渡したref名があいまいでリポジトリ内の複数のrefと一致する可能性がある場合、Gitは警告を表示します。 デフォルトではtrue。
.RE
.PP
core\&.compression
.RS 4
デフォルトの圧縮レベルを示す整数 \-1〜9。 \-1はzlibのデフォルトです。0は圧縮がないことを意味し、1〜9はさまざまな速度とサイズのトレードオフであり、9が最も低速です。設定されている場合、これは
\fBcore\&.looseCompression\fR
や
\fBpack\&.compression\fR
などの他の圧縮変数のデフォルトを提供します。
.RE
.PP
core\&.looseCompression
.RS 4
整数 \-1〜9は、パックファイルにないオブジェクトの圧縮レベルを示します。\-1はzlibのデフォルトです。0は圧縮がないことを意味し、1〜9はさまざまな速度とサイズのトレードオフであり、9が最も低速です。設定されていない場合、デフォルトは core\&.compression です。 これが設定されていない場合、デフォルトは1(最高速度)になります。
.RE
.PP
core\&.packedGitWindowSize
.RS 4
1回のマッピング操作でメモリにマップするパックファイルのバイト数。ウィンドウサイズを大きくすると、システムが少数の大きなパックファイルをより迅速に処理できるようになる場合があります。ウィンドウサイズを小さくすると、オペレーティングシステムのメモリマネージャへの呼び出しが増えるため、パフォーマンスに悪影響を及ぼしますが、多数の大きなパックファイルにアクセスする場合のパフォーマンスが向上する可能性があります。
.sp
コンパイル時にNO_MMAPが設定されている場合、デフォルトは1Mバイトです。それ以外の場合、32ビットプラットフォームでは32Mバイト、64ビットプラットフォームでは1Gバイトです。これは、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。おそらくあなたはこの値を調整する必要はありません。
.sp
\fBk\fR
または
\fBm\fR
または
\fBg\fR
の一般的な単位接尾辞がサポートされています。
.RE
.PP
core\&.packedGitLimit
.RS 4
パックファイルからメモリに同時にマップする最大バイト数。Gitが操作を完了するために一度にこれ以上のバイトにアクセスする必要がある場合、Gitは既存の領域のマップを解除して、プロセス内の仮想アドレス空間を再利用します。
.sp
デフォルトは、32ビットプラットフォームでは256Mバイト、64ビットプラットフォームでは32Tバイト(事実上無制限)です。これは、超巨大プロジェクトを除いて、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。あなたは、おそらくこの値を調整する必要はありません。
.sp
\fBk\fR
または
\fBm\fR
または
\fBg\fR
の一般的な単位接尾辞がサポートされています。
.RE
.PP
core\&.deltaBaseCacheLimit
.RS 4
複数の削除されたオブジェクトによって参照される可能性のあるベースオブジェクトをキャッシュするために予約するスレッドあたりの最大バイト数。解凍(decompress)されたベースオブジェクト全体をキャッシュに保存することで、Gitは頻繁に使用されるベースオブジェクトを何度もアンパックおよび解凍することを回避できます。
.sp
デフォルトは、すべてのプラットフォームで96Mバイトです。これは、超巨大プロジェクトを除いて、すべてのユーザー/オペレーティングシステムにとって妥当なはずです。あなたは、おそらくこの値を調整する必要はありません。
.sp
\fBk\fR
または
\fBm\fR
または
\fBg\fR
の一般的な単位接尾辞がサポートされています。
.RE
.PP
core\&.bigFileThreshold
.RS 4
「大きい」(big)と見なされるファイルのサイズは、以下で説明するように、多数の git コマンドの動作と、そのようなファイルがリポジトリ内に格納される方法を変更します。 デフォルトは 512 MiB です。
\fBk\fR
または
\fBm\fR
または
\fBg\fR
の一般的な単位サフィックスがサポートされています。
.sp
構成された制限を超えるファイルは以下のようになります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
デルタ圧縮を試行せずに、圧縮された状態でパックファイルに保存されます。
.sp
デフォルトの制限は、主にこのユースケースを念頭に置いて設定されています。 これにより、ほとんどのプロジェクトのソース・コードとその他のテキスト・ファイルはデルタ圧縮されますが、より大きなバイナリ・メディア・ファイルは圧縮されません。
.sp
デルタ圧縮なしで大きなファイルを保存すると、ディスク使用量が増えるというわずかな犠牲を払って、過度のメモリ使用量を回避できます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
「binary」とラベル付けされているかのように扱われます(\fBgitattributes\fR(5)
参照)。 例えば
\fBgit-log\fR(1)
と
\fBgit-diff\fR(1)
は、この制限を超えるファイルのdiffを計算しません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
通常、書き込み時にストリーミングされます。これにより、過度のメモリ使用が回避されますが、一定のオーバーヘッドが発生します。 これを利用するコマンドには、
\fBgit-archive\fR(1)
や
\fBgit-fast-import\fR(1)
や
\fBgit-index-pack\fR(1)
や
\fBgit-unpack-objects\fR(1)
や
\fBgit-fsck\fR(1)
などがあります。
.RE
.RE
.PP
core\&.excludesFile
.RS 4
\fB\&.gitignore\fR
(ディレクトリごと)と
\fB\&.git/info/exclude\fR
に加えて、追跡されることを意図されていないパスを記述するパターンを含むファイルへのパス名を指定します。 デフォルトは
\fB$XDG_CONFIG_HOME/git/ignore\fR
です。
\fB$XDG_CONFIG_HOME\fR
が設定されていないか空の場合、代わりに
\fB$HOME/\&.config/git/ignore\fR
が使用されます。
\fBgitignore\fR(5)
を参照してください。
.RE
.PP
core\&.askPass
.RS 4
パスワードを対話的に要求する一部のコマンド(svnやhttpインターフェイスなど)は、この変数の値を介して指定された外部プログラムを使用するように指示できます。
\fBGIT_ASKPASS\fR
環境変数でオーバーライドできます。設定されていない場合は、
\fBSSH_ASKPASS\fR
環境変数の値にフォールバックするか、それが失敗した場合は、単純なパスワードプロンプトにフォールバックします。外部プログラムには、コマンドライン引数として適切なプロンプトが与えられ、その標準出力にパスワードを書き出す事になっています。
.RE
.PP
core\&.attributesFile
.RS 4
\fB\&.gitattributes\fR
(ディレクトリごと) と
\fB\&.git/info/attributes\fR
に加えて、Gitはこのファイルで属性を調べます(\fBgitattributes\fR(5)
を参照)。パスの拡張は、
\fBcore\&.excludesFile\fR
の場合と同じ方法で行われます。デフォルト値は
\fB$XDG_CONFIG_HOME/git/attributes\fR
です。
\fB$XDG_CONFIG_HOME\fR
が設定されていないか空の場合、代わりに
\fB$HOME/\&.config/git/attributes\fR
が使用されます。
.RE
.PP
core\&.hooksPath
.RS 4
デフォルトでは、Gitは
\fB$GIT_DIR/hooks\fR
ディレクトリでフックを探します。これを別のパスに設定します。例えば
\fB/etc/git/hooks\fR
です。そしてGitはそのディレクトリであなたのフックを見つけようとします。例えば
\fB$GIT_DIR/hooks/pre\-receive\fR
の代わりに
\fB/etc/git/hooks/pre\-receive\fR
です。
.sp
パスは絶対パスでも相対パスでもかまいません。相対パスは、フックが実行されているディレクトリを基準にしたものと見なされます(\fBgithooks\fR(5)
の「DESCRIPTION」セクションを参照)。
.sp
この設定変数は、あなたのGitフックをリポジトリごとに設定するのではなく一元的に設定したい場合や、デフォルトのフックを変更した
\fBinit\&.templateDir\fR
に代わるより柔軟で一元的な設定として有用です。
.RE
.PP
core\&.editor
.RS 4
エディタを起動してメッセージを編集できる
\fBcommit\fR
や
\fBtag\fR
などのコマンドは、この変数が設定されているときにこの変数の値を使用し、環境変数
\fBGIT_EDITOR\fR
は設定されていません。
\fBgit-var\fR(1)
を参照してください。
.RE
.PP
core\&.commentChar
.RS 4
メッセージを編集できる
\fBcommit\fR
や
\fBtag\fR
などのコマンドは、この文字で始まるコメント行を考慮し、エディタから戻った後にそれらを削除します(デフォルトは
\fB#\fR)。
.sp
\fBauto\fR
に設定すると、
\fBgit\-commit\fR
は、既存のコミットメッセージのどの行の先頭文字でもない文字を選択します。
.RE
.PP
core\&.filesRefLockTimeout
.RS 4
個々の参照をロックしようとしたときに再試行する時間の長さ(ミリ秒単位)。値0は、まったく再試行しないことを意味します。 \-1 は無期限に試すことを意味します。 デフォルトは100です(つまり、100ミリ秒再試行します)。
.RE
.PP
core\&.packedRefsTimeout
.RS 4
\fBpacked\-refs\fR
ファイルをロックしようとしたときに再試行する時間の長さ(ミリ秒単位)。値0は、まったく再試行しないことを意味します。\-1は無期限に試すことを意味します。デフォルトは1000です(つまり、1秒間再試行します)。
.RE
.PP
core\&.pager
.RS 4
Gitコマンドで使用するテキストビューア(
\fBless\fR
など)。値はシェルによって解釈されることを意図しています。 優先順位は、
\fB$GIT_PAGER\fR
環境変数、
\fBcore\&.pager\fR
構成、
\fB$PAGER\fR
、そしてコンパイル時に選択されたデフォルト(通常は
\fBless\fR)です。
.sp
\fBLESS\fR
環境変数が設定されていない(unset)場合、Gitはそれを
\fBFRX\fR
に設定(set)します(\fBLESS\fR
環境変数が設定されている場合は、Gitはそれをまったく変更しません)。Gitのデフォルト設定である
\fBLESS\fR
を選択的にオーバーライドする場合は、
\fBcore\&.pager\fR
を、例えば
\fBless \-S\fR
と設定できます。これはGitによってシェルに渡され、Gitは最後のコマンドを
\fBLESS=FRX less \-S\fR
に変換します。環境変数では
\fBS\fR
オプションを設定しませんが、コマンドラインでは設定し、長い行を切り捨てるように指示します。同様に、
\fBcore\&.pager\fR
を
\fBless \-+F\fR
に設定すると、環境変数によって指定された
\fBF`オプションがコマンドラインによって非アクティブになり、 `less\fR
の「1画面の場合は終了」動作が非アクティブになります。特定のGitコマンドに対していくつかのフラグを特に指定してアクティブにすることができます。たとえば、
\fBpager\&.blame\fR
を
\fBless \-S\fR
に設定すると、
\fBgit blame\fR
でのみページャーで行の切り捨てが有効になります。
.sp
同様に、
\fBLV\fR
環境変数が設定されていない場合、Gitはそれを
\fB\-c\fR
に設定します。この設定を上書きするには、
\fBLV\fR
を別の値でエクスポートするか、
\fBcore\&.pager\fR
を
\fBlv +c\fR
に設定します。
.RE
.PP
core\&.whitespace
.RS 4
注意すべき一般的な空白(whitespace)の問題のコンマ(\fB,\fR)区切りのリスト。
\fBgitdiff\fR
は
\fBcolor\&.diff\&.whitespace\fR
を使用してそれらを強調表示し、
\fBgit apply \-\-whitespace = error\fR
はそれらをエラーと見なします。 接頭辞
\fB\-\fR
を付けて、それらのいずれかを無効にすることができます(例:
\fB\-trailing\-space\fR):
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBblank\-at\-eol\fR
は、行末の末尾の空白をエラーとして扱います(デフォルトで有効になっています)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBspace\-before\-tab\fR
は、行の最初のインデント部分のタブ文字の直前に表示されるスペース文字をエラーとして扱います(デフォルトで有効になっています)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBindent\-with\-non\-tab\fR
は、同等のタブではなくスペース文字でインデントされた行をエラーとして扱います(デフォルトでは有効になっていません)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtab\-in\-indent\fR
は、行の最初のインデント部分にあるタブ文字をエラーとして扱います(デフォルトでは有効になっていません)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBblank\-at\-eof\fR
は、ファイルの最後に追加された空白行をエラーとして扱います(デフォルトで有効になっています)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtrailing\-space\fR
は、` blank\-at\-eol` と
\fBblank\-at\-eof\fR
の両方をカバーする省略形です。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcr\-at\-eol\fR
は、行末のキャリッジリターンをラインターミネータの一部として扱います。つまり、そのようなキャリッジリターンの前の文字が空白(a whitespace)でない場合、
\fBtrailing\-space\fR
はトリガーされません(デフォルトでは有効になっていません)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtabwidth=<n>\fR
は、タブが占める文字数を示します。 これは、
\fBindent\-with\-non\-tab\fR
と、 Gitが
\fBtab\-in\-indent\fR
エラーを修正する場合に関連します。デフォルトのタブ幅は8です。許可される値は1〜63です。
.RE
.RE
.PP
core\&.fsync
.RS 4
作成または変更時に core\&.fsyncMethod を介して強化する必要があるリポジトリのコンポーネントのコンマ区切りリスト。 コンポーネントの前に
\fB\-\fR
を付けることで、コンポーネントの堅牢化を無効にすることができます。 堅牢化されていないアイテムは、不正なシステム・シャットダウンが発生した場合に失われる可能性があります。 特別な要件がない限り、このオプションを空のままにするか、
\fBcommitted\fR
または
\fBadded\fR
または
\fBall\fR
のいずれかを選択することをお勧めします。
.sp
この構成が検出されると、一連のコンポーネントがプラットフォームのデフォルト値で開始され、無効なコンポーネントが削除され、追加のコンポーネントが追加されます。
\fBnone\fR
は、プラットフォームのデフォルトが無視されるように状態をリセットします。
.sp
空の文字列は、 fsync 構成をプラットフォームのデフォルトにリセットします。 ほとんどのプラットフォームのデフォルトは
\fBcore\&.fsync=committed,\-loose\-object\fR
と同等で、パフォーマンスは良好ですが、システムが正常にシャットダウンされなかった場合に最近の作業が失われるリスクがあります。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnone\fR
は、fsync されたコンポーネントのセットをクリアします。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBloose\-object\fR
は、リポジトリに追加されたオブジェクトを緩いオブジェクト形式に堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBpack\fR
は、リポジトリに追加されたオブジェクトをパックファイル形式に堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBpack\-metadata\fR
は、パックファイルのビットマップとインデックスに堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcommit\-graph\fR
は、コミット・グラフ・ファイルを堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBindex\fR
は、変更時にインデックスに堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBobjects\fR
は、
\fBloose\-object,pack\fR
と同等の集約オプションです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
reference` は、リポジトリで変更された参照に堅牢化します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBderived\-metadata\fR
は、
\fBpack\-metadata,commit\-graph\fR
と同等の集約オプションです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcommitted\fR
は、現在のところ
\fBobjects\fR
と同等の集約オプションです。 このモードでは、
\fBgit commit\fR
または同様のコマンドでリポジトリにコミットされた作業が確実に堅牢化されるようにして、パフォーマンスがいくらか犠牲になります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBadded\fR
は、現在のところ
\fBcommitted,index\fR
と同等の集約オプションです。 このモードでは、
\fBgit add\fR
などのコマンドや同様の操作の結果が確実に堅牢化されるようにして、パフォーマンスが犠牲が追加されます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBall\fR
は、上記のすべての個々のコンポーネントをsyncする集約オプションです。
.RE
.RE
.PP
core\&.fsyncMethod
.RS 4
fsync および関連するプリミティブを使用してリポジトリ・データを堅牢化するために Git が使用する戦略を示す値。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfsync\fR
は、 fsync() システム・コール、または、当該プラットフォームで fsync() システム・コールと同等のものを使用します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBwriteout\-only\fR
はページ・キャッシュの書き戻し(writeback)要求を発行しますが、ファイル・システムとストレージ・ハードウェアによっては、システム・クラッシュが発生した場合にリポジトリに追加されたデータが保持されない場合があります。 これは macOS のデフォルト・モードです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbatch\fR
は、書き込み専用(writeout\-only)フラッシュを使用してディスク・ライトバック・キャッシュに複数の更新をステージングするモードを有効にし、その後、操作の最後にディスク・キャッシュ・フラッシュをトリガーするためにダミー・ファイル 1 つによっての完全な fsync を実行します。
.sp
現在、
\fBbatch\fR
モードは緩いオブジェクト・ファイルにのみ適用されます。 他のリポジトリ・データは、
\fBfsync\fR
が指定されたかのように永続化されます。 このモードは、 macOS では HFS+ または APFS ファイルシステムに格納されたリポジトリに対して、 Windows では NTFS または ReFS ファイルシステムに格納されたリポジトリに対しては
\fBfsync\fR
と同じくらい安全であると予想されます。
.RE
.RE
.PP
core\&.fsyncObjectFiles
.RS 4
このブール値は、オブジェクトファイルを書き込むときに
\fBfsync()\fR
を有効にします。 この設定は非推奨です。 代わりに core\&.fsync を使用してください。
.sp
この設定は、 緩いオブジェクト形式で Git リポジトリに追加されたデータに影響します。 true に設定すると、Git は fsync または同様のシステム・コールを発行してキャッシュをフラッシュし、不正なシステム・シャットダウンに直面しても緩いオブジェクトの一貫性が維持されるようにします。
.RE
.PP
core\&.preloadIndex
.RS 4
\fBgit diff\fR
などの操作のために並列インデックスプリロードを有効にする
.sp
これにより、特にキャッシュセマンティクスが弱く、IOレイテンシが比較的高いNFSなどのファイルシステムで、「git diff」や「git status」などの操作を高速化できます。有効にすると、Gitはファイルシステムデータとのインデックス比較を並行して実行し、重複する入出力を許可します。デフォルトはtrueです。
.RE
.PP
core\&.unsetenvvars
.RS 4
Windowsのみ: 他のプロセスを生成する前に設定を解除する必要がある環境変数の名前のコンマ(\fB,\fR)区切りのリスト。Git for Windowsが独自のPerlインタープリターの使用を主張しているという事実を説明するために、デフォルトは
\fBPERL5LIB\fR
です。
.RE
.PP
core\&.restrictinheritedhandles
.RS 4
Windowsのみ: 生成されたプロセスが標準のファイルハンドル(
\fBstdin\fR
と
\fBstdout\fR
と
\fBstderr\fR)のみを継承するか、すべてのハンドルを継承するかをオーバーライドします。
\fBauto\fR
または
\fBtrue\fR
または
\fBfalse\fR
にすることができます。デフォルトは
\fBauto\fR
で、これはWindows7以降では
\fBtrue\fR
を意味し、古いバージョンのWindowsでは
\fBfalse\fR
を意味します。
.RE
.PP
core\&.createObject
.RS 4
これを
\fBlink\fR
に設定できます。この場合、ハードリンク後のソース削除を、オブジェクトの作成が既存のオブジェクトが上書しないことをチェックするために使用します。
.sp
一部のファイルシステム/オペレーティングシステムの組み合わせでは、これは信頼できませんので、この構成設定を
\fBrename\fR
に設定します。ただし、これにより、既存のオブジェクトファイルが上書きされないようにするチェックが削除されます。
.RE
.PP
core\&.notesRef
.RS 4
コミットメッセージを表示するときは、指定されたrefに保存されている note も表示します。refは完全に修飾されている必要があります。指定されたrefが存在しない場合、それはエラーではありませんが、noteを印刷してはならないことを意味します。
.sp
この設定のデフォルトは「refs/notes/commits」であり、
\fBGIT_NOTES_REF\fR
環境変数でオーバーライドできます。
\fBgit-notes\fR(1)
を参照してください。
.RE
.PP
core\&.commitGraph
.RS 4
trueの場合、gitはcommit\-graphファイル(存在する場合)を読み取り、コミットのグラフ構造をパースします。デフォルトはtrueです。詳細については、
\fBgit-commit-graph\fR(1)
を参照してください。
.RE
.PP
core\&.useReplaceRefs
.RS 4
\fBfalse\fR
に設定すると、コマンドラインで
\fB\-\-no\-replace\-objects\fR
オプションが指定されたかのように振る舞います。詳細については
\fBgit\fR(1)
と
\fBgit-replace\fR(1)
を参照してください。
.RE
.PP
core\&.multiPackIndex
.RS 4
multi\-pack\-index ファイルを使用して、単一のインデックスを使用して複数のパックファイルを追跡します。詳細については
\fBgit-multi-pack-index\fR(1)
を参照してください。デフォルトはtrueです。
.RE
.PP
core\&.sparseCheckout
.RS 4
「スパースチェックアウト」(sparse checkout)機能を有効にします。 詳細については、
\fBgit-sparse-checkout\fR(1)
を参照してください。
.RE
.PP
core\&.sparseCheckoutCone
.RS 4
スパースチェックアウト機能の「コーンモード」(cone mode)を有効にします。スパースチェックアウトファイルに含まれるパターンのセットが限られている場合、このモードはパフォーマンスに大きな利点をもたらします。 この変数を
\fBfalse\fR
に設定することで、より柔軟なパターンを指定できるように「非コーンモード」(non\-cone mode)を要求できます。 詳細については
\fBgit-sparse-checkout\fR(1)
を参照してください。
.RE
.PP
core\&.abbrev
.RS 4
オブジェクト名の省略形の長さを設定します。指定されていないか「auto」に設定されている場合、リポジトリ内のパックされたオブジェクトのおおよその数に基づいて適切な値が計算されます。それは、省略されたオブジェクト名がしばらくの間(some time)一意であるのに十分な長さです。「no」に設定すると、省略形は作成されず、オブジェクト名は完全な長さで表示されます。 最小の長さは4です。
.RE
.PP
add\&.ignoreErrors, add\&.ignore\-errors (非推奨)
.RS 4
インデックスエラーのために一部のファイルを追加できない場合にファイルの追加を続行するように
\fBgit add\fR
に指示します。
\fBgit-add\fR(1)
の
\fB\-\-ignore\-errors\fR
オプションと同等です。
\fBadd\&.ignore\-errors\fR
は、構成変数の通常の命名規則に従わないため、非推奨になりました。
.RE
.PP
add\&.interactive\&.useBuiltin
.RS 4
組み込みバージョンではなく、
\fBgit-add\fR(1)
の対話型バージョンの元の Perl 実装にフォールバックするには、\fBfalse\fR
に設定します。 デフォルトでは
\fBtrue\fR
です。
.RE
.PP
alias\&.*
.RS 4
\fBgit\fR(1)
コマンドラッパーのコマンドエイリアス。例えば、
\fBalias\&.last = cat\-file commit HEAD\fR
定義後、
\fBgit last\fR
の呼び出しは
\fBgit cat\-file commit HEAD\fR
と同等です。スクリプトの使用に関する混乱や問題を回避するために、既存のGitコマンドを非表示にするエイリアスは無視されます。 引数はスペースで分割され、通常のシェルのクォートとエスケープがサポートされています。 引用符のペアまたはバックスラッシュ(\fB\e\fR)を使用して、それらをクォートすることができます。
.sp
エイリアスの最初の単語は必ずしもコマンドである必要はないことに注意してください。 これは、\fBgit\fR
の呼び出しに渡されるコマンドラインオプションにすることができます。 特に、これは、
\fB\-c\fR
を使用して1回限りの構成で渡す場合、または
\fB\-p\fR
を使用して強制的にページネーションを行う場合に役立ちます。 たとえば、
\fBloud\-rebase = \-c commit\&.verbose=true rebase\fR
は、\fBgit loud\-rebase\fR
の実行が
\fBgit \-c commit\&.verbose=true rebase\fR
と同等になるように定義できます。 また、
\fBps = \-p status\fR
は便利なエイリアスで、
\fBgit ps\fR
は
\fBgit status\fR
の出力をページ分割して出力します。
.sp
エイリアス展開の前に感嘆符(\fB!\fR)が付いている場合は、シェルコマンドとして扱われます。 たとえば、
\fBalias\&.new = !gitk \-\-all \-\-not ORIG_HEAD\fR
を定義すると、
\fBgit new\fR
の呼び出しは、シェルコマンド
\fBgitk \-\-all \-\-not ORIG_HEAD\fR
を実行するのと同じです。 シェルコマンドは、リポジトリの最上位ディレクトリから実行されることに注意してください。これは、必ずしも現在のディレクトリであるとは限りません。
\fBGIT_PREFIX\fR
は、元のカレントディレクトリから
\fBgit rev\-parse \-\-show\-prefix\fR
を実行したときに返される値が設定されます。
\fBgit-rev-parse\fR(1)
を参照してください。
.RE
.PP
am\&.keepcr
.RS 4
trueの場合、
\fBgit\-am\fR
は、パラメーター
\fB\-\-keep\-cr\fR
を使用してmbox形式のパッチに対して` git\-mailsplit` を呼び出します。 この場合、
\fBgit\-mailsplit\fR
は
\fB\er\en\fR
で終わる行から
\fB\er\fR
を削除しません。 コマンドラインから
\fB\-\-no\-keep\-cr\fR
を指定することでオーバーライドできます。
\fBgit-am\fR(1)
と
\fBgit-mailsplit\fR(1)
を参照してください。
.RE
.PP
am\&.threeWay
.RS 4
デフォルトでは、パッチが正しく適用されない場合、
\fBgit am\fR
は失敗します。 trueに設定すると、この設定は、パッチが適用される予定のブロブのIDを記録し、それらのブロブをローカルで使用できる場合に、3方向マージにフォールバックするように
\fBgit am\fR
に指示します(コマンドラインから
\fB\-\-3way\fR
オプションを指定するのと同じです)。 デフォルトは
\fBfalse\fR
です。
\fBgit-am\fR(1)を参照してください。
.RE
.PP
apply\&.ignoreWhitespace
.RS 4
\fBchange\fR
に設定すると、
\fB\-\-ignore\-space\-change\fR
オプションと同じように、空白の変更を無視するように
\fBgit apply\fR
に指示します。
\fBno\fR,
\fBnone\fR,
\fBnever\fR,
\fBfalse\fR
のいずれかに設定すると、すべての空白の違いを尊重するように
\fBgit apply\fR
に指示されます。
\fBgit-apply\fR(1)
を参照してください。
.RE
.PP
apply\&.whitespace
.RS 4
\fB\-\-whitespace\fR
オプションと同じ方法で、
\fBgit apply\fR
に空白の処理方法を指示します。
\fBgit-apply\fR(1)
を参照してください。
.RE
.PP
blame\&.blankBoundary
.RS 4
\fBgit-blame\fR(1)で境界コミット(boundary commits)の空白コミットオブジェクト名を表示します。このオプションのデフォルトはfalseです。
.RE
.PP
blame\&.coloring
.RS 4
これにより、blame出力に適用される配色が決まります。 これは、
\fBrepeatedLines\fR
または
\fBhighlightRecent\fR
またはデフォルトの
\fBnone\fR
にすることができます。
.RE
.PP
blame\&.date
.RS 4
\fBgit-blame\fR(1)
で日付を出力するために使用される形式を指定します。 設定を解除すると、iso形式が使用されます。 サポートされている値については、
\fBgit-log\fR(1)
の
\fB\-\-date\fR
オプションの説明を参照してください。
.RE
.PP
blame\&.showEmail
.RS 4
\fBgit-blame\fR(1)
で、作者名(author)の代わりに作者の電子メールアドレス(author email)を表示します。 このオプションのデフォルトはfalseです。
.RE
.PP
blame\&.showRoot
.RS 4
\fBgit-blame\fR(1)
ではルートコミットを境界として扱わないでください。 このオプションのデフォルトはfalseです。
.RE
.PP
blame\&.ignoreRevsFile
.RS 4
\fBgit-blame\fR(1)
で、ファイルにリストされているリビジョン(1行に1つの省略されていないオブジェクト名)を無視します。
\fB#\fR
で始まる空白とコメントは無視されます。 このオプションは複数回繰り返すことができます。 空のファイル名は、無視されたリビジョンのリストをリセットします。 このオプションは、コマンドラインオプション
\fB\-\-ignore\-revs\-file\fR
の前に処理されます。
.RE
.PP
blame\&.markUnblamableLines
.RS 4
\fBgit-blame\fR(1)の出力で
\fB*\fR
を使用して、別のコミットに帰することができなかった、無視されたリビジョンによって変更された行をマークします。
.RE
.PP
blame\&.markIgnoredLines
.RS 4
\fBgit-blame\fR(1)の出力で、別のコミットに起因する無視されたリビジョンによって変更された行を
\fB?\fR
でマークします。
.RE
.PP
branch\&.autoSetupMerge
.RS 4
\fBgit-pull\fR(1)
が開始点ブランチから適切にマージされるように、
\fBgit branch\fR
や
\fBgit switch\fR
や
\fBgit checkout\fR
に新しいブランチを設定するように指示します。 このオプションが設定されていない場合でも、この動作は、
\fB\-\-track\fR
や
\fB\-\-no\-track\fR
オプションを使用してブランチごとに選択できることに注意してください。 有効な設定は次のとおりです:
\fBfalse\fR \(em  自動セットアップは行われません。
\fBtrue\fR \(em 開始点がリモート追跡ブランチの場合、自動セットアップが実行されます。
\fBalways\fR \(em  自動セットアップは、開始点がローカルブランチまたはリモート追跡ブランチのいずれかである場合に実行されます。 このオプションのデフォルトはtrueです。
\fBinherit\fR \(em 開始点に追跡構成(tracking configuration)がある場合、それは新しいブランチにコピーされます。
\fBsimple\fR \(em  自動セットアップは、開始点がリモート追跡ブランチであり、新しいブランチがリモート・ブランチと同じ名前を持つ場合にのみ実行されます。 このオプションのデフォルトは true です。
.RE
.PP
branch\&.autoSetupRebase
.RS 4
別のブランチを追跡する
\fBgit branch\fR
または
\fBgit switch\fR
または
\fBgit checkout\fR
を使用して新しいブランチが作成されると、この変数はGitにマージではなくリベースするプルを設定するように指示します(\fBbranch\&.<name>\&.rebase\fR
参照)。
\fBnever\fR
の場合、リベースが自動的にtrueに設定されることはありません。
\fBlocal\fR
の場合、他のローカルブランチの追跡されたブランチに対してリベースがtrueに設定されます。
\fBremote\fR
の場合、リモート追跡ブランチの追跡されたブランチに対してリベースがtrueに設定されます。
\fBalways\fR
の場合、リベースはすべての追跡ブランチに対してtrueに設定されます。 別のブランチを追跡するためにブランチを設定する方法の詳細については、
\fBbranch\&.autoSetupMerge\fR
を参照してください。 このオプションのデフォルトは
\fBnever\fR
です。
.RE
.PP
branch\&.sort
.RS 4
この変数は、
\fBgit-branch\fR(1)
によって表示されるときのブランチの並べ替え順序を制御します。
\fB\-\-sort=<value>\fR
オプションが指定されていない場合、この変数の値がデフォルトとして使用されます。 有効な値については、
\fBgit-for-each-ref\fR(1)
のfield namesを参照してください。
.RE
.PP
branch\&.<name>\&.remote
.RS 4
ブランチ<name>にいる場合、フェッチ元/プッシュ先 のremoteを
\fBgit fetch\fR
と
\fBgit push\fR
に通知します。 プッシュ先のremoteは、 (全ブランチ用の)
\fBremote\&.pushDefault\fR
でオーバーライドできます。 現在のブランチの場合、プッシュ先のremoteは、
\fBbranch\&.<name>\&.pushRemote\fR
によってさらにオーバーライドされる可能性があります。 remoteが構成されていない場合、または、どのブランチにも属しておらずリポジトリに複数のremoteが定義されている場合、フェッチの場合は
\fBorigin\fR
に、プッシュの場合は
\fBremote\&.pushDefault\fR
にデフォルト設定されます。 さらに、
\fB\&.\fR
(ピリオド)は現在のローカルリポジトリ(ドットリポジトリ)です。下記
\fBbranch\&.<name>\&.merge\fR
の最後の注意を参照してください。
.RE
.PP
branch\&.<name>\&.pushRemote
.RS 4
ブランチ<name>にいる場合、プッシュするための
\fBbranch\&.<name>\&.remote\fR
をオーバーライドします。 また、ブランチ<name>からプッシュするための
\fBremote\&.pushDefault\fR
をオーバーライドします。 ある場所(あなたのアップストリームなど)から別の場所(独自の公開リポジトリなど)にプッシュする場合は、
\fBremote\&.pushDefault\fR
を設定して、すべてのブランチにプッシュするリモートを指定し、そして、このオプションを使用して 特定のブランチに対してオーバーライドします。
.RE
.PP
branch\&.<name>\&.merge
.RS 4
branch\&.<name>\&.remote とともに、指定されたブランチのアップストリームブランチを定義します。 マージするブランチを
\fBgit fetch\fR/\fBgit pull\fR/\fBgit rebase\fR
に通知し、
\fBgit push\fR
にも影響を与える可能性があります(push\&.default参照)。 ブランチ<name>にいる場合、FETCH_HEADでマージするためにマークされるデフォルトのrefspecを
\fBgit fetch\fR
に指示します。 値はrefspecのリモート部分のように処理され、
\fBbranch\&.<name>\&.remote ` で指定されたリモートからフェッチされたrefと一致する必要があります。 マージ情報は、マージのためにデフォルトのブランチを検索するために `git pull\fR
(最初に
\fBgit fetch\fR
を呼び出します)によって使用されます。 このオプションがない場合、
\fBgit pull\fR
はデフォルトで、フェッチされた最初のrefspecをマージします。 octopusマージを取得するには、複数値を指定します。 あなたがローカルリポジトリ内の別のブランチから<name>にマージされるように
\fBgit pull\fR
を設定したい場合は、branch\&.<name>\&.mergeが目的をブランチを指すようにして、そして、 branch\&.<name>\&.remote に相対パス設定
\fB\&.\fR
(ピリオド)を使用できます。
.RE
.PP
branch\&.<name>\&.mergeOptions
.RS 4
ブランチ<name>にマージするためのデフォルトオプションを設定します。 構文とサポートされているオプションは
\fBgit-merge\fR(1)
のものと同じですが、空白文字を含むオプション値は現在サポートされていません。
.RE
.PP
branch\&.<name>\&.rebase
.RS 4
trueの場合、
\fBgit pull\fR
の実行時にデフォルトのリモートからデフォルトのブランチをマージするのではなく、フェッチされたブランチの上にブランチ<name>をリベースします。 ブランチ固有ではない方法でこれを行うには、
\fBpull\&.rebase\fR
を参照してください。
.sp
\fBmerges\fR
(または単に
\fBm\fR) の場合、
\fB\-\-rebase\-merges\fR
オプションを
\fBgit rebase\fR
に渡して、ローカル・マージ・コミットがリベースに含まれるようにします (詳細については
\fBgit-rebase\fR(1)
を参照してください)。
.sp
値が
\fBinteractive\fR
(または単に
\fBi\fR)の場合、リベースは対話モードで実行されます。
.sp
\fB注意\fR: これはおそらく危険な操作です。 あなたが影響を理解していない限り、使用しないでください (詳細については、
\fBgit-rebase\fR(1)
を参照してください)。
.RE
.PP
branch\&.<name>\&.description
.RS 4
ブランチの説明は、
\fBgit branch \-\-edit\-description\fR
で編集できます。 ブランチの説明は、format\-patchのカバーレターまたはrequest\-pullの概要に自動的に追加されます。
.RE
.PP
browser\&.<tool>\&.cmd
.RS 4
指定したブラウザ(<tool>)を起動するコマンドを指定してください。 指定されたコマンドは、引数として渡されたURLを使用してシェルで評価されます。 (\fBgit-web--browse\fR(1)
を参照してください。)
.RE
.PP
browser\&.<tool>\&.path
.RS 4
HTMLヘルプ(\fBgit-help\fR(1)
の
\fB\-w\fR
オプション参照) または gitwebの作業リポジトリ(\fBgit-instaweb\fR(1)
参照) をブラウズするために使用される可能性のある指定のツール(<tool>)のパス(path)をオーバーライドします。
.RE
.PP
checkout\&.defaultRemote
.RS 4
\fBgit checkout <something>\fR
または
\fBgit switch <something>\fR
を実行し、リモートが1つしかない場合、
\fBorigin/<something>\fR
のチェックアウトと追跡に暗黙的にフォールバックする可能性があります。
\fB<something>\fR
参照を持つリモートが複数あるとすぐに動作しなくなります。 この設定により、曖昧性解消に関して常に勝利させる優先リモートの名前を設定できます。 典型的なユースケースは、これを
\fBorigin\fR
に設定することです。
.sp
現在、これは
\fBgit-switch\fR(1)
と
\fBgit-checkout\fR(1)
によって、\fBgit checkout <something>\fR
や
\fBgit switch <something>\fR
が別のリモート上の
\fB<something>\fR
ブランチをチェックアウトするときに使われています。また
\fBgit-worktree\fR(1)
は
\fBgit worktree add\fR
がリモートブランチを参照しているときに使われています。 この設定は、将来、他のチェックアウトのようなコマンドまたは機能に使用される可能性があります。
.RE
.PP
checkout\&.guess
.RS 4
\fBgit checkout\fR
と
\fBgit switch\fR
の、
\fB\-\-guess\fR
または
\fB\-\-no\-guess\fR
オプションのデフォルト値を提供します。
\fBgit-switch\fR(1)
および
\fBgit-checkout\fR(1)
を参照してください。
.RE
.PP
checkout\&.workers
.RS 4
作業ツリーを更新するときに使用する並列ワーカーの数。デフォルトは1、つまり順次実行です。 1未満の値に設定すると、Gitは使用可能な論理コアの数と同じ数のワーカーを使用します。 この設定と
\fBcheckout\&.thresholdForParallelism\fR
は、チェックアウトを実行するすべてのコマンドに影響します。 例えば、 checkout, clone, reset, sparse\-checkout, などです。
.sp
注意: 並列チェックアウトは通常、SSDまたはNFS上にあるリポジトリのパフォーマンスを向上させます。 回転するディスクやコアの数が少ないマシン上のリポジトリの場合、デフォルトのシーケンシャルチェックアウトの方がパフォーマンスが向上することがよくあります。 リポジトリのサイズと圧縮レベルも、並列バージョンのパフォーマンスに影響を与える可能性があります。
.RE
.PP
checkout\&.thresholdForParallelism
.RS 4
少数のファイルで並列チェックアウトを実行する場合、サブプロセスの生成とプロセス間通信のコストが並列化のメリットを上回る可能性があります。 この設定により、並列チェックアウトを試行する必要のあるファイルの最小数を定義できます。 デフォルトは100です。
.RE
.PP
clean\&.requireForce
.RS 4
\fB\-f\fR
または
\fB\-i\fR
または
\fB\-n\fR
が指定されない限り、git\-clean が何もしないようにするためのブール値です。 デフォルトは true です。
.RE
.PP
clone\&.defaultRemoteName
.RS 4
リポジトリのクローンを作成するときに作成するリモートの名前。 デフォルトは
\fBorigin\fR
で、
\fB\-\-origin\fR
コマンドラインオプションを
\fBgit-clone\fR(1)
に渡すことでオーバーライドできます。
.RE
.PP
clone\&.rejectShallow
.RS 4
リポジトリが浅い(shallow)場合は、リポジトリの複製(clone)を拒否します。コマンドラインでオプション
\fB\-\-reject\-shallow\fR
を渡すことでオーバーライドできます。
\fBgit-clone\fR(1)
を参照してください
.RE
.PP
clone\&.filterSubmodules
.RS 4
部分(partial)クローン・フィルタが提供され(\fBgit-rev-list\fR(1)
の
\fB\-\-filter\fR
を参照)、かつ、
\fB\-\-recurse\-submodules\fR
が使用されている場合は、フィルタをサブモジュールにも適用します。
.RE
.PP
color\&.advice
.RS 4
ヒントの色を有効/無効にするブール値(たとえば、プッシュが失敗した場合のリストについては
\fBadvice\&.*\fR
を参照します)。
\fBalways\fR
または
\fBfalse\fR(または
\fBnever\fR) または
\fBauto\fR(または
\fBtrue\fR) に設定でき、その場合、色は、エラー出力が端末に送信される場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR
)。
.RE
.PP
color\&.advice\&.hint
.RS 4
ヒントにはカスタマイズされた色を使用します。
.RE
.PP
color\&.blame\&.highlightRecent
.RS 4
行の年齢に応じて、
\fBgit blame \-\-color\-by\-age\fR
の行注釈の色を指定します。
.sp
この設定は、色と日付設定のコンマ区切りリストに設定する必要があります。色で開始および終了し、日付は古いものから新しいものへと設定する必要があります。 行が指定されたタイムスタンプの前に導入された場合、メタデータは指定の色で色付けされ、古いタイムスタンプの色を上書きします。
.sp
絶対タイムスタンプの代わりに、相対タイムスタンプも機能します。例えば、\fB2\&.weeks\&.ago\fR
は、2週間より古いものに対処するために有効です。
.sp
デフォルトは
\fBblue,12 month ago,white,1 month ago,red\fR
で、1年以上前のすべてを青に色付けし、1か月前から1年前までの変更は白のままにし、先月に導入された行赤に色付けします。
.RE
.PP
color\&.blame\&.repeatedLines
.RS 4
前の行と同じコミットからのものである場合、指定の色を使用して
\fBgit Blame \-\-color\-lines\fR
の行注釈を色付けします。 デフォルトはシアン(cyan)色です。
.RE
.PP
color\&.branch
.RS 4
\fBgit-branch\fR(1)
の出力で色を有効/無効にするブール値。
\fBalways\fR
または
\fBfalse\fR(または
\fBnever\fR) または
\fBauto\fR(または
\fBtrue\fR)に設定でき、その場合、色は出力が端末への場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.branch\&.<slot>
.RS 4
ブランチの色付けにスタマイズ色を使用します。
\fB<slot>\fR
は、
\fBcurrent\fR(現在のブランチ)、
\fBlocal\fR(ローカルブランチ)、
\fBremote\fR(\fBrefs/remotes/\fR
内のリモート追跡ブランチ)、
\fBupstream\fR(アップストリーム追跡ブランチ）、
\fBplain\fR(その他のref)、のいずれかです。
.RE
.PP
color\&.diff
.RS 4
ANSIエスケープシーケンスを使用してパッチに色を追加するかどうか。 これが
\fBalways\fR
に設定されている場合、
\fBgit-diff\fR(1)
と
\fBgit-log\fR(1)
と
\fBgit-show\fR(1)
はすべてのパッチに色を使用します。
\fBtrue\fR
または
\fBauto\fR
に設定されている場合、これらのコマンドは、端末への出力時にのみ色を使用します。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.sp
これは、
\fBgit-format-patch\fR(1)
または
\fBgit\-diff\-{asterisk}\fR
配管コマンドには影響しません。
\fB\-\-color[=<when>]\fR
オプションを使用してコマンドラインでオーバーライドできます。
.RE
.PP
color\&.diff\&.<slot>
.RS 4
diffカラー化にカスタマイズ色を使用します。
\fB<slot>\fR
は、パッチのどの部分で指定された色を使用するかを指定します。 次のいずれか一つです:
\fBcontext\fR(コンテキストテキスト。
\fBplain\fR
は歴史的な同義語です)、
\fBmeta\fR(メタ情報)、
\fBfrag\fR(ハンクヘッダー)、
\fBfunc\fR(ハンクヘッダーの関数)、
\fBold\fR(削除された行)、
\fBnew\fR(追加された行)、
\fBcommit\fR(コミットヘッダー)、
\fBwhitespace\fR(空白エラーを強調表示)、
\fBoldMoved\fR(削除された複数行)、
\fBnewMoved\fR(追加された複数行)、
\fBoldMovedDimmed\fR
、
\fBoldMovedAlternative\fR
、
\fBoldMovedAlternativeDimmed\fR
、
\fBnewMovedDimmed\fR
、
\fBnewMovedAlternative\fR
、
\fBnewMovedAlternativeDimmed\fR(詳細については、
\fBgit-diff\fR(1)
の
\fB\-\-color\-moved\fR
の
\fB<mode>\fR
設定参照)、
\fBcontextDimmed\fR
、
\fBoldDimmed\fR
、
\fBnewDimmed\fR
、\fBcontextBold\fR
、
\fBoldBold\fR
、
\fBnewBold\fR(詳細については
\fBgit-range-diff\fR(1)
参照)。
.RE
.PP
color\&.decorate\&.<slot>
.RS 4
\fBgit log \-\-decorate\fR
出力にカスタマイズ色を使用します。
\fB<slot>\fR
にはそれぞれ、ローカルブランチ、リモート追跡ブランチ、タグ、stash、HEADと、graftedコミットをあらわす、
\fBbranch\fR
、\fBremoteBranch\fR
、\fBtag\fR
、
\fBstash\fR
、
\fBHEAD\fR
、
\fBgrafted\fR
のうちの一つを指定します。
.RE
.PP
color\&.grep
.RS 4
\fBalways\fR
に設定すると、常に一致を強調表示します。
\fBfalse\fR(または
\fBnever\fR)の場合、決して一致を強調表示しません。
\fBtrue\fR
または
\fBauto\fR
に設定すると、出力が端末に書き込まれる場合にのみ色を使用します。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.grep\&.<slot>
.RS 4
grepの色付けにカスタマイズ色を使用します。
\fB<slot>\fR
は、指定の色を使用する行の部分を指定します。
.PP
\fBcontext\fR
.RS 4
コンテキスト行の非一致テキスト(\fB\-A\fR
または
\fB\-B\fR
または
\fB\-C\fR
使用時)
.RE
.PP
\fBfilename\fR
.RS 4
ファイル名接頭辞(\fB\-h\fR
使用時以外)
.RE
.PP
\fBfunction\fR
.RS 4
関数名行(\fB\-p\fR
使用時)
.RE
.PP
\fBlineNumber\fR
.RS 4
行番号接頭辞(\fB\-n\fR
使用時)
.RE
.PP
\fBcolumn\fR
.RS 4
桁番号接頭辞(\fB\-\-column\fR
使用時)
.RE
.PP
\fBmatch\fR
.RS 4
一致テキスト(\fBmatchContext\fR
と
\fBmatchSelected\fR
の設定と同じ)
.RE
.PP
\fBmatchContext\fR
.RS 4
内容行の一致テキスト
.RE
.PP
\fBmatchSelected\fR
.RS 4
選択した行でテキストのマッチングを行います。 また、次の
\fBgit-log\fR(1)
サブコマンドをカスタマイズするために使用されます:
\fB\-\-grep\fR
と
\fB\-\-author\fR
と
\fB\-\-committer\fR
.RE
.PP
\fBselected\fR
.RS 4
選択した行でテキストとマッチングしません。 また、次の
\fBgit-log\fR(1)
サブコマンドをカスタマイズするために使用されます:
\fB\-\-grep\fR
と
\fB\-\-author\fR
と
\fB\-\-committer\fR
.RE
.PP
\fBseparator\fR
.RS 4
行内のフィールド間セパレータ(\fB:\fR
と
\fB\-\fR
と
\fB=\fR)と、ハンク間セパレータ(\fB\-\-\fR)
.RE
.RE
.PP
color\&.interactive
.RS 4
\fBalways\fR
に設定すると、対話プロンプトと表示には常に色を使用します(\fBgit\-add \-\-interactive\fR
や
\fBgit\-clean \-\-interactive`で使用されるものなど)。 false(または `never\fR)の場合、決して色を使用しません。
\fBtrue\fR
または
\fBauto\fR
に設定すると、出力が端末に向けられている場合にのみ色を使用します。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.interactive\&.<slot>
.RS 4
\fBgit add \-\-interactive\fR
および
\fBgit clean \-\-interactive\fR
出力にカスタマイズ色を使用します。
\fB<slot>`は、対話コマンドからの通常の出力の4つの異なるタイプに対して、 `prompt\fR
または
\fBheader\fR
または
\fBhelp\fR
または
\fBerror\fR
の場合があります。
.RE
.PP
color\&.pager
.RS 4
\fBauto\fR
カラーモードがページャーに送られる出力を色付けするかどうかを指定するブール値。 デフォルトはtrueです。 ページャーがANSIカラーコードを理解しない場合は、これをfalseに設定します。
.RE
.PP
color\&.push
.RS 4
プッシュエラーで色を有効/無効にするブール値。
\fBalways\fR
、
\fBfalse\fR(または
\fBnever\fR)または
\fBauto\fR(または
\fBtrue\fR)に設定でき、その場合、色はエラー出力が端末に送られる場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.push\&.error
.RS 4
プッシュエラーのカスタマイズされた色に使用。
.RE
.PP
color\&.remote
.RS 4
設定されている場合、行の先頭にあるキーワードが強調表示されます。 キーワードは
\fBerror\fR
と
\fBwarning\fR
と
\fBhint\fR
と
\fBsuccess\fR
であり、大文字と小文字を区別せずに照合されます。
\fBalways\fR
または
\fBfalse\fR(または
\fBnever\fR)または
\fBauto\fR(または
\fBtrue\fR)に設定できます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.remote\&.<slot>
.RS 4
リモートキーワードごとにカスタマイズ色を使用します。
\fB<slot>\fR
は、対応するキーワードに一致する
\fBhint\fR
または
\fBwarning\fR
または
\fBsuccess\fR
または
\fBerror\fR
の場合があります。
.RE
.PP
color\&.showBranch
.RS 4
linkgit：git\-show\-branch[1]の出力で色を有効/無効にするブール値。
\fBalways\fR
、\fBfalse\fR(または
\fBnever\fR)または
\fBauto\fR
(または
\fBtrue\fR) に設定でき、その場合、色は出力が端末への場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.status
.RS 4
\fBgit-status\fR(1)
の出力で色を有効/無効にするブール値。
\fBalways\fR
、
\fBfalse\fR(または
\fBnever\fR)または
\fBauto\fR(または
\fBtrue\fR)に設定でき、その場合、色は出力が端末への場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.status\&.<slot>
.RS 4
ステータスの色付けにカスタマイズ色を使用します。
\fB<slot>\fR
は次から一つを選択します。
\fBheader\fR(ステータスメッセージのヘッダーテキスト)、
\fBadded\fR
または
\fBupdated\fR((追加されたがコミットされていないファイル)、
\fBchanged\fR(変更されたがインデックスに追加されていないファイル)、
\fBuntracked\fR(Git によって追跡されていないファイル)、
\fBbranch\fR(現在のブランチ)、
\fBnobranch\fR(「no branch」警告を表示する色。デフォルトは赤)、
\fBlocalBranch\fR
または
\fBremoteBranch\fR(ブランチと追跡情報をステータス表示する際の、ローカルブランチとリモートブランチの名前) または
\fBunmerged\fR
(変更がマージされていないファイル)
.RE
.PP
color\&.transport
.RS 4
プッシュが拒否されたときに色を有効/無効にするブール値。
\fBalways\fR
、
\fBfalse\fR(または
\fBnever\fR)または
\fBauto\fR(または
\fBtrue\fR)に設定でき、その場合、色はエラー出力が端末に送られる場合にのみ使用されます。 設定されていない場合は、
\fBcolor\&.ui\fR
の値が使用されます(デフォルトでは
\fBauto\fR)。
.RE
.PP
color\&.transport\&.rejected
.RS 4
プッシュが拒否された時に使うカスタマイズ色。
.RE
.PP
color\&.ui
.RS 4
この変数は、コマンドファミリごとの色の使用を制御する
\fBcolor\&.diff\fR
や
\fBcolor\&.grep\fR
などの変数のデフォルト値を決定します。 より多くのコマンドが
\fB\-\-color\fR
オプションのデフォルトを設定するための構成を習得するにつれて、その範囲は拡大します。 他の構成または
\fB\-\-color\fR
オプションで明示的に有効にしない限り、Gitコマンドで色を使用しないようにする場合は、\fBfalse\fR
または
\fBnever\fR
に設定します。 機械での利用を目的としない、すべての出力でカラーを使用する場合は
\fBalways\fR
に設定し、端末への書き込み時にそのような出力でカラーを使用する場合は
\fBtrue\fR
または
\fBauto\fR
(これはGit 1\&.8\&.4以降のデフォルトです)に設定します。
.RE
.PP
column\&.ui
.RS 4
サポートされているコマンドを列(column)で出力するかどうかを指定します。 この変数は、スペースまたはコンマで区切られたトークンのリストで構成されます:
.sp
以下のオプションは、機能を有効にするタイミングを制御します(デフォルトは
\fBnever\fR):
.PP
\fBalways\fR
.RS 4
常に列表示
.RE
.PP
\fBnever\fR
.RS 4
決して列表示しない
.RE
.PP
\fBauto\fR
.RS 4
端末へ出力の場合は列表示
.RE
.sp
以下のオプションはレイアウトを制御します(デフォルトは
\fBcolumn\fR)。
\fBalways\fR
や
\fBnever\fR
や
\fBauto\fR
のいずれも指定されていない場合に、以下のいずれかを設定すると、
\fBalways\fR
の指定を含みます。
.PP
\fBcolumn\fR
.RS 4
行の前に列を埋める
.RE
.PP
\fBrow\fR
.RS 4
列の前に行を埋める
.RE
.PP
\fBplain\fR
.RS 4
1つの列に表示
.RE
.sp
最後に、以下のオプションはレイアウトオプションと組み合わせることができます(デフォルトは
\fBnodense\fR):
.PP
\fBdense\fR
.RS 4
より多くのスペースを利用するために不等サイズの列を作成する
.RE
.PP
\fBnodense\fR
.RS 4
同じサイズの列を作成する
.RE
.RE
.PP
column\&.branch
.RS 4
\fBgit branch\fR
でブランチリストを列出力するかどうかを指定します。 詳細については、
\fBcolumn\&.ui\fR
を参照してください。
.RE
.PP
column\&.clean
.RS 4
\fBgit clean \-i\fR
でアイテムを一覧表示するときのレイアウトを指定します。これにより、常にファイルとディレクトリが列表示されます。 詳細については、
\fBcolumn\&.ui\fR
を参照してください。
.RE
.PP
column\&.status
.RS 4
\fBgit status\fR
で追跡されていないファイルを列表示するかどうかを指定します。 詳細については、
\fBcolumn\&.ui\fR
を参照してください。
.RE
.PP
column\&.tag
.RS 4
\fBgit tag\fR
でタグリストを列出力するかどうかを指定します。 詳細については、
\fBcolumn\&.ui\fR
を参照してください。
.RE
.PP
commit\&.cleanup
.RS 4
この設定は、
\fBgit commit\fR
の
\fB\-\-cleanup\fR
オプションのデフォルトを上書きします。 詳細については、
\fBgit-commit\fR(1)
を参照してください。 デフォルトを変更すると、コメント文字
\fB#\fR
で始まる行をログメッセージに常に残しておきたい場合に役立ちます。その場合は、
\fBgit config commit\&.cleanup whitespace\fR
を実行します(注意:これを行う場合は、コミットログテンプレートの
\fB#\fR
で始まるヘルプ行を自分で削除する必要があることに注意してください)。
.RE
.PP
commit\&.gpgSign
.RS 4
すべてのコミットをGPG署名する必要があるかどうかを指定するブール値。 リベースなどの操作を行うときにこのオプションを使用すると、多数のコミットが署名される可能性があります。 エージェントを使用して、GPGパスフレーズの入力を省略するようにすると便利な場合があります。
.RE
.PP
commit\&.status
.RS 4
エディタを使用してコミットメッセージを準備するときに、コミットメッセージテンプレートにステータス情報を含めることを有効/無効にするブール値。 デフォルトはtrueです。
.RE
.PP
commit\&.template
.RS 4
新しいコミットメッセージのテンプレートとして使用するファイルのパス名を指定します。
.RE
.PP
commit\&.verbose
.RS 4
\fBgit commit\fR
でverboseレベルを指定するブール値またはint。
\fBgit-commit\fR(1)
を参照してください。
.RE
.PP
commitGraph\&.generationVersion
.RS 4
commit\-graph ファイルの書き込みまたは読み取り時に使用する世代番号バージョン(generation number version)のタイプを指定します。 バージョン 1 が指定されている場合、修正されたコミット日付は書き込まれたり読み取られたりしません。 デフォルトは 2 です。
.RE
.PP
commitGraph\&.maxNewFilters
.RS 4
\fBgit commit\-graph write\fR
の
\fB\-\-max\-new\-filters\fR
オプションのデフォルト値を指定します(\fBgit-commit-graph\fR(1)
参照)。
.RE
.PP
commitGraph\&.readChangedPaths
.RS 4
trueの場合、gitはcommit\-graphファイルで変更パスブルームフィルター(the changed\-path Bloom filters)を使用します(存在し、有効な場合)。 デフォルトはtrueです。 詳細については、
\fBgit-commit-graph\fR(1)
を参照してください。
.RE
.PP
credential\&.helper
.RS 4
ユーザー名またはパスワードの資格情報が必要なときに呼び出される外部ヘルパーを指定します。ヘルパーは、ユーザーに資格情報の入力を求めないように、外部ストレージを参照する場合があります。これは通常、可能な引数を持つ資格情報ヘルパーの名前ですが、引数を持つ絶対パス、または
\fB!\fR
が前に付いている場合はシェルコマンドの場合もあります。
.sp
注意: 複数のヘルパーが定義されている場合があることに注意してください。詳細と例については、
\fBgitcredentials\fR(7)
を参照してください。
.RE
.PP
credential\&.useHttpPath
.RS 4
資格情報を取得するとき、http URL または https URL のパス部分を重要視します。デフォルトはfalseです。詳細については、
\fBgitcredentials\fR(7)
を参照してください。
.RE
.PP
credential\&.username
.RS 4
ネットワーク認証にユーザー名が設定されていない場合は、デフォルトでこのユーザー名を使用します。 以下の credential\&.<context>\&.* と
\fBgitcredentials\fR(7)
を参照してください。
.RE
.PP
credential\&.<url>\&.*
.RS 4
上記の credential\&.* オプションは、一部の資格情報に選択的に適用できます。 たとえば、 "credential\&.https://example\&.com\&.username" は、example\&.com への https 接続に対してのみデフォルトのユーザー名を設定します。 URLの照合方法の詳細については、
\fBgitcredentials\fR(7)
を参照してください。
.RE
.PP
credentialCache\&.ignoreSIGHUP
.RS 4
git\-credential\-cache\(emdaemon に、終了する代わりにSIGHUPを無視するように指示します。
.RE
.PP
credentialStore\&.lockTimeoutMS
.RS 4
資格情報ファイルをロックしようとしたときに git\-credential\-store が再試行する時間の長さ(ミリ秒単位)。値0は、まったく再試行しないことを意味します。\-1は無期限に試すことを意味します。デフォルトは1000です(つまり、1秒間再試行します)。
.RE
.PP
completion\&.commands
.RS 4
これは、補完コマンドのリストからコマンドを追加または削除するためにgit\-completion\&.bashによってのみ使用されます。通常、磁器コマンドと、いくつかの選択されたコマンドのみが補完します。この変数には、スペースで区切ってコマンドを追加できます。 コマンドの前に
\fB\-\fR
を付けると、既存のリストから削除されます。
.RE
.PP
diff\&.autoRefreshIndex
.RS 4
\fIgit diff\fR
を使用して作業ツリーファイルと比較する場合、統計のみの変更を変更されたものと見なさない。代わりに、サイレントに
\fBgit update\-index \-\-refresh\fR
を実行して、ワークツリーの内容がインデックスの内容と一致するパスの、キャッシュされた統計情報を更新します。このオプションのデフォルトはtrueです。注意: これは
\fBgit diff\fR
磁器コマンドにのみ影響し、
\fBgit diff\-files\fR
などの下位レベルのdiffコマンドには影響しないことに注意してください。
.RE
.PP
diff\&.dirstat
.RS 4
\fBgit-diff\fR(1)
およびその仲間に対する
\fB\-\-dirstat\fR
オプションのデフォルトの動作を指定する
\fB\-\-dirstat\fR
パラメーターのコンマ区切りリスト。デフォルトは(\fB\-\-dirstat=<param1,param2,\&.\&.\&.>\fR
を使用して)コマンドラインでオーバーライドできます。フォールバックのデフォルトは
\fBchanges,noncumulative,3\fR
です(\fBdiff\&.dirstat\fR
によって変更されていない限り)。以下のパラメータを使用できます:
.PP
\fBchanges\fR
.RS 4
ソースから削除された、または宛先に追加された行をカウントして、dirstat数を計算します。これは、ファイル内の純粋なコード移動の量を無視します。つまり、ファイル内の行の再配置は、他の変更ほどカウントされません。これは、パラメーターが指定されていない場合のデフォルトの動作です。
.RE
.PP
\fBlines\fR
.RS 4
通常の行ベースのdiff分析を実行し、削除/追加 された行数を合計して、dirstat数を計算します。(バイナリファイルの場合、バイナリファイルには行の自然な概念がないため、代わりに64バイトのチャンクをカウントします)。 これは
\fBchanges\fR
動作よりもコストのかかる
\fB\-\-dirstat\fR
動作ですが、他の変更と同じようにファイル内の再配置された行をカウントします。 結果の出力は、他の
\fB\-\-*stat\fR
オプションから得られるものと一致しています。
.RE
.PP
\fBfiles\fR
.RS 4
変更されたファイルの数を数えて、dirstat数を計算します。変更された各ファイルは、dirstat分析で等しくカウントされます。これは、ファイルの内容をまったく調べる必要がないため、計算コストが最も安価な
\fB\-\-dirstat\fR
の動作です。
.RE
.PP
\fBcumulative\fR
.RS 4
親ディレクトリの子ディレクトリの変更もカウントします。
\fBcumulative\fR
を使用する場合、報告されるパーセンテージの合計が100％を超える場合があることに注意してください。 デフォルトの(非累積的な)動作は、
\fBnon\-cumulative\fR
パラメーターで指定できます。
.RE
.PP
<limit>
.RS 4
整数パラメーターは、カットオフパーセント(デフォルトでは3%)を指定します。変更への貢献がこの割合より少ないディレクトリは出力に表示されません。
.RE
.sp
例: 変更されたファイルの総数の10%未満のディレクトリを無視し、親ディレクトリに子ディレクトリの数を累積しながら、変更されたファイルをカウントする:
\fBfiles,10,cumulative\fR
.RE
.PP
diff\&.statGraphWidth
.RS 4
\fB\-\-stat\fR
出力でグラフ部分の幅を制限します。設定されている場合、format\-patchを除く
\fB\-\-stat\fR
出力を生成するすべてのコマンドに適用されます。
.RE
.PP
diff\&.context
.RS 4
デフォルトの3ではなく<n>行のコンテキストで差分を生成します。この値は
\fB\-U\fR
オプションによってオーバーライドされます。
.RE
.PP
diff\&.interHunkContext
.RS 4
指定された行数までのdiffハンク間のコンテキストを表示し、それによって互いに近いハンクを融合します。この値は、
\fB\-\-inter\-hunk\-context\fR
コマンドラインオプションのデフォルトとして機能します。
.RE
.PP
diff\&.external
.RS 4
この構成変数が設定されている場合、diffの生成は、内部のdiff機構を使用して実行されるのではなく、指定されたコマンドを使用して実行されます。 \(oqGIT_EXTERNAL_DIFF\(cq 環境変数でオーバーライドできます。このコマンドは、
\fBgit\fR(1)
の「git Diffs」で説明されているパラメーターを使用して呼び出されます。 注意: ファイルのサブセットでのみ外部diffプログラムを使用する場合は、代わりに
\fBgitattributes\fR(5)
を使用することをお勧めします。
.RE
.PP
diff\&.ignoreSubmodules
.RS 4
\fB\-\-ignore\-submodules\fR
のデフォルト値を設定します。これは
\fBgit diff\fR
磁器コマンドにのみ影響し、
\fBgit diff\-files\fR
などの下位レベルのdiffコマンドには影響しないことに注意してください。
\fBgit checkout\fR
や
\fBgit switch\fR
も、コミットされていない変更を報告するときにこの設定を尊重します。
\fIall\fR
に設定すると、
\fB\-\-ignore\-submodules\fR
コマンドラインオプションを使用してオーバーライドされない限り、
\fBstatus\&.submoduleSummary\fR
が設定されている場合、通常は
\fIgit commit\fR
および
\fIgit status\fR
で表示されるサブモジュールの概要が無効になります。
\fIgit submodule\fR
コマンドは、この設定の影響を受けません。デフォルトでは、これは untracked に設定されているため、追跡されていないサブモジュールはすべて無視されます。
.RE
.PP
diff\&.mnemonicPrefix
.RS 4
設定されている場合、
\fBgit diff\fR
は、比較対象に応じて標準の
\fIa/\fR
や
\fIb/\fR
とは異なるプレフィックスのペアを使用します。この構成が有効な場合、逆差分出力でもプレフィックスの順序が入れ替わります:
.PP
\fBgit diff\fR
.RS 4
(i)ndex と (w)ork tree を比較
.RE
.PP
\fBgit diff HEAD\fR
.RS 4
(c)ommit と (w)ork tree を比較
.RE
.PP
\fBgit diff \-\-cached\fR
.RS 4
(c)ommit と (i)ndex を比較
.RE
.PP
\fBgit diff HEAD:file1 file2\fR
.RS 4
(o)bject と (w)ork tree エンティティを比較
.RE
.PP
\fBgit diff \-\-no\-index a b\fR
.RS 4
2つの非git項目 (1) と (2) を比較
.RE
.RE
.PP
diff\&.noprefix
.RS 4
設定されている場合、
\fBgit diff\fR
は送信元または宛先のプレフィックスを表示しません。
.RE
.PP
diff\&.relative
.RS 4
\fItrue\fR
に設定すると、
\fIgit diff\fR
はディレクトリ外の変更を表示せず、現在のディレクトリへの相対的なパス名を表示します。
.RE
.PP
diff\&.orderFile
.RS 4
diff内でファイルを並べ替える方法を示すファイル。 詳細については、
\fBgit-diff\fR(1)
の
\fB\-O\fR
オプションを参照してください。
\fBdiff\&.orderFile\fR
が相対パス名の場合、作業ツリーの最上位を基準として扱います。
.RE
.PP
diff\&.renameLimit
.RS 4
コピー/名前変更 の検出の徹底的な部分で考慮するファイルの数。
\fIgit diff\fR
の
\fB\-l\fR
オプションと同等です。設定されていない場合、デフォルト値は現在1000です。この設定は、名前変更の検出がオフになっている場合は効果がありません。
.RE
.PP
diff\&.renames
.RS 4
Gitが名前の変更を検出するかどうかとその方法。 "false" に設定すると、名前変更の検出が無効になります。 "true" に設定すると、基本的な名前変更の検出が有効になります。 "copies" または "copy" に設定されている場合、Gitはコピーも検出します。デフォルトはtrueです。これは
\fBgit-diff\fR(1)
や
\fBgit-log\fR(1)
のような
\fIgit diff\fR
磁器コマンドにのみ影響し、
\fBgit-diff-files\fR(1)
などの下位レベルのコマンドには影響しないことに注意してください。
.RE
.PP
diff\&.suppressBlankEmpty
.RS 4
空の出力行の前にスペースを印刷する標準的な動作を禁止するブール値。デフォルトはfalseです。
.RE
.PP
diff\&.submodule
.RS 4
サブモジュールの違いを表示する形式を指定します。 "short" 形式は、範囲の最初と最後にコミットの名前を表示するだけです。 "log" 形式は、
\fBgit-submodule\fR(1)
の
\fBsummary\fR
のように範囲内のコミットをリストします。 "diff" 形式は、サブモジュールの変更された内容のインラインdiffを示します。デフォルトは "short" です。
.RE
.PP
diff\&.wordRegex
.RS 4
単語ごとの差の計算を実行するときに「単語」(word)とは何かを判別するために使用されるPOSIX拡張正規表現。正規表現に一致する文字シーケンスは「単語」(words)であり、他のすべての文字は*無視できる*空白(whitespace)です。
.RE
.PP
diff\&.<driver>\&.command
.RS 4
カスタムdiffドライバーコマンド。詳細については
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
diff\&.<driver>\&.xfuncname
.RS 4
diffドライバーがハンクヘッダーを認識するために使用する必要がある正規表現。内蔵パターンを使用することもできます。詳細については
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
diff\&.<driver>\&.binary
.RS 4
このオプションをtrueに設定すると、diffドライバーがファイルをバイナリとして処理します。詳細については
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
diff\&.<driver>\&.textconv
.RS 4
ファイルのテキスト変換バージョンを生成するためにdiffドライバーが呼び出す必要のあるコマンド。変換の結果は、人間が読める形式のdiffを生成するために使用されます。詳細については
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
diff\&.<driver>\&.wordRegex
.RS 4
diffドライバーが単語(words)を1行に分割するために使用する必要がある正規表現。詳細については
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
diff\&.<driver>\&.cachetextconv
.RS 4
このオプションをtrueに設定すると、diffドライバーがテキスト変換出力をキャッシュするようになります。詳細については
\fBgitattributes\fR(5)
を参照してください。
.PP
\fBaraxis\fR
.RS 4
Use Araxis Merge (requires a graphical session)
.RE
.PP
\fBbc\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBbc3\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBbc4\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBcodecompare\fR
.RS 4
Use Code Compare (requires a graphical session)
.RE
.PP
\fBdeltawalker\fR
.RS 4
Use DeltaWalker (requires a graphical session)
.RE
.PP
\fBdiffmerge\fR
.RS 4
Use DiffMerge (requires a graphical session)
.RE
.PP
\fBdiffuse\fR
.RS 4
Use Diffuse (requires a graphical session)
.RE
.PP
\fBecmerge\fR
.RS 4
Use ECMerge (requires a graphical session)
.RE
.PP
\fBemerge\fR
.RS 4
Use Emacs\*(Aq Emerge
.RE
.PP
\fBexamdiff\fR
.RS 4
Use ExamDiff Pro (requires a graphical session)
.RE
.PP
\fBguiffy\fR
.RS 4
Use Guiffy\(cqs Diff Tool (requires a graphical session)
.RE
.PP
\fBgvimdiff\fR
.RS 4
Use gVim (requires a graphical session)
.RE
.PP
\fBkdiff3\fR
.RS 4
Use KDiff3 (requires a graphical session)
.RE
.PP
\fBkompare\fR
.RS 4
Use Kompare (requires a graphical session)
.RE
.PP
\fBmeld\fR
.RS 4
Use Meld (requires a graphical session)
.RE
.PP
\fBnvimdiff\fR
.RS 4
Use Neovim
.RE
.PP
\fBopendiff\fR
.RS 4
Use FileMerge (requires a graphical session)
.RE
.PP
\fBp4merge\fR
.RS 4
Use HelixCore P4Merge (requires a graphical session)
.RE
.PP
\fBsmerge\fR
.RS 4
Use Sublime Merge (requires a graphical session)
.RE
.PP
\fBtkdiff\fR
.RS 4
Use TkDiff (requires a graphical session)
.RE
.PP
\fBvimdiff\fR
.RS 4
Use Vim
.RE
.PP
\fBwinmerge\fR
.RS 4
Use WinMerge (requires a graphical session)
.RE
.PP
\fBxxdiff\fR
.RS 4
Use xxdiff (requires a graphical session)
.RE
.RE
.PP
diff\&.indentHeuristic
.RS 4
このオプションを
\fBfalse\fR
に設定すると、パッチを読みやすくするためにdiffハンク境界をシフトするデフォルトのヒューリスティックが無効になります。
.RE
.PP
diff\&.algorithm
.RS 4
diffアルゴリズムを選択します。 派生形は以下のとおりです:
.PP
\fBdefault\fR, \fBmyers\fR
.RS 4
基本的な貪欲な差分アルゴリズム。現在、これがデフォルトです。
.RE
.PP
\fBminimal\fR
.RS 4
より多くの時間を費やして。可能な限り最小の差分が生成されるようにします。
.RE
.PP
\fBpatience\fR
.RS 4
パッチを生成するときは、patience diff(忍耐差分)アルゴリズムを使用してください。
.RE
.PP
\fBhistogram\fR
.RS 4
このアルゴリズムは、忍耐アルゴリズムを拡張して、「発生頻度の低い共通要素をサポート」(support low\-occurrence common elements)します。
.RE
.RE
.PP
diff\&.wsErrorHighlight
.RS 4
差分の
\fBcontext\fR
または
\fBold または `new\fR
行の空白エラー(whitespace errors)を強調表示します。複数の値はコンマで区切られ、
\fBnone\fR
は前の値をリセットし、
\fBdefault\fR
はリストを
\fBnew\fR
にリセットし、
\fBall\fR
は
\fBold,new,context\fR
の省略形です。空白のエラー(whitespace errors)は
\fBcolor\&.diff\&.whitespace\fR
で色分けされています。コマンドラインオプション
\fB\-\-ws\-error\-highlight=<kind>\fR
はこの設定を上書きします。
.RE
.PP
diff\&.colorMoved
.RS 4
有効な
\fB<mode>\fR
またはtrueのいずれかに設定すると、diff内の移動された行が異なる色で表示されます。有効なモードの詳細については、
\fBgit-diff\fR(1)
の
\fB\-\-color\-moved\fR
を参照してください。単にtrueに設定すると、デフォルトのカラーモードが使用されます。 falseに設定すると、移動した行は色付けされません。
.RE
.PP
diff\&.colorMovedWS
.RS 4
このオプションは、例えば
\fBdiff\&.colorMoved\fR
設定を使用して移動した行に色を付ける場合、スペース(spaces)をどのように扱うかを
\fB<mode>\fR
で制御します。有効なモードの詳細については
\fBgit-diff\fR(1)
の
\fB\-\-color\-moved\-ws\fR
を参照してください。
.RE
.PP
diff\&.tool
.RS 4
\fBgit-difftool\fR(1)
で使用する diff ツールを制御します。 この変数は、
\fBmerge\&.tool\fR
で構成された値をオーバーライドします。 以下のリストは、有効な組み込み値を示しています。 その他の値はカスタム diff ツール(tool)として扱われ、対応する difftool\&.<tool>\&.cmd 変数を定義する必要があります。
.RE
.PP
diff\&.guitool
.RS 4
\fB\-g\fR/\fB\-\-gui\fR
フラグが指定されている場合に、
\fBgit-difftool\fR(1)
によって使用されるdiffツールを制御します。 この変数は、
\fBmerge\&.guitool\fR
で構成された値をオーバーライドします。 以下のリストは、有効な組み込み値を示しています。 その他の値はカスタム diff ツール(tool)として扱われ、対応する difftool\&.<guitool>\&.cmd 変数を定義する必要があります。
.RE
.PP
difftool\&.<tool>\&.cmd
.RS 4
指定のdiffツール(<tool>)を呼び出すコマンドを指定します。指定されたコマンドは、次の変数を使用してシェルで評価されます:
\fBLOCAL\fR
は、diff pre\-imageの内容を含む一時ファイルの名前に設定され、
\fBREMOTE\fR
は、diff post\-imageの内容を含む一時ファイルの名前に設定されます。
.sp
詳細については、
\fBgit-difftool\fR(1)
の
\fB\-\-tool=<tool>\fR
オプションを参照してください。
.RE
.PP
difftool\&.<tool>\&.path
.RS 4
指定のツール(<tool>)のパスを上書きします。これは、あなたのツールがPATHにない場合に役立ちます。
.RE
.PP
difftool\&.trustExitCode
.RS 4
呼び出された difftool がゼロ以外の終了ステータス(exit status)を返す場合は、difftool を終了(exit)します。
.sp
詳細については、
\fBgit-difftool\fR(1)
の
\fB\-\-trust\-exit\-code\fR
オプションを参照してください。
.RE
.PP
difftool\&.prompt
.RS 4
diffツールを呼び出す前にプロンプトを表示します。
.RE
.PP
extensions\&.objectFormat
.RS 4
使用するハッシュアルゴリズムを指定します。 許容値は
\fBsha1\fR
と
\fBsha256\fR
です。 指定しない場合、
\fBsha1\fR
が想定されます。
\fBcore\&.repositoryFormatVersion\fR
が1でない限り、このキーを指定するとエラーになります。
.sp
注意: この設定は、\fBgit-init\fR(1)
または
\fBgit-clone\fR(1)
によってのみ設定する必要があることに注意してください。 初期化後に変更しようとすると機能せず、診断が難しい問題が発生します。
.RE
.PP
extensions\&.worktreeConfig
.RS 4
有効にすると、ワークツリーは、
\fB$GIT_COMMON_DIR/config\fR
ファイルに加えて、
\fB$GIT_DIR/config\&.worktree\fR
ファイルから構成設定を読み込みます。
\fB$GIT_COMMON_DIR\fR
と
\fB$GIT_DIR\fR
はメインの作業ツリーと同じですが、他の作業ツリーの
\fB$GIT_DIR\fR
は
\fB$GIT_COMMON_DIR/worktrees/<id>/\fR
に等しいことに注意してください。
\fBconfig\&.worktree\fR
ファイルの設定は、他の構成ファイルの設定を上書きします。
.sp
\fBextensions\&.worktreeConfig\fR
を有効にするときは、特定の値達を共通構成ファイル(common config file)からメインの作業ツリーの
\fBconfig\&.worktree\fR
ファイル (存在する場合) に移動(move)するように注意する必要があります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcore\&.worktree\fR
を
\fB$GIT_COMMON_DIR/config\fR
から
\fB$GIT_COMMON_DIR/config\&.worktree\fR
に移動(move)しなければなりません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcore\&.bare\fR
が true の場合、
\fB$GIT_COMMON_DIR/config\fR
から
\fB$GIT_COMMON_DIR/config\&.worktree\fR
に移動(move)しなければなりません。
.sp
各ワークツリーのカスタマイズ可能な sparse\-checkout 設定に対する要望に応じて、
\fBcore\&.sparseCheckout\fR
と
\fBcore\&.sparseCheckoutCone\fR
の場所(locations)を調整することも有益な場合があります。 デフォルトでは、\fBgit sparse\-checkout\fR
ビルトインは
\fBextensions\&.worktreeConfig\fR
を有効にし、これらの構成値をワークツリーごとに割り当て、
\fB$GIT_DIR/info/sparse\-checkout\fR
ファイルを使用して各ワークツリーごとに独立したスパース性を指定します。 詳細については、
\fBgit-sparse-checkout\fR(1)
を参照してください。
.sp
歴史的な理由から、
\fBextensions\&.worktreeConfig\fR
は
\fBcore\&.repositoryFormatVersion\fR
の設定に関係なく尊重されます。
.RE
.RE
.PP
fastimport\&.unpackLimit
.RS 4
\fBgit-fast-import\fR(1)
によってインポートされたオブジェクトの数がこの制限を下回る場合、オブジェクトは緩いオブジェクト(loose object)ファイルに解凍されます。 ただし、インポートされたオブジェクトの数がこの制限以上の場合、パックはパックとして保存されます。 fast\-import(高速インポート)からパックを保存すると、特に低速のファイルシステムで、インポート操作をより速く完了することができます。 設定されていない場合は、代わりに
\fBtransfer\&.unpackLimit\fR
の値が使用されます。
.RE
.PP
feature\&.*
.RS 4
\fBfeature\&.\fR
で始まる構成設定は、他の構成設定のグループのデフォルトを変更します。 これらのグループは、Git開発者コミュニティによって推奨されるデフォルトとして作成されており、変更される可能性があります。 特に、新しい構成オプションが異なるデフォルトで追加される場合があります。
.RE
.PP
feature\&.experimental
.RS 4
Gitの新機能であり、将来のデフォルトで検討されている構成オプションを有効にします。 ここに含まれる構成設定は、マイナーバージョンの更新を含め、リリースごとに追加または削除される場合があります。 これらの設定は非常に新しいため、意図しない相互作用が発生する可能性があります。 実験的な機能に関するフィードバックを提供したい場合は、この設定を有効にしてください。 新しいデフォルト値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfetch\&.negotiationAlgorithm=skipping\fR
は、一度により多くのコミットをスキップし、ラウンドトリップの数を減らすことで、フェッチネゴシエーション時間を改善できます。
.RE
.RE
.PP
feature\&.manyFiles
.RS 4
作業ディレクトリに多数のファイルがあるリポジトリを最適化する構成オプションを有効にします。 多くのファイルがあると、
\fBgit status\fR
や
\fBgit checkout\fR
などのコマンドが遅くなる可能性があり、これらの新しいデフォルトによりパフォーマンスが向上します:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBindex\&.version=4\fR
インデックスのpath\-prefix圧縮を有効にします。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcore\&.untrackedCache=true\fR
追跡されていないキャッシュを有効にします。この設定は、mtimeがマシンで機能していることを前提としています。
.RE
.RE
.PP
fetch\&.recurseSubmodules
.RS 4
このオプションは、
\fBgit fetch\fR(および
\fBgit pull\fR
の基になるフェッチ)が入力されたサブモジュールに再帰的にフェッチするかどうかを制御します。 このオプションは、ブール値または
\fBon\-demand\fR
のいずれかに設定できます。 ブール値に設定すると、フェッチとプルの動作が変更され、trueに設定されている場合は無条件にサブモジュールに再帰し、falseに設定されている場合はまったく再帰しません。
\fBon\-demand\fR
に設定すると、フェッチとプルは、スーパープロジェクトがサブモジュールの参照を更新するコミットを取得したときにのみ、入力されたサブモジュールに再帰します。 デフォルトは
\fBon\-demand\fR
、または
\fBsubmodule\&.recurse\fR
が設定されている場合はその値です。
.RE
.PP
fetch\&.fsckObjects
.RS 4
trueに設定されている場合、git\-fetch\-packはフェッチされたすべてのオブジェクトをチェックします。 チェックされる内容については、
\fBtransfer\&.fsckObjects\fR
を参照してください。 デフォルトはfalseです。 設定されていない場合は、代わりに
\fBtransfer\&.fsckObjects\fR
の値が使用されます。
.RE
.PP
fetch\&.fsck\&.<msg\-id>
.RS 4
\fBfsck\&.<msg\-id>\fR
のように機能しますが、
\fBgit-fsck\fR(1)
の代わりに
\fBgit-fetch-pack\fR(1)
によって使用されます。 詳細については、
\fBfsck\&.<msg\-id>\fR
のドキュメントを参照してください。
.RE
.PP
fetch\&.fsck\&.skipList
.RS 4
\fBfsck\&.skipList\fR
のように機能しますが、
\fBgit-fsck\fR(1)
の代わりに
\fBgit-fetch-pack\fR(1)
によって使用されます。 詳細については、
\fBfsck\&.skipList\fR
のドキュメントを参照してください。
.RE
.PP
fetch\&.unpackLimit
.RS 4
Gitネイティブ転送を介してフェッチされるオブジェクトの数がこの制限を下回る場合、オブジェクトは緩いオブジェクト(loose object)ファイルに解凍されます。 ただし、受信したオブジェクトの数がこの制限以上の場合、受信したパックは、欠落しているデルタベースを追加した後、パックとして保存されます。 プッシュからパックを保存すると、特に低速のファイルシステムで、プッシュ操作をより速く完了することができます。 これが設定されていない場合は、代わりに
\fBtransfer\&.unpackLimit\fR
の値が使用されます。
.RE
.PP
fetch\&.prune
.RS 4
trueの場合、fetchはコマンドラインで
\fB\-\-prune\fR
オプションが指定されたかのように自動的に動作します。
\fBremote\&.<name>\&.prune\fR
および
\fBgit-fetch\fR(1)
の「PRUNING」セクションも参照してください。
.RE
.PP
fetch\&.pruneTags
.RS 4
trueの場合、フェッチは、まだ設定されていない場合、刈り込み(pruning)時に
\fBrefs/tags/*:refs/tags/*\fR
refspecが提供されたかのように自動的に振る舞います。 これにより、このオプションと
\fBfetch\&.prune\fR
の両方を設定して、アップストリーム参照への 1=1 マッピングを維持できます。
\fBremote\&.<name>\&.pruneTags\fR
および
\fBgit-fetch\fR(1)
の「PRUNING」セクションも参照してください。
.RE
.PP
fetch\&.output
.RS 4
ref updateステータスの出力方法を制御します。 有効な値は
\fBfull\fR
と
\fBcompact\fR
です。 デフォルト値は
\fBfull\fR
です。 詳細については、
\fBgit-fetch\fR(1)
の「OUTPUT」セクションを参照してください。
.RE
.PP
fetch\&.negotiationAlgorithm
.RS 4
サーバーによって送信されるパックファイルの内容をネゴシエートするときに、ローカルリポジトリ内のコミットに関する情報がどのように送信されるかを制御します。
\fBconsecutive\fR
に設定すると、連続したコミットをそれぞれチェックするアルゴリズムを使用します。
\fBskipping\fR
に設定すると、収束を高速化するためにコミットをスキップするアルゴリズムが使用されますが、必要以上の大きさのパックファイルが生成される可能性があります。 または、
\fBnoop\fR
に設定して情報をまったく送信しないようにします。これにより、ほぼ確実に必要以上に大きなパックファイルが生成されますが、ネゴシエーション・ステップはスキップされます。
\fBdefault\fR
に設定すると、それ以前に行われた設定をオーバーライドしてデフォルトの振る舞いをします。 デフォルトは通常
\fBconsecutive\fR
ですが、
\fBfeature\&.experimental\fR
が true の場合、デフォルトは
\fBskipping\fR
です。 値が不明な場合、
\fBgit fetch\fR
でエラーが発生します。
.sp
\fBgit-fetch\fR(1)
の
\fB\-\-negotiate\-only\fR
および
\fB\-\-negotiation\-tip\fR
オプションも参照してください。
.RE
.PP
fetch\&.showForcedUpdates
.RS 4
falseに設定すると、
\fBgit-fetch\fR(1)
および
\fBgit-pull\fR(1)
コマンドで
\fB\-\-no\-show\-forced\-updates\fR
が有効になります。 デフォルトはtrueです。
.RE
.PP
fetch\&.parallel
.RS 4
一度に並行して実行されるフェッチ操作の最大数を指定します(サブモジュール、または、\fBgit-fetch\fR(1)
の
\fB\-\-multiple\fR
オプションが有効な場合はリモート)。
.sp
値0は、適切なデフォルトを提供します。 設定されていない場合、デフォルトで1になります。
.sp
サブモジュールの場合、この設定は、
\fBsubmodule\&.fetchJobs\fR
構成設定を使用してオーバーライドできます。
.RE
.PP
fetch\&.writeCommitGraph
.RS 4
リモートからパックファイルをダウンロードするすべての
\fBgit fetch\fR
コマンドの後でcommit\-graphを書き込むには、trueに設定します。
\fB\-\-split\fR
オプションを使用すると、ほとんどの実行で、既存のcommit\-graphファイルの上に非常に小さなcommit\-graphファイルが作成されます。 場合によっては、これらのファイルがマージされ、書き込みに時間がかかることがあります。 更新されたcommit\-graphファイルがあると、
\fBgit merge\-base\fR
や
\fBgit push \-f\fR
や
\fBgit log \-\-graph\fR
などの多くのGitコマンドのパフォーマンス改善に役立ちます。 デフォルトはfalseです。
.RE
.PP
format\&.attach
.RS 4
\fBformat\-patch\fR
のデフォルトとして マルチパート/混合の添付(multipart/mixed attachments)を有効にします。値は二重引用符(\fB"\&.\&.\&."\fR)で囲まれた文字列にすることもできます。これにより、添付ファイルがデフォルトとして有効になり、文字列が境界として設定されます。
\fBgit-format-patch\fR(1)
の
\fB\-\-attach\fR
オプションを参照してください。
.RE
.PP
format\&.from
.RS 4
\fB\-\-from\fR
オプションのデフォルト値をformat\-patchに提供します。ブール値、または名前と電子メールアドレスを受け入れます。 falseの場合、format\-patchはデフォルトで
\fB\-\-no\-from\fR
になり、パッチメールの
\fBFrom:\fR
フィールドに直接コミット作成者を使用します。 trueの場合、format\-patchはデフォルトで
\fB\-\-from\fR
になり、パッチメールの
\fBFrom:\fR
フィールドにあなたのコミッターIDを使い、異なる場合にはパッチメールの本文に
\fBFrom:\fR
フィールドを含めます。 ブール値でない値を設定した場合、format\-patch はあなたのコミッターIDの代わりにその値を使用します。 デフォルトは false です。
.RE
.PP
format\&.forceInBodyFrom
.RS 4
\fB\-\-[no\-]force\-in\-body\-from\fR
オプションのデフォルト値を format\-patch に提供します。 デフォルトは false です。
.RE
.PP
format\&.numbered
.RS 4
パッチ件名のシーケンス番号を有効または無効にできるブール値。 デフォルトは「auto」で、複数のパッチがある場合にのみ有効になります。 「true」または「false」に設定することで、すべてのメッセージに対して有効または無効にできます。
\fBgit-format-patch\fR(1)の
\fB\-\-numbered\fR
オプションを参照してください。
.RE
.PP
format\&.headers
.RS 4
メールで送信するパッチに含める追加の電子メールヘッダー。
\fBgit-format-patch\fR(1)
を参照してください。
.RE
.PP
format\&.to, format\&.cc
.RS 4
メールで送信するパッチに含める追加の受信者。
\fBgit-format-patch\fR(1)の
\fB\-\-to\fR
および` \-\-cc` オプションを参照してください。
.RE
.PP
format\&.subjectPrefix
.RS 4
format\-patchのデフォルトは、
\fB[PATCH]\fR
という接頭辞の件名のファイルを出力することです。 この変数を使用して、その接頭辞を変更します。
.RE
.PP
format\&.coverFromDescription
.RS 4
ブランチの説明を使用してカバーレターのどの部分にデータを入力するかを決定するためのformat\-patchのデフォルトモード。
\fBgit-format-patch\fR(1)の
\fB\-\-cover\-from\-description\fR
オプションを参照してください。
.RE
.PP
format\&.signature
.RS 4
format\-patchのデフォルトは、Gitバージョン番号を含む署名を出力することです。 この変数を使用して、そのデフォルトを変更します。 この変数を空の文字列("")に設定すると、署名の生成を抑制します。
.RE
.PP
format\&.signatureFile
.RS 4
この変数で指定されたファイルの内容が署名として使用されることを除いて、 format\&.signature と同じように機能します。
.RE
.PP
format\&.suffix
.RS 4
format\-patchのデフォルトは、接尾辞が
\fB\&.patch\fR
のファイルを出力することです。 この変数を使用して、その接尾辞を変更します(必要に応じて、必ずドット(\fB\&.\fR)を含めてください)。
.RE
.PP
format\&.encodeEmailHeaders
.RS 4
電子メール送信用に、非ASCII文字を含む電子メールヘッダーを「Q\-encoding」(RFC 2047で説明)でエンコードします。 デフォルトはtrueです。
.RE
.PP
format\&.pretty
.RS 4
log/show/whatchanged コマンドのpretty形式のデフォルト。
\fBgit-log\fR(1)
、
\fBgit-show\fR(1)
、
\fBgit-whatchanged\fR(1)
を参照してください。
.RE
.PP
format\&.thread
.RS 4
\fBgit format\-patch\fR
のデフォルトのスレッドスタイル。 ブール値 または
\fBshallow\fR
または
\fBdeep\fR
にすることができます。
\fBshallow\fR
スレッドは、すべてのメールをシリーズの先頭にに対して返信します。先頭は、カバーレター、
\fB\-\-in\-reply\-to\fR
、最初のパッチメールの順に選択されます。
\fBdeep\fR
スレッドは、すべてのメールを前のメールに返信します。 true のブール値は
\fBshallow\fR
と同じであり、 false値はスレッド化を無効にします。
.RE
.PP
format\&.signOff
.RS 4
デフォルトでformat\-patchの
\fB\-s/\-\-signoff\fR
オプションを有効にできるブール値。
\fB注意\fR
パッチに「Signed\-off\-by」トレーラーを追加することは意識的な行為である必要があり、同じオープンソースライセンスの下でこの作品を提出する権利があることを証明することを意味します。 詳細については、「SubmittingPatches」ドキュメントを参照してください。
.RE
.PP
format\&.coverLetter
.RS 4
format\-patchが呼び出されたときにカバーレターを生成するかどうかを制御するブール値ですが、さらに「auto」に設定して、複数のパッチがある場合にのみカバーレターを生成することができます。 デフォルトはfalseです。
.RE
.PP
format\&.outputDirectory
.RS 4
現在の作業ディレクトリの代わりに、結果のファイルを保存するカスタムディレクトリを設定します。 すべてのディレクトリコンポーネントが作成されます。
.RE
.PP
format\&.filenameMaxLength
.RS 4
\fBformat\-patch\fR
コマンドによって生成される出力ファイル名の最大長。 デフォルトは64です。\fB\-\-filename\-max\-length=<n>\fR
コマンドラインオプションで上書きできます。
.RE
.PP
format\&.useAutoBase
.RS 4
format\-patch のオプションである
\fB\-\-base=auto\fR
をデフォルトで有効にするためのブール値です。
\fBwhenAble\fR
に設定すると、適切なベースがある場合に
\fB\-\-base=auto\fR
を有効にし、それ以外の場合はフォーマット終了せずにベース情報の追加をスキップすることもできます。
.RE
.PP
format\&.notes
.RS 4
format\-patchの
\fB\-\-notes\fR
オプションのデフォルト値を提供します。 ブール値、またはnotesを取得する場所を指定するrefを受け入れます。 falseの場合、format\-patchのデフォルトは
\fB\-\-no\-notes\fR
です。 trueの場合、format\-patchのデフォルトは
\fB\-\-notes\fR
です。 非ブール値に設定されている場合、format\-patchのデフォルトは
\fB\-\-notes=<ref>\fR
です。ここで、
\fBref\fR
は指定した非ブール値です。 デフォルトはfalseです。
.sp
ref
\fBref/notes/true\fR
を使用したい場合は、代わりにそのリテラルを使用してください。
.sp
この構成は、複数のnotes refを含めるために複数回指定できます。その場合、渡された複数の
\fB\-\-[no\-]notes[=]\fR
オプションと同様に動作します。つまり、値
\fBtrue\fR
はデフォルトのnotesを表示し、値
\fB<ref>\fR
はそのnotes ref からのnotesも表示し、値
\fBfalse\fR
はそれ以前の設定を無効にし、notesを表示しません。
.sp
例えば以下の場合、
.sp
.if n \{\
.RS 4
.\}
.nf
[format]
        notes = true
        notes = foo
        notes = false
        notes = bar
.fi
.if n \{\
.RE
.\}
.sp
\fBrefs/notes/bar\fR
からのnotesのみが表示されます。
.RE
.PP
filter\&.<driver>\&.clean
.RS 4
チェックイン時にワークツリーファイルのコンテンツをブロブに変換するために使用されるコマンド。 詳細については、
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
filter\&.<driver>\&.smudge
.RS 4
チェックアウト時にブロブオブジェクトのコンテンツをワークツリーファイルに変換するために使用されるコマンド。 詳細については、
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
fsck\&.<msg\-id>
.RS 4
fsck中に、gitは、現在のバージョンのgitでは生成されず、
\fBtransfer\&.fsckObjects\fR
が設定されている場合はネットワーク経由で送信されない、レガシーデータの問題を検出する場合があります。この機能は、そのようなデータを含むレガシーリポジトリの操作をサポートすることを目的としています。
.sp
\fBfsck\&.<msg\-id>\fR
設定は、
\fBgit-fsck\fR(1)
によって取得されますが、代わりに、そのようなデータセット
\fBreceive\&.fsck\&.<msg\-id>\fR
のプッシュを受け入れるか、または、クローンまたはフェッチのセットである
\fBfetch\&.fsck\&.<msg\-id>\fR
を使用します。
.sp
この文書の残りの部分では、簡潔にするために
\fBfsck\&.*\fR
変数について説明していますが、対応する
\fBreceive\&.fsck\&.*\fR
変数と
\fBfetch\&.<msg\-id>\&.*\fR
変数にも同じことが当てはまります。
.sp
\fBcolor\&.ui\fR
や
\fBcore\&.editor\fR
のような変数とは異なり、
\fBreceive\&.fsck\&.<msg\-id>\fR
と
\fBfetch\&.fsck\&.<msg\-id>\fR
変数は、設定されていない場合、
\fBfsck\&.<msg\-id>\fR
構成にフォールバックしません。さまざまな状況で同じfsck設定を均一に構成するには、3つすべてを同じ値に設定する必要があります。
.sp
\fBfsck\&.<msg\-id>\fR
が設定されている場合、
\fBfsck\&.<msg\-id>\fR
の値を
\fBerror\fR
、
\fBwarn\fR
、\fBignore\fR
のいずれか一つとすることにより、エラーを警告に切り替える事もでき、その逆も可能です。そして
\fB<msg\-id>\fR
の部分はメッセージIDです。便利なように、fsckはエラー/警告メッセージの前にメッセージIDを付けます。たとえば「missingEmail: invalid author/committer line \- missing email」は、
\fBfsck\&.missingEmail = ignore\fR
を設定するとその問題が非表示になることを意味します。
.sp
一般に、これらの問題のあるオブジェクトが共有する破損の種類をリストして無視するのではなく、
\fBfsck\&.skipList\fR
に問題のある既存のオブジェクトを列挙することをお勧めします。前者を実行すると、同じ破損の新しいインスタンスが見過ごされる可能性があります。
.sp
不明な
\fBfsck\&.<msg\-id>\fR
値を設定すると、fsckが停止(die)しますが、
\fBreceive\&.fsck\&.<msg\-id>\fR
や
\fBfetch\&.fsck\&.<msg\-id>\fR
に対して同じことを行うと、gitは単に警告するだけです。
.RE
.PP
fsck\&.skipList
.RS 4
非致命的な理由により既に壊れている(broken)ことが分かっているため無視する必要があるオブジェクト名(1行につき1つの省略されてないSHA\-1)のリストへのパス。Git 2\&.20 以降では、コメント(\fB#\fR)文字から行末までと、空行と、先頭と末尾の空白(whitespace)は無視されます。それより古いバージョンでは1行につき1つのSHA\-1以外は全てエラーになります。
.sp
この機能は、無効なコミッターの電子メールアドレスなど、初期のコミットにもかかわらず、安全に無視できるエラーを含む、確立されたプロジェクトを受け入れる必要がある場合に役立ちます。 注意: この設定では、corruptオブジェクトをスキップすることはできません。
.sp
\fBfsck\&.<msg\-id>\fR
と同様に、この変数に対応する
\fBreceive\&.fsck\&.skipList\fR
派生と
\fBfetch\&.fsck\&.skipList\fR
派生があります。
.sp
\fBcolor\&.ui\fR
や
\fBcore\&.editor\fR
のような変数とは異なり、
\fBreceive\&.fsck\&.skipList\fR
変数と
\fBfetch\&.fsck\&.skipList\fR
変数は、設定されていない場合、
\fBfsck\&.skipList\fR
構成にフォールバックしません。さまざまな状況で同じfsck設定を均一に構成するには、3つすべてを同じ値に設定する必要があります。
.sp
古いバージョンのGit(2\&.20より前)では、オブジェクト名リストを並べ替える必要があることが文書化されています。これは必須ではなく、オブジェクト名は任意の順序で表示できますが、リストを読み取るときに、内部バイナリ検索実装の目的でリストが並べ替えられているかどうかを追跡しました。これにより、既に並べ替えられたリストでは作業を節約できます。膨大なリストがない限り、リストを事前に並べ替える必要はありませんでした。 Gitバージョン2\&.20以降では、代わりにハッシュ実装が使用されるため、リストを事前に並べ替える必要はありません。
.RE
.PP
gc\&.aggressiveDepth
.RS 4
\fBgit gc \-\-aggressive\fR
で使用されるデルタ圧縮アルゴリズムで使用される深さパラメーター。これはデフォルトで50に設定されています。これは
\fB\-\-aggressive\fR
が使用されていない場合の
\fB\-\-depth\fR
オプションのデフォルトです。
.sp
詳細については
\fBgit-repack\fR(1)
の
\fB\-\-depth\fR
オプションの文書を参照してください。
.RE
.PP
gc\&.aggressiveWindow
.RS 4
\fBgit gc \-\-aggressive\fR
で使用されるデルタ圧縮アルゴリズムで使用されるウィンドウサイズパラメータ。これはデフォルトで250に設定されています。これは、
\fB\-\-window\fR
のデフォルト値の10よりもはるかに積極的なウィンドウサイズです。
.sp
詳細については、
\fBgit-repack\fR(1)
の
\fB\-\-window\fR
オプションの文書を参照してください。
.RE
.PP
gc\&.auto
.RS 4
リポジトリにおおよそ指定の値より多くのルーズオブジェクトがある場合、
\fBgit gc \-\-auto\fR
はそれらをパックします。一部の磁器コマンドは、このコマンドを使用して、軽量のガベージコレクションを時々実行します。デフォルト値は6700です。
.sp
これを0に設定すると、ルーズオブジェクトの数に基づく自動パッキングが無効にななります。また、他のヒューリスティックな
\fBgit gc \-\-auto\fR
が、
\fBgc\&.autoPackLimit\fR
などの作業があるかどうかを判断するためにこの値を使用します。
.RE
.PP
gc\&.autoPackLimit
.RS 4
リポジトリに
\fB* \&.keep\fR
ファイルでマークされていないパックがこの設定値より多くある場合、
\fBgit gc \-\-auto\fR
はそれらを1つの大きなパックに統合します。デフォルト値は50です。これを0に設定すると、無効になります。
\fBgc\&.auto\fR
を0に設定すると、この設定も無効になります。
.sp
以下の
\fBgc\&.bigPackThreshold\fR
構成変数を参照してください。この設定を使用中は、自動パックの制限がどのように機能するかに影響します。
.RE
.PP
gc\&.autoDetach
.RS 4
システムがサポートしている場合は
\fBgit gc \-\-auto\fR
は即座戻り、実行はバックグラウンドで行われます。デフォルトはtrueです。
.RE
.PP
gc\&.bigPackThreshold
.RS 4
ゼロ以外の場合、
\fBgit gc\fR
の実行時に、この設定値より大きいすべてのパックが保持されます。これは
\fB\-\-keep\-largest\-pack\fR
と非常に似ていますが、最大のパックだけでなく、しきい値を満たす全てのパックが保持される点が異なります。デフォルトはゼロです。
\fBk\fR
、
\fBm\fR
、
\fBg\fR
の一般的な単位接尾辞がサポートされています。
.sp
注意: 保持されるパックの数が gc\&.autoPackLimit を超える場合、この構成変数は無視され、基本パックを除くすべてのパックが再パックされることに注意してください。再パック後、パックの数は gc\&.autoPackLimit を下回り、再び gc\&.bigPackThreshold が尊重されるでしょう。
.sp
\fBgit repack\fR
がスムーズに実行されると推定されるメモリ量が利用できず、かつ、
\fBgc\&.bigPackThreshold\fR
が設定されていない場合、最大のパックも除外されます(これは、
\fB\-\-keep\-largest\-pack\fR
を指定して
\fBgit gc\fR
を実行するのと同じです)。
.RE
.PP
gc\&.writeCommitGraph
.RS 4
trueの場合、
\fBgit-gc\fR(1)
が実行されると、 gcはcommit\-graphファイルを書き換えます。
\fBgit gc \-\-auto\fR
を使用する場合、ハウスキーピングが必要な場合はコミットグラフが更新されます。デフォルトはtrueです。詳細については
\fBgit-commit-graph\fR(1)
を参照してください。
.RE
.PP
gc\&.logExpiry
.RS 4
ファイルgc\&.logが存在する場合、
\fBgit gc \-\-auto\fR
はそのコンテンツを出力し、そのファイルが「gc\&.logExpiry」より古い場合を除いて、実行する代わりにステータス0で終了します。デフォルトは「1\&.day」です。その他の値の指定方法については
\fBgc\&.pruneExpire\fR
を参照してください。
.RE
.PP
gc\&.packRefs
.RS 4
リポジトリで
\fBgit pack\-refs\fR
を実行すると、HTTPなどの馬鹿プロトコル(dumb transport) を介して 1\&.5\&.1\&.2 より前のGitバージョンではクローンが作成できなくなります。この変数は、「git gc」が「git pack\-refs」を実行するかどうかを決定します。これを
\fBnotbare\fR
に設定して、すべての非ベアリポジトリ内で有効にするか、ブール値に設定することができます。 デフォルトは
\fBtrue\fR
です。
.RE
.PP
gc\&.cruftPacks
.RS 4
到達不能なオブジェクトを緩いオブジェクトとしてではなく、クラフト・パック(cruft pack)(\fBgit-repack\fR(1)
参照)に格納します。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
gc\&.pruneExpire
.RS 4
\fBgit gc\fR
を実行すると、
\fBprune \-\-expire 2\&.weeks\&.ago\fR
が呼び出されます(そして
\fBgc\&.cruftPacks\fR
または
\fB\-\-cruft\fR
を介してクラフトパック(cruft packs)を使用している場合は、
\fBrepack \-\-cruft \-\-cruft\-expiration 2\&.weeks\&.ago\fR
が呼び出されます)。 この構成変数で猶予期間をオーバーライドします。 値
\fBnow\fR
を使用してこの猶予期間を無効にし、到達不能なオブジェクトを常にすぐに刈り込み(prune)するか、
\fBnever\fR
を使用して刈り込みを抑制することができます。この機能は
\fBgit gc\fR
が、リポジトリに書き込む別のプロセスと並列実行される場合の破損を防ぐのに役立ちます。
\fBgit-gc\fR(1)
の「NOTES」セクションを参照してください。
.RE
.PP
gc\&.worktreePruneExpire
.RS 4
\fBgit gc\fR
が実行されると、
\fBgit worktree prune \-\-expire3\&.months\&.ago\fR
が呼び出されます。この構成変数を使用して、別の猶予期間を設定できます。値「now」を使用して猶予期間を無効にし、
\fB$GIT_DIR/worktrees\fR
をすぐに剪定(prune)するか、「never」を使用して剪定を抑制することができます。
.RE
.PP
gc\&.reflogExpire, gc\&.<pattern>\&.reflogExpire
.RS 4
「git reflog expire」は、この時間より古いreflogエントリを削除します。デフォルトは90日です。値「now」はすべてのエントリをすぐに期限切れにし、「never」は期限切れを完全に抑制します。中央に「<pattern>」(例:「refs/stash」)がある場合、設定は <pattern> に一致するrefにのみ適用されます。
.RE
.PP
gc\&.reflogExpireUnreachable, gc\&.<pattern>\&.reflogExpireUnreachable
.RS 4
\fBgit reflog expire\fR
は、この時間より古いreflogエントリを削除し、現在の先端(the current tip)から到達不能にします。デフォルトは30日です。値「now」はすべてのエントリをすぐに期限切れにし、「never」は期限切れを完全に抑制します。中央に「<pattern>」(例:「refs/stash」)がある場合、設定は <pattern> に一致するrefにのみ適用されます。
.sp
これらのタイプのエントリは通常、
\fBgit commit\-\-amend\fR
または
\fBgit rebase\fR
を使用した結果として作成され、修正またはリベースが発生する前のコミットです。これらの変更は現在のプロジェクトの一部ではないため、ほとんどのユーザーはそれらをより早く期限切れにしたいと思うでしょう。そのため、デフォルトは
\fBgc\&.reflogExpire\fR
よりも積極的です。
.RE
.PP
gc\&.rerereResolved
.RS 4
以前に解決した競合するマージの記録は、「git rerere gc」が実行されるときに、この設定値で指定の日数保持されます。より人間が読める「1\&.month\&.ago」などを使用することもできます。デフォルトは60日です。
\fBgit-rerere\fR(1)
を参照してください。
.RE
.PP
gc\&.rerereUnresolved
.RS 4
\fBgit rerere gc\fR
が実行されると、解決していない競合するマージの記録がこの設定値の日数保持されます。より人間が読める `1\&.month\&.ago`などを使用することもできます。デフォルトは15日です。
\fBgit-rerere\fR(1)
を参照してください。
.RE
.PP
gitcvs\&.commitMsgAnnotation
.RS 4
この文字列を各コミットメッセージに追加します。この機能を無効にするには、空の文字列に設定します。 デフォルトは "via git\-CVS emulator" (git\-CVSエミュレーター経由)です。
.RE
.PP
gitcvs\&.enabled
.RS 4
このリポジトリに対してCVSサーバー・インターフェースが有効になっているかどうか。
\fBgit-cvsserver\fR(1)
を参照してください。
.RE
.PP
gitcvs\&.logFile
.RS 4
CVS サーバインターフェイスが様々なことを記録するログファイルへのパスです。
\fBgit-cvsserver\fR(1)
を参照してください。
.RE
.PP
gitcvs\&.usecrlfattr
.RS 4
trueの場合、サーバーはファイルの行末変換属性を検索して、使用する
\fB\-k\fR
モードを決定します。 属性がGitにファイルをテキストとして処理させる場合、
\fB\-k\fR
モードは空白(blank)のままになるため、CVSクライアントはファイルをテキストとして処理します。 それらがテキスト変換を抑制する場合、ファイルは
\fB\-kb\fR
モードで設定されます。これにより、クライアントが他の方法で行う可能性のある改行の変更が抑制されます。 属性でファイルタイプを決定できない場合は、\fBgitcvs\&.allBinary\fR
が使用されます。
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
gitcvs\&.allBinary
.RS 4
これは、
\fBgitcvs\&.usecrlfattr\fR
が使用する「正しい
\fB\-kb\fR
モード」(correct
\fI\-kb\fR
mode)で解決しない場合に使用されます。 trueの場合、未解決のファイルはすべてモード
\fB\-kb\fR
でクライアントに送信されます。 これにより、クライアントはそれらをバイナリファイルとして扱い、改行が変更されないようにします。 または、
\fBguess\fR
に設定されている場合は、ファイルの内容が調べられ、
\fBcore\&.autocrlf\fR
と同様に、バイナリであるかどうかが判断されます。
.RE
.PP
gitcvs\&.dbName
.RS 4
Gitリポジトリから派生したリビジョン情報をキャッシュするためにgit\-cvsserverによって使用されるデータベース。 正確な意味は、使用するデータベースドライバーによって異なります。 SQLite(デフォルトのドライバー)の場合、これはファイル名です。 変数の置換をサポートします(詳細については、
\fBgit-cvsserver\fR(1)
を参照してください)。 セミコロン(\fB;\fR)を含めることはできません。 デフォルトは
\fB%Ggitcvs\&.%m\&.sqlite\fR
です。
.RE
.PP
gitcvs\&.dbDriver
.RS 4
使用するPerlDBIドライバー。 ここで使用可能なドライバーを指定できますが、機能しない場合があります。 git\-cvsserverは
\fBDBD::SQLite\fR
でテストされています。
\fBDBD::Pg で動作するという報告がありますが、 `DBD::mysql\fR
で動作しないことが報告されています。 実験的機能です。 二重コロン(\fB::\fR)を含めることはできません。 デフォルトは
\fBSQLite\fR
です。
\fBgit-cvsserver\fR(1)
を参照してください。
.RE
.PP
gitcvs\&.dbUser, gitcvs\&.dbPass
.RS 4
データベースのユーザーとパスワード。 SQLiteにはデータベースユーザーやパスワードの概念がないため、
\fBgitcvs\&.dbDriver\fR
を設定する場合にのみ役立ちます。
\fBgitcvs\&.dbUser\fR
は変数の置換をサポートしています(詳細については
\fBgit-cvsserver\fR(1)
を参照してください)。
.RE
.PP
gitcvs\&.dbTableNamePrefix
.RS 4
データベーステーブル名のプレフィックス。 使用されるデータベーステーブルの名前の前に付けられ、単一のデータベースを複数のリポジトリに使用できるようにします。 変数の置換をサポートします(詳細については、
\fBgit-cvsserver\fR(1)
を参照してください)。 アルファベット以外の文字はすべてアンダースコアに置き換えられます。
.RE
.sp
\fBgitcvs\&.usecrlfattr\fR と \fBgitcvs\&.allBinary\fR を除くすべてのgitcvs変数は、 \fBgitcvs\&.<access_method>\&.<varname>\fR (\fBaccess_method\fR は "ext" と "pserver" のいずれか)として指定することもできます。それらは、指定のアクセス方法(\fB<access_method>\fR)にのみ適用されます。
.PP
gitweb\&.category, gitweb\&.description, gitweb\&.owner, gitweb\&.url
.RS 4
説明については
\fBgitweb\fR(1)
を参照してください。
.RE
.PP
gitweb\&.avatar, gitweb\&.blame, gitweb\&.grep, gitweb\&.highlight, gitweb\&.patches, gitweb\&.pickaxe, gitweb\&.remote_heads, gitweb\&.showSizes, gitweb\&.snapshot
.RS 4
説明については
\fBgitweb.conf\fR(5)
を参照してください。
.RE
.PP
grep\&.lineNumber
.RS 4
trueに設定すると、デフォルトで
\fB\-n\fR
オプションが有効になります。
.RE
.PP
grep\&.column
.RS 4
trueに設定されている場合、デフォルトで
\fB\-\-column\fR
オプションを有効にします。
.RE
.PP
grep\&.patternType
.RS 4
デフォルトのマッチング動作を設定します。
\fBbasic\fR
または
\fBextended\fR
または
\fBfixed\fR
または
\fBperl\fR
の値を使用すると、それぞれに応じて
\fB\-\-basic\-regexp\fR
または ` \-\-extended\-regexp` または
\fB\-\-fixed\-strings\fR
または
\fB\-\-perl\-regexp\fR
オプションが有効になります。 値
\fBdefault\fR
は
\fBgrep\&.extendedRegexp\fR
オプションを使用して
\fBbasic\fR
と
\fBextended\fR
のどちらかを選択します。
.RE
.PP
grep\&.extendedRegexp
.RS 4
trueに設定されている場合、デフォルトで
\fB\-\-extended\-regexp\fR
オプションを有効にします。
\fBgrep\&.patternType\fR
オプションが
\fBdefault\fR
以外の値に設定されている場合、このオプションは無視されます。
.RE
.PP
grep\&.threads
.RS 4
使用する grep ワーカー・スレッドの数。 設定しない場合(または 0 に設定した場合)、 Git は使用可能な論理コアの数と同じ数のスレッドを使用します。
.RE
.PP
grep\&.fullName
.RS 4
trueに設定すると、デフォルトで
\fB\-\-full\-name\fR
オプションが有効になります。
.RE
.PP
grep\&.fallbackToNoIndex
.RS 4
trueに設定すると、
\fBgit grep\fR
がgitリポジトリの外部で実行される場合は、
\fBgit grep \-\-no\-index\fR
にフォールバックします。 デフォルトはfalseです。
.RE
.PP
gpg\&.program
.RS 4
PGP署名を作成または検証するときは、\fB$PATH\fR
にある
\fBgpg\fR
の代わりにこのカスタムプログラムを使用します。 プログラムはGPGと同じコマンドラインインターフェイスをサポートする必要があります。つまり、切り離された署名(detached signature)を検証するには、
\fBgpg \-\-verify $signature \- <$file\fR
が実行され、 プログラムは、コード0で終了することにより、適切な署名を通知することが期待されます。PGP ASCII\-armor の分離署名(ASCII\-armored detached signature)を生成するために、
\fBgpg \-bsau $key\fR
の標準入力には、署名する内容が入力され、プログラムはその結果を標準出力に送信することが期待されています。
.RE
.PP
gpg\&.format
.RS 4
\fB\-\-gpg\-sign\fR
で署名するときに使用するキー形式を指定します。 デフォルトは
\fBopenpgp\fR
です。 別の可能な値は
\fBx509\fR
と
\fBssh\fR
です。
.RE
.PP
gpg\&.<format>\&.program
.RS 4
これを使用して、選択した署名形式に使用されるプログラムをカスタマイズします。 (
\fBgpg\&.program\fR
と
\fBgpg\&.format\fR
参照)
\fBgpg\&.program\fR
は、
\fBgpg\&.openpgp\&.program\fR
の歴史的同義語として引き続き使用できます。
\fBgpg\&.x509\&.program\fR
のデフォルト値は
\fBgpgsm\fR
で、
\fBgpg\&.ssh\&.program\fR
のデフォルト値は
\fBssh\-keygen\fR
です。
.RE
.PP
gpg\&.minTrustLevel
.RS 4
署名検証(signature verification)の最小信頼(trust)レベルを指定します。 このオプションが設定されていない場合、マージ操作の署名検証には、少なくとも
\fBmarginal\fR
信頼(trust)のあるキーが必要です。 署名の検証を実行する他の操作には、少なくとも
\fBundefined\fR
の信頼を持つキーが必要です。 このオプションを設定すると、すべての操作に必要な信頼レベルが上書きされます。 サポートされている値は以下のとおりです(重要度の昇順):
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBundefined\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnever\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmarginal\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfully\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBultimate\fR
.RE
.RE
.PP
gpg\&.ssh\&.defaultKeyCommand
.RS 4
このコマンドは、
\fBuser\&.signingkey\fR
が設定されておらず、かつ、 ssh 署名が要求されたときに実行されます。 正常に終了すると、出力の最初の行に
\fBkey::\fR
で始まる有効な ssh 公開鍵あるものと期待します。 これにより、
\fBuser\&.signingKey\fR
を静的に構成することが実際的でない場合に、スクリプトが正しい公開鍵を動的に検索(lookup)できるようになります。 これはたとえば、キーまたは SSH 証明書が頻繁にローテーションされる場合や、適切なキーの選択が git にとって未知の外部要因に依存する場合などです。
.RE
.PP
gpg\&.ssh\&.allowedSignersFile
.RS 4
信頼できる ssh 公開鍵を含むファイル。 このファイルは、1行以上のプリンシパル(principals)とそれに続く ssh 公開鍵で構成されます。 例:
\fBuser1@example\&.com,user2@example\&.com ssh\-rsa AAAAX1\&.\&.\&.\fR
詳細については、 ssh\-keygen(1) の「ALLOWED SIGNERS」を参照してください。 プリンシパル(principal)は、キーを識別するためにのみ使用され、署名を検証(verify)するときに使用できます。
.sp
SSH には、gpg のような信頼レベル(trust levels)の概念がありません。 有効な署名(valid signatures)と信頼できる署名(trusted signatures)を区別できるようにするために、 allowedSignersFile に公開鍵が存在する場合、署名検証の信頼レベルは
\fBfully\fR
に設定されます。 それ以外の場合、信頼レベルは
\fBundefined\fR
であり、git verify\-commit/tag は失敗します。
.sp
このファイルはリポジトリ外の場所に設定でき、すべての開発者が独自の信頼ストア(trust store)を維持します。 中央リポジトリ・サーバーは、コードを検証するためのプッシュ・アクセスを使用して、ssh キーからこのファイルを自動的に生成できます。 おそらく、企業の設定では、このファイルは、開発者の ssh キーを既に処理している自動化によってグローバルな場所に生成されます。
.sp
署名付きコミットのみを許可するリポジトリは、作業ツリーの最上位からの相対パスを使用して、リポジトリ自体にファイルを保存できます。 このようにして、すでに有効なキーを持つコミッターのみが、キーリングのキーを追加または変更できます。
.sp
OpensSSH 8\&.8 以降、このファイルでは、valid\-after および valid\-before オプションを使用してキーの有効期間を指定できます。 署名の作成時に署名キーが有効であった場合、Git は署名を有効としてマークします。 これにより、ユーザーは以前に作成されたすべての署名を無効にすることなく、署名キーを変更できます。
.sp
cert\-authority オプション (ssh\-keygen(1) の「CERTIFICATES」を参照) を指定した SSH CA 鍵の使用も有効です。
.RE
.PP
gpg\&.ssh\&.revocationFile
.RS 4
SSH KRL または取り消された公開鍵のリスト(プリンシパル(principal)プレフィックスなし)。 詳細については、 ssh\-keygen(1) を参照してください。 公開鍵がこのファイルで見つかった場合、その公開鍵は常に信頼レベル
\fBnever\fR
として扱われ、署名は無効として表示されます。
.RE
.PP
gui\&.commitMsgWidth
.RS 4
\fBgit-gui\fR(1)
のコミットメッセージウィンドウの幅を定義します。 「75」がデフォルトです。
.RE
.PP
gui\&.diffContext
.RS 4
\fBgit-gui\fR(1)
によるdiffの呼び出しで使用するコンテキスト行の数を指定します。 デフォルトは「5」です。
.RE
.PP
gui\&.displayUntracked
.RS 4
\fBgit-gui\fR(1)
がファイルリストに追跡されていないファイルを表示するかどうかを決定します。 デフォルトは「true」です。
.RE
.PP
gui\&.encoding
.RS 4
\fBgit-gui\fR(1)
および
\fBgitk\fR(1)
でファイルの内容を表示するために使用するデフォルトの文字エンコードを指定します。 関連するファイルの「encoding」属性を設定することでオーバーライドできます(\fBgitattributes\fR(5)
参照)。 このオプションが設定されていない場合、ツールはデフォルトでロケールエンコーディングになります。
.RE
.PP
gui\&.matchTrackingBranch
.RS 4
\fBgit-gui\fR(1)
で作成された新しいブランチが、デフォルトで名前が一致するリモートブランチを追跡するかどうかを決定します。 デフォルトは「false」です。
.RE
.PP
gui\&.newBranchTemplate
.RS 4
\fBgit-gui\fR(1)
を使用して新しいブランチを作成するときに、推奨される名前として使用されます。
.RE
.PP
gui\&.pruneDuringFetch
.RS 4
\fBgit-gui\fR(1)
がフェッチの実行時にリモート追跡ブランチを刈り込み(prune)する必要がある場合は「true」。 デフォルト値は「false」です。
.RE
.PP
gui\&.trustmtime
.RS 4
\fBgit-gui\fR(1)
がファイル変更のタイムスタンプを信頼するかどうかを決定します。 デフォルトでは、タイムスタンプは信頼されていません。
.RE
.PP
gui\&.spellingDictionary
.RS 4
\fBgit-gui\fR(1)
でコミットメッセージのスペルチェックに使用される辞書を指定します。「none」に設定すると、スペルチェックがオフになります。
.RE
.PP
gui\&.fastCopyBlame
.RS 4
trueの場合、
\fBgit gui blame\fR
は、元の場所(original location)の検出に
\fB\-C \-C\fR
ではなく
\fB\-C\fR
を使用します。 コピーの検出が完全ではなくなる代わりに、巨大なリポジトリでのblameが大幅に速くなります。
.RE
.PP
gui\&.copyBlameThreshold
.RS 4
英数字(alphanumeric)文字で測定された、
\fBgit gui blame\fR
の元の位置(original location)検出で使用するしきい値を指定します。 コピー検出の詳細については、
\fBgit-blame\fR(1)
のマニュアルを参照してください。
.RE
.PP
gui\&.blamehistoryctx
.RS 4
「Show History Context」(履歴コンテキストの表示)メニュー項目が
\fBgit gui blame\fR
から呼び出されたときに、選択したコミットの
\fBgitk\fR(1)
に表示する履歴コンテキストの範囲を日数で指定します。 この変数がゼロに設定されている場合、履歴全体が表示されます。
.RE
.PP
guitool\&.<name>\&.cmd
.RS 4
\fBgit-gui\fR(1)
Toolsメニューの対応する項目が呼び出されたときに実行するシェルコマンドラインを指定します。 このオプションは、すべてのツールに必須です。 コマンドは作業ディレクトリのルートから実行され、環境ではツールの名前を
\fBGIT_GUITOOL\fR
、現在選択されているファイルの名前を
\fBFILENAME\fR
、現在のブランチの名前を
\fBCUR_BRANCH\fR
として受け取ります(切り離されたヘッド(detached head)の場合、
\fBCUR_BRANCH\fR
は空です)。
.RE
.PP
guitool\&.<name>\&.needsFile
.RS 4
GUIでdiffが選択されている場合にのみ、ツールを実行します。
\fBFILENAME\fR
が空でないことを保証します。
.RE
.PP
guitool\&.<name>\&.noConsole
.RS 4
出力を表示するウィンドウを作成せずに、コマンドを黙って実行します。
.RE
.PP
guitool\&.<name>\&.noRescan
.RS 4
ツールの実行が終了した後、変更がないか作業ディレクトリを再スキャンしないでください。
.RE
.PP
guitool\&.<name>\&.confirm
.RS 4
ツールを実際に実行する前に、確認ダイアログを表示します。
.RE
.PP
guitool\&.<name>\&.argPrompt
.RS 4
ユーザーに文字列引数を要求し、それを
\fBARGS\fR
環境変数を介してツールに渡します。 引数の要求は確認を意味するため、これが有効になっている場合、「confirm」オプションは効果がありません。 オプションが
\fBtrue\fR
または
\fByes\fR
または 1 に設定されている場合、ダイアログは組み込みの汎用プロンプトを使用します。 それ以外の場合は、変数の正確な値が使用されます。
.RE
.PP
guitool\&.<name>\&.revPrompt
.RS 4
ユーザーに有効なリビジョンを1つ要求し、
\fBREVISION\fR
環境変数を設定します。 それ以外は
\fBargPrompt\fR
と同様です。
\fBargPrompt\fR
と一緒に使用できます。
.RE
.PP
guitool\&.<name>\&.revUnmerged
.RS 4
\fBrevPrompt\fR
サブダイアログにマージされていないブランチのみを表示します。 これは、マージやリベースに似たツールには役立ちますが、チェックアウトやリセットなどには役立ちません。
.RE
.PP
guitool\&.<name>\&.title
.RS 4
プロンプトダイアログに使用するタイトルを指定します。 デフォルトはツール名です。
.RE
.PP
guitool\&.<name>\&.prompt
.RS 4
ダイアログの上部、
\fBargPrompt\fR
および
\fBrevPrompt\fR
のサブセクションの前に表示する一般的なプロンプト文字列を指定します。 デフォルト値には実際のコマンドが含まれます。
.RE
.PP
help\&.browser
.RS 4
ヘルプをweb形式で表示するために使用されるブラウザーを指定します。
\fBgit-help\fR(1)
を参照してください。
.RE
.PP
help\&.format
.RS 4
\fBgit-help\fR(1)
で使用されるデフォルトのヘルプ形式を上書きします。 値として
\fBman\fR
と
\fBinfo\fR
と
\fBweb\fR
と
\fBhtml\fR
がサポートされています。
\fBman\fR
がデフォルトです。
\fBweb\fR
と
\fBhtml\fR
は同じ(same)です。
.RE
.PP
help\&.autoCorrect
.RS 4
gitがタイプミスを検出し、間違いにに類似した有効なコマンドを1つだけ識別できる場合、gitは正しいコマンドを提案しようとするか、提案を自動的に実行します。 可能な構成値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
0 (デフォルト): 提案されたコマンドを表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
正の数: 指定されたデシ秒単位(0\&.1秒単位)の秒数後に提案されたコマンドを実行します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"immediate": 提案されたコマンドを即座に実行します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"prompt": コマンドを実行するための提案と確認のプロンプトを表示します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"never": 提案されたコマンドを実行も表示もしないでください。
.RE
.RE
.PP
help\&.htmlPath
.RS 4
HTMLドキュメントが存在するパスを指定します。 ファイルシステムのパスとURLがサポートされています。 ヘルプが「web」形式で表示される場合、HTMLページの前にこのパスが付けられます。 これはデフォルトでGitインストールのドキュメントパスになります。
.RE
.PP
http\&.proxy
.RS 4
通常は
\fBhttp_proxy\fR
や
\fBhttps_proxy\fR
や
\fBall_proxy\fR
環境変数を使用して構成されたHTTPプロキシをオーバーライドします(curl(1) 参照)。 curlが理解できる構文に加えて、ユーザー名はパスワードなしでプロキシ文字列を指定でき、その場合、gitは他の資格情報の場合と同じ方法でプロキシ文字列を取得しようとします。 詳細については、
\fBgitcredentials\fR(7)
を参照してください。 構文は
\fB[protocol://][user[:password]@]proxyhost[:port]\fR
です。 これは、リモートごとにオーバーライドできます。 remote\&.<name>\&.proxy を参照してください
.RE
.PP
http\&.proxyAuthMethod
.RS 4
HTTPプロキシに対して認証する方法を設定します。 これは、構成されたプロキシ文字列にユーザー名の部分が含まれている場合にのみ有効になります(つまり、
\fBuser@host\fR
または
\fBuser@host:port\fR
形式)。 これは、リモートごとにオーバーライドできます。
\fBremote\&.<name>\&.proxyAuthMethod\fR
を参照してください。 どちらも
\fBGIT_HTTP_PROXY_AUTHMETHOD\fR
環境変数でオーバーライドできます。 可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBanyauth\fR
\- 適切な認証方法を自動的に選択します。 プロキシは、407ステータスコードとサポートされている認証方法を使用した1つ以上のProxy\-authenticateヘッダーを使用して、認証されていない要求に応答すると想定されます。 これがデフォルトです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbasic\fR
\- HTTPベーシック認証
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBdigest\fR
\- HTTPダイジェスト認証。これにより、パスワードがクリアテキストでプロキシに送信されるのを防ぎます
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnegotiate\fR
\- GSSネゴシエーション認証(\fBcurl(1)\fR
の
\fB\-\-negotiate\fR
オプションと比較してください)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBntlm\fR
\- NTLM認証(\fBcurl(1)\fR
の
\fB\-\-ntlm\fR
オプションと比較してください)
.RE
.RE
.PP
http\&.proxySSLCert
.RS 4
HTTPSプロキシでの認証に使用するクライアント証明書を格納するファイルのパス名。
\fBGIT_PROXY_SSL_CERT\fR
環境変数でオーバーライドできます。
.RE
.PP
http\&.proxySSLKey
.RS 4
HTTPSプロキシでの認証に使用する秘密鍵を格納するファイルのパス名。
\fBGIT_PROXY_SSL_KEY\fR
環境変数でオーバーライドできます。
.RE
.PP
http\&.proxySSLCertPasswordProtected
.RS 4
プロキシSSL証明書に対するGitのパスワードプロンプトを有効にします。 それ以外の場合、証明書または秘密鍵が暗号化されていると、OpenSSLはユーザーにプロンプトを表示します。
\fBGIT_PROXY_SSL_CERT_PASSWORD_PROTECTED\fR
環境変数で上書きできます。
.RE
.PP
http\&.proxySSLCAInfo
.RS 4
HTTPSプロキシを使用するときにプロキシを検証するために使用する必要がある証明書バンドルを含むファイルへのパス名。
\fBGIT_PROXY_SSL_CAINFO\fR
環境変数でオーバーライドできます。
.RE
.PP
http\&.emptyAuth
.RS 4
ユーザー名またはパスワードを求めずに認証を試みます。 libcurlは通常、認証にユーザー名を必要とするため、これを使用して、URLにユーザー名を指定せずにGSS\-Negotiate認証を試みることができます。
.RE
.PP
http\&.delegation
.RS 4
GSSAPI資格情報の委任を制御します。 バージョン7\&.21\&.7以降、libcurlでは委任がデフォルトで無効になっています。 ユーザー資格情報に関して、何を委任できるかをサーバーに通知するパラメーターを設定します。 GSS/kerberosで使用されます。 可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnone\fR
\- 委任を許可しないでください。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBpolicy\fR
\- OK\-AS\-DELEGATE フラグが Kerberos サービスチケットに設定されている場合にのみ委任します。これはレルムポリシー(realm policy)の問題です。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBalways\fR
\- サーバーが無条件に委任できるようにします。
.RE
.RE
.PP
http\&.extraHeader
.RS 4
サーバーと通信するときに追加のHTTPヘッダーを渡します。 そのようなエントリが複数存在する場合は、それらすべてが追加のヘッダーとして追加されます。 システム構成から継承された設定をオーバーライドできるようにするには、値を空にすると、余分なヘッダーが空のリストにリセットされます。
.RE
.PP
http\&.cookieFile
.RS 4
以前に保存されたクッキー行を含むファイルのパス名。サーバーと一致する場合はGit httpセッションで使用する必要があります。 クッキーを読み取るファイルのファイル形式は、プレーンHTTPヘッダーまたは、Netscape/Mozilla クッキーファイル形式である必要があります(curl(1) 参照)。 注意:
\fBhttp\&.saveCookies\fR
が設定されていない限り、
\fBhttp\&.cookieFile\fR
で指定されたファイルは入力としてのみ使用されることに注意してください。
.RE
.PP
http\&.saveCookies
.RS 4
設定されている場合、リクエスト中に受信したクッキーを http\&.cookieFile で指定されたファイルに保存します。 http\&.cookieFile が設定されていない場合は効果がありません。
.RE
.PP
http\&.version
.RS 4
サーバーと通信するときは、指定されたHTTPプロトコルバージョンを使用してください。 デフォルトを強制する場合、使用可能なデフォルトバージョンはlibcurlによって異なります。 現在、このオプションの可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
HTTP/2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
HTTP/1\&.1
.RE
.RE
.PP
http\&.curloptResolve
.RS 4
HTTP リクエストの送信時に libcurl が最初に使用するホスト名解決情報。 この情報は、以下のいずれかの形式である必要があります:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
[+]HOST:PORT:ADDRESS[,ADDRESS]
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\-HOST:PORT
.RE
.sp
最初の形式は、指定された
\fBHOST:PORT\fR
へのすべてのリクエストを、指定された
\fBADDRESS\fR
にリダイレクトします。 2 番目の形式は、その
\fBHOST:PORT\fR
の組み合わせの以前の設定値をすべてクリアします。 システム構成から継承されたすべての設定を簡単に上書きできるようにするために、空の値はすべての解決情報を空のリストにリセットします。
.RE
.PP
http\&.sslVersion
.RS 4
デフォルトを強制する場合に、SSL接続をネゴシエートするときに使用するSSLバージョン。 使用可能なデフォルトバージョンは、libcurlがNSSまたはOpenSSLのどちらに対して構築されたか、および使用中の暗号ライブラリの特定の構成によって異なります。 内部的には、これにより
\fBCURLOPT_SSL_VERSION\fR
オプションが設定されます。 このオプションの形式とサポートされているSSLバージョンの詳細については、libcurlのドキュメントを参照してください。 現在、このオプションの可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
sslv2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
sslv3
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tlsv1
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tlsv1\&.0
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tlsv1\&.1
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tlsv1\&.2
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
tlsv1\&.3
.RE
.sp
\fBGIT_SSL_VERSION\fR
環境変数で上書きできます。 gitにlibcurlのデフォルトのsslバージョンを使用させ、明示的なhttp\&.sslversionオプションを無視するには、
\fBGIT_SSL_VERSION\fR
を空の文字列に設定します。
.RE
.PP
http\&.sslCipherList
.RS 4
SSL接続をネゴシエートするときに使用するSSL暗号のリスト。 使用可能な暗号は、libcurlがNSSまたはOpenSSLのどちらに対して構築されたか、および使用中の暗号ライブラリの特定の構成によって異なります。 内部的には、これにより
\fBCURLOPT_SSL_CIPHER_LIST\fR
オプションが設定されます。 このリストの形式の詳細については、libcurlのドキュメントを参照してください。
.sp
\fBGIT_SSL_CIPHER_LIST\fR
環境変数で上書きできます。 gitにlibcurlのデフォルトの暗号リストを使用させ、明示的なhttp\&.sslCipherListオプションを無視するには、
\fBGIT_SSL_CIPHER_LIST\fR
を空の文字列に設定します。
.RE
.PP
http\&.sslVerify
.RS 4
HTTPSをフェッチまたはプッシュするときにSSL証明書を検証するかどうか。 デフォルトはtrueです。
\fBGIT_SSL_NO_VERIFY\fR
環境変数で上書きできます。
.RE
.PP
http\&.sslCert
.RS 4
HTTPSをフェッチまたはプッシュするときのSSL証明書を含むファイル。
\fBGIT_SSL_CERT\fR
環境変数で上書きできます。
.RE
.PP
http\&.sslKey
.RS 4
HTTPSをフェッチまたはプッシュするときのSSL秘密鍵を含むファイル。
\fBGIT_SSL_KEY\fR
環境変数で上書きできます。
.RE
.PP
http\&.sslCertPasswordProtected
.RS 4
SSL証明書に対するGitのパスワードプロンプトを有効にします。 それ以外の場合、証明書または秘密鍵が暗号化されていると、OpenSSLはユーザーにプロンプトを表示します。
\fBGIT_SSL_CERT_PASSWORD_PROTECTED\fR
環境変数で上書きできます。
.RE
.PP
http\&.sslCAInfo
.RS 4
HTTPSをフェッチまたはプッシュするときにピア(peer)を検証(verify)するための証明書を含むファイル。
\fBGIT_SSL_CAINFO\fR
環境変数でオーバーライドできます。
.RE
.PP
http\&.sslCAPath
.RS 4
HTTPSをフェッチまたはプッシュするときにピア(peer)を検証(verify)するためのCA証明書を含むファイルを含むパス。
\fBGIT_SSL_CAPATH\fR
環境変数で上書きできます。
.RE
.PP
http\&.sslBackend
.RS 4
使用するSSLバックエンドの名前(例:
\fBopenssl\fR
または
\fBschannel\fR)。 cURLが実行時にSSLバックエンドを選択するためのサポートを欠いている場合、このオプションは無視されます。
.RE
.PP
http\&.schannelCheckRevoke
.RS 4
\fBhttp\&.sslBackend\fR
が
\fBschannel\fR
に設定されている場合にcURLで証明書失効チェックを実施または無効にするために使用されます。 設定されていない場合、デフォルトは
\fBtrue\fR
です。 Gitが一貫してエラーを出し、メッセージが証明書の失効ステータスの確認に関するものである場合にのみ、これを無効にする必要があります。 cURLが実行時に関連するSSLオプションを設定するためのサポートを欠いている場合、このオプションは無視されます。
.RE
.PP
http\&.schannelUseSSLCAInfo
.RS 4
cURL v7\&.60\&.0以降、セキュリティで保護されたチャネルのバックエンドは
\fBhttp\&.sslCAInfo\fR
を介して提供される証明書バンドルを使用できますが、これによりWindows証明書ストアが上書きされます。 これはデフォルトでは望ましくないため、
\fBhttp\&.schannelUseSSLCAInfo\fR
がこの動作をオーバーライドしない限り、
\fBschannel\fR
バックエンドが
\fBhttp\&.sslBackend\fR
を介して構成されている場合、Gitはデフォルトでそのバンドルを使用しないようにcURLに指示します。
.RE
.PP
http\&.pinnedPubkey
.RS 4
httpsサービスの公開鍵。 これは、PEMまたはDERでエンコードされた公開鍵ファイルのファイル名か、
\fBsha256//\fR
で始まり、その後にbase64でエンコードされた公開鍵のsha256ハッシュが続く文字列のいずれかです。 libcurlの
\fBCURLOPT_PINNEDPUBLICKEY\fR
も参照してください。 このオプションが設定されているがcURLでサポートされていない場合、gitはエラーで終了します。
.RE
.PP
http\&.sslTry
.RS 4
通常のFTPプロトコルを介して接続する場合は、AUTH SSL/TLS と暗号化されたデータ転送を使用してみてください。 これは、FTPサーバーがセキュリティ上の理由でそれを必要とする場合、またはリモートFTPサーバーがそれをサポートする場合はいつでも安全に接続したい場合に必要になることがあります。 誤って構成されたサーバーで証明書検証エラーが発生する可能性があるため、デフォルトはfalseです。
.RE
.PP
http\&.maxRequests
.RS 4
並行して起動するHTTPリクエストの数。
\fBGIT_HTTP_MAX_REQUESTS\fR
環境変数でオーバーライドできます。 デフォルトは 5 です。
.RE
.PP
http\&.minSessions
.RS 4
リクエスト間で保持されるcurlセッションの数(スロット全体でカウント)。 http_cleanup() が呼び出されるまで、curl_easy_cleanup()で終了することはありません。 USE_CURL_MULTIが定義されていない場合、この値の上限は1になります。 デフォルトは1です。
.RE
.PP
http\&.postBuffer
.RS 4
リモートシステムにデータをPOSTするときにスマートHTTPトランスポートによって使用されるバッファーの最大サイズ(バイト単位)。 このバッファサイズより大きいリクエストの場合、 HTTP/1\&.1 と Transfer\-Encoding: チャンクが使用され、ローカルで大規模なパックファイルが作成されるのを防ぎます。 デフォルトは1MiBで、ほとんどのリクエストでは十分です。
.sp
この制限を引き上げることは、チャンク転送エンコーディングを無効にする場合にのみ有効であるため、リモートサーバーまたはプロキシが HTTP/1\&.0 のみをサポートするか、HTTP標準に準拠していない場合にのみ使用する必要があることに注意してください。 この制限を引き上げることは、一般に、ほとんどのプッシュの問題に対して効果的な解決策ではありませんが、小さなプッシュに対してもバッファー全体が割り当てられるため、メモリー消費を大幅に増やす可能性があります。
.RE
.PP
http\&.lowSpeedLimit, http\&.lowSpeedTime
.RS 4
\fBhttp\&.lowSpeedTime\fR
秒より長いために、HTTP転送速度が
\fBhttp\&.lowSpeedLimit\fR
未満の場合、転送は中止されます。
\fBGIT_HTTP_LOW_SPEED_LIMIT\fR
および
\fBGIT_HTTP_LOW_SPEED_TIME\fR
環境変数でオーバーライドできます。
.RE
.PP
http\&.noEPSV
.RS 4
curlによるEPSV ftpコマンドの使用を無効にするブール値。 これは、EPSVモードをサポートしていない一部の「貧弱な」ftpサーバーで役立ちます。
\fBGIT_CURL_FTP_NO_EPSV\fR
環境変数でオーバーライドできます。 デフォルトはfalseです(curlはEPSVを使用します)。
.RE
.PP
http\&.userAgent
.RS 4
HTTPサーバーに提示されるHTTP USER_AGENT文字列。 デフォルト値は、git/1\&.7\&.1などのクライアントGitのバージョンを表します。 このオプションを使用すると、この値をMozilla/4\&.0などのより一般的な値にオーバーライドできます。 これは、たとえば、HTTP接続を一連の一般的なUSER_AGENT文字列(ただし、 git/1\&.7\&.1 などは含まない、)に制限するファイアウォールを介して接続する場合に必要になることがあります。
\fBGIT_HTTP_USER_AGENT\fR
環境変数で上書きできます。
.RE
.PP
http\&.followRedirects
.RS 4
gitがHTTPリダイレクトに従うべきかどうか。
\fBtrue\fR
に設定されている場合、gitは、検出したサーバーによって発行されたリダイレクトを透過的に追跡します。
\fBfalse\fR
に設定すると、gitはすべてのリダイレクトをエラーとして扱います。
\fBinitial\fR
に設定されている場合、gitはリモートへの最初のリクエストに対してのみリダイレクトに従いますが、後続のフォローアップHTTPリクエストに対しては追跡しません。 gitはリダイレクトされたURLをフォローアップリクエストのベースとして使用するため、通常はこれで十分です。 デフォルトは
\fBinitial\fR
です。
.RE
.PP
http\&.<url>\&.*
.RS 4
上記の
\fBhttp\&.*\fR
オプションはいずれも、一部のURLに選択的に適用できます。 構成キーがURLと一致するように、構成キーの各要素がURLの要素と以下の順序で比較されます:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
スキーム(例:
\fBhttps://example\&.com/\fR
の
\fBhttps\fR
の部分)。 このフィールドは、構成キーとURLの間で正確に一致する必要があります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
ホスト/ドメイン名(例:
\fBhttps://example\&.com/\fR
の
\fBexample\&.com\fR
の部分)。 このフィールドは、構成キーとURLの間で一致する必要があります。 このレベルのすべてのサブドメインに一致するように、ホスト名の一部として
\fB*\fR
を指定することができます。 たとえば、
\fBhttps://*\&.example\&.com/\fR
は
\fBhttps://foo\&.example\&.com/\fR
と一致しますが、
\fBhttps://foo\&.bar\&.example\&.com/\fR
とは一致しません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
ポート番号(例:
\fBhttp://example\&.com:8080/\fR
の
\fB8080\fR
の部分)。 このフィールドは、構成キーとURLの間で正確に一致する必要があります。 省略されたポート番号は、照合する前に、スキームの正しいデフォルトに自動的に変換されます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
パス(例:
\fBhttps://example\&.com/repo\&.git\fR
の
\fBrepo\&.git\fR
の部分)。 構成キーのパスフィールドは、URLのパスフィールドと正確に一致するか、スラッシュ(\fB/\fR)で区切られたパス要素のプレフィックスとして一致する必要があります。 これは、パス
\fBfoo/\fR
の設定キーがURLパス
\fBfoo/bar\fR
と一致することを意味します。 プレフィックスは、スラッシュ(\fB/\fR)境界でのみ一致できます。 長い一致が優先されます(したがって、パス
\fBfoo/bar\fR
の構成キーは、パス
\fBfoo/\fR
の構成キーよりもURLパス
\fBfoo/bar\fR
によく一致します)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
ユーザー名(例:
\fBhttps://user@example\&.com/repo\&.git\fR
の
\fBuser\fR
の部分)。 構成キーにユーザー名がある場合は、URLのユーザー名と正確に一致する必要があります。 構成キーにユーザー名がない場合、その構成キーは任意のユーザー名(ユーザー名無しを含む)のURLと一致しますが、ユーザー名の構成キーよりも優先順位は低くなります。
.RE
.sp
上記のリストは、優先順位の高い順に並べられています。 構成キーのパスに一致するURLは、そのユーザー名に一致するURLよりも優先されます。 例えば、URLが
\fBhttps://user@example\&.com/foo/bar\fR
の場合、
\fBhttps://user@example\&.com\fR
の設定キーの一致よりも
\fBhttps://example\&.com/foo\fR
の設定キーの一致が優先されます。
.sp
すべてのURLは、照合を試みる前に正規化されます(パスワード部分がURLに埋め込まれている場合、照合目的では常に無視されます)。これにより、スペルが異なる同等のURLが正しく照合されます。 環境変数の設定は、常に一致を上書きします。 照合されるURLは、Gitコマンドに直接指定されたURLです。 これは、リダイレクトの結果としてアクセスされたURLがマッチングに参加しないことを意味します。
.RE
.PP
i18n\&.commitEncoding
.RS 4
コミットメッセージの文字エンコーディングは保存されます。 Gitそれ自体は気にしませんが、この情報は必要です。 例えば、電子メールまたはgitkグラフィカル履歴ブラウザーからコミットをインポートする場合(そしておそらく将来の他の場所や他の磁器コマンドでも)です。例として linkgit：git\-mailinfo[1] を参照してください。 デフォルトは
\fButf\-8\fR
です。
.RE
.PP
i18n\&.logOutputEncoding
.RS 4
コミットメッセージの文字エンコーディングは、
\fBgit log\fR
やその仲間を実行するときに変換されます。
.RE
.PP
imap\&.folder
.RS 4
メールをドロップするフォルダー。通常はドラフトフォルダーです。 例：「INBOX\&.Drafts」とか「INBOX/Drafts」とか「[Gmail]/Drafts」です。必須です。
.RE
.PP
imap\&.tunnel
.RS 4
サーバーへの直接ネットワーク接続を使用する代わりに、コマンドがパイプされるIMAPサーバーへのトンネルをセットアップするために使用されるコマンド。 imap\&.host が設定されていない場合に必須です。
.RE
.PP
imap\&.host
.RS 4
サーバーを識別するURL。 非セキュア接続には
\fBimap://\fR
プレフィックスを使用し、セキュア接続には
\fBimaps://\fR
プレフィックスを使用します。 imap\&.tunnel が設定されている場合は無視されますが、それ以外の場合は必須です。
.RE
.PP
imap\&.user
.RS 4
サーバーにログインするときに使用するユーザー名。
.RE
.PP
imap\&.pass
.RS 4
サーバーにログインするときに使用するパスワード。
.RE
.PP
imap\&.port
.RS 4
サーバー上で接続する整数のポート番号。 デフォルトは、 imap:// ホストの場合は143、 imaps:// ホストの場合は993です。 imap\&.tunnel が設定されている場合は無視されます。
.RE
.PP
imap\&.sslverify
.RS 4
SSL/TLS接続で使用されるサーバー証明書の検証を有効/無効にするブール値。デフォルトは
\fBtrue\fR
です。 imap\&.tunnel が設定されている場合は無視されます。
.RE
.PP
imap\&.preformattedHTML
.RS 4
パッチを送信するときにhtmlエンコーディングの使用を有効/無効にするブール値。 htmlでエンコードされたパッチは <pre> で囲まれ、コンテンツタイプは text/html になります。皮肉なことに、このオプションを有効にすると、Thunderbirdはパッチを plane/text の format=fixed メールとして送信します。デフォルトは
\fBfalse\fR
です。
.RE
.PP
imap\&.authMethod
.RS 4
IMAPサーバーでの認証の認証方法を指定します。GitがNO_CURLオプションを使用してビルドされた場合、curlバージョンが7\&.34\&.0より古い場合、またはgit\-imap\-sendを
\fB\-\-no\-curl\fR
オプションを指定して実行している場合、サポートされるメソッドは
\fICRAM\-MD5\fR
のみです。これが設定されていない場合、「git imap\-send」は基本的なIMAPプレーンテキストLOGINコマンドを使用します。
.RE
.PP
include\&.path, includeIf\&.<condition>\&.path
.RS 4
他の構成ファイルをインクルードするための特別な変数。
\fBgit-config\fR(1)
ドキュメントの「CONFIGURATION FILE」セクション、特に「Includes」および「Conditional includes」サブセクションを参照してください。
.RE
.PP
index\&.recordEndOfIndexEntries
.RS 4
インデックスファイルに「End Of Index Entry」セクションを含めるかどうかを指定します。 これにより、マルチプロセッサマシンでのインデックスの読み込み時間が短縮されますが、2\&.20より前のバージョンのGitを使用してインデックスを読み取ると、「ignoring EOIE extension」というメッセージが表示されます。 index\&.threads が明示的に有効になっている場合はデフォルトで
\fBtrue\fR
、それ以外の場合は
\fBfalse\fR
になります。
.RE
.PP
index\&.recordOffsetTable
.RS 4
インデックスファイルに「Index Entry Offset Table」セクションを含めるかどうかを指定します。 これにより、マルチプロセッサマシンでのインデックスの読み込み時間が短縮されますが、2\&.20より前のバージョンのGitを使用してインデックスを読み取ると、「ignoring IEOT extension」というメッセージが表示されます。 index\&.threadsが明示的に有効になっている場合はデフォルトで
\fBtrue\fR
、それ以外の場合は
\fBfalse\fR
になります。
.RE
.PP
index\&.sparse
.RS 4
有効にすると、sparse\-directory エントリを使用してインデックスを書き込みます。
\fBcore\&.sparseCheckout\fR
と
\fBcore\&.sparseCheckoutCone\fR
の両方が有効になっていない限り、これは効果がありません。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
index\&.threads
.RS 4
インデックスをロードするときに生成するスレッドの数を指定します。 これは、マルチプロセッサマシンでのインデックスのロード時間を短縮することを目的としています。 0または
\fBtrue\fR
を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。 1または
\fIfalse\fR
を指定すると、マルチスレッドが無効になります。 デフォルトは
\fBtrue\fR
です。
.RE
.PP
index\&.version
.RS 4
新しいインデックスファイルを初期化するバージョンを指定します。 これは既存のリポジトリには影響しません。
\fBfeature\&.manyFiles\fR
が有効になっている場合、デフォルトは4です。
.RE
.PP
init\&.templateDir
.RS 4
テンプレートのコピー元のディレクトリを指定します。 (\fBgit-init\fR(1)
の「TEMPLATE DIRECTORY」セクションを参照してください。)
.RE
.PP
init\&.defaultBranch
.RS 4
デフォルトのブランチ名を上書きできます。例えば、新しいリポジトリを初期化するとき。
.RE
.PP
instaweb\&.browser
.RS 4
gitwebであなたの作業リポジトリをブラウズするために使用されるプログラムを指定します。
\fBgit-instaweb\fR(1)
を参照してください。
.RE
.PP
instaweb\&.httpd
.RS 4
あなたの作業リポジトリでgitwebを起動するためのHTTPデーモンコマンドライン。
\fBgit-instaweb\fR(1)
を参照してください。
.RE
.PP
instaweb\&.local
.RS 4
trueの場合、
\fBgit-instaweb\fR(1)
によって起動されたWebサーバーはローカルIP(local IP)(127\&.0\&.0\&.1)にバインドされます。
.RE
.PP
instaweb\&.modulePath
.RS 4
\fB/usr/lib/apache2/modules\fR
の代わりに使用する
\fBgit-instaweb\fR(1)
のデフォルトのモジュールパス。httpdがApacheの場合にのみ使用されます。
.RE
.PP
instaweb\&.port
.RS 4
gitweb httpdをバインドするポート番号。
\fBgit-instaweb\fR(1)
を参照してください。
.RE
.PP
interactive\&.singleKey
.RS 4
対話コマンドでは、ユーザーが1つのキーで1文字の入力を提供できるようにします(つまり、Enterキーを押さずに)。 現在、これは
\fBgit-add\fR(1)
と
\fBgit-checkout\fR(1)
と
\fBgit-restore\fR(1)
と
\fBgit-commit\fR(1)
と
\fBgit-reset\fR(1)
と
\fBgit-stash\fR(1)
の
\fB\-\-patch\fR
モードで使用されています。 ポータブルキーストローク入力(portable keystroke input)が利用できない場合、この設定は黙って無視されることに注意してください。 Perlモジュール Term::ReadKey が必要です。
.RE
.PP
interactive\&.diffFilter
.RS 4
対話コマンド(\fBgit add \-\-patch\fR
など)が色付きのdiffを表示すると、gitはこの構成変数で定義されたシェルコマンドを介してdiffをパイプします。 コマンドは、元のdiffの行と1対1の対応を保持している場合、人間に読みやすいようにdiffをさらにマークアップできます。 デフォルトは無効(フィルタリングなし)です。
.RE
.PP
log\&.abbrevCommit
.RS 4
trueの場合、 linkgit:git\-log [1] と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
に
\fB\-\-abbrev\-commit\fR
を想定させます。 このオプションは
\fB\-\-no\-abbrev\-commit\fR
で上書きできます。
.RE
.PP
log\&.date
.RS 4
\fBlog\fR
コマンドのデフォルトの日時モードを設定します。 log\&.dateの値の設定は、
\fBgit log\fR
の
\fB\-\-date\fR
オプションと同様です。 詳細については、
\fBgit-log\fR(1)
を参照してください。
.sp
形式が
\fBauto:foo\fR
に設定されていて、ページャーが使用されている場合、形式
\fBfoo\fR
が日付形式に使用されます。 それ以外の場合は、
\fBdefault\fR
が使用されます。
.RE
.PP
log\&.decorate
.RS 4
logコマンドで表示されるコミットのref名を出力します。
\fBshort\fR
が指定されている場合、ref名の接頭辞
\fBrefs/heads/\fR
と
\fBrefs/tags/\fR
と
\fBrefs/remotes/\fR
は出力されません。
\fBfull\fR
が指定されている場合、完全なref名(接頭辞を含む)が出力されます。
\fBauto\fR
が指定されている場合、出力が端末に送られる場合、ref名は
\fBshort\fR
が指定されているかのように表示されます。それ以外の場合、ref名は表示されません。 これは、
\fBgit log\fR
の
\fB\-\-decorate\fR
オプションと同じです。
.RE
.PP
log\&.initialDecorationSet
.RS 4
デフォルトでは、
\fBgit log\fR
は特定の既知の ref 名前空間の装飾(decorations)のみを表示します。
\fBall\fR
が指定されている場合は、すべてのrefを装飾として表示します。
.RE
.PP
log\&.excludeDecoration
.RS 4
ログ装飾(log decorations)から指定されたパターンを除外します。 これは
\fB\-\-decorate\-refs\-exclude\fR
コマンドラインオプションに似ていますが、構成オプションは
\fB\-\-decorate\-refs\fR
オプションで上書きできます。
.RE
.PP
log\&.diffMerges
.RS 4
マージコミットに使用されるデフォルトのdiff形式を設定します。 詳細については、
\fBgit-log\fR(1)
の
\fB\-\-diff\-merges\fR
を参照してください。 デフォルトは
\fBseparate\fR
です。
.RE
.PP
log\&.follow
.RS 4
\fBtrue\fR
の場合、
\fBgit log\fR
は、単一の<path>が指定されたときに
\fB\-\-follow\fR
オプションが使用されたかのように機能します。 これには
\fB\-\-follow\fR
と同じ制限があります。つまり、複数のファイルを追跡するために使用することはできず、非線形履歴ではうまく機能しません。
.RE
.PP
log\&.graphColors
.RS 4
\fBgit log \-\-graph\fR
で履歴線(history lines)を描画するために使用できる、コンマで区切られた色のリスト。
.RE
.PP
log\&.showRoot
.RS 4
trueの場合、最初のコミットは大きな作成イベントとして表示されます。 これは、空のツリーに対するdiffに相当します。
\fBgit-log\fR(1)
や
\fBgit-whatchanged\fR(1)
などのツールは、通常はルートコミットを隠していますが、今後は表示されるようになります。 デフォルトでは True です。
.RE
.PP
log\&.showSignature
.RS 4
trueの場合、
\fBgit-log\fR(1)
と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
に
\fB\-\-show\-signature\fR
を想定させます。
.RE
.PP
log\&.mailmap
.RS 4
trueの場合、
\fBgit-log\fR(1)
と
\fBgit-show\fR(1)
と
\fBgit-whatchanged\fR(1)
で
\fB\-\-use\-mailmap\fR
を想定させ、それ以外の場合は
\fB\-\-no\-use\-mailmap\fR
を想定させます。 デフォルトではtrueです。
.RE
.PP
lsrefs\&.unborn
.RS 4
\fBadvertise\fR
(デフォルト)または
\fBallow\fR
または
\fBignore\fR
の場合があります。
\fBadvertise`の場合、サーバーは `unborn\fR
(\fBgitprotocol-v2\fR(5)
説明があります)を送信するクライアントに応答し、プロトコルv2機能の広告(advertise)中にこの機能のサポートを広告します。
\fBallow\fR
は
\fBadvertise`と同一ですが、サーバーがこの機能のサポートを広告しない点が異なります。 これは、管理者が `allow\fR
を構成し、遅れて
\fBadvertise\fR
を構成できるため、(たとえば、)アトミックに更新できない負荷分散サーバーに役立ちます。
.RE
.PP
mailinfo\&.scissors
.RS 4
trueの場合、
\fBgit-mailinfo\fR(1)
(それゆえ
\fBgit-am\fR(1)
も)は、コマンドラインで
\fB\-\-scissors\fR
オプションが指定されているかのようにデフォルトで動作します。この機能がアクティブな場合、メッセージ本文から切り取り線(つまり、主に ">8" や "8<" や "\-" で構成される)行とそれより前のすべてを削除します。
.RE
.PP
mailmap\&.file
.RS 4
拡張メールマップファイルの場所。リポジトリのルートにあるデフォルトのメールマップが最初にロードされ、次にこの変数が指すメールマップファイルがロードされます。メールマップファイルの場所は、リポジトリサブディレクトリ内、またはリポジトリの外部のどこかにあります。
\fBgit-shortlog\fR(1)
と
\fBgit-blame\fR(1)
を参照してください。
.RE
.PP
mailmap\&.blob
.RS 4
\fBmailmap\&.file\fR
と同様ですが、値をリポジトリ内のブロブへの参照と見なします。
\fBmailmap\&.file\fR
と
\fBmailmap\&.blob\fR
の両方が指定されている場合、両方が解析され、
\fBmailmap\&.file\fR
からのエントリが優先されます。この変数は、ベアリポジトリではデフォルトで
\fBHEAD:\&.mailmap\fR
になります。非ベアリポジトリでは、デフォルトで空になります。
.RE
.PP
maintenance\&.auto
.RS 4
このブール構成オプションは、一部のコマンドが通常の作業を行った後に
\fBgit maintenance run \-\-auto\fR
を実行するかどうかを制御します。 デフォルトはtrueです。
.RE
.PP
maintenance\&.strategy
.RS 4
この文字列設定オプションは、バックグラウンドメンテナンスのいくつかの推奨スケジュールの1つを指定する方法を提供します。 これは、
\fB\-\-task=<task>\fR
引数が指定されていない場合、
\fBgit maintenance run \-\-schedule=X\fR
コマンド中に実行されるタスクにのみ影響します。 さらに、
\fBmaintenance\&.<task>\&.schedule\fR
構成値が設定されている場合、
\fBmaintenance\&.strategy\fR
によって提供される値の代わりにその値が使用されます。 戦略として指定可能な文字列は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnone\fR: このデフォルト設定は、どのスケジュールでもタスクが実行されないことを意味します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBincremental\fR: この設定は、データを削除しない小さなメンテナンスアクティビティの実行に最適化されています。 これは
\fBgc\fR
タスクをスケジュールしませんが、
\fBprefetch\fR
および
\fBcommit\-graph\fR
タスクを1時間ごとに実行し、
\fBloose\-objects\fR
および
\fBincremental\-repack\fR
タスクを毎日実行し、
\fBpack\-refs\fR
タスクを毎週実行します。
.RE
.RE
.PP
maintenance\&.<task>\&.enabled
.RS 4
このブール構成オプションは、
\fBgit maintenance run\fR
に
\fB\-\-task\fR
オプションが指定されていない場合に、
\fB<task>\fR
という名前のメンテナンスタスクを実行するかどうかを制御します。
\fB\-\-task\fR
オプションが存在する場合、これらの構成値は無視されます。 デフォルトでは、
\fBmaintenance\&.gc\&.enabled\fR
のみがtrueです。
.RE
.PP
maintenance\&.<task>\&.schedule
.RS 4
この設定オプションは、指定された
\fB<task>\fR
が
\fBgit maintenance run \-\-schedule=<frequency>\fR
コマンド中に実行されるかどうかを制御します。 値は、 "hourly", "daily", "weekly" のいずれかである必要があります。
.RE
.PP
maintenance\&.commit\-graph\&.auto
.RS 4
この整数値構成オプションは、
\fBgit maintenance run \-\-auto\fR
の一部として
\fBcommit\-graph\fR
タスクを実行する頻度を制御します。 ゼロの場合、
\fBcommit\-graph\fR
タスクは`\-\-auto` オプションで実行されません。負の値を指定すると、タスクは毎回実行されます。 それ以外の場合、正の値は、commit\-graphファイルにない到達可能なコミットの数が
\fBmaintenance\&.commit\-graph\&.auto\fR
の値以上であるときにコマンドを実行する必要があることを意味します。デフォルト値は100です。
.RE
.PP
maintenance\&.loose\-objects\&.auto
.RS 4
この整数値構成オプションは、
\fBgit maintenance run \-\-auto\fR
の一部として
\fBloose\-objects\fR
タスクを実行する頻度を制御します。 ゼロの場合、
\fBloose\-objects\fR
タスクは
\fB\-\-auto\fR
オプションでは実行されません。 負の値を指定すると、タスクは毎回実行されます。 それ以外の場合、正の値は、緩いオブジェクト(loose objects)の数が
\fBmaintenance\&.loose\-objects\&.auto\fR
の値以上であるときにコマンドを実行する必要があることを意味します。 デフォルト値は100です。
.RE
.PP
maintenance\&.incremental\-repack\&.auto
.RS 4
この整数値構成オプションは、
\fBgit maintenance run \-\-auto\fR
の一部として
\fBincremental\-repack\fR
タスクを実行する頻度を制御します。 ゼロの場合、
\fBincremental\-repack\fR
タスクは
\fB\-\-auto\fR
オプションでは実行されません。 負の値を指定すると、タスクは毎回実行されます。 それ以外の場合、正の値は、multi\-pack\-indexにないpack\-fileの数が
\fBmaintenance\&.incremental\-repack\&.auto\fR
の値以上であるときにコマンドを実行する必要があることを意味します。 デフォルト値は10です。
.RE
.PP
man\&.viewer
.RS 4
ヘルプを
\fBman\fR
形式で表示するために使用できるプログラムを指定します。
\fBgit-help\fR(1)
を参照してください。
.RE
.PP
man\&.<tool>\&.cmd
.RS 4
指定されたmanビューア(<tool>)を呼び出すコマンドを指定します。指定されたコマンドは、引数として渡されたマニュアルページを使用してシェルで評価されます。(\fBgit-help\fR(1)
を参照してください。)
.RE
.PP
man\&.<tool>\&.path
.RS 4
\fBman\fR
形式でヘルプを表示するために使用される可能性のある特定のツール(<tool>)のパスをオーバーライドします。
\fBgit-help\fR(1)
を参照してください。
.RE
.PP
merge\&.conflictStyle
.RS 4
マージ時に競合するハンクが作業ツリーファイルに書き出されるスタイルを指定します。 デフォルトは
\fBmerge`です。これは、 `<<<<<<<\fR
競合マーカー、一方の側で行われた変更、
\fB=======\fR
マーカー、もう一方の側で行われた変更、そして
\fB>>>>>>>\fR
マーカーというスタイルです。 別のスタイル「diff3」は、
\fB|||||||\fR
マーカーと元のテキストを
\fB=======\fR
マーカーの前に追加します。
\fBmerge\fR
スタイルは、元のテキストの除外と、行のサブセットが、両側で一致する場合に競合領域から引き抜かれるため、
\fBdiff3\fR
よりも小さな競合領域を生成する傾向があります。 もう 1 つの代替スタイル
\fBzdiff3\fR
は
\fBdiff3\fR
に似ていますが、 両側で一致する行が競合領域の開始または最後近くに現れる場合、競合領域から削除します。
.RE
.PP
merge\&.defaultToUpstream
.RS 4
コミット引数なしでmergeが呼び出された場合は、リモート追跡ブランチに格納されている最後に観測された値を使用して、現在のブランチ用に構成されたアップストリームブランチをマージします。
\fBbranch\&.<currentbranch>\&.remote\fR
によって指定されたリモートのブランチに名前を付ける
\fBbranch\&.<currentbranch>\&.merge\fR
の値が参照され、次に、それらは
\fBremote\&.<remote>\&.fetch\fR
を介して対応するリモート追跡ブランチにマッピングされ、そして、これらの追跡ブランチの先端がマージされます。 デフォルトはtrueです。
.RE
.PP
merge\&.ff
.RS 4
デフォルトでは、Gitは、現在のコミットの子孫であるコミットをマージするときに、追加のマージコミットを作成しません。 代わりに、現在のブランチの先端が早送り(fast\-forward)されます。
\fBfalse\fR
に設定すると、この変数はGitにそのような場合に追加のマージコミットを作成するように指示します(コマンドラインから
\fB\-\-no\-ff\fR
オプションを指定するのと同じです)。
\fBonly\fR
に設定すると、そのような早送りマージのみが許可されます(コマンドラインから
\fB\-\-ff\-only\fR
オプションを指定するのと同じです)。
.RE
.PP
merge\&.verifySignatures
.RS 4
trueの場合、これは
\fB\-\-verify\-signatures\fR
コマンドラインオプションと同等です。 詳細については、
\fBgit-merge\fR(1)
を参照してください。
.RE
.PP
merge\&.branchdesc
.RS 4
ブランチ名に加えて、それらに関連付けられたブランチの説明テキストをログメッセージに入力します。デフォルトはfalseです。
.RE
.PP
merge\&.log
.RS 4
ブランチ名に加えて、マージされる実際のコミットからの最大「指定の数」の親コミットの1行説明をログメッセージに入力します。デフォルトはfalseで、trueは20の同義語です。
.RE
.PP
merge\&.suppressDest
.RS 4
統合ブランチの名前に一致するグロブをこの複数値の構成変数(multi\-valued configuration variable)に追加することにより、これらの統合ブランチへのマージに対して計算されるデフォルトのマージメッセージは、タイトルから「into <branch name>」を省略します。
.sp
空の値を持つ要素を使用して、以前の構成エントリから蓄積されたグロブのリストをクリアできます。
\fBmerge\&.suppressDest\fR
変数が定義されていない場合、下位互換性のためにデフォルト値の
\fBmaster\fR
が使用されます。
.RE
.PP
merge\&.renameLimit
.RS 4
マージ処理中に名前変更検出の網羅的な部分で考慮するファイルの数。 指定されない場合、デフォルトは diff\&.renameLimit の値です。 merge\&.renameLimit と diff\&.renameLimit の両方が指定されていない場合、現在のデフォルトは 7000 です。 この設定は、名前変更検出がオフの場合は効果がありません。
.RE
.PP
merge\&.renames
.RS 4
Gitが名前の変更を検出するかどうか。 「false」に設定すると、名前変更の検出が無効になります。 「true」に設定すると、基本的な名前変更の検出が有効になります。 デフォルトは diff\&.renames の値です。
.RE
.PP
merge\&.directoryRenames
.RS 4
Gitがディレクトリの名前変更を検出するかどうか。これは、履歴の一方の側でディレクトリが名前変更されたときに、もう一方の側で追加された新しいファイルがマージ時にどうなるのかに影響します。 merge\&.directoryRenames を
\fBfalse\fR
に設定すると、ディレクトリの名前変更の検出は無効になります。つまり、そのような新しいファイルは古いディレクトリに残されます。
\fBtrue\fR
に設定すると、ディレクトリの名前変更検出が有効になり、そのような新しいファイルは新しいディレクトリに移動されることを意味します。
\fBconflict\fR
に設定すると、そのようなパスに対して競合が報告されます。 merge\&.renames が false の場合、merge\&.directoryRenames は無視され、false として扱われます。 デフォルトは
\fBconflict\fR
です。
.RE
.PP
merge\&.renormalize
.RS 4
リポジトリ内のファイルの標準の表現が時間の経過とともに変更されたことをGitに伝えます(たとえば、以前はCRLF行末のレコードテキストファイルをコミットしていましたが、最近のファイルはLF行末を使用している)。 このようなリポジトリでは、Gitは、不必要な競合を減らすために、マージを実行する前に、コミットに記録されたデータを標準形式に変換できます。 詳細については、\fBgitattributes\fR(5)
の「Merging branches with differing checkin/checkout attributes」(チェックイン/チェックアウト属性が異なるブランチのマージ)のセクションを参照してください。
.RE
.PP
merge\&.stat
.RS 4
マージの最後にORIG_HEADとマージ結果の間のdiffstatを出力するかどうか。 デフォルトではtrue。
.RE
.PP
merge\&.autoStash
.RS 4
trueに設定すると、操作を開始する前に一時的なstashエントリを自動的に作成し、操作の終了後に適用します。 これは、ダーティ作業ツリーでマージを実行できることを意味します。 ただし、注意して使用してください。マージが成功した後の最後のstashアプリケーションは、重要な競合を引き起こす可能性があります。 このオプションは、
\fBgit-merge\fR(1)の
\fB\-\-no\-autostash\fR
および
\fB\-\-autostash\fR
オプションでオーバーライドできます。 デフォルトはfalseです。
.RE
.PP
merge\&.tool
.RS 4
\fBgit-mergetool\fR(1)
が使用するマージツールを制御します。 以下のリストは、有効な組み込み値を示しています。その他の値はカスタムマージツールとして扱われ、対応する mergetool\&.<tool>\&.cmd 変数が定義されている必要があります。
.RE
.PP
merge\&.guitool
.RS 4
\fB\-g\fR/\fB\-\-gui\fR
フラグが指定されている場合に、
\fBgit-mergetool\fR(1)
が使用するマージツールを制御します。以下のリストは、有効な組み込み値を示しています。 その他の値はカスタムマージツールとして扱われ、対応する mergetool\&.<guitool>\&.cmd 変数が定義されている必要があります。
.PP
\fBaraxis\fR
.RS 4
Use Araxis Merge (requires a graphical session)
.RE
.PP
\fBbc\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBbc3\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBbc4\fR
.RS 4
Use Beyond Compare (requires a graphical session)
.RE
.PP
\fBcodecompare\fR
.RS 4
Use Code Compare (requires a graphical session)
.RE
.PP
\fBdeltawalker\fR
.RS 4
Use DeltaWalker (requires a graphical session)
.RE
.PP
\fBdiffmerge\fR
.RS 4
Use DiffMerge (requires a graphical session)
.RE
.PP
\fBdiffuse\fR
.RS 4
Use Diffuse (requires a graphical session)
.RE
.PP
\fBecmerge\fR
.RS 4
Use ECMerge (requires a graphical session)
.RE
.PP
\fBemerge\fR
.RS 4
Use Emacs\*(Aq Emerge
.RE
.PP
\fBexamdiff\fR
.RS 4
Use ExamDiff Pro (requires a graphical session)
.RE
.PP
\fBguiffy\fR
.RS 4
Use Guiffy\(cqs Diff Tool (requires a graphical session)
.RE
.PP
\fBgvimdiff\fR
.RS 4
Use gVim (requires a graphical session) with a custom layout (see
\fBgit help mergetool\fR\*(Aqs
\fBBACKEND SPECIFIC HINTS\fR
section)
.RE
.PP
\fBgvimdiff1\fR
.RS 4
Use gVim (requires a graphical session) with a 2 panes layout (LOCAL and REMOTE)
.RE
.PP
\fBgvimdiff2\fR
.RS 4
Use gVim (requires a graphical session) with a 3 panes layout (LOCAL, MERGED and REMOTE)
.RE
.PP
\fBgvimdiff3\fR
.RS 4
Use gVim (requires a graphical session) where only the MERGED file is shown
.RE
.PP
\fBkdiff3\fR
.RS 4
Use KDiff3 (requires a graphical session)
.RE
.PP
\fBmeld\fR
.RS 4
Use Meld (requires a graphical session) with optional
\fBauto merge\fR
(see
\fBgit help mergetool\fR\*(Aqs
\fBCONFIGURATION\fR
section)
.RE
.PP
\fBnvimdiff\fR
.RS 4
Use Neovim with a custom layout (see
\fBgit help mergetool\fR\*(Aqs
\fBBACKEND SPECIFIC HINTS\fR
section)
.RE
.PP
\fBnvimdiff1\fR
.RS 4
Use Neovim with a 2 panes layout (LOCAL and REMOTE)
.RE
.PP
\fBnvimdiff2\fR
.RS 4
Use Neovim with a 3 panes layout (LOCAL, MERGED and REMOTE)
.RE
.PP
\fBnvimdiff3\fR
.RS 4
Use Neovim where only the MERGED file is shown
.RE
.PP
\fBopendiff\fR
.RS 4
Use FileMerge (requires a graphical session)
.RE
.PP
\fBp4merge\fR
.RS 4
Use HelixCore P4Merge (requires a graphical session)
.RE
.PP
\fBsmerge\fR
.RS 4
Use Sublime Merge (requires a graphical session)
.RE
.PP
\fBtkdiff\fR
.RS 4
Use TkDiff (requires a graphical session)
.RE
.PP
\fBtortoisemerge\fR
.RS 4
Use TortoiseMerge (requires a graphical session)
.RE
.PP
\fBvimdiff\fR
.RS 4
Use Vim with a custom layout (see
\fBgit help mergetool\fR\*(Aqs
\fBBACKEND SPECIFIC HINTS\fR
section)
.RE
.PP
\fBvimdiff1\fR
.RS 4
Use Vim with a 2 panes layout (LOCAL and REMOTE)
.RE
.PP
\fBvimdiff2\fR
.RS 4
Use Vim with a 3 panes layout (LOCAL, MERGED and REMOTE)
.RE
.PP
\fBvimdiff3\fR
.RS 4
Use Vim where only the MERGED file is shown
.RE
.PP
\fBwinmerge\fR
.RS 4
Use WinMerge (requires a graphical session)
.RE
.PP
\fBxxdiff\fR
.RS 4
Use xxdiff (requires a graphical session)
.RE
.RE
.PP
merge\&.verbosity
.RS 4
再帰的マージ戦略によって示される出力の量を制御します。 レベル0は、競合が検出された場合の最終エラーメッセージ以外は何も出力しません。 レベル1は競合のみを出力し、レベル2は競合とファイル変更を出力します。 レベル5以上はデバッグ情報を出力します。 デフォルトはレベル2です。
\fBGIT_MERGE_VERBOSITY\fR
環境変数でオーバーライドできます。
.RE
.PP
merge\&.<driver>\&.name
.RS 4
カスタムの低レベルマージドライバーの人間が読める名前を定義します。 詳細については、
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
merge\&.<driver>\&.driver
.RS 4
カスタムの低レベルのマージドライバーを実装するコマンドを定義します。 詳細については、
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
merge\&.<driver>\&.recursive
.RS 4
共通の祖先間で内部マージを実行するときに使用される低レベルのマージドライバーに名前を付けます。 詳細については、
\fBgitattributes\fR(5)
を参照してください。
.RE
.PP
mergetool\&.<tool>\&.path
.RS 4
指定のツール(<tool>)のパスを上書きします。 これは、ツールがPATH上にない場合に役立ちます。
.RE
.PP
mergetool\&.<tool>\&.cmd
.RS 4
指定のマージツール(<tool>)を呼び出すコマンドを指定します。指定されたコマンドは、次の変数を使用してシェルで評価されます:
\fBBASE\fR
は、マージされるファイルの共通ベースを含む一時ファイルの名前です(使用可能な場合)。
\fBLOCAL\fR
は、現在のブランチのファイルの内容を含む一時ファイルの名前です。
\fBREMOTE\fR
は、マージされるブランチのファイルの内容を含む一時ファイルの名前です。
\fBMERGED\fR
は、マージツールが正常なマージの結果を書き込むファイルの名前が含まれています。
.RE
.PP
mergetool\&.<tool>\&.hideResolved
.RS 4
ユーザーが特定のツール(<tool>)のグローバルな
\fBmergetool\&.hideResolved\fR
値をオーバーライドできるようにします。 詳細については、
\fBmergetool\&.hideResolved\fR
を参照してください。
.RE
.PP
mergetool\&.<tool>\&.trustExitCode
.RS 4
カスタムマージコマンドの場合、マージコマンドの終了コードを使用してマージが成功したかどうかを判断できるかどうかを指定します。 これがtrueで無い場合、マージターゲットファイルのタイムスタンプがチェックされ、ファイルが更新されている場合はマージが成功したと見なされます。そうでない場合、ユーザーはマージの成功を示すように求められます。
.RE
.PP
mergetool\&.meld\&.hasOutput
.RS 4
古いバージョンの
\fBmeld\fR
は
\fB\-\-output\fR
オプションをサポートしていません。 Gitは、
\fBmeld \-\-help\fR
の出力を調べることで、
\fBmeld\fR
が
\fB\-\-output\fR
をサポートしているかどうかを検出しようとします。
\fBmergetool\&.meld\&.hasOutput\fR
を設定すると、Gitはこれらのチェックをスキップし、代わりに設定された値を使用します。
\fBmergetool\&.meld\&.hasOutput\fR
を
\fBtrue\fR
に設定すると、Gitは無条件に
\fB\-\-output\fR
オプションを使用するようになり、
\fBfalse\fR
は
\fB\-\-output\fR
の使用を回避します。
.RE
.PP
mergetool\&.meld\&.useAutoMerge
.RS 4
meld は
\fB\-\-auto\-merge\fR
が指定されると、競合しないすべての部分を自動的にマージし、競合する部分を強調表示して、ユーザーの決定を待ちます。
\fBmergetool\&.meld\&.useAutoMerge\fR
を`true`に設定すると、Gitは
\fB\-\-auto\-merge\fR
オプションを
\fBmeld\fR
で無条件に使用するようになります。 この値を
\fBauto\fR
に設定すると、gitは
\fB\-\-auto\-merge\fR
がサポートされているかどうかを検出し、使用可能な場合にのみ
\fB\-\-auto\-merge\fR
を使用します。
\fBfalse\fR
の値はデフォルト値で、` \-\-auto\-merge` の使用を完全に回避します。
.RE
.PP
mergetool\&.vimdiff\&.layout
.RS 4
vimdiff バックエンドはこの変数を使用して、分割されたウィンドウがどのように見えるかを制御します。 マージ・ツールとして Neovim(\fBnvim\fR) または gVim(\fBgvim\fR) を使用している場合でも適用されます。 詳細については、\fBgit-mergetool\fR(1)
の「BACKEND SPECIFIC HINTS」セクションを参照してください。
.RE
.PP
mergetool\&.hideResolved
.RS 4
マージ処理中、Gitは可能な限り多くの競合を自動的に解決し、解決できない競合の周りに競合マーカーを含ませた
\fBMERGED\fR
ファイルを書き込みます。 「LOCAL」と「REMOTE」は通常、Gitの競合解決前のファイルのバージョンを表します。 この設定により、「LOCAL」と「REMOTE」が上書きされ、未解決の競合のみがマージツールに表示されます。
\fBmergetool\&.<tool>\&.hideResolved\fR
構成変数を介してツールごとに構成できます。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
mergetool\&.keepBackup
.RS 4
マージを実行した後、競合マーカーを含む元のファイルを、拡張子
\fB\&.orig\fR
のファイルとして保存できます。 この変数が
\fBfalse\fR
に設定されている場合、このファイルは保存されません。 デフォルトは
\fBtrue\fR
です(つまり、バックアップファイルを保持します)。
.RE
.PP
mergetool\&.keepTemporaries
.RS 4
カスタムマージツールを呼び出すとき、Gitは一時ファイルの組をツールに渡します。 ツールがエラーを返し、この変数が
\fBtrue\fR
に設定されている場合、これらの一時ファイルは保持されます。それ以外の場合、ツールの終了後に削除されます。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
mergetool\&.writeToTemp
.RS 4
Gitは、デフォルトで、競合するファイルの一時的な 「BASE」バージョンと「LOCAL」バージョンと「REMOTE」バージョンをワークツリーに書き込みます。
\fBtrue\fR
に設定すると、Gitはこれらのファイルに一時ディレクトリを使用しようとします。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
mergetool\&.prompt
.RS 4
マージ解決プログラムを呼び出す前にプロンプトを表示します。
.RE
.PP
notes\&.mergeStrategy
.RS 4
ノートの競合を解決するときにデフォルトで選択するマージ戦略。
\fBmanual\fR
、` ours`、
\fBtheirs\fR、` union` 、\fBcat_sort_uniq\fR
のいずれかである必要があります。 デフォルトは
\fBmanual\fR
です。 各戦略の詳細については、
\fBgit-notes\fR(1)
の「NOTES MERGE STRATEGIES」セクションを参照してください。
.sp
この設定は、
\fB\-\-strategy\fR
オプションを
\fBgit-notes\fR(1)
に渡すことでオーバーライドできます。
.RE
.PP
notes\&.<name>\&.mergeStrategy
.RS 4
\fBrefs/notes/<name>\fR
にノートをマージするときに、どのマージ戦略を選択するか。 これは、より一般的な
\fBnotes\&.mergeStrategy\fR
をオーバーライドします。 利用可能な戦略の詳細については、
\fBgit-notes\fR(1)
の「NOTES MERGE STRATEGIES」セクションを参照してください。
.RE
.PP
notes\&.displayRef
.RS 4
\fBgit log\fR
系のコマンドでコミット・メッセージを表示する際に、
\fBcore\&.notesRef\fR
や
\fBGIT_NOTES_REF\fR
で設定したデフォルトに加えて、どのref (グロブ、または複数回指定されている場合は複数ref)からノートを読み込むかを指定します。
.sp
この設定は、
\fBGIT_NOTES_DISPLAY_REF\fR
環境変数でオーバーライドでき、環境変数はコロンで区切られたrefまたはグロブ(glob)のリストである必要があります。
.sp
存在しないrefsに対しては警告が発行されますが、どのrefsにもマッチしないグロブは黙って無視されます。
.sp
この設定は、コマンドの
\fBgit log\fR
系の
\fB\-\-no\-notes\fR
オプション、またはこれらのコマンドで受け入れられる
\fB\-\-notes=<ref>\fR
オプションによって無効にすることができます。
.sp
\fBcore\&.notesRef\fR
の有効な値(GIT_NOTES_REFによってオーバーライドされる可能性があります)も、表示されるrefのリストに暗黙的に追加されます。
.RE
.PP
notes\&.rewrite\&.<command>
.RS 4
<command> (現在は
\fBamend\fR
または
\fBrebase\fR)でコミットを書き換え、 そして、 この変数が
\fBfalse\fR
に設定されている場合、git はノートを元のコミットから書き換えられたコミットにコピーしません。 デフォルトは
\fBtrue\fR
です。 下記
\fBnotes\&.rewriteRef\fR
も参照してください。
.sp
この設定は、
\fBGIT_NOTES_REWRITE_REF\fR
環境変数でオーバーライドでき、環境変数はコロンで区切られたrefまたはグロブ(glob)のリストである必要があります。
.RE
.PP
notes\&.rewriteMode
.RS 4
書き換え時にノートをコピーする場合(\fBnotes\&.rewrite\&.<command>\fR
オプション参照)、ターゲットコミットにすでにノートがある場合の対処方法を決定します。
\fBoverwrite\fR
、
\fBconcatenate\fR
、
\fBcat_sort_uniq\fR
、
\fBignore\fR
のいずれかである必要があります。 デフォルトは
\fBconcatenate\fR
です。
.sp
この設定は、
\fBGIT_NOTES_REWRITE_MODE\fR
環境変数でオーバーライドできます。
.RE
.PP
notes\&.rewriteRef
.RS 4
書き換え中にノートをコピーする場合は、ノートをコピーする(完全修飾された)refを指定します。 グロブと見なしたら、マッチするすべてのrefのノートがコピーされます。 この構成を複数回指定することもできます。
.sp
デフォルト値はありません。 ノートの書き換えを有効にするには、この変数を構成する必要があります。 デフォルトのコミットノートの書き換えを有効にするには、これを
\fBrefs/notes/commits\fR
に設定します。
.sp
\fBGIT_NOTES_REWRITE_REF\fR
環境変数でオーバーライドできます。 その形式の詳細については、上記
\fBnotes\&.rewrite\&.<command>\fR
を参照してください。
.RE
.PP
pack\&.window
.RS 4
コマンドラインでウィンドウサイズが指定されていない場合に
\fBgit-pack-objects\fR(1)
によって使用されるウィンドウのサイズ。デフォルトは10です。
.RE
.PP
pack\&.depth
.RS 4
コマンドラインで最大深度が指定されていない場合に
\fBgit-pack-objects\fR(1)
によって使用される最大デルタ深度。デフォルトは50です。最大値は4095です。
.RE
.PP
pack\&.windowMemory
.RS 4
コマンドラインで制限が指定されていない場合に、パックウィンドウメモリの
\fBgit-pack-objects\fR(1)
の各スレッドで消費されるメモリの最大サイズ。値には、「k」または「m」または「g」の接尾辞を付けることができます。未構成のまま(または明示的に0に設定する)にした場合、制限はありません。
.RE
.PP
pack\&.compression
.RS 4
パックファイル内のオブジェクトの圧縮レベルを示す整数 \-1〜9。\-1はzlibのデフォルトです。0は圧縮がないことを意味し、1〜9はさまざまな速度とサイズのトレードオフであり、9が最も低速です。設定されていない場合のデフォルトは core\&.compression です。 core\&.compression も設定されていない場合、デフォルトは \-1 になります。これは、「速度と圧縮の間のデフォルトの妥協点(現在はレベル6と同等)」であるzlibのデフォルトです。
.sp
注意: 圧縮レベルを変更しても、既存のすべてのオブジェクトが自動的に再圧縮されるわけではないことに注意してください。
\fB\-F\fR
オプションを
\fBgit-repack\fR(1)
に渡すことで、強制的に再圧縮できます。
.RE
.PP
pack\&.allowPackReuse
.RS 4
trueの場合、かつ、到達可能性ビットマップ(reachability bitmaps)が有効になっている場合、pack\-objectsはビットマップ化されたパックファイルの一部をそのままで送信しようとします。これにより、フェッチを提供するためのメモリとCPUの使用量を減らすことができますが、送信するパックが少し大きくなる可能性があります。デフォルトはtrueです。
.RE
.PP
pack\&.island
.RS 4
デルタアイランド(delta islands)のセットを構成する拡張正規表現。詳細については、
\fBgit-pack-objects\fR(1)
の「DELTA ISLANDS」を参照してください。
.RE
.PP
pack\&.islandCore
.RS 4
オブジェクトを最初にパックする島名(island name)を指定します。 これにより、1つのパックの前に一種の疑似パックが作成されるため、指定の島のオブジェクトを、これらのオブジェクトを要求するユーザーに提供する必要のあるパックにコピーする速度が速くなることが期待されます。実際には、これは、指定された島が、リポジトリで最も一般的に複製される島に対応している可能性が高いことを意味します。
\fBgit-pack-objects\fR(1)
の「DELTA ISLANDS」も参照してください。
.RE
.PP
pack\&.deltaCacheSize
.RS 4
デルタをパックに書き出す前に、
\fBgit-pack-objects\fR(1)
でデルタをキャッシュするために使用されるバイト単位の最大メモリ。すべてのオブジェクトに最適なものが見つけたあとで、このキャッシュがあれば、最終的なデルタ結果を再計算する必要がないため、オブジェクトの書き込みフェーズを高速化できます。そのために使用されます。ただし、メモリが不足しているマシンで大規模なリポジトリを再パックして、特にこのキャッシュがシステムをスワップに追いやる場合、これによって悪影響を受ける可能性があります。値0は、制限がないことを意味します。このキャッシュを事実上無効にするために、最小サイズの1バイトを使用できます。デフォルトは256MiBです。
.RE
.PP
pack\&.deltaCacheLimit
.RS 4
\fBgit-pack-objects\fR(1)
でキャッシュされるデルタの最大サイズ。すべてのオブジェクトに最適なものが見つかった後、このキャッシュがあれば、最終的なデルタ結果を再計算する必要がないため、オブジェクトの書き込みフェーズを高速化します。そのために使用されます。デフォルトは1000です。最大値は65535です。
.RE
.PP
pack\&.threads
.RS 4
最適なデルタマッチングを検索するときに生成するスレッドの数を指定します。このためには
\fBgit-pack-objects\fR(1)をpthreadでコンパイルする必要があります。そうしないと、このオプションは無視され、警告が表示されます。 これは、マルチプロセッサマシンでのパッキング時間を短縮することを目的としています。ただし、デルタ検索ウィンドウに必要なメモリ量は、スレッド数で乗算されます。0を指定すると、GitはCPUの数を自動検出し、それに応じてスレッドの数を設定します。
.RE
.PP
pack\&.indexVersion
.RS 4
デフォルトのパックインデックスバージョンを指定します。有効な値は、1\&.5\&.2より前のバージョンで使用されていたレガシーパックインデックスの場合は1、4GBを超えるパックの機能と破損したパックの再パックに対する適切な保護を備えた新しいパックインデックスの場合は2です。バージョン2がデフォルトです。注意: 対応するパックが2GBを超える場合は常にバージョン2が適用され、この構成オプションは無視されることに注意してください。
.sp
バージョン2の
\fB*\&.idx\fR
ファイルを理解しない古いGitを使用している場合は、
\fB*\&.pack\fR
ファイルと対応する
\fB*\&.idx\fR
ファイルの両方を反対側からコピーする非ネイティブプロトコル(例:http)を介してクローンを作成またはフェッチすると、古いバージョンのGitではアクセスできないリポジトリが提供される場合があります。けれども、
\fB*\&.pack\fR
ファイルが2GBより小さい場合は、 *\&.pack に
\fBgit-index-pack\fR(1)
を使用して、
\fB*\&.idx\fR
ファイルを再生成できます。
.RE
.PP
pack\&.packSizeLimit
.RS 4
パックの最大サイズ。この設定は、再パック時にファイルへパッキングするときのみ影響します。つまり、 git:// プロトコルは影響を受けません。
\fBgit-repack\fR(1)
の
\fB\-\-max\-pack\-size\fR
オプションでオーバーライドできます。この制限に達すると、複数のパックファイルが作成されます。
.sp
注意: このオプションが役立つことはめったになく、(Gitはパックにまたがるデルタを保存しないため、)ディスク上の合計サイズが大きくなり、実行時のパフォーマンスが低下する可能性があることに注意してください(複数のパック内のオブジェクトルックアップは単一のパックで行うよりも遅く、到達可能性ビットマップなどの最適化は複数パックに対応できません)。
.sp
(たとえば、ファイルシステムが大きいファイルをサポートしていないため、)あなたが小さいパックファイルを使用してGitをバリバリと使う必要がある場合、このオプションが役立かもしれません。ただし、限られたサイズをサポートするメディア(たとえば、リポジトリ全体を保存できないリムーバブルメディア)を介してパックファイルを送信することが目標である場合は、単一の大きなパックファイルを作成し、一般的なマルチボリュームアーカイブツール(例えば Unix
\fBsplit\fR
)を使用して分割する方がよいでしょう。
.sp
許可される最小サイズは1MiBに制限されています。デフォルトの大きさは無制限です。
\fBk\fR
または
\fBm\fR
または
\fBg\fR
の一般的な単位接尾辞がサポートされています。
.RE
.PP
pack\&.useBitmaps
.RS 4
trueの場合、(たとえば、フェッチ作業中のサーバー側で、)gitはstdoutにパックするときに(可能な場合は、)パックビットマップを使用します。デフォルトはtrueです。パックビットマップをデバッグしている場合を除いて、通常、これをオフにする必要はありません。
.RE
.PP
pack\&.useSparse
.RS 4
trueの場合、 gitは
\fBgit pack\-objects\fR
で
\fB\-\-revs\fR
オプションが存在する場合、デフォルトで
\fB\-\-sparse\fR
オプションを使用します。このアルゴリズムは、新しいオブジェクトを導入するパスに現れるツリーのみをウォークします。これは、小さな変更を送信するパックを計算するときに、パフォーマンスに大きなメリットをもたらす可能性があります。ただし、含まれているコミットに特定の種類の直接名前変更(direct renames)が含まれている場合は、パックファイルに追加のオブジェクトが追加される可能性があります。 デフォルトは
\fBtrue\fR
です。
.RE
.PP
pack\&.preferBitmapTips
.RS 4
ビットマップを受け取るコミットを選択するときは、「選択ウィンドウ」(selection window)の他のコミットよりも、この構成の任意の値の接尾辞である参照の先端にあるコミットを優先します。
.sp
注意: この設定を
\fBrefs/foo\fR
に設定しても、
\fBrefs/foo/bar\fR
と
\fBrefs/foo/baz\fR
の先端のコミットが必ずしも選択されるわけではないことに注意してください。 これは、可変長の一連のウィンドウ内からビットマップに対してコミットが選択されるためです。
.sp
この構成の任意の値の接尾辞である参照の先端にあるコミットがウィンドウに表示された場合、そのウィンドウ内の他のコミットよりも即座に優先されます。
.RE
.PP
pack\&.writeBitmaps (非推奨)
.RS 4
これは、
\fBrepack\&.writeBitmaps\fR
の非推奨の同義語です。
.RE
.PP
pack\&.writeBitmapHashCache
.RS 4
trueの場合、gitはビットマップインデックスに
\fBhash cache\fR
セクションを含めます(記述されている場合)。 このキャッシュは、gitのデルタヒューリスティックを供給するために使用でき、ビットマップオブジェクトと非ビットマップオブジェクト間のデルタを改善する可能性があります(たとえば、古いビットマップパックと最後のgc以降にプッシュされたオブジェクト間のフェッチを提供する場合)。欠点は、ディスクスペースのオブジェクトごとに4バイトを消費することです。 デフォルトはtrueです。
.sp
マルチパックの到達可能性ビットマップを書き込む場合、新しい名前ハッシュは計算されません。 代わりに、既存のビットマップに保存されている名前ハッシュは、新しいビットマップを書き込むときに適切な場所に移動(permute)させられます。
.RE
.PP
pack\&.writeBitmapLookupTable
.RS 4
true の場合、Git はビットマップ・インデックスに
\fBlookup table\fR
(検出表)セクションを含めます (記述されている場合)。 この表(table)は、個々のビットマップの読み込みをできるだけ遅らせるために使用されます。 これは、比較的大きなビットマップ・インデックスを持つリポジトリで役立ちます。 デフォルトは false です。
.RE
.PP
pack\&.writeReverseIndex
.RS 4
trueの場合、gitは、
\fBgit-fast-import\fR(1)
と バルク・チェックイン・メカニズムを除く、すべての場所に書き込む新しいパック・ファイルごとに対応する
\fB\&.rev\fR
ファイル(\fBgitformat-pack\fR(5)
参照)を書き込みます。デフォルトはfalseです。
.RE
.PP
pager\&.<cmd>
.RS 4
値がブール値の場合、ttyへの書き込み時に特定のGitサブコマンドの出力のページ付けをオンまたはオフにします。それ以外の場合は、
\fBpager\&.<cmd>\fR
の値で指定されたページャーを使用してサブコマンドのページ付けをオンにします。コマンドラインで
\fB\-\-paginate\fR
または
\fB\-\-no\-pager\fR
が指定されている場合、このオプションよりも優先されます。すべてのコマンドのページ付けを無効にするには、
\fBcore\&.pager\fR
または
\fBGIT_PAGER\fR
を
\fBcat\fR
に設定します。
.RE
.PP
pretty\&.<name>
.RS 4
\fBgit-log\fR(1)で 指定されている、
\fB\-\-pretty=\fR
書式文字列のエイリアス。ここで定義されたエイリアスは、組み込みのpretty書式と同じように使用できます。 たとえば、
\fBgit config pretty\&.changelog "format:* %H %s"\fR
を実行すると、
\fBgit log \-\-pretty=changelog\fR
の呼び出しは
\fBgit log "\-\-pretty=format:* %H %s"\fR
を実行するのと同じになります。注意: 組み込みフォーマットと同じ名前のエイリアスは黙って無視されることに注意してください。
.RE
.PP
protocol\&.allow
.RS 4
設定されている場合は、ポリシーを明示的に持たないすべてのプロトコルにユーザー定義のデフォルトポリシーを指定します(\fBprotocol\&.<name>\&.allow\fR)。デフォルトでは、設定されていない場合、既知の安全なプロトコル(http、https、git、ssh、file)のデフォルトポリシーは「always」、既知の危険なプロトコル(ext)のデフォルトポリシーは「never」、その他の全てのプロトコルのデフォルトのポリシーは「user」です。サポートされているポリシーは以下です:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBalways\fR
\- プロトコルは常に使用できます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnever\fR
\- プロトコルを使用することはできません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBuser\fR
\- プロトコルは、
\fBGIT_PROTOCOL_FROM_USER\fR
が設定されていないか、値が
\fB1\fR
の場合にのみ使用できます。このポリシーは、プロトコルをユーザーが直接使用できるようにしたいが、ユーザー入力なしの clone/fetch/push を実行するコマンドでは使用したくない場合(たとえば再帰的なsubmoduleの初期化の場合)、設定しなければなりません。
.RE
.RE
.PP
protocol\&.<name>\&.allow
.RS 4
clone/fetch/push コマンドでプロトコル
\fB<name>\fR
が使用するポリシーを設定します。 使用可能なポリシーについては、上記の「protocol\&.allow」を参照してください。
.sp
現在gitで使用されているプロトコル名はイカのとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBfile\fR: 任意のローカルファイルベースのパス(
\fBfile://\fR
URL または ローカルパス を含む)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBgit\fR: 直接TCP接続(または構成されている場合はプロキシ)を介した匿名のgitプロトコル
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBssh\fR: sshプロトコルの上で動くgitプロトコル(
\fBhost:path\fR
書式や
\fBssh://\fR
等を含む)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBhttp\fR: httpプロトコルの上で動くgitプロトコル。「スマートhttp」と「ダムhttp」の両方です。両方を構成する場合は、個別に構成する必要があります。注意:これには
\fBhttps\fR
は含まれないことに注意してください。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
外部ヘルパーはそれらのプロトコルによる名前が付けられます(たとえば、
\fBhg\fR
というプロトコルを指定したら
\fBgit\-remote\-hg\fR
ヘルパーを許可します)
.RE
.RE
.PP
protocol\&.version
.RS 4
設定されている場合、クライアントは指定されたプロトコルバージョンを使用してサーバーとの通信を試みます。サーバーがサポートしていない場合、通信はバージョン0にフォールバックします。設定されていない場合、デフォルトは「2」です。 サポートされているバージョンは以下です:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB0\fR
\- オリジナル・ワイヤー・プロトコル
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB1\fR
\- サーバーからの初期応答にバージョン文字列が追加されたオリジナル・ワイヤー・プロトコル。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB2\fR
\- ワイヤー・プロトコル・バージョン 2。\fBgitprotocol-v2\fR(5)
参照。
.RE
.RE
.PP
pull\&.ff
.RS 4
デフォルトでは、Gitは、現在のコミットの子孫であるコミットをマージするときに、追加のマージコミットを作成しません。 代わりに、現在のブランチの先端が早送り(fast\-forward)されます。
\fBfalse\fR
に設定すると、この変数はGitにそのような場合に追加のマージコミットを作成するように指示します(コマンドラインから
\fB\-\-no\-ff\fR
オプションを指定するのと同じです)。
\fBonly\fR
に設定すると、そのような早送り(fast\-forward)マージのみが許可されます(コマンドラインから
\fB\-\-ff\-only\fR
オプションを指定するのと同じです)。 この設定は、プル時に
\fBmerge\&.ff\fR
をオーバーライドします。
.RE
.PP
pull\&.rebase
.RS 4
trueの場合、
\fBgit pull\fR
の実行時にデフォルトのリモートからデフォルトのブランチをマージするのではなく、フェッチされたブランチの上にブランチをリベースします。 ブランチごとにこれを設定するには、
\fBbranch\&.<name>\&.rebase\fR
を参照してください。
.sp
\fBmerges\fR
(または単に
\fBm\fR
)の場合、
\fB\-\-rebase\-merges\fR
オプションを
\fBgit rebase\fR
に渡して、ローカルマージコミットがリベースに含まれるようにします(詳細については、
\fBgit-rebase\fR(1)
を参照してください)。
.sp
値が
\fBinteractive\fR
(または単に
\fBi\fR)の場合、リベースは対話モードで実行されます。
.sp
\fB注意\fR: これはおそらく危険な操作です。 あなたが影響を理解していない限り、使用しないでください (詳細については、
\fBgit-rebase\fR(1)
を参照してください)。
.RE
.PP
pull\&.octopus
.RS 4
複数のブランチを一度にプルするときに使用するデフォルトのマージ戦略。
.RE
.PP
pull\&.twohead
.RS 4
単一のブランチをプルするときに使用するデフォルトのマージ戦略。
.RE
.PP
push\&.autoSetupRemote
.RS 4
\fBtrue\fR
に設定すると、現在のブランチの上流追跡(upstream tracking)が存在しない場合、デフォルトのpushで
\fB\-\-set\-upstream\fR
を想定します。 このオプションは、 push\&.default オプションの
\fBsimple\fR
や
\fBupstream\fR
や
\fBcurrent\fR
で有効になります。 (\fBpush\&.default=current\fR
の振る舞いのように、)デフォルトで新しいブランチをデフォルトのremoteにプッシュしたい場合に便利で、これは、あなたが上流追跡(upstream tracking)も設定したい場合にも便利です。 このオプションの恩恵を受ける可能性が最も高いワークフローは、すべてのブランチがremoteで同じ名前を持つことが期待される「単純な」中央ワークフローです。
.RE
.PP
push\&.default
.RS 4
(コマンドライン、構成、またはその他の場所で、)refspecが指定されていない場合に
\fBgit push\fR
が実行するアクションを定義します。 特定の作業フローに適するさまざまな値があります。 たとえば、純粋に中央のワークフロー(つまり、フェッチ元がプッシュ先と等しい)では、
\fBupstream\fR
がおそらく必要なものです。 可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnothing\fR
\- refspecが指定されていない限り、何もプッシュ(エラー出力)しないでください。 これは主に、常に明示的にすることで間違いを避けたい人を対象としています。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBcurrent\fR
\- 現在のブランチをプッシュして、受信側で同一の名前のブランチを更新します。 中央作業フローと非中央作業フローの両方で機能します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBupstream\fR
\- 現在のブランチを、通常その変更が現在のブランチに統合されるブランチにプッシュバックします(これを
\fB@{upstream}\fR
と呼びます)。 このモードは、通常プルするのと同じリポジトリ(つまり中央ワークフロー)にプッシュする場合にのみ意味があります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtracking\fR
\- これは
\fBupstream\fR
の非推奨の同義語です。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBsimple\fR
\- リモートで同一の名前の現在のブランチをプッシュします。
.sp
あなたが一元化された作業フロー(あなたのプル元の同一のリポジトリにプッシュする、通常は
\fBorigin\fR
)で作業している場合は、あなたは同一の名前でアップストリームブランチを構成する必要があります。
.sp
このモードはGit2\&.0以降のデフォルトであり、初心者に適した最も安全なオプションです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmatching\fR
\- 送信側受信側両方で同一の名前のすべてのブランチをプッシュします。 これにより、プッシュするリポジトリは、プッシュされるブランチのセットを記憶するようになります(たとえば、常に「maint」と「master」をプッシュし、他のブランチがない場合、プッシュするリポジトリには、これら2つのブランチがあり、ローカルの「maint」と「master」がそこにプッシュされます)。
.sp
このモードを効果的に使用するには、
\fBgit push\fR
を実行する前に、あなたがプッシュしたい「すべてのブランチ」がプッシュされる準備ができていることを確認する必要があります。このモードの要点は、すべてのブランチを一度にプッシュできるようにすることです。通常、1つのブランチのみで作業を終了して結果をプッシュする場合、他のブランチは未完了ですので、このモードは適していません。 また、このモードは、共有中央リポジトリにプッシュするのには適していません。他の人がそこに新しいブランチを追加したり、コントロール外の既存のブランチの先端を更新したりする可能性があるためです。
.sp
これは以前はデフォルトでしたが、Git 2\&.0以降ではそうではありません(\fBsimple\fR
が新しいデフォルトです)。
.RE
.RE
.PP
push\&.followTags
.RS 4
trueに設定されている場合、デフォルトで
\fB\-\-follow\-tags\fR
オプションを有効にします。
\fB\-\-no\-follow\-tags\fR
を指定することにより、プッシュ時にこの構成をオーバーライドできます。
.RE
.PP
push\&.gpgSign
.RS 4
ブール値、または文字列
\fBif\-asked\fR
に設定できます。 true値を指定すると、
\fB\-\-signed\fR
linkgit:git\-push [1]に渡されたかのように、すべてのプッシュがGPG署名されます。 文字列
\fBif\-asked\fR
を指定し、サーバーがサポートしている場合は、
\fB\-\-signed=if\-asked\fR
が
\fBgit push\fR
に渡されたかのように、プッシュで署名されます。 誤った値は、優先度の低い構成ファイルの値を上書きする可能性があります。 明示的なコマンドラインオプションは、常にこの設定オプションを上書きします。
.RE
.PP
push\&.pushOption
.RS 4
コマンドラインから
\fB\-\-push\-option=<option>\fR
引数が指定されていない場合、
\fBgit push\fR
はこの変数の各<value> が
\fB\-\-push\-option=<value>\fR
として指定されているかのように動作します。
.sp
これは複数値の変数であり、優先度の高い構成ファイル(リポジトリ内の
\fB\&.git/config\fR
など)で空の値を使用して、優先度の低い構成ファイル(\fB$HOME/\&.gitconfig\fR
など)から継承された値をクリアできます。
.sp
.if n \{\
.RS 4
.\}
.nf
Example:

/etc/gitconfig
  push\&.pushoption = a
  push\&.pushoption = b

~/\&.gitconfig
  push\&.pushoption = c

repo/\&.git/config
  push\&.pushoption =
  push\&.pushoption = b

This will result in only b (a and c are cleared)\&.
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
push\&.recurseSubmodules
.RS 4
プッシュされるリビジョンで使用されるすべてのサブモジュールコミットがリモートト追跡ブランチで利用可能であることを確認します。 値が
\fBcheck\fR
の場合、Gitは、プッシュされるリビジョンで変更されたすべてのサブモジュールコミットが、サブモジュールの少なくとも1つのリモートで使用可能であることを確認します。 コミットが欠落している場合、プッシュは中止(abort)され、ゼロ以外のステータスで終了します。 値が
\fBon\-demand\fR
の場合、プッシュされるリビジョンで変更されたすべてのサブモジュールがプッシュされます。 on\-demandで必要なすべてのリビジョンをプッシュできなかった場合も、中止(abort)され、ゼロ以外のステータスで終了します。 値が
\fBno\fR
の場合、プッシュ時にサブモジュールを無視するデフォルトの動作が保持されます。
\fB\-\-recurse\-submodules=check|on\-demand|no\fR
を指定することにより、プッシュ時にこの構成をオーバーライドできます。 設定されていない場合、
\fBsubmodule\&.recurse\fR
が設定されていない限り、デフォルトで
\fBno\fR
が使用されます(この場合、
\fBtrue\fR
値は
\fBon\-demand\fR
を意味します)。
.RE
.PP
push\&.useForceIfIncludes
.RS 4
「true」に設定すると、コマンドラインで
\fBgit-push\fR(1)
のオプションとして
\fB\-\-force\-if\-includes\fR
を指定するのと同じです。 プッシュ時に
\fB\-\-no\-force\-if\-includes\fR
を追加すると、この構成設定が上書きされます。
.RE
.PP
push\&.negotiate
.RS 4
「true」に設定されている場合は、クライアントとサーバーが共通のコミットを見つけようとするネゴシエーションの段階で送信されるパックファイルのサイズを縮小してみます。 「false」の場合、Gitはサーバーのref広告のみに依存して、共通のコミットを検索します。
.RE
.PP
push\&.useBitmaps
.RS 4
\fBfalse\fR
に設定すると、
\fBpack\&.useBitmaps\fR
が
\fBtrue\fR
であっても
\fBgit push\fR
のビットマップの使用が無効になり、他の git 操作でのビットマップの使用が妨げられません。 デフォルトは
\fBtrue\fR
です。
.RE
.PP
rebase\&.backend
.RS 4
リベースに使用するデフォルトのバックエンド。 可能な選択肢は、「apply」または「merge」です。 将来、mergeバックエンドがapplyバックエンドの残りのすべての機能を取得した場合、この設定は使用されなくなる可能性があります。
.RE
.PP
rebase\&.stat
.RS 4
最後のリベース以降にアップストリームで変更されたもののdiffstatを表示するかどうか。デフォルトではFalseです。
.RE
.PP
rebase\&.autoSquash
.RS 4
trueに設定されている場合、デフォルトで
\fB\-\-autosquash\fR
オプションを有効にします。
.RE
.PP
rebase\&.autoStash
.RS 4
trueに設定すると、操作を開始する前に一時的なstashエントリを自動的に作成し、操作の終了後に適用します。これは、ダーティワークツリーでリベースを実行できることを意味します。ただし、注意して使用してください。リベースが成功した後の最後のstashアプリケーションは、重要な競合を引き起こす可能性があります。このオプションは、
\fBgit-rebase\fR(1)
の
\fB\-\-no\-autostash\fR
および
\fB\-\-autostash\fR
オプションでオーバーライドできます。 デフォルトはfalseです。
.RE
.PP
rebase\&.updateRefs
.RS 4
trueに設定されている場合、デフォルトで
\fB\-\-update\-refs\fR
オプションを有効にします。
.RE
.PP
rebase\&.missingCommitsCheck
.RS 4
「warn」に設定すると、
\fBgit rebase \-i\fR
は、一部のコミットが削除された場合(たとえば、行が削除された場合)に警告を出力しますが、リベースは続行されます。 「error」に設定すると、前記の警告が出力され、リベースが停止(stop)します。
\fBgit rebase \-\-edit\-todo\fR
を使用して、エラーを修正できます。 「ignore」に設定すると、チェックは行われません。 警告やエラーなしにコミットをドロップするには、todoリストの
\fBdrop\fR
コマンドを使用します。 デフォルトは「ignore」です。
.RE
.PP
rebase\&.instructionFormat
.RS 4
\fBgit-log\fR(1)
で指定されている、対話的リベース中にToDoリストに使用される書式文字列。書式では、自動的に長いコミットハッシュが書式の前に付加されます。
.RE
.PP
rebase\&.abbreviateCommands
.RS 4
trueに設定すると、
\fBgit rebase\fR
はtodoリストで省略コマンド名を使用し、以下のようになります:
.sp
.if n \{\
.RS 4
.\}
.nf
        p deadbee The oneline of the commit
        p fa1afe1 The oneline of the next commit
        \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
上記は以下の省略形です:
.sp
.if n \{\
.RS 4
.\}
.nf
        pick deadbee The oneline of the commit
        pick fa1afe1 The oneline of the next commit
        \&.\&.\&.
.fi
.if n \{\
.RE
.\}
.sp
デフォルトではfalseです。
.RE
.PP
rebase\&.rescheduleFailedExec
.RS 4
失敗した
\fBexec\fR
コマンドを自動的に再スケジュールします。 これは、対話モード (または
\fB\-\-exec\fR
オプションが指定されている場合)でのみ意味があります。これは
\fB\-\-reschedule\-failed\-exec\fR
オプションを指定するのと同じです。
.RE
.PP
rebase\&.forkPoint
.RS 4
falseに設定されている場合、デフォルトで
\fB\-\-no\-fork\-point\fR
オプションを設定します。
.RE
.PP
receive\&.advertiseAtomic
.RS 4
デフォルトでは、git\-receive\-packはアトミックプッシュ機能(atomic push capability)をクライアントに公表(advertise)します。この機能を公表したくない場合は、この変数をfalseに設定してください。
.RE
.PP
receive\&.advertisePushOptions
.RS 4
trueに設定すると、git\-receive\-packはプッシュオプション機能(push options capability)をクライアントに公表(advertise)します。デフォルトではFalse。
.RE
.PP
receive\&.autogc
.RS 4
デフォルトでは、git\-pushからデータを受信し、参照を更新した後、git\-receive\-packは
\fBgit\-gc \-\-auto\fR
を実行します。 この変数をfalseに設定することで停止できます。
.RE
.PP
receive\&.certNonceSeed
.RS 4
この変数を文字列に設定すると、
\fBgit receive\-pack\fR
は
\fBgit push \-\-signed\fR
を受け入れ、その文字列を秘密鍵として使用してHMACによって保護された「nonce」を使用して検証します。
.RE
.PP
receive\&.certNonceSlop
.RS 4
\fBgit push \-\-signed\fR
が、同じリポジトリにサービスを提供するreceive\-packによって発行された「nonce」を含むプッシュ証明書をこの数秒以内に送信した場合、証明書で見つかった「nonce」をフックのために
\fBGIT_PUSH_CERT_NONCE\fR
にエクスポートします(receive\-packが送信側に含めるように要求したものの代わりに)。 これにより、
\fBpre\-receive\fR
と
\fBpost\-receive\fR
でのチェックの記述が少し簡単になります。証明書を受け入れるかどうかを決定するために、nonce が何秒後に古くなるかを記録する環境変数
\fBGIT_PUSH_CERT_NONCE_SLOP\fR
をチェックする代わりに、
\fBGIT_PUSH_CERT_NONCE_STATUS\fR
が
\fBOK\fR
であることだけをチェックすることができます。
.RE
.PP
receive\&.fsckObjects
.RS 4
trueに設定されている場合、git\-receive\-packは受信したすべてのオブジェクトをチェックします。 チェックされる内容については、
\fBtransfer\&.fsckObjects\fR
を参照してください。デフォルトはfalseです。設定されていない場合は、代わりに
\fBtransfer\&.fsckObjects\fR
の値が使用されます。
.RE
.PP
receive\&.fsck\&.<msg\-id>
.RS 4
\fBfsck\&.<msg\-id>\fR
のように機能しますが、 linkgit: git\-fsck[1] の代わりに
\fBgit-receive-pack\fR(1)
によって使用されます。詳細については、
\fBfsck\&.<msg\-id>\fR
の文書を参照してください。
.RE
.PP
receive\&.fsck\&.skipList
.RS 4
\fBfsck\&.skipList\fR
のように機能しますが、
\fBgit-fsck\fR(1)
の代わりに
\fBgit-receive-pack\fR(1)
によって使用されます。詳細については、
\fBfsck\&.skipList\fR
の文書を参照してください。
.RE
.PP
receive\&.keepAlive
.RS 4
クライアントからパックを受信した後、パックの処理中に
\fBreceive\-pack\fR
が出力を生成せず(\fB\-\-quiet\fR
が指定されている場合)、一部のネットワークがTCP接続を切断する可能性があります。このオプションを設定すると、
\fBreceive\-pack\fR
はこのフェーズで
\fBreceive\&.keepAlive\fR
秒の間データを送信しない場合、short keepalive packetを送信します。デフォルトは5秒です。キープアライブを完全に無効にするには、0に設定します。
.RE
.PP
receive\&.unpackLimit
.RS 4
プッシュで受信されるオブジェクトの数がこの制限を下回る場合、オブジェクトは緩いオブジェクト(loose object)ファイルに解凍されます。ただし、受信したオブジェクトの数がこの制限以上の場合、受信したパックは、欠落しているデルタベースを追加した後、パックとして保存されます。プッシュからパックを保存すると、特に低速のファイルシステムで、プッシュ操作をより速く完了することができます。 設定されていない場合は、代わりに
\fBtransfer\&.unpackLimit\fR
の値が使用されます。
.RE
.PP
receive\&.maxInputSize
.RS 4
着信パックストリームのサイズがこの制限よりも大きい場合、パックファイルを受け入れる代わりに git\-receive\-pack がエラーになります。0に設定または設定されていない場合、サイズは無制限です。
.RE
.PP
receive\&.denyDeletes
.RS 4
trueに設定すると、git\-receive\-packはrefを削除するrefの更新を拒否します。これを使用して、プッシュによるそのような参照の削除を防ぎます。
.RE
.PP
receive\&.denyDeleteCurrent
.RS 4
trueに設定すると、git\-receive\-packは、非ベアリポジトリの現在チェックアウトされているブランチを削除するrefの更新を拒否します。
.RE
.PP
receive\&.denyCurrentBranch
.RS 4
trueまたは "refuse"(拒否)に設定すると、 git\-receive\-pack は、非ベアリポジトリの現在チェックアウトされているブランチへのrefの更新を拒否します。このようなプッシュは、HEADがインデックスおよび作業ツリーと同期しなくなるため、潜在的に危険です。"warn"(警告)に設定されている場合は、stderrへのそのようなプッシュの警告を出力しますが、プッシュを続行できるようにします。 falseまたは"ignore"(無視)に設定されている場合は、メッセージなしでそのようなプッシュを許可します。 デフォルトは"refuse"です。
.sp
別のオプションは"updateInstead"で、現在のブランチにプッシュすると作業ツリーが更新されます。このオプションは、インタラクティブsshを介して一方の側に簡単にアクセスできない場合に作業ディレクトリを同期することを目的としています(たとえば、ライブWebサイト。つまり作業ディレクトリがクリーンである必要があります)。 このモードは、VM内で開発して、さまざまなオペレーティングシステムでコードをテストおよび修正する場合にも役立ちます。
.sp
デフォルトでは、作業ツリーまたはインデックスにHEADとの違いがある場合、"updateInstead"はプッシュを拒否しますが、
\fBpush\-to\-checkout\fR
フックを使用してこれをカスタマイズできます。
\fBgithooks\fR(5)
を参照してください。
.RE
.PP
receive\&.denyNonFastForwards
.RS 4
trueに設定すると、git\-receive\-packは、fast\-forwardではないrefの更新を拒否します。これを使用して、プッシュが強制されている場合でも、プッシュによるそのような更新を防ぎます。この構成変数は、共有リポジトリを初期化するときに設定されます。
.RE
.PP
receive\&.hideRefs
.RS 4
この変数は
\fBtransfer\&.hideRefs\fR
と同じですが、
\fBreceive\-pack\fR
にのみ適用されます(したがって、プッシュには影響しますが、フェッチには影響しません)。
\fBgit push\fR
によって非表示の参照を更新または削除しようとする試みは拒否されます。
.RE
.PP
receive\&.procReceiveRefs
.RS 4
これは、
\fBreceive\-pack\fR
のコマンドに一致する参照プレフィックスを定義する複数値の変数(multi\-valued variable)です。プレフィックスに一致するコマンドは、内部の
\fBexecute_commands\fR
関数ではなく、外部フック「proc\-receive」によって実行されます。この変数が定義されていない場合、「proc\-receive」フックは使用されず、すべてのコマンドは内部の
\fBexecute_commands\fR
関数によって実行されます。
.sp
たとえば、この変数が "refs/for" に設定されている場合、 "refs/for/master" などの参照にプッシュしても "refs/for/master" という名前の参照は作成・更新されませんが、 "proc\-receive" フックを実行すれば直接プルリクエストを作成・更新できるはずです。
.sp
オプションの修飾子を値の先頭に指定して、特定のアクション(作成(a)、変更(m)、削除(d))のコマンドをフィルター処理できます。
\fB!\fR
を修飾子に含めて、参照プレフィックスエントリを無効にすることができます。 例えば以下のようにできます:
.sp
.if n \{\
.RS 4
.\}
.nf
git config \-\-system \-\-add receive\&.procReceiveRefs ad:refs/heads
git config \-\-system \-\-add receive\&.procReceiveRefs !:refs/heads
.fi
.if n \{\
.RE
.\}
.RE
.PP
receive\&.updateServerInfo
.RS 4
trueに設定すると、git\-pushからデータを受信し、参照を更新した後、git\-receive\-packはgit\-update\-server\-infoを実行します。
.RE
.PP
receive\&.shallowUpdate
.RS 4
trueに設定すると、新しい参照に新しいshallow rootsが必要になったときに \&.git/shallow を更新できます。それ以外の場合、それらの参照は拒否されます。
.RE
.PP
remote\&.pushDefault
.RS 4
デフォルトでプッシュするリモート。 すべてのブランチの
\fBbranch\&.<name>\&.remote\fR
をオーバーライドし、特定のブランチの
\fBbranch\&.<name>\&.pushRemote\fR
によってオーバーライドされます。
.RE
.PP
remote\&.<name>\&.url
.RS 4
リモートリポジトリのURL。
\fBgit-fetch\fR(1)
または
\fBgit-push\fR(1)
を参照してください。
.RE
.PP
remote\&.<name>\&.pushurl
.RS 4
リモートリポジトリのプッシュURL。
\fBgit-push\fR(1)
を参照してください。
.RE
.PP
remote\&.<name>\&.proxy
.RS 4
curl(httpとhttpsとftp)を必要とするリモートの場合、そのリモートに使用するプロキシへのURL。 そのリモートのプロキシを無効にするには、空の文字列に設定します。
.RE
.PP
remote\&.<name>\&.proxyAuthMethod
.RS 4
curl(httpとhttpsとftp)を必要とするリモートの場合、使用中のプロキシ(おそらく
\fBremote\&.<name>\&.proxy\fR
で設定)に対して認証するために使用するメソッド。
\fBhttp\&.proxyAuthMethod\fR
を参照してください。
.RE
.PP
remote\&.<name>\&.fetch
.RS 4
\fBgit-fetch\fR(1)
のデフォルトの「refspec」セット。
\fBgit-fetch\fR(1)
を参照してください。
.RE
.PP
remote\&.<name>\&.push
.RS 4
\fBgit-push\fR(1)
のデフォルトの「refspec」セット。
\fBgit-push\fR(1)
を参照してください。
.RE
.PP
remote\&.<name>\&.mirror
.RS 4
trueの場合、このリモートにプッシュすると、コマンドラインで
\fB\-\-mirror\fR
オプションが指定されたかのように自動的に振る舞います。
.RE
.PP
remote\&.<name>\&.skipDefaultUpdate
.RS 4
trueの場合、
\fBgit-fetch\fR(1)
または
\fBgit-remote\fR(1)
の
\fBupdate\fR
サブコマンドを使用して更新すると、このリモートはデフォルトでスキップされます。
.RE
.PP
remote\&.<name>\&.skipFetchAll
.RS 4
trueの場合、
\fBgit-fetch\fR(1)
または
\fBgit-remote\fR(1)
の
\fBupdate\fR
サブコマンドを使用して更新すると、このリモートはデフォルトでスキップされます。
.RE
.PP
remote\&.<name>\&.receivepack
.RS 4
プッシュ時にリモート側で実行するデフォルトのプログラム。
\fBgit-push\fR(1)
のオプション
\fB\-\-receive\-pack\fR
を参照してください。
.RE
.PP
remote\&.<name>\&.uploadpack
.RS 4
フェッチ時にリモート側で実行するデフォルトのプログラム。
\fBgit-fetch-pack\fR(1)
のオプション
\fB\-\-upload\-pack\fR
を参照してください。
.RE
.PP
remote\&.<name>\&.tagOpt
.RS 4
この値を
\fB\-\-no\-tags\fR
に設定すると、リモート<name>からフェッチするときの自動タグ追跡が無効になります。
\fB\-\-tags\fR
に設定すると、リモートブランチヘッドから到達できない場合でも、リモート<name>からすべてのタグがフェッチされます。 これらのフラグを直接
\fBgit-fetch\fR(1)
に渡すと、この設定を上書きできます。
\fBgit-fetch\fR(1)
のオプション
\fB\-\-tags\fR
および
\fB\-\-no\-tags\fR
を参照してください。
.RE
.PP
remote\&.<name>\&.vcs
.RS 4
これを値 <vcs> と設定すると、Gitは git\-remote\-<vcs> ヘルパーを使用してリモートと対話します。
.RE
.PP
remote\&.<name>\&.prune
.RS 4
trueに設定した時は、デフォルトでこのリモートからフェッチすると、(コマンドラインで
\fB\-\-prune\fR
オプションが指定されているかのように、)リモートに存在しなくなったリモート追跡参照も削除されます。
\fBfetch\&.prune\fR
設定が存在する場合、それをオーバーライドします。
.RE
.PP
remote\&.<name>\&.pruneTags
.RS 4
trueに設定した時、デフォルトでこのリモートからフェッチすると、一般に刈り込み(pruning)が
\fBremote\&.<name>\&.prune\fR
または
\fBfetch\&.prune\fR
または
\fB\-\-prune\fR
を介して、アクティブ化されている場合、リモートに存在しなくなったローカルタグも削除されます。
\fBfetch\&.pruneTags\fR
設定存在する場合それをオーバーライドします。
.sp
\fBremote\&.<name>\&.prune\fR
および
\fBgit-fetch\fR(1)
の「PRUNING」セクションも参照してください。
.RE
.PP
remote\&.<name>\&.promisor
.RS 4
trueに設定すると、このリモートはプロミザー(promisor)オブジェクトをフェッチするために使用されます。
.RE
.PP
remote\&.<name>\&.partialclonefilter
.RS 4
このプロミサー・リモートからフェッチするときに適用されるフィルター。 この値を変更またはクリアした場合、その後のコミットのフェッチにのみ影響します。 ローカル・オブジェクト・データベースに既に存在するコミットの関連オブジェクトをフェッチするには、
\fBgit-fetch\fR(1)
の
\fB\-\-refetch\fR
オプションを使用します。
.RE
.PP
remotes\&.<group>
.RS 4
\fBgit remote update <group>\fR
によってフェッチされるremoteのリスト。
\fBgit-remote\fR(1)
を参照してください。
.RE
.PP
repack\&.useDeltaBaseOffset
.RS 4
デフォルトでは、
\fBgit-repack\fR(1)
はデルタベースオフセットを使用するパックを作成します。 あなたのリポジトリを、バージョン1\&.4\&.4より古いGitと直接、またはhttpなどのバカ(dumb)プロトコルを介して共有する必要がある場合は、このオプションを
\fBfalse\fR
に設定して再パックする必要があります。 ネイティブプロトコルを介した古いバージョンのGitからのアクセスは、このオプションの影響を受けません。
.RE
.PP
repack\&.packKeptObjects
.RS 4
trueに設定すると、
\fBgit repack\fR
が
\fB\-\-pack\-kept\-objects\fR
が渡されたかのように動作します。 詳細については、
\fBgit-repack\fR(1)
を参照してください。 デフォルトは通常
\fBfalse\fR
ですが、ビットマップインデックスが(\fB\-\-write\-bitmap\-index\fR
または
\fBrepack\&.writeBitmaps\fR
のいずれかを介して)書き込まれている場合は
\fBtrue\fR
です。
.RE
.PP
repack\&.useDeltaIslands
.RS 4
trueに設定すると、
\fBgit repack\fR
が
\fB\-\-delta\-islands\fR
が渡されたかのように動作します。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
repack\&.writeBitmaps
.RS 4
trueの場合、gitはすべてのオブジェクトをディスクにパックするときにビットマップインデックスを書き込みます(たとえば、
\fBgit repack \-a\fR
が実行される場合)。 このインデックスは、クローンとフェッチ用に作成された後続のパックの「オブジェクトのカウント」フェーズを高速化できますが、ディスクスペースと最初の再パックに余分な時間がかかります。 複数のパックファイルが作成されている場合、これは効果がありません。 ベア(bare)リポジトリではデフォルトでtrueになり、それ以外の場合はfalseになります。
.RE
.PP
repack\&.updateServerInfo
.RS 4
false に設定すると、\fBgit-repack\fR(1)
は
\fBgit-update-server-info\fR(1)
を実行しません。 デフォルトは true です。
\fBgit-repack\fR(1)
の
\fB\-n\fR
オプションで true の場合、オーバーライドできます。
.RE
.PP
repack\&.cruftWindow, repack\&.cruftWindowMemory, repack\&.cruftDepth, repack\&.cruftThreads
.RS 4
クラフト・パック(cruft pack)を生成するときに
\fBgit-pack-objects\fR(1)
が使用するパラメータで、これらのパラメータはコマンドラインから与えることはできません。デフォルトと意味については、
\fBpack\&.*\fR
設定変数の対応する名前のを参照してください。
.RE
.PP
rerere\&.autoUpdate
.RS 4
trueに設定すると、
\fBgit\-rerere\fR
は、以前に記録された解決策を使用して競合をクリーンに解決した後、結果のコンテンツでインデックスを更新します。 デフォルトはfalseです。
.RE
.PP
rerere\&.enabled
.RS 4
解決された競合の記録をアクティブにして、同じ競合ハンクが再度発生した場合に自動的に解決できるようにします。 デフォルトでは、
\fB$GIT_DIR\fR
の下に
\fBrr\-cache\fR
ディレクトリがある(例えば
\fBrerere\fR
が以前にリポジトリで使用されていた)場合、
\fBgit-rerere\fR(1)
が有効になります。
.RE
.PP
revert\&.reference
.RS 4
この変数を true に設定すると、
\fBgit revert\fR
は
\fB\-\-reference\fR
オプションが指定されているかのように振る舞います。
.RE
.PP
safe\&.bareRepository
.RS 4
Git が動作するベア(bare)・リポジトリを指定します。 現在サポートされている値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBall\fR: Git はすべてのベア(bare)・リポジトリで動作します。 これがデフォルトです。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBexplicit\fR: Git は、最上位の
\fB\-\-git\-dir\fR
コマンドライン・オプション、 または
\fBGIT_DIR\fR
環境変数(\fBgit\fR(1)
を参照)で指定されたベア・リポジトリでのみ動作します。
.sp
あなたのワークフローでベア・リポジトリを使用しない場合は、グローバル構成で
\fBsafe\&.bareRepository\fR
を
\fBexplicit\fR
に設定すると効果的です。 これにより、ベア・リポジトリを含むリポジトリのクローンを作成し、そのディレクトリ内で Git コマンドを実行する攻撃から保護されます。
.sp
この構成設定は、保護された構成(protected configuration)でのみ尊重されます(the section called \(lqSCOPES\(rq
参照)。 これにより、信頼されていないリポジトリ(untrusted repository)がこの値を改ざんするのを防ぎます。
.RE
.RE
.PP
safe\&.directory
.RS 4
これらの構成(config)エントリは、現在のユーザー以外の誰かが所有していても安全と見なされる Git 追跡ディレクトリを指定します。 デフォルトでは、Git は他の誰かが所有するリポジトリの Git 構成(config)をパースすることさえ拒否し、 そのフックを実行に関しては言うまでもありません。 この構成設定により、 ユーザーは例外を指定できます。 例えば、意図的に共有するリポジトリ用です (\fBgit-init\fR(1)
の
\fB\-\-shared\fR
オプションを参照)。
.sp
これは複数の値(multi\-valued)を持つ設定です。つまり、
\fBgit config \-\-add\fR
を使用して複数のディレクトリを追加できます。 (たとえば、システム構成で指定されたそのようなディレクトリを上書きするため、)安全なディレクトリのリストをリセットするには、空の値を持つ
\fBsafe\&.directory\fR
エントリを追加します。
.sp
この構成設定は、保護された構成(protected configuration)でのみ尊重されます(the section called \(lqSCOPES\(rq
参照)。 これにより、信頼されていないリポジトリ(untrusted repository)がこの値を改ざんするのを防ぎます。
.sp
この設定の値は補完(interpolated)されます。つまり、
\fB~/<path>\fR
はホーム・ディレクトリからの相対パスに展開され、\fB%(prefix)/<path>\fR
は Git コマンドの (実行時) プレフィックスからの相対パスに展開されます。
.sp
このセキュリティ・チェックを完全にオプトアウトするには、
\fBsafe\&.directory\fR
を文字列
\fB*\fR
に設定します。 これにより、すべてのリポジトリを、それらのディレクトリが
\fBsafe\&.directory\fR
リストにリストされているかのように扱うことができます。 システム構成で
\fBsafe\&.directory=*\fR
が設定されていて、この保護を再度有効にしたい場合は、安全と見なすリポジトリをリストする前に、空の値でリストを初期化してください。
.sp
説明したように、Git はデフォルトで、自分自身 (Git を実行しているユーザー) が所有するリポジトリにのみアクセスできます。 ただし、sudo を提供する非 Windows プラットフォームで Git が「root」として実行されている場合、git は、sudo が作成する SUDO_UID 環境変数をチェックし、「root」からの ID に加えて、その値として記録された uid へのアクセスを許可します。 これは、インストール中に共通のシーケンス
\fBmake && sudo make install\fR
を実行しやすくするためです。 「sudo」の下で実行される git プロセスは「root」として実行されますが、「sudo」コマンドは環境変数をエクスポートして、元のユーザーの ID を記録します。 それが望ましくなく、代わりに root が所有するリポジトリのみを git に信頼させたい場合は、git を呼び出す前に root の環境から
\fBSUDO_UID\fR
変数を削除できます。
.RE
.PP
sendemail\&.identity
.RS 4
構成ID。 指定すると、
\fBsendemail\&.<identity>\fR
サブセクションの値が
\fBsendemail\fR
セクションの値よりも優先されます。 デフォルトのIDは、 `sendemail\&.identity`の値です。
.RE
.PP
sendemail\&.smtpEncryption
.RS 4
説明については、
\fBgit-send-email\fR(1)
を参照してください。 注意: この設定は
\fBidentity\fR
メカニズムの対象ではないことに注意してください。
.RE
.PP
sendemail\&.smtpsslcertpath
.RS 4
ca\-certificatesへのパス(ディレクトリまたは単一ファイルのどちらか)。 証明書の検証を無効にするには、空の文字列に設定します。
.RE
.PP
sendemail\&.<identity>\&.*
.RS 4
以下の
\fBsendemail\&.*\fR
パラメータのID固有のバージョン。コマンドラインまたは
\fBsendemail\&.identity\fR
のいずれかを使用して、このIDが選択された場合のパラメータよりも優先されます。
.RE
.PP
sendemail\&.multiEdit
.RS 4
true (デフォルト) の場合、編集する必要があるファイルを編集するために単一のエディター・インスタンスが生成されます(\fB\-\-annotate\fR
が使用されている場合はパッチ、
\fB\-\-compose\fR
が使用されている場合は要約)。 false の場合、ファイルは次々に編集され、そのたびに新しいエディター・インスタンスが生成されます。
.RE
.PP
sendemail\&.confirm
.RS 4
送信前に確認するかどうかのデフォルトを設定します。
\fBalways\fR
または
\fBnever\fR
または
\fBcc\fR
または
\fBcompose\fR
または
\fBauto\fR
のいずれかでなければなりません。 これらの値の意味については、
\fBgit-send-email\fR(1)
ドキュメントの
\fB\-\-confirm\fR
を参照してください。
.RE
.PP
sendemail\&.aliasesFile
.RS 4
長い電子メール・アドレスのタイピングを回避するには、1 つまたは複数の電子メール・エイリアス・ファイルを指定します。
\fBsendemail\&.aliasFileType\fR
も指定する必要があります。
.RE
.PP
sendemail\&.aliasFileType
.RS 4
\fBsendemail\&.aliasesFile\fR
で指定されたファイルの形式。
\fBmutt\fR,
\fBmailrc\fR,
\fBpine\fR,
\fBelm\fR,
\fBgnus\fR,
\fBsendmail\fR
のいずれかでなければなりません。
.sp
各形式のエイリアス・ファイルがどのようなものかは、同名の電子メール・プログラムのドキュメントに記載されています。 標準フォーマットとの相違点と制限事項は以下のとおりです:
.PP
sendmail
.RS 4
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
引用エイリアス(quoted aliases)と引用アドレス(quoted addresses)はサポートされていません。
\fB"\fR
記号を含む行は無視されます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ファイル(\fB/path/name\fR)またはパイプ(\fB|command\fR)へのリダイレクトはサポートされていません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ファイル・インクルード(\fB:include: /path/name\fR)はサポートされていません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
明示的にサポートされていない構造(constructs)、およびパーサーによって認識されないその他の行については、警告が標準エラー出力に出力されます。
.RE
.RE
.RE
.PP
sendemail\&.annotate, sendemail\&.bcc, sendemail\&.cc, sendemail\&.ccCmd, sendemail\&.chainReplyTo, sendemail\&.envelopeSender, sendemail\&.from, sendemail\&.signedoffbycc, sendemail\&.smtpPass, sendemail\&.suppresscc, sendemail\&.suppressFrom, sendemail\&.to, sendemail\&.tocmd, sendemail\&.smtpDomain, sendemail\&.smtpServer, sendemail\&.smtpServerPort, sendemail\&.smtpServerOption, sendemail\&.smtpUser, sendemail\&.thread, sendemail\&.transferEncoding, sendemail\&.validate, sendemail\&.xmailer
.RS 4
これらの構成変数はすべて、\fBgit-send-email\fR(1)
コマンドライン・オプションのデフォルトを提供します。 詳細については、そのドキュメントを参照してください。
.RE
.PP
sendemail\&.signedoffcc (非推奨)
.RS 4
\fBsendemail\&.signedoffbycc\fR
の非推奨のエイリアス。
.RE
.PP
sendemail\&.smtpBatchSize
.RS 4
接続ごとに送信されるメッセージの数。その後、再ログインが発生します。 値が0または未定義の場合、すべてのメッセージを1つの接続で送信します。
\fBgit-send-email\fR(1)
の
\fB\-\-batch\-size\fR
オプションも参照してください。
.RE
.PP
sendemail\&.smtpReloginDelay
.RS 4
SMTPサーバーに再接続する前に指定の秒数待機します。
\fBgit-send-email\fR(1)の
\fB\-\-relogin\-delay\fR
オプションも参照してください。
.RE
.PP
sendemail\&.forbidSendmailVariables
.RS 4
一般的な設定ミスを回避するために、
\fBgit-send-email\fR(1)
は、
\fBsendmail\fR
の設定オプションが存在する場合、警告とともに中止します。 チェックをバイパスするには、この変数を設定します。
.RE
.PP
sequence\&.editor
.RS 4
リベース命令ファイル(rebase instruction file)を編集するために
\fBgit rebase \-i\fR
によって使用されるテキストエディタ。この値は、使用時にシェルによって解釈されることを意図しています。 これは、
\fBGIT_SEQUENCE_EDITOR\fR
環境変数によってオーバーライドできます。構成されていない場合は、代わりにデフォルトのコミットメッセージエディタが使用されます。
.RE
.PP
showBranch\&.default
.RS 4
\fBgit-show-branch\fR(1)
のデフォルトのブランチセット。
\fBgit-show-branch\fR(1)
を参照してください。
.RE
.PP
sparse\&.expectFilesOutsideOfPatterns
.RS 4
通常、スパース・チェックアウトでは、どのスパース・パターンとも一致しないファイルは、インデックスの SKIP_WORKTREE ビットでマークされ、作業ツリーから欠落します。 したがって、Git は通常、期待に反して SKIP_WORKTREE ビットを持つファイルが実際に作業ツリーに存在するかどうかを確認します。 Git がいずれかを見つけた場合、関連する SKIP_WORKTREE ビットをクリアすることにより、それらのパスが存在するものとしてマークします。 このオプションを使用して、そのような存在にもかかわらずスキップされたファイルが予期できることを Git に伝え、それらのチェックを停止することができます。
.sp
デフォルトは
\fBfalse\fR
です。これにより、Git はインデックス内のファイルのリストと同期が取れなくなった作業ツリーから自動的に回復(recover)できます。
.sp
何らかの外部要因で、作業ツリーファイルの存在とスパース・パターンの間の一貫性を維持するための責任をGitに負わせなくていい場合、これを
\fBtrue\fR
にセットしてください。 例えば、アクセス・パターンに基づいて作業ツリーとスパース・パターンを最新に保つための堅牢なメカニズムを持つGit認識仮想ファイルシステムを持っている場合です。
.sp
この設定にかかわらず、Gitはスパース・チェックアウトが有効になっていない限り、存在するにも関わらずスキップ(present\-despite\-skip)されたファイルをチェックしません。したがって、このオプションは
\fBcore\&.sparseCheckout\fR
が
\fBtrue\fR
でない限り何の効果も持ちません。
.RE
.PP
splitIndex\&.maxPercentChange
.RS 4
分割インデックス機能を使用する場合、これは、新しい共有インデックスが書き込まれる前の、分割インデックスと共有インデックスの両方のエントリの総数と比較した、分割インデックスに含めることができるエントリの割合を指定します。 値は0〜100の間である必要があります。 値が0の場合、新しい共有インデックスが常に書き込まれ、100の場合、新しい共有インデックスが書き込まれることはありません。 デフォルトの値は20であるため、分割インデックスのエントリ数がエントリの総数の20%を超える場合は、新しい共有インデックスが書き込まれます。
\fBgit-update-index\fR(1)
を参照してください。
.RE
.PP
splitIndex\&.sharedIndexExpire
.RS 4
分割インデックス機能を使用すると、この変数が指定する時間以降に変更されなかった共有インデックスファイルは、新しい共有インデックスファイルが作成されるときに削除されます。 値
\fBnow\fR
はすべてのエントリをすぐに期限切れにし、
\fBnever\fR
は期限切れを完全に抑制します。 デフォルト値は
\fB2\&.weeks\&.ago\fR
です。 共有インデックスファイルは、それに基づいて新しい分割インデックスファイルが作成されるか、そこから読み取られるたびに、(有効期限について)変更されたと見なされることに注意してください。
\fBgit-update-index\fR(1)
を参照してください。
.RE
.PP
ssh\&.variant
.RS 4
デフォルトでは、Gitは設定されたSSHコマンドのベース名(環境変数
\fBGIT_SSH\fR
または環境変数
\fBGIT_SSH_COMMAND\fR
または構成設定
\fBcore\&.sshCommand\fR
を使用して設定)に基づいて使用するコマンドライン引数を決定します。ベース名が認識されない場合、Gitは最初に
\fB\-G\fR
(print configuration)オプションを使用して構成済みのSSHコマンドを呼び出し、その後、(成功した場合、)OpenSSHオプションを使用するか、(失敗した場合、)hostおよびremoteコマンド以外のオプションを使用しないことで、OpenSSHオプションのサポートを検出しようとします。
.sp
構成変数
\fBssh\&.variant\fR
は、この検出をオーバーライドするように設定できます。有効な値は、
\fBssh\fR
(OpenSSHオプションを使用する場合)、
\fBplink\fR
、
\fBputty\fR
、
\fBtortoiseplink\fR
、
\fBsimple\fR
(hostおよびremoteコマンド以外のオプションを持っていません)、です。 デフォルトの自動検出は、値
\fBauto\fR
を使用して明示的に要求できます。また、これ以外の値は
\fBssh\fR
として扱われます。この設定は、環境変数
\fBGIT_SSH_VARIANT\fR
を介してオーバーライドすることもできます。
.sp
各派生で使用されている現在のコマンドラインパラメータは以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBssh\fR
\- [\-p port] [\-4] [\-6] [\-o option] [username@]host command
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBsimple\fR
\- [username@]host command
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBplink\fR
or
\fBputty\fR
\- [\-P port] [\-4] [\-6] [username@]host command
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtortoiseplink\fR
\- [\-P port] [\-4] [\-6] \-batch [username@]host command
.RE
.sp
\fBsimple\fR
派生を除き、コマンドラインパラメータはgitが新しい機能を取得するにつれて変更される可能性があります。
.RE
.PP
status\&.relativePaths
.RS 4
デフォルトでは、
\fBgit-status\fR(1)
は現在のディレクトリからの相対パスを表示します。 この変数を
\fBfalse\fR
に設定すると、リポジトリルートを基準にしたパスが表示されます(これはv1\&.5\&.4より前のGitのデフォルトでした)。
.RE
.PP
status\&.short
.RS 4
\fBgit-status\fR(1)
でデフォルトで
\fB\-\-short\fR
を有効にするには、trueに設定します。 オプション` \-\-no\-short` は、この変数よりも優先されます。
.RE
.PP
status\&.branch
.RS 4
\fBgit-status\fR(1)
でデフォルトで
\fB\-\-branch\fR
を有効にするには、trueに設定します。 オプション
\fB\-\-no\-branch\fR
は、この変数よりも優先されます。
.RE
.PP
status\&.aheadBehind
.RS 4
非磁器コマンドステータス形式(non\-porcelain status formats)の
\fBgit-status\fR(1)
で、デフォルトで
\fB\-\-ahead\-behind\fR
を有効にするにはtrueに設定し、
\fB\-\-no\-ahead\-behind\fR
を有効にするにはfalseに設定します。 デフォルトはtrueです。
.RE
.PP
status\&.displayCommentPrefix
.RS 4
trueに設定すると、
\fBgit-status\fR(1)
は各出力行の前にコメントプレフィックスを挿入します(\fBcore\&.commentChar\fR
で始まります。つまりデフォルトでは
\fB#\fR
です)。 これは、Git 1\&.8\&.4以前の
\fBgit-status\fR(1)
の動作でした。 デフォルトはfalseです。
.RE
.PP
status\&.renameLimit
.RS 4
\fBgit-status\fR(1)
および
\fBgit-commit\fR(1)
で名前変更の検出を実行するときに考慮するファイルの数。 デフォルトは diff\&.renameLimit の値です。
.RE
.PP
status\&.renames
.RS 4
Gitが
\fBgit-status\fR(1)
と
\fBgit-commit\fR(1)
で名前の変更を検出するかどうかとその方法。
\fBfalse\fR
に設定すると、名前変更の検出が無効になります。
\fBtrue\fR
に設定すると、基本的な名前変更の検出が有効になります。
\fBcopies\fR
または
\fBcopy\fR
に設定されている場合、Gitはコピーも検出します。 デフォルトは diff\&.renames の値です。
.RE
.PP
status\&.showStash
.RS 4
trueに設定すると、
\fBgit-status\fR(1)
は現在stashされているエントリの数を表示します。 デフォルトはfalseです。
.RE
.PP
status\&.showUntrackedFiles
.RS 4
デフォルトでは、
\fBgit-status\fR(1)
と
\fBgit-commit\fR(1)
は、現在Gitによって追跡されていないファイルを表示します。 追跡されていないファイルのみを含むディレクトリは、ディレクトリ名のみで表示されます。 追跡されていないファイルを表示するということは、Gitがリポジトリ全体のすべてのファイルを lstat() する必要があることを意味します。これは、一部のシステムでは低速になる可能性があります。 したがって、この変数は、コマンドが追跡されていないファイルを表示する方法を制御します。 可能な値は以下のとおりです:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBno\fR
\- 追跡していないファイルを表示しない。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBnormal\fR
\- 追跡していないファイルとディレクトリを表示
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBall\fR
\- 追跡されていないディレクトリ内の個々のファイルも表示。
.RE
.sp
この変数が指定されていない場合、デフォルトで
\fBnormal\fR
になります。 この変数は、
\fBgit-status\fR(1)
および
\fBgit-commit\fR(1)
の
\fB\-u\fR|\fB\-\-untracked\-files\fR
オプションでオーバーライドできます。
.RE
.PP
status\&.submoduleSummary
.RS 4
デフォルトはfalseです。 これがゼロ以外の数値、またはtrue(\-1または無制限と同じ)に設定されている場合、サブモジュールの要約が有効になり、変更されたサブモジュールのコミットの要約が表示されます(\fBgit-submodule\fR(1)
の
\fB\-\-summary\-limit\fR
オプションを参照してください)。
\fBdiff\&.ignoreSubmodules\fR
が
\fBall\fR
に設定されている場合、または
\fBsubmodule\&.<name>\&.ignore=all\fR
であるサブモジュールに対してのみ、要約出力コマンドが抑制されることに注意してください。 そのルールの唯一の例外は、statusとcommitが、ステージされたサブモジュールの変更を表示することです。 無視されたサブモジュールの概要も表示するには、
\fB\-\-ignore\-submodules=dirty\fR
コマンドラインオプションまたは
\fBgit submodule summary\fR
コマンドを使用できます。これは同様の出力を表示しますが、これらの設定を尊重しません。
.RE
.PP
stash\&.showIncludeUntracked
.RS 4
これがtrueに設定されている場合、
\fBgit stash show\fR
コマンドはstashエントリの追跡されていないファイルを表示します。 デフォルトはfalseです。
\fBgit-stash\fR(1)
の showコマンドの説明を参照してください。
.RE
.PP
stash\&.showPatch
.RS 4
これがtrueに設定されている場合、オプションのない
\fBgit stash show\fR
コマンドは、パッチ形式でstashエントリを表示します。 デフォルトはfalseです。
\fBgit-stash\fR(1)の showコマンドの説明を参照してください。
.RE
.PP
stash\&.showStat
.RS 4
これがtrueに設定されている場合、オプションのない
\fBgit stash show\fR
コマンドは、stashエントリのdiffstatを表示します。 デフォルトはtrueです。
\fBgit-stash\fR(1)
の showコマンドの説明を参照してください。
.RE
.PP
submodule\&.<name>\&.url
.RS 4
サブモジュールのURL。 この変数は、
\fBgit submodule init\fR
を介して
\fB\&.gitmodules\fR
ファイルから git config にコピーされます。 ユーザーは、
\fBgit submodule update\fR
を介してサブモジュールを取得する前に、構成されたURLを変更できます。
\fBsubmodule\&.<name>\&.active\fR
も
\fBsubmodule\&.active\fR
も設定されていない場合、この変数の存在は、サブモジュールがgitコマンドに関係するかどうかを示すためのフォールバックとして使用されます。 詳細については、
\fBgit-submodule\fR(1)および
\fBgitmodules\fR(5)
を参照してください。
.RE
.PP
submodule\&.<name>\&.update
.RS 4
影響を受ける唯一のコマンドである
\fBgit submodule update\fR
によってサブモジュールが更新される方法。
\fBgit checkout \-\-recurse\-submodules\fR
などの他のコマンドは影響を受けません。
\fBgit submodule\fR
がサブモジュールと対話する唯一のコマンドであった場合、これは歴史的な理由で存在します。
\fBsubmodule\&.active`や `pull\&.rebase\fR
などの設定はより具体的です。 これは、\fBgitmodules\fR(5)
ファイルから
\fBgit submodule init\fR
によって入力されます。
\fBgit-submodule\fR(1)
のupdateコマンドの説明を参照してください。
.RE
.PP
submodule\&.<name>\&.branch
.RS 4
\fBgit submodule update \-\-remote\fR
によって使用されるサブモジュールのリモートブランチ名。 このオプションを設定すると、
\fB\&.gitmodules\fR
ファイルにある値が上書きされます。 詳細については、
\fBgit-submodule\fR(1)
および
\fBgitmodules\fR(5)
を参照してください。
.RE
.PP
submodule\&.<name>\&.fetchRecurseSubmodules
.RS 4
このオプションは、このサブモジュールの再帰的フェッチを制御するために使用できます。
\fB\-\-[no\-]recurse\-submodules\fR
コマンドラインオプションを使用して
\fBgit fetch\fR
と
\fBgit pull\fR
をオーバーライドすることでオーバーライドできます。 この設定は、
\fBgitmodules\fR(5)
ファイルの設定を上書きします。
.RE
.PP
submodule\&.<name>\&.ignore
.RS 4
どのような状況で
\fBgit status\fR
とdiffファミリーがサブモジュールを変更済みとして表示するかを定義します。
\fBall\fR
に設定すると、変更されたとは見なされません(ただし、ステータスの出力に表示され、ステージングされるとコミットされます)。
\fBdirty\fR
は、サブモジュールの作業ツリーに対するすべての変更を無視し、差異のみを取ります。 サブモジュールのHEADと、スーパープロジェクトに記録されたコミットの間を考慮に入れます。
\fBuntracked\fR
はさらに、作業ツリー内の変更された追跡ファイルを持つサブモジュールを表示させます。
\fBnone\fR
(設定されていない場合のデフォルト)を使用すると、作業ツリーに追跡されていないファイルが変更されたサブモジュールも表示されます。 この設定は、このサブモジュールの
\fB\&.gitmodules`で行われた設定を上書きします。両方の設定は、 `\-\-ignore\-submodules\fR
オプションを使用してコマンドラインで上書きできます。
\fBgit submodule\fR
コマンドは、この設定の影響を受けません。
.RE
.PP
submodule\&.<name>\&.active
.RS 4
サブモジュールがgitコマンドに関係するかどうかを示すブール値。 この構成オプションは、
\fBsubmodule\&.active\fR
構成オプションよりも優先されます。 詳細については、
\fBgitsubmodules\fR(7)
を参照してください。
.RE
.PP
submodule\&.active
.RS 4
サブモジュールが git コマンドの対象かどうかを判断するためにサブモジュールのパスと照合するために使用される pathspec を含む繰り返しフィールド。詳細は
\fBgitsubmodules\fR(7)
を参照してください。
.RE
.PP
submodule\&.recurse
.RS 4
コマンドがデフォルトで
\fB\-\-recurse\-submodules\fR
オプションを有効にするかどうかを示すブール値。 デフォルトは false です。
.sp
true に設定すると、
\fB\-\-no\-recurse\-submodules\fR
オプションで非アクティブ化できます。 このオプションがない一部の Git コマンドは、
\fBsubmodule\&.recurse\fR
の影響を受ける上記のコマンドの一部を呼び出す可能性があることに注意してください。 たとえば、\fBgit remote update\fR
は
\fBgit fetch\fR
を呼び出しますが、\fB\-\-no\-recurse\-submodules\fR
オプションはありません。 これらのコマンドの回避策は、
\fBgit \-c submodule\&.recurse=0\fR
を使用して構成値を一時的に変更することです。
.sp
以下のリストは、
\fB\-\-recurse\-submodules\fR
を受け入れるコマンドと、それらがこの設定でサポートされているかどうかを示しています。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
checkout、fetch、grep、pull、push、read\-tree、reset、restore、switch は常にサポートされています。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBclone\fR
と
\fBls\-files\fR
はサポートされていません。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBbranch\fR
は、
\fBsubmodule\&.propagateBranches\fR
が有効な場合にのみサポートされます
.RE
.RE
.PP
submodule\&.propagateBranches
.RS 4
[実験的]
\fB\-\-recurse\-submodules\fR
または
\fBsubmodule\&.recurse=true\fR
を使用するときに分岐サポート(branching support)を有効にするブール値。 これを有効にすると、特定のコマンドが
\fB\-\-recurse\-submodules\fR
を受け入れるようになり、すでに
\fB\-\-recurse\-submodules\fR
を受け入れている特定のコマンドが分岐(branches)を考慮するようになります。 デフォルトは false です。
.RE
.PP
submodule\&.fetchJobs
.RS 4
同時に フェッチ/クローン されるサブモジュールの数を指定します。 正の整数を使用すると、その数までのサブモジュールを並列にフェッチできます。 値0は、適切なデフォルトを提供します。 設定されていない場合、デフォルトで1になります。
.RE
.PP
submodule\&.alternateLocation
.RS 4
サブモジュールがcloneされるときに、サブモジュールがalternateを取得する方法を指定します。 可能な値は
\fBno\fR
、\fBsuperproject\fR
です。 デフォルトでは、参照を追加しない
\fBno\fR
が想定されています。 値が
\fBsuperproject\fR
に設定されている場合、cloneされるサブモジュールは、スーパープロジェクトのalternates locationを基準にしてalternates locationを計算します。
.RE
.PP
submodule\&.alternateErrorStrategy
.RS 4
\fBsubmodule\&.alternateLocation\fR
を介して計算されたサブモジュールのalternateでエラーを処理する方法を指定します。 可能な値は
\fBignore\fR
、
\fBinfo\fR
、
\fBdie\fR
です。デフォルトは
\fBdie\fR
です。
\fBignore\fR
または
\fBinfo\fR
に設定されていて、計算されたalternateにエラーがある場合、alternateが指定されていないかのようにクローンが進行することに注意してください。
.RE
.PP
tag\&.forceSignAnnotated
.RS 4
作成された注釈付きタグをGPG署名するかどうかを指定するブール値。 コマンドラインで
\fB\-\-annotate\fR
が指定されている場合、このオプションよりも優先されます。
.RE
.PP
tag\&.sort
.RS 4
この変数は、
\fBgit-tag\fR(1)
によって表示されるときのタグの並べ替え順序を制御します。
\fB\-\-sort=<value>\fR
オプションが指定されていない場合、この変数の値がデフォルトとして使用されます。
.RE
.PP
tag\&.gpgSign
.RS 4
すべてのタグをGPG署名するかどうかを指定するブール値。 自動スクリプトで実行しているときにこのオプションを使用すると、多数のタグが署名される可能性があります。 したがって、あなたは、エージェントを使用して、gpgパスフレーズを毎回入力しないようにするのが便利です。 このオプションは、
\fB\-u<keyid>\fR
または
\fB\-\-local\-user=<keyid>\fR
オプションによって有効にされるタグ署名の動作には影響しないことに注意してください。
.RE
.PP
tar\&.umask
.RS 4
この変数は、tarアーカイブエントリの許可ビットを制限するために使用できます。デフォルトは0002で、ワールド書き込みビット(world write bit)をオフにします。 特別な値 "user" は、アーカイブユーザーのumaskが代わりに使用されることを示します。 umask(2) および
\fBgit-archive\fR(1)
を参照してください。
.RE
.sp
trace2構成設定は、システムおよびグローバル構成ファイルからのみ読み取られます。 リポジトリのローカルおよびワークツリー構成ファイルと \fB\-c\fR コマンドライン引数は尊重されません。
.PP
trace2\&.normalTarget
.RS 4
この変数は、通常のターゲット(normal target)宛先を制御します。
\fBGIT_TRACE2\fR
環境変数によってオーバーライドされる可能性があります。
.RE
.PP
trace2\&.perfTarget
.RS 4
この変数は、パフォーマンスターゲットの宛先を制御します。
\fBGIT_TRACE2_PERF\fR
環境変数によってオーバーライドされる可能性があります。
.RE
.PP
trace2\&.eventTarget
.RS 4
この変数は、イベントターゲットの宛先を制御します。
\fBGIT_TRACE2_EVENT\fR
環境変数によってオーバーライドされる可能性があります。
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB0\fR
or
\fBfalse\fR
\- ターゲットを無効にします。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB1\fR
or
\fBtrue\fR
\-
\fBSTDERR\fR
に書き出します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB[2\-9]\fR
\- すでに開いているファイル・デスクリプターに書き出します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB<absolute\-pathname>\fR
\- appendモードでファイルに書き込みます。ターゲットがすでに存在し、ディレクトリである場合、トレースは指定のディレクトリの下のファイル(プロセスごとに1つ)に書き込まれます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBaf_unix:[<socket_type>:]<absolute\-pathname>\fR
\- Unixドメインソケットに書き出します(それらをサポートするプラットフォーム上であれば)。ソケットタイプは
\fBstream\fR
または
\fBdgram\fR
のいずれかです。省略した場合、Gitは両方を試します。
.RE
.RE
.PP
trace2\&.normalBrief
.RS 4
ブール値。 trueの場合、
\fBtime\fR
と
\fBfilename\fR
と
\fBline\fR
フィールドは通常の出力(normal output)から省略されます。
\fBGIT_TRACE2_BRIEF\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトはfalseです。
.RE
.PP
trace2\&.perfBrief
.RS 4
ブール値。 trueの場合、
\fBtime\fR
と
\fBfilename\fR
と
\fBline\fR
フィールドはPERF出力から省略されます。
\fBGIT_TRACE2_PERF_BRIEF\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトはfalseです。
.RE
.PP
trace2\&.eventBrief
.RS 4
ブール値。 trueの場合、
\fBtime\fR
と
\fBfilename\fR
と
\fBline\fR
フィールドはイベント出力から省略されます。
\fBGIT_TRACE2_EVENT_BRIEF\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトはfalseです。
.RE
.PP
trace2\&.eventNesting
.RS 4
整数。 イベント出力でネストされた領域(region)の必要な深さを指定します。この値より深い領域は省略されます。
\fBGIT_TRACE2_EVENT_NESTING\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトは2です。
.RE
.PP
trace2\&.configParams
.RS 4
trace2出力に記録する必要がある「重要な」構成設定のパターンのコンマ区切りリスト。 たとえば、
\fBcore\&.*,remote\&.*\&.url\fR
を指定すると、trace2の出力には、構成された各リモートを一覧表示するイベントが含まれます。
\fBGIT_TRACE2_CONFIG_PARAMS\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトでは設定されていません。
.RE
.PP
trace2\&.envVars
.RS 4
trace2出力に記録する必要がある「重要な」環境変数のコンマ区切りリスト。 たとえば、
\fBGIT_HTTP_USER_AGENT,GIT_CONFIG\fR
を指定すると、trace2出力に、(いずれも設定されていると仮定して、)HTTPユーザーエージェントのオーバーライドとGit構成ファイルの場所をリストするイベントが含まれます。
\fBGIT_TRACE2_ENV_VARS\fR
環境変数によってオーバーライドされる可能性があります。 デフォルトでは設定されていません。
.RE
.PP
trace2\&.destinationDebug
.RS 4
ブール値。 trueの場合、トレースターゲットの宛先を書き込み用に開くことができない場合、Gitはエラーメッセージを出力します。 デフォルトでは、これらのエラーは抑制され、トレースは黙って無効になっています。
\fBGIT_TRACE2_DST_DEBUG\fR
環境変数によってオーバーライドされる可能性があります。
.RE
.PP
trace2\&.maxFiles
.RS 4
整数。 トレースファイルをターゲットディレクトリに書き込むとき、この数のファイルを超える場合は、追加のトレースを書き込まないでください。 代わりに、このディレクトリへのそれ以上のトレースをブロックする番兵ファイル(sentinel file)を作成します。 デフォルトは0で、このチェックを無効にします。
.RE
.PP
transfer\&.credentialsInUrl
.RS 4
構成された URL には、
\fB<protocol>://<user>:<password>@<domain>/<path>\fR
の形式で平文(plaintext)の資格情報(credentials)を含めることができます。 (\fBgit-credential\fR(1)
の使用を優先して、)そのような構成の使用を警告または禁止することができます。 これは、
\fBgit-clone\fR(1)
や
\fBgit-fetch\fR(1)
や\fBgit-push\fR(1)
や その他の構成された URL の直接使用で使用されます。
.sp
注意: これは現在、\fBremote\&.<name>\&.url\fR
構成での資格情報(credentials)の検出(detect)に限定されていることに注意してください。
\fBremote\&.<name>\&.pushurl\fR
構成での資格情報の検出は行われません。
.sp
これを有効にして、不注意による資格情報(credentials)の公開を防ぐことができます。 それがなぜかを以下の例で説明します:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
git を実行している OS またはシステムでは、ユーザー名やパスワードが保存されている構成ファイルのアクセス許可を構成する方法が提供されていないか、許可されていない場合があります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
たとえ許可があったとしても、そのようなデータを「保存」すると、他の方法で危険にさらされる可能性があります。たとえばバックアップ処理によって、データが別のシステムにコピーされる場合があります。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
git プログラムは、完全な URL をコマンドラインの引数として互いに渡します。つまり、他のユーザーが他のユーザーの完全なプロセス一覧を見ることができる OS やシステムでは、認証情報(credentials)が他のユーザーに公開されることになるのです。 linuxでは、 procfs(5) で文書化されている
\fBhidepid\fR
設定で、こういう振る舞いに設定することができます。
.sp
もし、このような配がないのであれば、 gitの設定ファイルに機密データを保存することによる認証情報の漏洩を心配する必要はないでしょう。さてそれではこの機能を使用する場合は、
\fBtransfer\&.credentialsInUrl\fR
を以下のいずれかの値に設定します:
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBallow\fR
(デフォルト): Git は警告なしでアクティビティを続行します。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBwarn\fR: Git は、平文(plaintext)の資格情報(credential)で URL をパースするときに
\fBstderr\fR
に警告メッセージを書き込みます。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBdie\fR: Git は、 平文(plaintext)の資格情報(credential)で URL をパースするときに、失敗メッセージを
\fBstderr\fR
に書き込みます。
.RE
.RE
.PP
transfer\&.fsckObjects
.RS 4
\fBfetch\&.fsckObjects\fR
または
\fBreceive\&.fsckObjects\fR
が設定されていない場合、代わりにこの変数の値が使用されます。デフォルトはfalseです。
.sp
設定すると、不正な形式のオブジェクトまたは存在しないオブジェクトへのリンクの場合、フェッチまたは受信は中止されます。 さらに、レガシー問題(\fBfsck\&.<msg\-id>\fR
を参照)を含む、
\fB\&.GIT\fR
ディレクトリや悪意のある
\fB\&.gitmodules\fR
ファイルの存在などの潜在的なセキュリティの問題(詳細については、v2\&.2\&.1およびv2\&.17\&.1のリリースノートを参照してください)など、他のさまざまな問題がチェックされます。 その他の健全性とセキュリティのチェックが、将来のリリースで追加される可能性があります。
.sp
受信側では、fsckObjects に障害が発生すると、これらのオブジェクトに到達できなくなります。
\fBgit-receive-pack\fR(1)
の「QUARANTINE ENVIRONMENT」を参照してください。 一方、フェッチ側では、不正な形式のオブジェクトはリポジトリで参照されない(unreferenced)ままになります。
.sp
\fBfetch\&.fsckObjects\fR
実装は隔離されていない(non\-quarantine nature)ため、
\fBreceive\&.fsckObjects\fR
のようにオブジェクトストアをクリーンな状態に保つことはできません。
.sp
オブジェクトが解凍されると、オブジェクトストアに書き込まれるため、「フェッチ」が失敗したにもかかわらず、悪意のあるオブジェクトが導入される場合があります。オブジェクトストアにすでに書き込まれているオブジェクトではなく、新しい着信オブジェクトのみがチェックされるため、後続の「フェッチ」が成功するだけです。 この振る舞いの違いは信頼されるべきではありません。将来的には、そのようなオブジェクトは「フェッチ」のために隔離される可能性があります。
.sp
今のところ、「プッシュ」と同じ保護が必要な場合、疑り深い人(paranoid)は検疫環境をエミュレートする方法を見つける必要があります。 例えば、内部ミラーの場合、2つのステップでミラーリングを実行します。信頼できないオブジェクトをフェッチするために1ステップ、そして次に、別の内部リポジトリに「プッシュ」(隔離を使用します)を実行する2ステップ目です。内部クライアントにこのプッシュ先リポジトリを消費させ、または、内部フェッチを禁止し、完全な
\fBfsck\fR
が実行された場合にのみ許可します(その間に新しいフェッチは発生しません)。
.RE
.PP
transfer\&.hideRefs
.RS 4
文字列
\fBreceive\-pack\fR
と
\fBupload\-pack\fR
は、最初の広告から除外するrefを決定するために使用します。 複数のプレフィックス文字列を指定するには、複数の定義を使用します。 この変数の値にリストされている階層の下にあるrefは除外され、
\fBgit push\fR
または
\fBgit fetch\fR
に応答するときに非表示になります。 この構成のプログラム固有のバージョンについては、
\fBreceive\&.hideRefs\fR
および
\fBuploadpack\&.hideRefs\fR
を参照してください。
.sp
あなたは ref名の前に
\fB!\fR
を含めてエントリを無効にし、以前のエントリで非表示としてマークされていた場合でも、明示的に公開することもできます。 複数の非表示ref値がある場合、後のエントリが前のエントリを上書きします(そして、より具体的な構成ファイルのエントリは、より具体的でないものを上書きします)。
.sp
名前空間が使用されている場合、名前空間プレフィックスは、
\fBtransfer\&.hiderefs\fR
パターンと照合される前に、各参照から削除されます。 削除する前に参照を一致させるには、参照名の前に
\fB^\fR
を追加します。
\fB!\fR
と
\fB^\fR
を組み合わせる場合は、最初に
\fB!\fR
を指定する必要があります。
.sp
たとえば、
\fBrefs/heads/master\fR
が
\fBtransfer\&.hideRefs\fR
で指定され、現在の名前空間が
\fBfoo\fR
の場合、
\fBrefs/namespaces/foo/refs/heads/master\fR
は広告から省略されます。
\fBuploadpack\&.allowRefInWant\fR
が設定されている場合、
\fBupload\-pack\fR
は、プロトコルバージョン2の
\fBfetch\fR
コマンドの
\fBwant\-ref refs/heads/master\fR
で、
\fBrefs/namespaces/foo/refs/heads/master\fR
が存在しないかのように扱います。 一方、
\fBreceive\-pack`は、その名前(いわゆる `\&.have\fR
行)を指定せずに、refが指しているオブジェクトIDを広告します。
.sp
refを非表示にしても、
\fBgitnamespaces\fR(7)のマニュアルページの「SECURITY」セクションで説明されている手法を使用して、クライアントがターゲットオブジェクトを盗むことができる場合があります。よって、プライベートデータは別のリポジトリに保持するのが最良です。
.RE
.PP
transfer\&.unpackLimit
.RS 4
\fBfetch\&.unpackLimit\fR
または
\fBreceive\&.unpackLimit\fR
が設定されていない場合、代わりにこの変数の値が使用されます。 デフォルト値は100です。
.RE
.PP
transfer\&.advertiseSID
.RS 4
ブール値。 trueの場合、クライアントプロセスとサーバープロセスは、一意のセッションIDをリモートの対応するプロセスに広告します。 デフォルトはfalseです。
.RE
.PP
uploadarchive\&.allowUnreachable
.RS 4
trueの場合、クライアントが
\fBgit archive \-\-remote\fR
を使用して、ref先端から到達可能かどうかに関係なく、任意のツリーを要求できるようにします。詳細については、
\fBgit-upload-archive\fR(1)の「SECURITY」セクションの説明を参照してください。デフォルトは
\fBfalse\fR
です。
.RE
.PP
uploadpack\&.hideRefs
.RS 4
この変数は
\fBtransfer\&.hideRefs\fR
と同じですが、
\fBupload\-pack\fR
にのみ適用されます(したがって、プッシュではなくフェッチにのみ影響します)。
\fBgit fetch\fR
で隠しref(hidden ref)をフェッチしようとすると失敗します。
\fBuploadpack\&.allowTipSHA1InWant\fR
も参照してください。
.RE
.PP
uploadpack\&.allowTipSHA1InWant
.RS 4
\fBuploadpack\&.hideRefs\fR
が有効な場合、
\fBupload\-pack\fR
が非表示の参照の先端にあるオブジェクトを要求するフェッチ要求を受け入れることを許可します(デフォルトでは、そのような要求は拒否されます)。
\fBuploadpack\&.hideRefs\fR
も参照してください。 これが false であっても、クライアントは、
\fBgitnamespaces\fR(7)
のマニュアルページの「SECURITY」セクションで説明されている手法を使用してオブジェクトを盗むことができる場合があります。プライベートデータを別のリポジトリに保持することをお勧めします。
.RE
.PP
uploadpack\&.allowReachableSHA1InWant
.RS 4
\fBupload\-pack\fR
が、任意の参照先端から到達可能なオブジェクトを要求するフェッチ要求を受け入れることを許可します。 ただし、オブジェクトの到達可能性の計算には計算コストがかかることに注意してください。 デフォルトは
\fBfalse\fR
です。 これが false であっても、クライアントは、
\fBgitnamespaces\fR(7)
のマニュアルページの「SECURITY」セクションで説明されている手法を使用してオブジェクトを盗むことができる場合があります。 プライベートデータを別のリポジトリに保持することをお勧めします。
.RE
.PP
uploadpack\&.allowAnySHA1InWant
.RS 4
\fBupload\-pack\fR
が、オブジェクトを要求するフェッチ要求を受け入れることを許可します。 デフォルトは
\fBfalse\fR
です。
.RE
.PP
uploadpack\&.keepAlive
.RS 4
\fBupload\-pack\fR
が
\fBpack\-objects\fR
を開始したとき、\fBpack\-objects\fR
がパックを準備している間は黙っている期間があるかもしれません。 通常は進行状況情報を出力しますが、フェッチに
\fB\-\-quiet\fR
を使用した場合、
\fBpack\-objects\fR
はパックデータが開始するまで何も出力しません。 一部のクライアントとネットワークは、サーバーがハングしてあきらめていると見なす場合があります。 このオプションを設定すると、
\fBupload\-pack\fR
は
\fBuploadpack\&.keepAlive\fR
秒ごとに空のキープアライブパケットを送信するように指示されます。 このオプションを0に設定すると、キープアライブパケットが完全に無効になります。 デフォルトは5秒です。
.RE
.PP
uploadpack\&.packObjectsHook
.RS 4
このオプションが設定されている場合、
\fBupload\-pack\fR
がクライアントのパックファイルを作成するために
\fBgit pack\-objects\fR
を実行しようとすると、代わりにこのシェルコマンドが実行されます。
\fBpack\-objects\fR
コマンドとそれが実行するであろう引数(最初の
\fBgit pack\-objects\fR
を含む)がシェルコマンドに追加されます。 フックのstdinとstdoutは、
\fBpack\-objects\fR
自体が実行されたかのように扱われます。 つまり、
\fBupload\-pack\fR
は、
\fBpack\-objects\fR
を対象とした入力をフックに送り、stdoutで完成したpackfileを期待します。
.sp
注意: この構成変数は、保護された構成で指定されている場合にのみ尊重されることに注意してください(the section called \(lqSCOPES\(rq
参照)。 これは、信頼されていないリポジトリからのフェッチに対する安全対策です。
.RE
.PP
uploadpack\&.allowFilter
.RS 4
このオプションが設定されている場合、
\fBupload\-pack\fR
は部分クローン(partial clone)および部分フェッチオブジェクト(partial fetch object)のフィルタリングをサポートします。
.RE
.PP
uploadpackfilter\&.allow
.RS 4
未指定のオブジェクトフィルターのデフォルト値を提供します(下記構成変数参照)。
\fBtrue\fR
に設定すると、将来追加されるすべてのフィルターも有効になります。 デフォルトは
\fBtrue\fR
です。
.RE
.PP
uploadpackfilter\&.<filter>\&.allow
.RS 4
\fB<filter>\fR
に対応するオブジェクトフィルターを明示的に許可または禁止します。ここで、\fB<filter>\fR
は次のいずれかになります:
\fBblob:none\fR,
\fBblob:limit\fR,
\fBobject:type\fR,
\fBtree\fR,
\fBsparse:oid\fR,
\fBcombine\fR
。 組み合わフィルターを使用する場合は、\fBcombine\fR
とすべてのネストされたフィルターの種類の両方を許可する必要があります。 デフォルトは
\fBuploadpackfilter\&.allow\fR
です。
.RE
.PP
uploadpackfilter\&.tree\&.maxDepth
.RS 4
\fB<n>\fR
が
\fBuploadpackfilter\&.tree\&.maxDepth\fR
の値以下の場合にのみ、
\fB\-\-filter=tree:<n>\fR
を許可します。 設定されている場合、この構成変数がすでに設定されていない限り、これは
\fBuploadpackfilter\&.tree\&.allow=true\fR
も意味します。 設定されていない場合は効果がありません。
.RE
.PP
uploadpack\&.allowRefInWant
.RS 4
このオプションが設定されている場合、
\fBupload\-pack\fR
はプロトコルバージョン2の
\fBfetch\fR
コマンドの
\fBref\-in\-want\fR
機能をサポートします。 この機能は、レプリケーションの遅延のために、refが指すOIDについて同じビューを持たない可能性がある負荷分散サーバーの利益を目的としています。
.RE
.PP
url\&.<base>\&.insteadOf
.RS 4
この値で始まるURLは、代わりに<base>で始まるように書き換えられます。 あるサイトが多数のリポジトリを提供し、それらを複数のアクセス方法で提供しており、一部のユーザーが異なるアクセス方法を使用する必要がある場合、この機能は、ユーザーが任意の同等のURLを指定し、Gitが自動的に特定のユーザーにとって最適な代替URLに書き換えることを可能にします。 複数の insteadOf 文字列が特定のURLに一致する場合、最も長い一致が使用されます。
.sp
注意: プロトコルの制限は、書き換えられたURLに適用されることに注意してください。 リライトによってカスタムプロトコルまたはリモートヘルパーを使用するようにURLが変更された場合は、リクエストを許可するように
\fBprotocol\&.*\&.allow\fR
構成を調整する必要があります。 特に、サブモジュールに使用する予定のプロトコルは、デフォルトの
\fBuser\fR
ではなく
\fBalways\fR
に設定する必要があります。 上記
\fBprotocol\&.allow\fR
の説明を参照してください。
.RE
.PP
url\&.<base>\&.pushInsteadOf
.RS 4
この値で始まるURLはプッシュされません。代わりに、<base>で始まるように書き直され、結果のURLがにプッシュされます。 あるサイトが多数のリポジトリを提供し、それらを複数のアクセス方法で提供し、そのうちのいくつかはプッシュを許可しない場合、この機能は、サイト上で見たことのないリポジトリであっても、プル専用のURLを指定して、Gitが自動的に適切なURLを使ってプッシュすることを可能にします。 複数の pushInsteadOf 文字列が特定のURLに一致する場合、最も長い一致が使用されます。 リモートに明示的な pushurl がある場合、Gitはそのリモートのこの設定を無視します。
.RE
.PP
user\&.name, user\&.email, author\&.name, author\&.email, committer\&.name, committer\&.email
.RS 4
\fBuser\&.name\fR
変数と
\fBuser\&.email\fR
変数は、コミットオブジェクトの
\fBauthor\fR
フィールドと
\fBcommitter\fR
フィールドに何が入るかを決定します。
\fBauthor\fR
または
\fBcommitter\fR
を変更する必要がある場合は、
\fBauthor\&.name\fR
または
\fBauthor\&.email\fR
または
\fBcommitter\&.name\fR
または
\fBcommitter\&.email\fR
変数を設定できます。 また、これらはすべて、
\fBGIT_AUTHOR_NAME\fR
または
\fBGIT_AUTHOR_EMAIL\fR
または
\fBGIT_COMMITTER_NAME\fR
または
\fBGIT_COMMITTER_EMAIL\fR
または
\fBEMAIL\fR
環境変数によってオーバーライドできます。
.sp
注意: これらの変数の
\fBname\fR
形式は、通常、何らかの形式の個人名を参照していることに注意してください。 これらの設定の詳細については、
\fBgit-commit\fR(1)
および
\fBgit\fR(1)
の「environment variables」セクションを参照してください。代わりに認証資格情報(authentication credentials)を探している場合は、
\fBcredential\&.username\fR
オプションを参照してください。
.RE
.PP
user\&.useConfigOnly
.RS 4
\fBuser\&.email\fR
と
\fBuser\&.name\fR
のデフォルトを推測しようとせず、代わりに構成からのみ値を取得するようにGitに指示します。 たとえば、複数のメールアドレスがあり、リポジトリごとに異なるアドレスを使用する場合、 グローバル設定でこの設定オプションを
\fBtrue\fR
に設定し、名前を指定すると、 Gitは、新しく複製されたリポジトリで新しくコミットを行う前に、電子メールを設定するように求めるプロンプトを表示します。 デフォルトは`false`です。
.RE
.PP
user\&.signingKey
.RS 4
\fBgit-tag\fR(1)
または
\fBgit-commit\fR(1)
が、署名されたタグまたは署名されたコミットを作成するときに自動的に必要なキーを選択していない場合、この変数でデフォルトの選択を上書きできます。 このオプションは変更されずに gpg の
\fB\-\-local\-user\fR
パラメータに渡されるため、gpg がサポートする任意の方法を使用してキーを指定できます。 gpg\&.formatが
\fBssh\fR
に設定されている場合、 ssh\-agent を使用したときの秘密鍵または公開鍵へのパスを格納することができます。 あるいは、
\fBkey::\fR
で始まる公開鍵を直接含めることもできます(例:
\fBkey::ssh\-rsa XXXXXX identifier\fR)。 秘密鍵は、ssh\-agent 経由で入手できる必要があります。 設定されていない場合、 git は gpg\&.ssh\&.defaultKeyCommand(例:
\fBssh\-add \-L\fR) を呼び出し、利用可能な最初のキーを使用しようとします。 下位互換性のために、
\fBkey::ssh\-rsa XXXXXX identifier\fR
などの
\fBssh\-\fR
で始まる生の鍵は
\fBkey::ssh\-rsa XXXXXX identifier\fR
として扱われますが、この形式は非推奨です。 代わりに
\fBkey::\fR
形式を使用してください。
.RE
.PP
versionsort\&.prereleaseSuffix (非推奨)
.RS 4
\fBversionsort\&.suffix\fR
の非推奨のエイリアス。
\fBversionsort\&.suffix\fR
が設定されている場合は無視されます。
.RE
.PP
versionsort\&.suffix
.RS 4
linkgit:git\-tag [1]でバージョンの並べ替えが使用されている場合でも、基本バージョンが同じで接尾辞が異なるタグ名は辞書式順序で並べ替えられます。 例えば、メインリリースの後に表示されるプレリリースタグ(例:
\fB1\&.0\fR
の後の
\fB1\&.0\-rc1\fR)。 この変数を指定して、異なる接尾辞を持つタグのソート順を決定できます。
.sp
この変数に単一の接尾辞(suffix)を指定すると、その接尾辞を含むタグ名は、対応するメインリリースの前に表示されます。 例えば、変数が
\fB\-rc\fR
に設定されている場合、すべての
\fB1\&.0\-rcX\fR
タグは
\fB1\&.0\fR
の前に表示されます。 複数回指定した場合、1つのサフィックスにつき1回だけ、設定中のサフィックスの順番でタグ名の並べ替え順が決定されます。 例えば、構成で
\fB\-pre`が `\-rc\fR
の前に表示されている場合、すべての
\fB1\&.0\-preX\fR
タグが
\fB1\&.0\-rcX\fR
タグの前にリストされます。 さまざまな接尾辞を持つタグに対するメインリリースタグの配置順序は、他の接尾辞群の中で空の接尾辞を指定することで決定できます。 例えば、接尾辞 「\-rc」と「」と「\-ck」と「\-bfs」がこの順序で構成に表示される場合、すべての
\fBv4\&.8\-rcX｀タグが最初にリストされ、次に `v4\&.8\fR
がリストされ、その次が
\fBv4\&.8\-ckX\fR
で、最後に
\fBv4\&.8\-bfsX\fR
です。
.sp
複数の接尾辞(suffixes)が同じタグ名に一致する場合、そのタグ名は、タグ名の最初の位置から始まる接尾辞に従って並べ替えされます。 一致する複数の異なる接尾辞がその最も早い位置から始まる場合、そのタグ名はそれらの接尾辞の最長のものに従って並べ替えされます。 異なる接尾辞間の並べ替え順は、それらが複数の構成ファイルに渡る場合は未定義です。
.RE
.PP
web\&.browser
.RS 4
一部のコマンドで使用できるWebブラウザを指定します。 現在、
\fBgit-instaweb\fR(1)
と
\fBgit-help\fR(1)
のみが使用できます。
.RE
.PP
worktree\&.guessRemote
.RS 4
ブランチが指定されておらず、
\fB\-b\fR
や ` \-B` や
\fB\-\-detach\fR
のいずれも使用されていない場合、
\fBgit worktree add\fR
はデフォルトでHEADから新しいブランチを作成します。
\fBworktree\&.guessRemote\fR
がtrueに設定されている場合、
\fBworktree add\fR
は、名前が新しいブランチ名と一意に一致するリモート追跡ブランチを見つけようとします。 そのようなブランチが存在する場合、それはチェックアウトされ、新しいブランチの「アップストリーム」として設定されます。 そのような一致が見つからない場合は、フォールバックして現在のHEADから新しいブランチを作成します。
.RE
.SH "BUGS"
.sp
非推奨の \fB[section\&.subsection]\fR 構文を使用する場合、サブセクションに少なくとも1つの大文字が指定されていると、値を変更すると、変更ではなく複数行のキーが追加されます。たとえば、設定が以下のようになっている場合
.sp
.if n \{\
.RS 4
.\}
.nf
  [section\&.subsection]
    key = value1
.fi
.if n \{\
.RE
.\}
.sp
.sp
\fBgit config section\&.Subsection\&.key value2\fR を実行すると、以下のようになります。
.sp
.if n \{\
.RS 4
.\}
.nf
  [section\&.subsection]
    key = value1
    key = value2
.fi
.if n \{\
.RE
.\}
.sp
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
