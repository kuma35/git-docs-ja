'\" t
.\"     Title: git-commit-graph
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 12/10/2022
.\"    Manual: Git Manual
.\"    Source: Git 2.38.0.rc1.238.g4f4d434dc6.dirty
.\"  Language: English
.\"
.TH "GIT\-COMMIT\-GRAPH" "1" "12/10/2022" "Git 2\&.38\&.0\&.rc1\&.238\&.g" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-commit-graph \- Gitコミットグラフファイル(commit\-graph file)の書き出しと検証(verify)
.SH "SYNOPSIS"
.sp
.nf
\fIgit commit\-graph verify\fR [\-\-object\-dir <dir>] [\-\-shallow] [\-\-[no\-]progress]
\fIgit commit\-graph write\fR <options> [\-\-object\-dir <dir>] [\-\-[no\-]progress]
.fi
.sp
.SH "DESCRIPTION"
.sp
シリアル化されたコミットグラフファイルを管理します。
.SH "OPTIONS"
.PP
\fB\-\-object\-dir\fR
.RS 4
パックファイルとコミットグラフファイルの場所として、指定のディレクトリを使用します。このパラメータは、完全な
\fB\&.git\fR
ディレクトリではなく、objectsディレクトリのみを持つ代替の場所を指定するために存在します。コミットグラフファイルは
\fB<dir>/info\fR
ディレクトリにあり、パックファイルは
\fB<dir>/pack\fR
にあるものと期待されます。ディレクトリを絶対パスにすることができなかった場合、または既知のオブジェクトディレクトリと一致しない場合、
\fBgit commit\-graph \&.\&.\&.\fR
はゼロ以外のステータスで終了します。
.RE
.PP
\fB\-\-[no\-]progress\fR
.RS 4
進行状況を明示的にオン/オフにします。どちらも指定されていない場合、標準エラーが端末に接続されていれば進行状況が表示されます。
.RE
.SH "COMMANDS"
.PP
\fBwrite\fR
.RS 4
パックファイルで見つかったコミットに基づいてコミットグラフファイルを書き出します。構成オプション
\fBcore\&.commitGraph\fR
が無効になっている場合、このコマンドは警告を出力し、コミットグラフファイルを書き込まずに成功を返します。
.sp
\fB\-\-stdin\-packs\fR
オプションと共に使用して、指定のパックインデックス内のオブジェクトのみをウォークすることにより、新しいコミットグラフを生成します。 (\fB\-\-stdin\-commits\fR
または
\fB\-\-reachable\fR
と組み合わせることはできません。)
.sp
\fB\-\-stdin\-commits\fR
オプションと共に使用して、16進数のOIDのリストとしてstdinで指定されたコミットから始まるコミットを1行に1つずつウォークして、新しいコミットグラフを生成します。(直接に、またはタグの皮むきによって、)非コミットに解決されるOIDは黙って無視されます。不正な形式のOID、または存在しないOIDは、エラーを生成します。 (\fB\-\-stdin\-packs\fR
または
\fB\-\-reachable\fR
と組み合わせることはできません。)
.sp
\fB\-\-reachable\fR
オプションと共に使用して、すべての参照で開始するコミットをウォークして、新しいコミットグラフを生成します。 (\fB\-\-stdin\-commits\fR
または
\fB\-\-stdin\-packs\fR
と組み合わせることはできません。)
.sp
\fB\-\-append\fR
オプションと共に使用して、既存のコミットグラフファイルに存在するすべてのコミットを含めます。
.sp
\fB\-\-changed\-paths\fR
オプションと共に使用すると、コミットとその最初の親(first parent)の間で変更されたパスに関する情報を計算して書き込みます。この操作は、大規模なリポジトリでは時間がかかる場合があります。
\fBgit log \-\- <path>\fR
を使用すると、ディレクトリまたはファイルの履歴を取得するためのパフォーマンスが大幅に向上します。このオプションが指定されている場合、その後のコミットグラフ書き込みでは、このオプションが指定されたものであると自動的に想定されます。このデータの保存を停止するには、
\fB\-\-no\-changed\-paths\fR
を使用します。
.sp
\fB\-\-max\-new\-filters=<n>\fR
オプションと共に使用して、(\fB\-\-changed\-paths\fR
が指定されている場合、)最大で
\fBn\fR
の新しいブルームフィルター(Bloom filters)を生成します。
\fBn\fR
が
\fB\-1\fR
の場合、制限は適用されません。この制限に対しては、新しいレイヤーに存在するコミットのみがカウントされます。以前のレイヤーでブルームフィルターをさかのぼって計算するには、
\fB\-\-split=replace\fR
を使用することをお勧めします。
\fBcommitGraph\&.maxNewFilters\fR
構成をオーバーライドします。
.sp
\fB\-\-split[=<strategy>]\fR
オプションと共に使用して、
\fB<dir>/info/commit\-graphs\fR
に格納されている複数のコミットグラフファイルのチェーンとしてコミットグラフを記述します。コミットグラフレイヤーは、戦略およびその他の分割オプションに基づいてマージされます。コミットグラフにまだ含まれていない新しいコミットは、新しい先端ファイル(tip file)に追加されます。以下のマージ条件が満たされた場合、このファイルは既存のファイルとマージされます:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-split=no\-merge\fR
が指定されている場合、マージは実行されず、残りのオプションは無視されます。
\fB\-\-split=replace\fR
は、既存のチェーンを新しいチェーンで上書きします。裸の
\fB\-\-split\fR
は後続のオプションに従います。 (注意: コミットグラフのチェーンをマージすると、既存のチェーンが長さ1のチェーンに置き換えられ、最初で唯一の増分がグラフ全体を保持することに注意してください)。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-size\-multiple=<X>\fR
が指定されていない場合は、 Xを2に等しくします。新しい先端ファイル(tip file)にN個のコミットがあり、以前の先端にM個のコミットがあり、「X 掛ける N」が M より大きい場合は、代わりに2つのファイルを1つのファイルにマージします。
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB\-\-max\-commits=<M>\fR
オプションの M が正の整数で指定され、新しい先端ファイル(tip file) に M 以上のコミットがある場合は、代わりに新しい先端を以前の先端とマージします。
.sp
最後に、
\fB\-\-expire\-time=<datetime>\fR
が指定されていない場合は、 datetimeを現在の時刻とします。分割コミットグラフ(split commit\-graph)を書き込んだ後、変更時刻がdatetimeより古い未使用のコミットグラフをすべて削除します。
.RE
.RE
.PP
\fBverify\fR
.RS 4
コミットグラフファイルを読み取り、その内容をオブジェクトデータベースと照合して確認(verify)します。破損したデータをチェックするために使用されます。
.sp
\fB\-\-shallow\fR
オプションと共に使用すると、分割コミットグラフ(split commit\-graphs)のチェーン内の先端コミットグラフファイルのみをチェックします。
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
パックされたコミットのコミットグラフファイルをローカルの
\fB\&.git\fR
ディレクトリに書き込みます。
.sp
.if n \{\
.RS 4
.\}
.nf
$ git commit\-graph write
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB<pack\-index>\fR
のコミットを使用して、現在のコミットグラフファイルを拡張するコミットグラフファイルを書き出します。
.sp
.if n \{\
.RS 4
.\}
.nf
$ echo <pack\-index> | git commit\-graph write \-\-stdin\-packs
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
到達可能なすべてのコミットを含むコミットグラフファイルを作成します。
.sp
.if n \{\
.RS 4
.\}
.nf
$ git show\-ref \-s | git commit\-graph write \-\-stdin\-commits
.fi
.if n \{\
.RE
.\}
.sp
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
現在のコミットグラフファイル内のすべてのコミットと
\fBHEAD\fR
から到達可能なコミットを含むコミットグラフファイルを書き出します。
.sp
.if n \{\
.RS 4
.\}
.nf
$ git rev\-parse HEAD | git commit\-graph write \-\-stdin\-commits \-\-append
.fi
.if n \{\
.RE
.\}
.sp
.RE
.SH "CONFIGURATION"
.sp
このセクションの以下のすべては、 \fBgit-config\fR(1) ドキュメントの抜粋です。 内容は \fBgit-config\fR(1) ドキュメント にあるものと同一です:
.PP
commitGraph\&.generationVersion
.RS 4
commit\-graph ファイルの書き込みまたは読み取り時に使用する世代番号バージョン(generation number version)のタイプを指定します。 バージョン 1 が指定されている場合、修正されたコミット日付は書き込まれたり読み取られたりしません。 デフォルトは 2 です。
.RE
.PP
commitGraph\&.maxNewFilters
.RS 4
\fBgit commit\-graph write\fR
の
\fB\-\-max\-new\-filters\fR
オプションのデフォルト値を指定します(\fBgit-commit-graph\fR(1)
参照)。
.RE
.PP
commitGraph\&.readChangedPaths
.RS 4
trueの場合、gitはcommit\-graphファイルで変更パスブルームフィルター(the changed\-path Bloom filters)を使用します(存在し、有効な場合)。 デフォルトはtrueです。 詳細については、
\fBgit-commit-graph\fR(1)
を参照してください。
.RE
.SH "FILE FORMAT"
.sp
see \fBgitformat-commit-graph\fR(5)\&.
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
